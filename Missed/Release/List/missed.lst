##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  23:01:11 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\Missed\missed. #
#                       c                                                    #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\Missed\missed. #
#                       c -D NDEBUG -lC Z:\home\perk11\www\perk11.info\svn\S #
#                       E\Missed\Release\List\ -lA                           #
#                       Z:\home\perk11\www\perk11.info\svn\SE\Missed\Release #
#                       \List\ -o Z:\home\perk11\www\perk11.info\svn\SE\Miss #
#                       ed\Release\Obj\ -s9 --cpu_mode arm --endian little   #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --fpu None --eec++ -I Z:\home\perk11\IAR2\arm\INC\   #
#                       --inline_threshold=2                                 #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\Missed\Release #
#                       \List\missed.lst                                     #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\Missed\Release #
#                       \Obj\missed.r79                                      #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\Missed\missed.c
      1          //#define DEBUG
      2          
      3          #include "..\\include\Lib_Clara.h"
      4          #include "..\\include\Dir.h"
      5          #include "string.h"
      6          #include "util.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs int str2int(char *)
   \                     ??str2int:
   \   00000000   0030D0E5           LDRB     R3,[R0, #+0]
   \   00000004   0A20A0E3           MOV      R2,#+10
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   240053E3           CMP      R3,#+36
   \   00000010   1020A003           MOVEQ    R2,#+16
   \   00000014   01008002           ADDEQ    R0,R0,#+1
   \   00000018   0A00000A           BEQ      ??str2int_1
   \   0000001C   300053E3           CMP      R3,#+48
   \   00000020   0130D005           LDRBEQ   R3,[R0, #+1]
   \   00000024   78005303           CMPEQ    R3,#+120
   \   00000028   0600001A           BNE      ??str2int_1
   \   0000002C   1020A0E3           MOV      R2,#+16
   \   00000030   020080E2           ADD      R0,R0,#+2
   \   00000034   030000EA           B        ??str2int_1
   \                     ??str2int_2:
   \   00000038   ........           LDRB     R3,[R0], #+1
   \   0000003C   920101E0           MUL      R1,R2,R1
   \   00000040   303043E2           SUB      R3,R3,#+48
   \   00000044   011083E1           ORR      R1,R3,R1
   \                     ??str2int_1:
   \   00000048   0030D0E5           LDRB     R3,[R0, #+0]
   \   0000004C   300053E3           CMP      R3,#+48
   \   00000050   0100003A           BCC      ??str2int_3
   \   00000054   3A0053E3           CMP      R3,#+58
   \   00000058   F6FFFF3A           BCC      ??str2int_2
   \                     ??str2int_3:
   \   0000005C   100052E3           CMP      R2,#+16
   \   00000060   0700001A           BNE      ??str2int_4
   \   00000064   000053E3           CMP      R3,#+0
   \   00000068   01309313           ORRSNE   R3,R3,#0x1
   \   0000006C   0400000A           BEQ      ??str2int_4
   \   00000070   ........           LDRB     R3,[R0], #+1
   \   00000074   36C0E0E3           MVN      R12,#+54
   \   00000078   03308CE1           ORR      R3,R12,R3
   \   0000007C   011283E1           ORR      R1,R3,R1, LSL #+4
   \   00000080   F0FFFFEA           B        ??str2int_1
   \                     ??str2int_4:
   \   00000084   0100A0E1           MOV      R0,R1
   \   00000088   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void splitfilename(wchar_t *, wchar_t *, wchar_t *)
   \                     ??splitfilename:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   2F10A0E3           MOV      R1,#+47
   \   00000014   AE0100EF           SWI      +430
   \   00000018   0070A0E1           MOV      R7,R0
   \   0000001C   A700A0E1           LSR      R0,R7,#+1
   \   00000020   A42040E0           SUB      R2,R0,R4, LSR #+1
   \   00000024   0410A0E1           MOV      R1,R4
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   530100EF           SWI      +339
   \   00000030   021087E2           ADD      R1,R7,#+2
   \   00000034   0600A0E1           MOV      R0,R6
   \   00000038   520100EF           SWI      +338
   \   0000003C   F080BDE8           POP      {R4-R7,PC}       ;; return

   \                                 In segment DATA_I, align 4, align-sorted
   \   <unnamed> __data cfgmacro[9]
   \                     cfgmacro:
   \   00000000                      DS8 72
   \   00000048                      REQUIRE `?<Initializer for cfgmacro>`

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void extractdir(wchar_t *, wchar_t *, char *)
   \                     ??extractdir:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   88DF4DE2           SUB      SP,SP,#+544
   \   00000008   E8909FE5           LDR      R9,??extractdir_1  ;; `?<Constant "%%%s_INT%%">`
   \   0000000C   E8A09FE5           LDR      R10,??extractdir_1+0x4  ;; cfgmacro
   \   00000010   0040A0E1           MOV      R4,R0
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   0260A0E1           MOV      R6,R2
   \   0000001C   0080A0E3           MOV      R8,#+0
   \   00000020   000000EA           B        ??extractdir_2
   \                     ??extractdir_3:
   \   00000024   018088E2           ADD      R8,R8,#+1
   \                     ??extractdir_2:
   \   00000028   090058E3           CMP      R8,#+9
   \   0000002C   2300002A           BCS      ??extractdir_4
   \   00000030   88219AE7           LDR      R2,[R10, +R8, LSL #+3]
   \   00000034   0910A0E1           MOV      R1,R9
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   140100EF           SWI      +276
   \   00000040   0070A0E1           MOV      R7,R0
   \   00000044   0720A0E1           MOV      R2,R7
   \   00000048   0D10A0E1           MOV      R1,SP
   \   0000004C   0600A0E1           MOV      R0,R6
   \   00000050   ........           _BLF     ??strncmpi,??strncmpi??rA
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0300001A           BNE      ??extractdir_5
   \   0000005C   88018AE0           ADD      R0,R10,R8, LSL #+3
   \   00000060   040090E5           LDR      R0,[R0, #+4]
   \   00000064   010080E3           ORR      R0,R0,#0x1
   \   00000068   0C0000EA           B        ??extractdir_6
   \                     ??extractdir_5:
   \   0000006C   88219AE7           LDR      R2,[R10, +R8, LSL #+3]
   \   00000070   0C1089E2           ADD      R1,R9,#+12
   \   00000074   0D00A0E1           MOV      R0,SP
   \   00000078   140100EF           SWI      +276
   \   0000007C   0070A0E1           MOV      R7,R0
   \   00000080   0720A0E1           MOV      R2,R7
   \   00000084   0D10A0E1           MOV      R1,SP
   \   00000088   0600A0E1           MOV      R0,R6
   \   0000008C   ........           _BLF     ??strncmpi,??strncmpi??rA
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   E2FFFF1A           BNE      ??extractdir_3
   \   00000098   88018AE0           ADD      R0,R10,R8, LSL #+3
   \   0000009C   040090E5           LDR      R0,[R0, #+4]
   \                     ??extractdir_6:
   \   000000A0   066087E0           ADD      R6,R7,R6
   \   000000A4   010070E3           CMN      R0,#+1
   \   000000A8   0400000A           BEQ      ??extractdir_4
   \   000000AC   050100EF           SWI      +261
   \   000000B0   0010A0E1           MOV      R1,R0
   \   000000B4   20008DE2           ADD      R0,SP,#+32
   \   000000B8   520100EF           SWI      +338
   \   000000BC   010000EA           B        ??extractdir_7
   \                     ??extractdir_4:
   \   000000C0   0010A0E3           MOV      R1,#+0
   \   000000C4   B012CDE1           STRH     R1,[SP, #+32]
   \                     ??extractdir_7:
   \   000000C8   20008DE2           ADD      R0,SP,#+32
   \   000000CC   570100EF           SWI      +343
   \   000000D0   0610A0E1           MOV      R1,R6
   \   000000D4   20208DE2           ADD      R2,SP,#+32
   \   000000D8   800082E0           ADD      R0,R2,R0, LSL #+1
   \   000000DC   580100EF           SWI      +344
   \   000000E0   0520A0E1           MOV      R2,R5
   \   000000E4   0410A0E1           MOV      R1,R4
   \   000000E8   20008DE2           ADD      R0,SP,#+32
   \   000000EC   ........           BL       ??splitfilename
   \   000000F0   88DF8DE2           ADD      SP,SP,#+544
   \   000000F4   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??extractdir_1:
   \   000000F8   ........           DC32     `?<Constant "%%%s_INT%%">`
   \   000000FC   ........           DC32     cfgmacro
      7          
      8          #define ELFNAME "missed events"
      9          #define LELFNAME L"missed events"
     10          #define LELFVERSION L" v0.5\nby den_po"
     11          #define LINIFILENAME _T("missed.ini")
     12          

   \                                 In segment DATA_I, align 4, align-sorted
     13          static char myappname[]=ELFNAME;
     14          
     15          bool disabled=false;
     16          int cfg_period=30;
     17          wchar_t cfg_filepath[256];
     18          wchar_t cfg_filename[256];
     19          
     20          u16 timer;
   \                     timer:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for timer>`
   \   00000002                      DS8 2
   \                     cfg_period:
   \   00000004                      DS8 4
   \   00000008                      REQUIRE `?<Initializer for cfg_period>`
     21          
     22          int skipevents;
   \                     skipevents:
   \   00000008                      DS8 4
   \   0000000C                      REQUIRE `?<Initializer for skipevents>`
     23          int checkevents;
   \                     checkevents:
   \   0000000C                      DS8 4
   \   00000010                      REQUIRE `?<Initializer for checkevents>`
   \                     disabled:
   \   00000010                      DS8 1
   \   00000011                      REQUIRE `?<Initializer for disabled>`
   \   00000011                      DS8 3
   \   00000014                      DS8 16
   \   00000024                      REQUIRE `?<Initializer for myappname>`
   \                     cfg_filepath:
   \   00000024                      DS8 512
   \   00000224                      REQUIRE `?<Initializer for cfg_filepath>`
   \                     cfg_filename:
   \   00000224                      DS8 512
   \   00000424                      REQUIRE `?<Initializer for cfg_filename>`
     24          

   \                                 In segment CODE, align 4, keep-with-next
     25          void onTimer(u16 timerID, LPARAM lparam)
     26          {
   \                     ??onTimer:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     27          	if(!disabled)
   \   00000004   ........           LDR      R4,??DataTable9  ;; timer
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   1000D4E5           LDRB     R0,[R4, #+16]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   1A00001A           BNE      ??onTimer_1
     28          	{
     29          		char* me=MissedEvents();
   \   0000001C   A78100EF           SWI      +33191
     30          		char mestatus=*me;//some FWs use char :(
     31          		if( mestatus & checkevents )
   \   00000020   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000024   0C1094E5           LDR      R1,[R4, #+12]
   \   00000028   000011E1           TST      R1,R0
   \   0000002C   1500000A           BEQ      ??onTimer_1
     32          		{
     33          			if(!GetSilent())
   \   00000030   4B0200EF           SWI      +587
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0600001A           BNE      ??onTimer_2
     34          			{
     35          				char vol;
     36          				GetAudioSettings(2,&vol);
   \   0000003C   0D10A0E1           MOV      R1,SP
   \   00000040   0200A0E3           MOV      R0,#+2
   \   00000044   4D0200EF           SWI      +589
     37          				PlayFileV(cfg_filepath,cfg_filename,vol);
   \   00000048   0020DDE5           LDRB     R2,[SP, #+0]
   \   0000004C   891F84E2           ADD      R1,R4,#+548
   \   00000050   240084E2           ADD      R0,R4,#+36
   \   00000054   4A0200EF           SWI      +586
     38          			}
     39          			if(GetVibrator(0,0))
   \                     ??onTimer_2:
   \   00000058   0010A0E3           MOV      R1,#+0
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   4C0200EF           SWI      +588
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   0600000A           BEQ      ??onTimer_1
     40          			{
     41          				PAudioControl pAC=*GetAudioControlPtr();
   \   0000006C   D18100EF           SWI      +33233
   \   00000070   000090E5           LDR      R0,[R0, #+0]
     42          				AudioControl_Vibrate(pAC,450,50,1500);
   \   00000074   DC30A0E3           MOV      R3,#+220
   \   00000078   503E83E3           ORR      R3,R3,#0x500
   \   0000007C   3220A0E3           MOV      R2,#+50
   \   00000080   641F82E2           ADD      R1,R2,#+400
   \   00000084   D20100EF           SWI      +466
     43          			}
     44          		}
     45          #ifdef DEBUG
     46          		if( mestatus & ~(skipevents|checkevents))
     47          		{
     48          			wchar_t temp[256];
     49          			snwprintf(temp, MAXELEMS(temp), _T("unknown event status\n%x: %x"), me, mestatus &~(skipevents|checkevents));
     50          			MessageBox(EMPTY_TEXTID, TextID_Create(temp,ENC_UCS2,MAXELEMS(temp)), NOIMAGE, 1, 0, 0);
     51          			skipevents|=mestatus;
     52          		}
     53          #endif
     54          	}
     55          	Timer_ReSet(&timer,cfg_period*1000,onTimer,lparam);
   \                     ??onTimer_1:
   \   00000088   040094E5           LDR      R0,[R4, #+4]
   \   0000008C   ........           LDR      R2,??DataTable10  ;; ??onTimer
   \   00000090   0530A0E1           MOV      R3,R5
   \   00000094   FA5FA0E3           MOV      R5,#+1000
   \   00000098   950001E0           MUL      R1,R5,R0
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   280100EF           SWI      +296
     56          }
   \   000000A4   3180BDE8           POP      {R0,R4,R5,PC}    ;; return
     57          

   \                                 In segment CODE, align 4, keep-with-next
     58          int getcfg()
     59          {
   \                     ??getcfg:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
     60          	int fcfg;
     61          	char* pcfg=NULL;
     62          
     63          	if( (fcfg=_fopen(GetDir(DIR_INI), LINIFILENAME , FSX_O_RDONLY, FSX_S_IREAD|FSX_S_IWRITE, 0))>=0)
   \   00000008   ........           LDR      R4,??DataTable8  ;; `?<Constant "[FILE]">`
   \   0000000C   1600A0E3           MOV      R0,#+22
   \   00000010   050100EF           SWI      +261
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   02002DE9           PUSH     {R1}
   \   0000001C   603FA0E3           MOV      R3,#+384
   \   00000020   0120A0E3           MOV      R2,#+1
   \   00000024   141084E2           ADD      R1,R4,#+20
   \   00000028   160100EF           SWI      +278
   \   0000002C   0050B0E1           MOVS     R5,R0
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   2C00004A           BMI      ??getcfg_1
     64          	{
     65          		FSTAT _fstat;
     66          		if (fstat(GetDir(DIR_INI), LINIFILENAME ,&_fstat)==0)
   \   00000038   1600A0E3           MOV      R0,#+22
   \   0000003C   050100EF           SWI      +261
   \   00000040   0D20A0E1           MOV      R2,SP
   \   00000044   141084E2           ADD      R1,R4,#+20
   \   00000048   1C0100EF           SWI      +284
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   2000001A           BNE      ??getcfg_2
     67          		{
     68          			pcfg=(char*)malloc(_fstat.fsize+1);
   \   00000054   08009DE5           LDR      R0,[SP, #+8]
     69          			fread(fcfg,pcfg,_fstat.fsize);
     70          
     71          			if(char* pfilepath=manifest_GetParam(pcfg,"[FILE]",0))
   \   00000058   98809FE5           LDR      R8,??getcfg_3    ;; timer
   \   0000005C   010080E2           ADD      R0,R0,#+1
   \   00000060   030100EF           SWI      +259
   \   00000064   08209DE5           LDR      R2,[SP, #+8]
   \   00000068   0060A0E1           MOV      R6,R0
   \   0000006C   0610A0E1           MOV      R1,R6
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   180100EF           SWI      +280
   \   00000078   0020A0E3           MOV      R2,#+0
   \   0000007C   0410A0E1           MOV      R1,R4
   \   00000080   0600A0E1           MOV      R0,R6
   \   00000084   750100EF           SWI      +373
   \   00000088   0070B0E1           MOVS     R7,R0
   \   0000008C   0500000A           BEQ      ??getcfg_4
     72          			{
     73          				extractdir(cfg_filepath,cfg_filename,pfilepath);
   \   00000090   0720A0E1           MOV      R2,R7
   \   00000094   891F88E2           ADD      R1,R8,#+548
   \   00000098   240088E2           ADD      R0,R8,#+36
   \   0000009C   ........           BL       ??extractdir
     74          				mfree(pfilepath);
   \   000000A0   0700A0E1           MOV      R0,R7
   \   000000A4   040100EF           SWI      +260
     75          			}
     76          			if(char* pperiod=manifest_GetParam(pcfg,"[PERIOD]",0))
   \                     ??getcfg_4:
   \   000000A8   0020A0E3           MOV      R2,#+0
   \   000000AC   081084E2           ADD      R1,R4,#+8
   \   000000B0   0600A0E1           MOV      R0,R6
   \   000000B4   750100EF           SWI      +373
   \   000000B8   0040B0E1           MOVS     R4,R0
   \   000000BC   0300000A           BEQ      ??getcfg_5
     77          			{
     78          				cfg_period=str2int(pperiod);
   \   000000C0   ........           BL       ??str2int
   \   000000C4   040088E5           STR      R0,[R8, #+4]
     79          				mfree(pperiod);
   \   000000C8   0400A0E1           MOV      R0,R4
   \   000000CC   040100EF           SWI      +260
     80          			}
     81          			mfree(pcfg);
   \                     ??getcfg_5:
   \   000000D0   0600A0E1           MOV      R0,R6
   \   000000D4   040100EF           SWI      +260
     82          		}
     83          		fclose(fcfg);
   \                     ??getcfg_2:
   \   000000D8   0500A0E1           MOV      R0,R5
   \   000000DC   170100EF           SWI      +279
     84          		return 1;
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   1CD08DE2           ADD      SP,SP,#+28
   \   000000E8   F081BDE8           POP      {R4-R8,PC}
     85          	}
     86          	return 0;
   \                     ??getcfg_1:
   \   000000EC   0000A0E3           MOV      R0,#+0
   \   000000F0   1CD08DE2           ADD      SP,SP,#+28
   \   000000F4   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??getcfg_3:
   \   000000F8   ........           DC32     timer
     87          }
     88          
     89          
     90          //-------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
     91          void elf_exit(void)
     92          {
   \                     ??elf_exit:
   \   00000000   00402DE9           PUSH     {LR}
     93          	kill_data(&ELF_BEGIN, (void(*)(void*))mfree_adr());
   \   00000004   048100EF           SWI      +33028
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??elf_exit_1  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??elf_exit_1:
   \   00000018   ........           DC32     ELF_BEGIN
     94          }
     95          
     96          //////////////////////////////////////////////////////////////////////////////////////////
     97          

   \                                 In segment CODE, align 4, keep-with-next
     98          void bookOnDestroy(BOOK * book)
     99          {
    100          	Timer_Kill(&timer);
   \                     ??bookOnDestroy:
   \   00000000   ........           LDR      R0,??DataTable9  ;; timer
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   2A0100EF           SWI      +298
    101          	MessageBox(EMPTY_TEXTID,TextID_Create( LELFNAME L" has been stopped",ENC_UCS2,TEXTID_ANY_LEN),NOIMAGE,1,5000,0);
   \   0000000C   44009FE5           LDR      R0,??bookOnDestroy_1  ;; `?<Constant L"\\x6d\\x69\\x73\\x73\\x65\\x64\\x20\\x65\\_1`
   \   00000010   FF40A0E3           MOV      R4,#+255
   \   00000014   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000018   0420A0E1           MOV      R2,R4
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   5D0100EF           SWI      +349
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   02002DE9           PUSH     {R1}
   \   0000002C   0130A0E3           MOV      R3,#+1
   \   00000030   0420A0E1           MOV      R2,R4
   \   00000034   8810A0E3           MOV      R1,#+136
   \   00000038   4C1D81E3           ORR      R1,R1,#0x1300
   \   0000003C   02002DE9           PUSH     {R1}
   \   00000040   0010A0E1           MOV      R1,R0
   \   00000044   9004E0E3           MVN      R0,#-1879048192
   \   00000048   570200EF           SWI      +599
    102          	SUBPROC(elf_exit);
   \   0000004C   ........           LDR      R0,??DataTable7  ;; ??elf_exit
   \   00000050   080100EF           SWI      +264
    103          }
   \   00000054   1380BDE8           POP      {R0,R1,R4,PC}    ;; return
   \                     ??bookOnDestroy_1:
   \   00000058   ........           DC32     `?<Constant L"\\x6d\\x69\\x73\\x73\\x65\\x64\\x20\\x65\\_1`
    104          

   \                                 In segment CODE, align 4, keep-with-next
    105          int onExit(void* r0,BOOK* b)
    106          {
   \                     ??onExit:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0100A0E1           MOV      R0,R1
    107          	FreeBook(b);
   \   00000008   2F0100EF           SWI      +303
    108          	return 1;
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   0080BDE8           POP      {PC}             ;; return
    109          }
    110          

   \                                 In segment CODE, align 4, keep-with-next
    111          int onAbout(void* mess,BOOK* b)
    112          {
   \                     ??onAbout:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    113          	MessageBox(EMPTY_TEXTID,TextID_Create( LELFNAME LELFVERSION,ENC_UCS2,TEXTID_ANY_LEN),NOIMAGE, 1 ,5000, *(BOOK**)mess);
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   3C009FE5           LDR      R0,??onAbout_1   ;; `?<Constant L"\\x6d\\x69\\x73\\x73\\x65\\x64\\x20\\x65\\_2`
   \   00000010   FF50A0E3           MOV      R5,#+255
   \   00000014   FF5C85E3           ORR      R5,R5,#0xFF00
   \   00000018   0520A0E1           MOV      R2,R5
   \   0000001C   5D0100EF           SWI      +349
   \   00000020   001094E5           LDR      R1,[R4, #+0]
   \   00000024   0130A0E3           MOV      R3,#+1
   \   00000028   02002DE9           PUSH     {R1}
   \   0000002C   0520A0E1           MOV      R2,R5
   \   00000030   8810A0E3           MOV      R1,#+136
   \   00000034   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000038   02002DE9           PUSH     {R1}
   \   0000003C   0010A0E1           MOV      R1,R0
   \   00000040   9004E0E3           MVN      R0,#-1879048192
   \   00000044   570200EF           SWI      +599
    114          	return 1;
   \   00000048   0100A0E3           MOV      R0,#+1
   \   0000004C   3680BDE8           POP      {R1,R2,R4,R5,PC}  ;; return
   \                     ??onAbout_1:
   \   00000050   ........           DC32     `?<Constant L"\\x6d\\x69\\x73\\x73\\x65\\x64\\x20\\x65\\_2`
    115          }
    116          
    117          enum
    118          {
    119          	CALLMANAGER_IDLE            =0,
    120          	CALLMANAGER_CALL_CONNECTED  =1,
    121          	CALLMANAGER_CALL_SETUP      =2,
    122          	CALLMANAGER_CALL_ALERT      =4,
    123          	CALLMANAGER_CALL_WAITING    =5,
    124          	CALLMANAGER_CALL_TERMINATED =6
    125          };
    126          

   \                                 In segment CODE, align 4, keep-with-next
    127          int OnCallManagerEvent(void* r0,BOOK* b)
    128          {
   \                     ??OnCallManagerEvent:
   \   00000000   10402DE9           PUSH     {R4,LR}
    129          	switch(((CALLMANAGER_EVENT_DATA*)r0)->CallState)
   \   00000004   0200D0E5           LDRB     R0,[R0, #+2]
   \   00000008   ........           LDR      R4,??DataTable9  ;; timer
   \   0000000C   020050E2           SUBS     R0,R0,#+2
   \   00000010   02005012           SUBSNE   R0,R0,#+2
   \   00000014   0200000A           BEQ      ??OnCallManagerEvent_1
   \   00000018   020050E2           SUBS     R0,R0,#+2
   \   0000001C   0400000A           BEQ      ??OnCallManagerEvent_2
   \   00000020   010000EA           B        ??OnCallManagerEvent_3
    130          	{
    131          	case CALLMANAGER_CALL_SETUP:
    132          	case CALLMANAGER_CALL_ALERT:
    133          		disabled=true;
   \                     ??OnCallManagerEvent_1:
   \   00000024   0100A0E3           MOV      R0,#+1
   \   00000028   1000C4E5           STRB     R0,[R4, #+16]
   \                     ??OnCallManagerEvent_3:
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   1080BDE8           POP      {R4,PC}
    134          		break;
    135          	case CALLMANAGER_CALL_TERMINATED:
    136          		Timer_ReSet(&timer,cfg_period*1000,onTimer, 0);
   \                     ??OnCallManagerEvent_2:
   \   00000034   040094E5           LDR      R0,[R4, #+4]
   \   00000038   ........           LDR      R2,??DataTable10  ;; ??onTimer
   \   0000003C   0030A0E3           MOV      R3,#+0
   \   00000040   FACFA0E3           MOV      R12,#+1000
   \   00000044   9C0001E0           MUL      R1,R12,R0
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   280100EF           SWI      +296
    137          		disabled=false;
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   1000C4E5           STRB     R0,[R4, #+16]
    138          		break;
    139          	}
    140          	return 1;
   \   00000058   0100A0E3           MOV      R0,#+1
   \   0000005C   1080BDE8           POP      {R4,PC}          ;; return
    141          }
    142          

   \                                 In segment DYN_PAGE, align 4, align-sorted
    143          const PAGE_MSG evtlist[] @ "DYN_PAGE"=
   \                     evtlist:
   \   00000000   E5030000....       DC32 997, ??onExit, 998, ??onAbout, 442, ??OnCallManagerEvent, 64, 0H
   \              ....E6030000
   \              ........BA01
   \              0000........
   \              400000000000
   \              0000        
    144          {
    145          	ELF_TERMINATE_EVENT     ,onExit,
    146          	ELF_SHOW_INFO_EVENT     ,onAbout,
    147          	ON_CALLMANAGER_EVENT_TAG,OnCallManagerEvent,
    148          	NIL_EVENT_TAG           ,NULL
    149          };
    150          

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "[FILE]">`:
   \   00000000   5B46494C455D       DC8 "[FILE]"
   \              00          
   \   00000007   00                 DC8 0
   \   00000008   5B504552494F       DC8 "[PERIOD]"
   \              445D00      
   \   00000011   000000             DC8 0, 0, 0
   \   00000014   6D0069007300       DC8 6DH, 0, 69H, 0, 73H, 0, 73H, 0
   \              7300        
   \   0000001C   650064002E00       DC8 65H, 0, 64H, 0, 2EH, 0, 69H, 0
   \              6900        
   \   00000024   6E0069000000       DC8 6EH, 0, 69H, 0, 0, 0
   \   0000002A   0000               DC8 0, 0
   \   0000002C   620061006400       DC8 62H, 0, 61H, 0, 64H, 0, 20H, 0
   \              2000        
   \   00000034   270025007300       DC8 27H, 0, 25H, 0, 73H, 0, 27H, 0
   \              2700        
   \   0000003C   0A0063006F00       DC8 0AH, 0, 63H, 0, 6FH, 0, 6EH, 0
   \              6E00        
   \   00000044   660069006700       DC8 66H, 0, 69H, 0, 67H, 0, 3AH, 0
   \              3A00        
   \   0000004C   0A0070006100       DC8 0AH, 0, 70H, 0, 61H, 0, 74H, 0
   \              7400        
   \   00000054   68003A002500       DC8 68H, 0, 3AH, 0, 25H, 0, 6CH, 0
   \              6C00        
   \   0000005C   73000A006E00       DC8 73H, 0, 0AH, 0, 6EH, 0, 61H, 0
   \              6100        
   \   00000064   6D0065003A00       DC8 6DH, 0, 65H, 0, 3AH, 0, 25H, 0
   \              2500        
   \   0000006C   6C0073000A00       DC8 6CH, 0, 73H, 0, 0AH, 0, 74H, 0
   \              7400        
   \   00000074   69006D006500       DC8 69H, 0, 6DH, 0, 65H, 0, 3AH, 0
   \              3A00        
   \   0000007C   250064000000       DC8 25H, 0, 64H, 0, 0, 0
   \   00000082   0000               DC8 0, 0
   \   00000084   6D0069007300       DC8 6DH, 0, 69H, 0, 73H, 0, 73H, 0
   \              7300        
   \   0000008C   650064002000       DC8 65H, 0, 64H, 0, 20H, 0, 65H, 0
   \              6500        
   \   00000094   760065006E00       DC8 76H, 0, 65H, 0, 6EH, 0, 74H, 0
   \              7400        
   \   0000009C   730020006800       DC8 73H, 0, 20H, 0, 68H, 0, 61H, 0
   \              6100        
   \   000000A4   730020006200       DC8 73H, 0, 20H, 0, 62H, 0, 65H, 0
   \              6500        
   \   000000AC   65006E002000       DC8 65H, 0, 6EH, 0, 20H, 0, 73H, 0
   \              7300        
   \   000000B4   740061007200       DC8 74H, 0, 61H, 0, 72H, 0, 74H, 0
   \              7400        
   \   000000BC   650064000000       DC8 65H, 0, 64H, 0, 0, 0
   \   000000C2   0000               DC8 0, 0
   \   000000C4   ........0000       DC32 `?<Constant "defaultpage">`, 0H, evtlist
   \              0000........
    151          const PAGE_DESC defaultpage = {"defaultpage",0,evtlist};
    152          

   \                                 In segment CODE, align 4, keep-with-next
    153          int isOurBook(BOOK * book)
    154          {
    155          	if(!strcmp(book->xbook->name,myappname)) return true;
   \                     ??isOurBook:
   \   00000000   20109FE5           LDR      R1,??isOurBook_1  ;; timer + 20
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   040090E5           LDR      R0,[R0, #+4]
   \   00000010   590100EF           SWI      +345
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   0080BD08           POPEQ    {PC}
    156          	return false;
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   0080BDE8           POP      {PC}             ;; return
   \                     ??isOurBook_1:
   \   00000028   ........           DC32     timer + 20
    157          }
    158          

   \                                 In segment CODE, align 4, keep-with-next
    159          int main(wchar_t* filename)
    160          {
   \                     main:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
    161          	BOOK* alreadyrunned=FindBook(isOurBook);
    162          	if(alreadyrunned)
   \   00000004   ........           LDR      R8,??DataTable7  ;; ??elf_exit
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   04029FE5           LDR      R0,??main_0+0x4  ;; ??isOurBook
   \   00000010   87DF4DE2           SUB      SP,SP,#+540
   \   00000014   300100EF           SWI      +304
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0400000A           BEQ      ??main_1
    163          	{
    164          		FreeBook(alreadyrunned);
   \   00000020   2F0100EF           SWI      +303
    165          		SUBPROC(elf_exit);
   \   00000024   0800A0E1           MOV      R0,R8
   \   00000028   080100EF           SWI      +264
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   2F0000EA           B        ??main_2
    166          	}else
    167          	{
    168          		wchar_t temp[256];
    169          		//check cfg params------
    170          		char* badarg=NULL;
    171          		FSTAT _fstat;
    172          		if(!getcfg())
   \                     ??main_1:
   \   00000034   ........           LDR      R6,??DataTable8  ;; `?<Constant "[FILE]">`
   \   00000038   ........           LDR      R7,??DataTable9  ;; timer
   \   0000003C   FF40A0E3           MOV      R4,#+255
   \   00000040   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000044   899FA0E3           MOV      R9,#+548
   \   00000048   ........           BL       ??getcfg
   \   0000004C   000050E3           CMP      R0,#+0
    173          			badarg="INI";
   \   00000050   6F3F8F02           ADREQ    R3,??main_0      ;; "INI"
   \   00000054   0A00000A           BEQ      ??main_3
    174          		else
    175          			if(fstat(cfg_filepath,cfg_filename,&_fstat)!=0)
   \   00000058   802F8DE2           ADD      R2,SP,#+512
   \   0000005C   071089E0           ADD      R1,R9,R7
   \   00000060   240087E2           ADD      R0,R7,#+36
   \   00000064   1C0100EF           SWI      +284
   \   00000068   000050E3           CMP      R0,#+0
    176          				badarg="[FILE]";
   \   0000006C   0630A011           MOVNE    R3,R6
   \   00000070   0300001A           BNE      ??main_3
    177          			else
    178          				if(cfg_period<3)badarg="[PERIOD]";
   \   00000074   040097E5           LDR      R0,[R7, #+4]
   \   00000078   030050E3           CMP      R0,#+3
   \   0000007C   1E0000AA           BGE      ??main_4
   \   00000080   083086E2           ADD      R3,R6,#+8
    179          		if(badarg)
   \                     ??main_3:
   \   00000084   000053E3           CMP      R3,#+0
   \   00000088   1B00000A           BEQ      ??main_4
    180          		{
    181          			snwprintf(temp, MAXELEMS(temp), _T("bad '%s'\nconfig:\npath:%ls\nname:%ls\ntime:%d"),badarg
    182          				,cfg_filepath,cfg_filename,cfg_period);
   \   0000008C   040097E5           LDR      R0,[R7, #+4]
   \   00000090   2C2086E2           ADD      R2,R6,#+44
   \   00000094   01002DE9           PUSH     {R0}
   \   00000098   401FA0E3           MOV      R1,#+256
   \   0000009C   070089E0           ADD      R0,R9,R7
   \   000000A0   01002DE9           PUSH     {R0}
   \   000000A4   240087E2           ADD      R0,R7,#+36
   \   000000A8   01002DE9           PUSH     {R0}
   \   000000AC   0C008DE2           ADD      R0,SP,#+12
   \   000000B0   150100EF           SWI      +277
    183          			MessageBox(EMPTY_TEXTID,TextID_Create(temp,ENC_UCS2,MAXELEMS(temp)),NOIMAGE,1,0,0);
   \   000000B4   402FA0E3           MOV      R2,#+256
   \   000000B8   0010A0E3           MOV      R1,#+0
   \   000000BC   0C008DE2           ADD      R0,SP,#+12
   \   000000C0   5D0100EF           SWI      +349
   \   000000C4   0010A0E1           MOV      R1,R0
   \   000000C8   0000A0E3           MOV      R0,#+0
   \   000000CC   01002DE9           PUSH     {R0}
   \   000000D0   01002DE9           PUSH     {R0}
   \   000000D4   0130A0E3           MOV      R3,#+1
   \   000000D8   0420A0E1           MOV      R2,R4
   \   000000DC   9004E0E3           MVN      R0,#-1879048192
   \   000000E0   570200EF           SWI      +599
    184          			SUBPROC(elf_exit);
   \   000000E4   0800A0E1           MOV      R0,R8
   \   000000E8   080100EF           SWI      +264
    185          			return 0;
   \   000000EC   0000A0E3           MOV      R0,#+0
   \   000000F0   14D08DE2           ADD      SP,SP,#+20
   \                     ??main_2:
   \   000000F4   87DF8DE2           ADD      SP,SP,#+540
   \   000000F8   F083BDE8           POP      {R4-R9,PC}
    186          		}
    187          		//---------------------
    188          		switch(GetChipID()&CHIPID_MASK)
   \                     ??main_4:
   \   000000FC   0080A0E3           MOV      R8,#+0
   \   00000100   4E0200EF           SWI      +590
   \   00000104   FE0C00E2           AND      R0,R0,#0xFE00
   \   00000108   0008A0E1           MOV      R0,R0, LSL #+16
   \   0000010C   4008A0E1           MOV      R0,R0, ASR #+16
   \   00000110   800C70E3           CMN      R0,#+32768
   \   00000114   0700000A           BEQ      ??main_5
   \   00000118   680C70E3           CMN      R0,#+26624
   \   0000011C   E00D7013           CMNNE    R0,#+14336
   \   00000120   A00D7013           CMNNE    R0,#+10240
   \   00000124   600D7013           CMNNE    R0,#+6144
   \   00000128   400D7013           CMNNE    R0,#+4096
   \   0000012C   0400000A           BEQ      ??main_6
   \   00000130   700C50E3           CMP      R0,#+28672
   \   00000134   0600001A           BNE      ??main_7
    189          		{
    190                          case CHIPID_DB2000:
    191                          case CHIPID_DB2010:
    192          			skipevents=0;
   \                     ??main_5:
   \   00000138   088087E5           STR      R8,[R7, #+8]
    193          			checkevents=1|2|4|8;//MISSED_CALL|MISSED_SMS|MISSED_EMAIL|MISSED_MMS
   \   0000013C   0F00A0E3           MOV      R0,#+15
   \   00000140   020000EA           B        ??main_8
    194          			break;
    195                          case CHIPID_DB2020:
    196                          case CHIPID_DB3150:
    197                          case CHIPID_DB3200:
    198                          case CHIPID_DB3210:
    199                          case CHIPID_DB3350:
    200          			skipevents=1|2;//KEYLOCKED|NOSOUND
   \                     ??main_6:
   \   00000144   0300A0E3           MOV      R0,#+3
   \   00000148   080087E5           STR      R0,[R7, #+8]
    201          			checkevents=4|8|0x10|0x20;//MISSED_CALL|MISSED_SMS|MISSED_EMAIL|MISSED_MMS
   \   0000014C   3C00A0E3           MOV      R0,#+60
   \                     ??main_8:
   \   00000150   0C0087E5           STR      R0,[R7, #+12]
    202          		}
    203          
    204          		BOOK *myBook=(BOOK*)malloc(sizeof(BOOK));
   \                     ??main_7:
   \   00000154   1800A0E3           MOV      R0,#+24
   \   00000158   030100EF           SWI      +259
   \   0000015C   0090A0E1           MOV      R9,R0
    205          		memset(myBook,0,sizeof(BOOK));
   \   00000160   1820A0E3           MOV      R2,#+24
   \   00000164   0010A0E3           MOV      R1,#+0
   \   00000168   120100EF           SWI      +274
    206          		CreateBook(myBook,bookOnDestroy,&defaultpage,myappname,-1,0);
   \   0000016C   A8109FE5           LDR      R1,??main_0+0x8  ;; ??bookOnDestroy
   \   00000170   0800A0E1           MOV      R0,R8
   \   00000174   01002DE9           PUSH     {R0}
   \   00000178   143087E2           ADD      R3,R7,#+20
   \   0000017C   C42086E2           ADD      R2,R6,#+196
   \   00000180   0000E0E1           MVN      R0,R0
   \   00000184   01002DE9           PUSH     {R0}
   \   00000188   0900A0E1           MOV      R0,R9
   \   0000018C   2B0100EF           SWI      +299
    207          
    208          		timer=Timer_Set(cfg_period*1000, onTimer, 0);
   \   00000190   040097E5           LDR      R0,[R7, #+4]
   \   00000194   ........           LDR      R1,??DataTable10  ;; ??onTimer
   \   00000198   FA3FA0E3           MOV      R3,#+1000
   \   0000019C   930000E0           MUL      R0,R3,R0
   \   000001A0   0820A0E1           MOV      R2,R8
   \   000001A4   290100EF           SWI      +297
   \   000001A8   B000C7E1           STRH     R0,[R7, #+0]
    209          
    210          		if(!wstrwstr(filename,GetDir(DIR_ELFS_DAEMONS)))
   \   000001AC   1200A0E3           MOV      R0,#+18
   \   000001B0   050100EF           SWI      +261
   \   000001B4   0010A0E1           MOV      R1,R0
   \   000001B8   0500A0E1           MOV      R0,R5
   \   000001BC   9E0200EF           SWI      +670
   \   000001C0   000050E3           CMP      R0,#+0
   \   000001C4   08D08DE2           ADD      SP,SP,#+8
   \   000001C8   0E00001A           BNE      ??main_9
    211          			MessageBox(EMPTY_TEXTID,TextID_Create( LELFNAME L" has been started",ENC_UCS2,TEXTID_ANY_LEN),NOIMAGE,1,5000,0);
   \   000001CC   0420A0E1           MOV      R2,R4
   \   000001D0   0010A0E3           MOV      R1,#+0
   \   000001D4   840086E2           ADD      R0,R6,#+132
   \   000001D8   5D0100EF           SWI      +349
   \   000001DC   0810A0E1           MOV      R1,R8
   \   000001E0   02002DE9           PUSH     {R1}
   \   000001E4   0130A0E3           MOV      R3,#+1
   \   000001E8   0420A0E1           MOV      R2,R4
   \   000001EC   8810A0E3           MOV      R1,#+136
   \   000001F0   4C1D81E3           ORR      R1,R1,#0x1300
   \   000001F4   02002DE9           PUSH     {R1}
   \   000001F8   0010A0E1           MOV      R1,R0
   \   000001FC   9004E0E3           MVN      R0,#-1879048192
   \   00000200   570200EF           SWI      +599
   \   00000204   08D08DE2           ADD      SP,SP,#+8
    212          	}
    213          
    214          	return 0;
   \                     ??main_9:
   \   00000208   0000A0E3           MOV      R0,#+0
   \   0000020C   87DF8DE2           ADD      SP,SP,#+540
   \   00000210   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??main_0:
   \   00000214   494E4900           DC8      "INI"
   \   00000218   ........           DC32     ??isOurBook
   \   0000021C   ........           DC32     ??bookOnDestroy
    215          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     ??elf_exit

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     `?<Constant "[FILE]">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     timer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     ??onTimer

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for cfgmacro>`:
   \   00000000   ........0000       DC32 `?<Constant "AUDIO">`, 0, `?<Constant "IMAGE">`, 2
   \              0000........
   \              02000000    
   \   00000010   ........0400       DC32 `?<Constant "VIDEO">`, 4, `?<Constant "THEME">`, 6
   \              0000........
   \              06000000    
   \   00000020   ........0800       DC32 `?<Constant "OTHER">`, 8, `?<Constant "ELFS">`, 16
   \              0000........
   \              10000000    
   \   00000030   ........1200       DC32 `?<Constant "ELFS_DAEMONS">`, 18, `?<Constant "ELFS_CONFIG">`, 20
   \              0000........
   \              14000000    
   \   00000040   ........1600       DC32 `?<Constant "INI">`, 22
   \              0000        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for timer>`:
   \   00000000   0000               DC8 0, 0
   \   00000002   0000               DC8 0, 0
   \                     `?<Initializer for cfg_period>`:
   \   00000004   1E000000           DC32 30
   \                     `?<Initializer for skipevents>`:
   \   00000008   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for checkevents>`:
   \   0000000C   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for disabled>`:
   \   00000010   00                 DC8 0
   \   00000011   000000             DC8 0, 0, 0
   \                     `?<Initializer for myappname>`:
   \   00000014   6D6973736564       DC8 "missed events"
   \              206576656E74
   \              7300        
   \   00000022   0000               DC8 0, 0
   \                     `?<Initializer for cfg_filepath>`:
   \   00000024   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000034   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000044   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000054   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000064   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000074   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000084   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000094   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000F4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000104   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000114   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000124   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000134   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000144   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000154   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000164   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000174   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000184   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000194   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001F4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000204   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000214   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for cfg_filename>`:
   \   00000224   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000234   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000244   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000254   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000264   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000274   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000284   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000294   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002F4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000304   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000314   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000324   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000334   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000344   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000354   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000364   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000374   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000384   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000394   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003F4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000404   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000414   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "AUDIO">`:
   \   00000000   415544494F00       DC8 "AUDIO"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "IMAGE">`:
   \   00000000   494D41474500       DC8 "IMAGE"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "VIDEO">`:
   \   00000000   564944454F00       DC8 "VIDEO"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "THEME">`:
   \   00000000   5448454D4500       DC8 "THEME"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "OTHER">`:
   \   00000000   4F5448455200       DC8 "OTHER"
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ELFS">`:
   \   00000000   454C465300         DC8 "ELFS"
   \   00000005   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ELFS_DAEMONS">`:
   \   00000000   454C46535F44       DC8 "ELFS_DAEMONS"
   \              41454D4F4E53
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ELFS_CONFIG">`:
   \   00000000   454C46535F43       DC8 "ELFS_CONFIG"
   \              4F4E46494700

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "INI">`:
   \   00000000   494E4900           DC8 "INI"

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "defaultpage">`:
   \   00000000   64656661756C       DC8 "defaultpage"
   \              747061676500

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "%%%s_INT%%">`:
   \   00000000   252525735F49       DC8 "%%%s_INT%%"
   \              4E54252500  
   \   0000000B   00                 DC8 0
   \   0000000C   252525735F45       DC8 "%%%s_EXT%%"
   \              5854252500  
   \   00000017   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x6d\\x69\\x73\\x73\\x65\\x64\\x20\\x65\\_1`:
   \   00000000   6D0069007300       DC8 6DH, 0, 69H, 0, 73H, 0, 73H, 0
   \              7300        
   \   00000008   650064002000       DC8 65H, 0, 64H, 0, 20H, 0, 65H, 0
   \              6500        
   \   00000010   760065006E00       DC8 76H, 0, 65H, 0, 6EH, 0, 74H, 0
   \              7400        
   \   00000018   730020006800       DC8 73H, 0, 20H, 0, 68H, 0, 61H, 0
   \              6100        
   \   00000020   730020006200       DC8 73H, 0, 20H, 0, 62H, 0, 65H, 0
   \              6500        
   \   00000028   65006E002000       DC8 65H, 0, 6EH, 0, 20H, 0, 73H, 0
   \              7300        
   \   00000030   74006F007000       DC8 74H, 0, 6FH, 0, 70H, 0, 70H, 0
   \              7000        
   \   00000038   650064000000       DC8 65H, 0, 64H, 0, 0, 0
   \   0000003E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x6d\\x69\\x73\\x73\\x65\\x64\\x20\\x65\\_2`:
   \   00000000   6D0069007300       DC8 6DH, 0, 69H, 0, 73H, 0, 73H, 0
   \              7300        
   \   00000008   650064002000       DC8 65H, 0, 64H, 0, 20H, 0, 65H, 0
   \              6500        
   \   00000010   760065006E00       DC8 76H, 0, 65H, 0, 6EH, 0, 74H, 0
   \              7400        
   \   00000018   730020007600       DC8 73H, 0, 20H, 0, 76H, 0, 30H, 0
   \              3000        
   \   00000020   2E0035000A00       DC8 2EH, 0, 35H, 0, 0AH, 0, 62H, 0
   \              6200        
   \   00000028   790020006400       DC8 79H, 0, 20H, 0, 64H, 0, 65H, 0
   \              6500        
   \   00000030   6E005F007000       DC8 6EH, 0, 5FH, 0, 70H, 0, 6FH, 0
   \              6F00        
   \   00000038   0000               DC8 0, 0
   \   0000003A   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     OnCallManagerEvent(void *, BOOK *)
                                        8
     bookOnDestroy(BOOK *)             16
     elf_exit()                         4
     extractdir(wchar_t *, wchar_t *, char *)
                                      576
     getcfg()                          56
     isOurBook(BOOK *)                  4
     main(wchar_t *)                  588
     onAbout(void *, BOOK *)           20
     onExit(void *, BOOK *)             4
     onTimer(u16, LPARAM)              16
     splitfilename(wchar_t *, wchar_t *, wchar_t *)
                                       20
     str2int(char *)                    0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     str2int(char *)                 140
     splitfilename(wchar_t *, wchar_t *, wchar_t *)
                                      64
     cfgmacro                         72
     extractdir(wchar_t *, wchar_t *, char *)
                                     256
     timer                          1060
     onTimer(u16, LPARAM)            168
     getcfg()                        252
     elf_exit()                       28
     bookOnDestroy(BOOK *)            92
     onExit(void *, BOOK *)           20
     onAbout(void *, BOOK *)          84
     OnCallManagerEvent(void *, BOOK *)
                                      96
     evtlist                          32
     ?<Constant "[FILE]">            208
     isOurBook(BOOK *)                44
     main(wchar_t *)                 544
     ??DataTable7                      4
     ??DataTable8                      4
     ??DataTable9                      4
     ??DataTable10                     4
     ?<Initializer for cfgmacro>      72
     ?<Initializer for timer>       1060
     ?<Constant "AUDIO">               8
     ?<Constant "IMAGE">               8
     ?<Constant "VIDEO">               8
     ?<Constant "THEME">               8
     ?<Constant "OTHER">               8
     ?<Constant "ELFS">                8
     ?<Constant "ELFS_DAEMONS">       16
     ?<Constant "ELFS_CONFIG">        12
     ?<Constant "INI">                 4
     ?<Constant "defaultpage">        12
     ?<Constant "%%%s_INT%%">         24
     ?<Constant L"\x6d\x69\x73\x73\x65\x64\x20\x65\_1
                                      64
     ?<Constant L"\x6d\x69\x73\x73\x65\x64\x20\x65\_2
                                      60
      Others                          84

 
 1 876 bytes in segment CODE
   448 bytes in segment DATA_C
 1 132 bytes in segment DATA_I
 1 132 bytes in segment DATA_ID
    32 bytes in segment DYN_PAGE
    12 bytes in segment INITTAB
 
 1 804 bytes of CODE  memory (+ 84 bytes shared)
 1 612 bytes of CONST memory
 1 132 bytes of DATA  memory

Errors: none
Warnings: none
