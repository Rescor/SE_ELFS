##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  23:06:21 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\MiniGPS\main.c #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\MiniGPS\main.c #
#                        -D NDEBUG -D LANG_EN -D OLDFUNCTIONS -lCN           #
#                       Z:\home\perk11\www\perk11.info\svn\SE\MiniGPS\Releas #
#                       e_EN\List\ -la Z:\home\perk11\www\perk11.info\svn\SE #
#                       \MiniGPS\Release_EN\List\ -o                         #
#                       Z:\home\perk11\www\perk11.info\svn\SE\MiniGPS\Releas #
#                       e_EN\Obj\ -s9 --no_unroll --no_code_motion           #
#                       --cpu_mode arm --endian little --cpu ARM926EJ-S      #
#                       --stack_align 4 --interwork -e --enable_multibytes   #
#                       --fpu None --eec++ --dlib_config                     #
#                       Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.h -I         #
#                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2    #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\MiniGPS\Releas #
#                       e_EN\List\main.lst                                   #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\MiniGPS\Releas #
#                       e_EN\Obj\main.r79                                    #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\MiniGPS\main.c
      1          #include "..\\include\Lib_Clara.h"
      2          #include "..\\include\Dir.h"
      3          #include "..\\include\var_arg.h"
      4          #include "..\\include\cfg_items.h"
      5          #include "main.h"
      6          #include "menu.h"
      7          #include "conf_loader.h"
      8          #include "config_data.h"
      9          #include "language.h"
     10          #include "util.h"
     11          
     12          extern "C" unsigned long wcstoul(const wchar_t *, wchar_t **, int);
     13          void onTimerNewAction(u16 timerID, LPARAM lparam);
     14          
     15          #define place(num) \
     16            {  &cfg_place_enable##num, \
     17                cfg_place_name##num, \
     18               &cfg_place_profile##num, \
     19               &cfg_place_vibrate##num, \
     20               &cfg_place_sound_enable##num, \
     21                cfg_sound_file##num}
     22          
     23          MyBOOK *MiniGPSBook = 0;
     24          
     25          DISP_OBJ_ONREDRAW_METHOD Status_oldReDraw = 0;
     26          DISP_OBJ ** GUI_status = 0;
     27          DISP_DESC * Status_desc = 0;
     28          
     29          DISP_OBJ_ONREDRAW_METHOD Display_oldReDraw = 0;
     30          DISP_OBJ * GUI_display = 0;
     31          DISP_DESC * Display_desc = 0;
     32          
     33          DISP_OBJ_ONREDRAW_METHOD Soft_oldReDraw = 0;
     34          DISP_OBJ * GUI_soft = 0;
     35          DISP_DESC * Soft_desc = 0;
     36          
     37          int DisplayWidth  = 0; //ширина дисплея в пикселях
     38          int DisplayHeight = 0; //высота дисплея в пикселях
     39          int SoftBarY   = 0;
     40          int StatusBarY = 0;
     41          
     42          wchar_t logFolder[256] = {0,};
     43          
     44          char logCellName[256] = {0,};
     45          wchar_t CellName[256]={0,};
     46          wchar_t CellNameAction[256]={0,};
     47          wchar_t prevCellName[256]={0,};
     48          wchar_t prevCellNameAction[256]={0,};
     49          wchar_t CellNameStatus[256]={0,};
     50          
     51          wchar_t tmppath[256] = {0,};
     52          wchar_t tmpname[256] = {0,};
     53          
     54          u16 timer_disable = 0;
     55          bool IsInStandby = false;
     56          
     57          bool visible = true;
     58          bool showCellID   = false;
     59          bool AutoLocation = false;
     60          
     61          wchar_t SIwstr[MAX_AUTOLOCATION_LEN] = {0,};
     62          wchar_t  wsnewdb[MAX_AUTOLOCATION_LEN];
     63          char snewdb[MAX_AUTOLOCATION_LEN];
     64          
     65          u16 currentLAC = 0;
     66          u16 currentCID = 0;
     67          u16 prevLAC = 0;
     68          u16 prevCID = 0;

   \                                 In segment DATA_Z, align 2, align-sorted
     69          u16 prevLAC_action = 0;
   \                     prevLAC_action:
   \   00000000                      DS8 2

   \                                 In segment DATA_Z, align 2, align-sorted
     70          u16 prevCID_action = 0;
   \                     prevCID_action:
   \   00000000                      DS8 2
     71          
     72          int prevLocFound = -1;
     73          
     74          u16 timer = 0;
     75          u16 timerNewAction = 0;
     76          
     77          int NewActionTimeout = 600000;
     78          
     79          int encode_type = 0;
     80          int CODEMAP_ADDR = 0x45D40000;
     81          wchar_t encode_buf[256];
     82          bool isUCodeFile = false;
     83          
     84          char * db_buf = 0;
     85          
     86          IMAGEID auto_image = NOIMAGE;
     87          TEXTID CellNameID = empty;
     88          
     89          IMAGEID location_image = NOIMAGE;
     90          int imageWidth = 0;
     91          int imageHeight = 0;
     92          
     93          int wnd = 0x06;

   \                                 In segment DATA_C, align 4, align-sorted
     94          const int items[10] = {0x07, 0x06, 0x00, 0x09, 0x0D, 0x0B, 0x0C, 0x0F, 0x0E, 0x06};
   \                     items:
   \   00000000   070000000600       DC32 7, 6, 0, 9, 13, 11, 12, 15, 14, 6
   \              000000000000
   \              090000000D00
   \              00000B000000
   \              0C0000000F00
   \              00000E000000
   \              06000000    
   \   00000028   430061006E00       DC8 43H, 0, 61H, 0, 6EH, 0, 27H, 0
   \              2700        
   \   00000030   740020006C00       DC8 74H, 0, 20H, 0, 6CH, 0, 6FH, 0
   \              6F00        
   \   00000038   610064002000       DC8 61H, 0, 64H, 0, 20H, 0, 74H, 0
   \              7400        
   \   00000040   680065002000       DC8 68H, 0, 65H, 0, 20H, 0, 64H, 0
   \              6400        
   \   00000048   610074006100       DC8 61H, 0, 74H, 0, 61H, 0, 62H, 0
   \              6200        
   \   00000050   610073006500       DC8 61H, 0, 73H, 0, 65H, 0, 20H, 0
   \              2000        
   \   00000058   660069006C00       DC8 66H, 0, 69H, 0, 6CH, 0, 65H, 0
   \              6500        
   \   00000060   21000000           DC8 21H, 0, 0, 0
   \   00000064   49006E006300       DC8 49H, 0, 6EH, 0, 63H, 0, 6FH, 0
   \              6F00        
   \   0000006C   720072006500       DC8 72H, 0, 72H, 0, 65H, 0, 63H, 0
   \              6300        
   \   00000074   740020006300       DC8 74H, 0, 20H, 0, 63H, 0, 6FH, 0
   \              6F00        
   \   0000007C   640065002000       DC8 64H, 0, 65H, 0, 20H, 0, 6DH, 0
   \              6D00        
   \   00000084   610070002000       DC8 61H, 0, 70H, 0, 20H, 0, 61H, 0
   \              6100        
   \   0000008C   640064007200       DC8 64H, 0, 64H, 0, 72H, 0, 65H, 0
   \              6500        
   \   00000094   730073002100       DC8 73H, 0, 73H, 0, 21H, 0, 0, 0
   \              0000        
   \   0000009C   45006E006300       DC8 45H, 0, 6EH, 0, 63H, 0, 6FH, 0
   \              6F00        
   \   000000A4   640069006E00       DC8 64H, 0, 69H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   000000AC   200066006900       DC8 20H, 0, 66H, 0, 69H, 0, 6CH, 0
   \              6C00        
   \   000000B4   650020006E00       DC8 65H, 0, 20H, 0, 6EH, 0, 6FH, 0
   \              6F00        
   \   000000BC   740020006600       DC8 74H, 0, 20H, 0, 66H, 0, 6FH, 0
   \              6F00        
   \   000000C4   75006E006400       DC8 75H, 0, 6EH, 0, 64H, 0, 21H, 0
   \              2100        
   \   000000CC   0000               DC8 0, 0
   \   000000CE   0000               DC8 0, 0
   \   000000D0   410075007400       DC8 41H, 0, 75H, 0, 74H, 0, 6FH, 0
   \              6F00        
   \   000000D8   20006C006F00       DC8 20H, 0, 6CH, 0, 6FH, 0, 63H, 0
   \              6300        
   \   000000E0   610074006900       DC8 61H, 0, 74H, 0, 69H, 0, 6FH, 0
   \              6F00        
   \   000000E8   6E0020006900       DC8 6EH, 0, 20H, 0, 69H, 0, 63H, 0
   \              6300        
   \   000000F0   6F006E002000       DC8 6FH, 0, 6EH, 0, 20H, 0, 6EH, 0
   \              6E00        
   \   000000F8   6F0074002000       DC8 6FH, 0, 74H, 0, 20H, 0, 66H, 0
   \              6600        
   \   00000100   6F0075006E00       DC8 6FH, 0, 75H, 0, 6EH, 0, 64H, 0
   \              6400        
   \   00000108   21000000           DC8 21H, 0, 0, 0
     95          
     96          static char myappname[]=ELFNAME;
     97          
     98          const int *cfg_manual_profile[MAX_MANUAL_PROFILE_NUM] = {
     99            &cfg_manual_profile1, &cfg_manual_profile2,
    100            &cfg_manual_profile3, &cfg_manual_profile4,
    101            &cfg_manual_profile5, &cfg_manual_profile6,
    102            &cfg_manual_profile7
    103          };
    104          
    105          cfg_place_t cfg_place[MAX_PLACE_NUM] = {
    106            place(1),  place(2),  place(3),  place(4),
    107            place(5),  place(6),  place(7),  place(8),
    108            place(9),  place(10), place(11), place(12),
    109            place(13), place(14), place(15), place(16)
    110          };
    111          

   \                                 In segment CODE, align 4, keep-with-next
    112          int isImageViewerBook(BOOK * book)
    113          {
    114            if(!strcmp(book->xbook->name,"ImageViewerBook")) return(1);
   \                     ??isImageViewerBook:
   \   00000000   20109FE5           LDR      R1,??isImageViewerBook_1  ;; `?<Constant "ImageViewerBook">`
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   040090E5           LDR      R0,[R0, #+4]
   \   00000010   590100EF           SWI      +345
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   0080BD08           POPEQ    {PC}
    115            return(0);
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   0080BDE8           POP      {PC}             ;; return
   \                     ??isImageViewerBook_1:
   \   00000028   ........           DC32     `?<Constant "ImageViewerBook">`
    116          }
    117          

   \                                 In segment CODE, align 4, keep-with-next
    118          int myModifyUIHook(int event1 , int event2 , int (*PROC)(void *msg, BOOK * book, PAGE_DESC * page_desc, LPARAM ClientData, u16 event), int mode)
    119          {
   \                     ??myModifyUIHook:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   01C0A0E1           MOV      R12,R1
   \   00000008   0210A0E1           MOV      R1,R2
    120            if((event1) && (event1 != 0xFFFFFFFF)) return ModifyUIPageHook(event1, PROC, 0, mode);
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   01007013           CMNNE    R0,#+1
   \   00000014   0020A013           MOVNE    R2,#+0
    121            return ModifyUIPageHook(event2, PROC, 0, mode);
   \   00000018   0020A003           MOVEQ    R2,#+0
   \   0000001C   0C00A001           MOVEQ    R0,R12
   \   00000020   100100EF           SWI      +272
   \   00000024   0080BDE8           POP      {PC}             ;; return
    122          }
    123          

   \                                 In segment CODE, align 4, keep-with-next
    124          int load_encode_file()
    125          {
    126            int f;
    127            W_FSTAT _fstat;
    128          
    129            isUCodeFile = false;
   \                     ??load_encode_file:
   \   00000000   ........           LDR      R0,??DataTable44  ;; timer_disable
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   28D04DE2           SUB      SP,SP,#+40
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   7412C0E5           STRB     R1,[R0, #+628]
    130            getdir(tmpname, cfg_encode_file);
   \   00000014   7810A0E3           MOV      R1,#+120
   \   00000018   441D81E3           ORR      R1,R1,#0x1100
   \   0000001C   004081E0           ADD      R4,R1,R0
   \   00000020   B4109FE5           LDR      R1,??load_encode_file_1  ;; cfg_encode_file
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           _BLF     ??getdir,??getdir??rA
    131            if(w_fstat(tmpname, &_fstat) == 0)
   \   0000002C   0D10A0E1           MOV      R1,SP
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   F90200EF           SWI      +761
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   2200001A           BNE      ??load_encode_file_2
    132            {
    133              if( ((f = w_fopen(tmpname, WA_Read, 0x1FF, NULL)) >= 0) && _fstat.st_size == 512 )
   \   00000040   ........           LDR      R0,??DataTable13  ;; timer_disable + 4472
   \   00000044   0030A0E3           MOV      R3,#+0
   \   00000048   FF20A0E3           MOV      R2,#+255
   \   0000004C   402F82E3           ORR      R2,R2,#0x100
   \   00000050   0110A0E3           MOV      R1,#+1
   \   00000054   F80200EF           SWI      +760
   \   00000058   0040B0E1           MOVS     R4,R0
   \   0000005C   1800004A           BMI      ??load_encode_file_3
   \   00000060   18009DE5           LDR      R0,[SP, #+24]
   \   00000064   800F50E3           CMP      R0,#+512
   \   00000068   1500001A           BNE      ??load_encode_file_3
    134              {
    135                char*buf=(char*)malloc(512);
   \   0000006C   030100EF           SWI      +259
   \   00000070   0050A0E1           MOV      R5,R0
    136                w_fread(f, buf, 512);
   \   00000074   802FA0E3           MOV      R2,#+512
   \   00000078   0510A0E1           MOV      R1,R5
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   FB0200EF           SWI      +763
    137                for(int i=0; i<256; i++)
   \   00000084   0000A0E3           MOV      R0,#+0
    138                {
    139                  encode_buf[i] = (buf[2 * i] << 8)  | buf[2 * i + 1];
   \                     ??load_encode_file_4:
   \   00000088   ........           LDR      R2,??DataTable44  ;; timer_disable
   \   0000008C   801085E0           ADD      R1,R5,R0, LSL #+1
   \   00000090   0030D1E5           LDRB     R3,[R1, #+0]
   \   00000094   0110D1E5           LDRB     R1,[R1, #+1]
   \   00000098   802082E0           ADD      R2,R2,R0, LSL #+1
    140                }
   \   0000009C   010080E2           ADD      R0,R0,#+1
   \   000000A0   031481E1           ORR      R1,R1,R3, LSL #+8
   \   000000A4   B411C2E1           STRH     R1,[R2, #+20]
   \   000000A8   400F50E3           CMP      R0,#+256
   \   000000AC   F5FFFFBA           BLT      ??load_encode_file_4
    141                mfree(buf);
   \   000000B0   0500A0E1           MOV      R0,R5
   \   000000B4   040100EF           SWI      +260
    142                isUCodeFile=true;
   \   000000B8   ........           LDR      R0,??DataTable42  ;; timer_disable + 628
   \   000000BC   0110A0E3           MOV      R1,#+1
   \   000000C0   0010C0E5           STRB     R1,[R0, #+0]
    143              }
    144              w_fclose(f);
   \                     ??load_encode_file_3:
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   FD0200EF           SWI      +765
    145            }
    146            return isUCodeFile;
   \                     ??load_encode_file_2:
   \   000000CC   ........           LDR      R0,??DataTable42  ;; timer_disable + 628
   \   000000D0   0000D0E5           LDRB     R0,[R0, #+0]
   \   000000D4   28D08DE2           ADD      SP,SP,#+40
   \   000000D8   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??load_encode_file_1:
   \   000000DC   ........           DC32     cfg_encode_file
    147          }
    148          

   \                                 In segment CODE, align 4, keep-with-next
    149          wchar_t *char2unicode(wchar_t *ws, char *s, int len)
    150          {
   \                     ??char2unicode:
   \   00000000   10002DE9           PUSH     {R4}
    151            int c;
    152            wchar_t *ws_ret = ws;
   \   00000004   0030A0E1           MOV      R3,R0
   \   00000008   080000EA           B        ??char2unicode_1
    153            while((c = *s++) && ((len--) > 0))
    154            {
    155              if (c == 0x7E) c = 0x0A;
    156              if (isUCodeFile) c = encode_buf[c];
   \                     ??char2unicode_2:
   \   0000000C   ........           LDR      R4,??DataTable42  ;; timer_disable + 628
   \   00000010   7E005CE3           CMP      R12,#+126
   \   00000014   0040D4E5           LDRB     R4,[R4, #+0]
   \   00000018   0AC0A003           MOVEQ    R12,#+10
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   ........           LDRNE    R4,??DataTable44  ;; timer_disable
   \   00000024   8C408410           ADDNE    R4,R4,R12, LSL #+1
   \   00000028   B4C1D411           LDRHNE   R12,[R4, #+20]
    157              *ws++ = c;
   \   0000002C   ........           STRH     R12,[R0], #+2
    158            }
   \                     ??char2unicode_1:
   \   00000030   ........           LDRB     R12,[R1], #+1
   \   00000034   00005CE3           CMP      R12,#+0
   \   00000038   0300000A           BEQ      ??char2unicode_3
   \   0000003C   0240A0E1           MOV      R4,R2
   \   00000040   012044E2           SUB      R2,R4,#+1
   \   00000044   010054E3           CMP      R4,#+1
   \   00000048   EFFFFFAA           BGE      ??char2unicode_2
    159            *ws=0;
   \                     ??char2unicode_3:
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   B010C0E1           STRH     R1,[R0, #+0]
    160            return ws_ret;
   \   00000054   1000BDE8           POP      {R4}
   \   00000058   0300A0E1           MOV      R0,R3
   \   0000005C   1EFF2FE1           BX       LR               ;; return
    161          }
    162          

   \                                 In segment CODE, align 4, keep-with-next
    163          char w2c(wchar_t s)
    164          {
    165            if (isUCodeFile)
   \                     ??w2c:
   \   00000000   ........           LDR      R1,??DataTable42  ;; timer_disable + 628
   \   00000004   0010D1E5           LDRB     R1,[R1, #+0]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0E00000A           BEQ      ??w2c_1
    166            {
    167              for(char i=0; i<256; i++)
   \   00000010   3C209FE5           LDR      R2,??w2c_2       ;; timer_disable + 20
   \   00000014   ........           LDR      R3,??DataTable44  ;; timer_disable
   \   00000018   B020D2E1           LDRH     R2,[R2, #+0]
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   000052E1           CMP      R2,R0
   \   00000024   0200001A           BNE      ??w2c_3
   \   00000028   050000EA           B        ??w2c_4
   \                     ??w2c_5:
   \   0000002C   011081E2           ADD      R1,R1,#+1
   \   00000030   FF1001E2           AND      R1,R1,#0xFF
    168              {
    169                if(encode_buf[i] == s) return i;
   \                     ??w2c_3:
   \   00000034   812083E0           ADD      R2,R3,R1, LSL #+1
   \   00000038   B421D2E1           LDRH     R2,[R2, #+20]
   \   0000003C   000052E1           CMP      R2,R0
   \   00000040   F9FFFF1A           BNE      ??w2c_5
   \                     ??w2c_4:
   \   00000044   0100A0E1           MOV      R0,R1
   \   00000048   1EFF2FE1           BX       LR
    170              }
    171            }
    172            return s;
   \                     ??w2c_1:
   \   0000004C   FF0000E2           AND      R0,R0,#0xFF
   \   00000050   1EFF2FE1           BX       LR               ;; return
   \                     ??w2c_2:
   \   00000054   ........           DC32     timer_disable + 20
    173          }
    174          

   \                                 In segment CODE, align 4, keep-with-next
    175          char *unicode2char(char *s, wchar_t *ws, int len)
    176          {
   \                     ??unicode2char:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
    177            wchar_t x;
    178            char *s_ret = s;
   \   00000010   0470A0E1           MOV      R7,R4
   \   00000014   010000EA           B        ??unicode2char_1
    179            while((x = *ws++) && ((len--) > 0))
    180            {
    181              *s++ = w2c(x);
   \                     ??unicode2char_2:
   \   00000018   ........           BL       ??w2c
   \   0000001C   ........           STRB     R0,[R4], #+1
    182            }
   \                     ??unicode2char_1:
   \   00000020   ........           LDRH     R1,[R5], #+2
   \   00000024   0100B0E1           MOVS     R0,R1
   \   00000028   0300000A           BEQ      ??unicode2char_3
   \   0000002C   0610A0E1           MOV      R1,R6
   \   00000030   016041E2           SUB      R6,R1,#+1
   \   00000034   010051E3           CMP      R1,#+1
   \   00000038   F6FFFFAA           BGE      ??unicode2char_2
    183            *s=0;
   \                     ??unicode2char_3:
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   0000C4E5           STRB     R0,[R4, #+0]
    184            return s_ret;
   \   00000044   0700A0E1           MOV      R0,R7
   \   00000048   F080BDE8           POP      {R4-R7,PC}       ;; return
    185          }
    186          

   \                                 In segment CODE, align 4, keep-with-next
    187          void gb2un(wchar_t *des, char *sou, int len)
    188          {
   \                     ??gb2un:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
    189            size_t i = 0;
    190            size_t j = 0;
    191            unsigned char *sour = (unsigned char *)sou;
    192            SWAP_T a;
    193            int sou_len = strlen(sou);
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   5A0100EF           SWI      +346
   \   0000001C   0070A0E3           MOV      R7,#+0
   \   00000020   0080A0E3           MOV      R8,#+0
   \   00000024   030000EA           B        ??gb2un_1
    194            while((i < sou_len) && ((len--) > 0))
    195            {
    196              if(sour[i] < 0x80)
    197              {
    198                des[j] = sour[i];
    199                i++;
    200              }
    201              else if((sour[i] > 0x80) || (sour[i] == 0x80 && sour[i+1] >= 0x41))
    202              {
    203                a.low = sour[i];
    204                a.high = sour[i + 1];
    205                long tmp = a.data - BASE_CODE;
    206                des[j] = *((wchar_t *)CODEMAP_ADDR + tmp);
    207                i += 2;
    208              }
    209              else
    210              {
    211                des[j] = '?';
   \                     ??gb2un_2:
   \   00000028   881084E0           ADD      R1,R4,R8, LSL #+1
   \   0000002C   3F20A0E3           MOV      R2,#+63
   \                     ??gb2un_3:
   \   00000030   B020C1E1           STRH     R2,[R1, #+0]
    212          
    213              }
    214              j++;
   \   00000034   018088E2           ADD      R8,R8,#+1
   \                     ??gb2un_1:
   \   00000038   000057E1           CMP      R7,R0
   \   0000003C   2000002A           BCS      ??gb2un_4
   \   00000040   0610A0E1           MOV      R1,R6
   \   00000044   016041E2           SUB      R6,R1,#+1
   \   00000048   010051E3           CMP      R1,#+1
   \   0000004C   1C0000BA           BLT      ??gb2un_4
   \   00000050   0510D7E7           LDRB     R1,[R7, +R5]
   \   00000054   800051E3           CMP      R1,#+128
   \   00000058   0300002A           BCS      ??gb2un_5
   \   0000005C   0520D7E7           LDRB     R2,[R7, +R5]
   \   00000060   881084E0           ADD      R1,R4,R8, LSL #+1
   \   00000064   017087E2           ADD      R7,R7,#+1
   \   00000068   F0FFFFEA           B        ??gb2un_3
   \                     ??gb2un_5:
   \   0000006C   810051E3           CMP      R1,#+129
   \   00000070   0500002A           BCS      ??gb2un_6
   \   00000074   800051E3           CMP      R1,#+128
   \   00000078   EAFFFF1A           BNE      ??gb2un_2
   \   0000007C   051087E0           ADD      R1,R7,R5
   \   00000080   0110D1E5           LDRB     R1,[R1, #+1]
   \   00000084   410051E3           CMP      R1,#+65
   \   00000088   E6FFFF3A           BCC      ??gb2un_2
   \                     ??gb2un_6:
   \   0000008C   40209FE5           LDR      R2,??gb2un_7     ;; 0xfffffffffffefd80
   \   00000090   ........           LDR      R12,??DataTable10  ;; timer_disable + 600
   \   00000094   051087E0           ADD      R1,R7,R5
   \   00000098   0030D1E5           LDRB     R3,[R1, #+0]
   \   0000009C   027087E2           ADD      R7,R7,#+2
   \   000000A0   0130CDE5           STRB     R3,[SP, #+1]
   \   000000A4   0110D1E5           LDRB     R1,[R1, #+1]
   \   000000A8   0010CDE5           STRB     R1,[SP, #+0]
   \   000000AC   B030DDE1           LDRH     R3,[SP, #+0]
   \   000000B0   00C09CE5           LDR      R12,[R12, #+0]
   \   000000B4   881084E0           ADD      R1,R4,R8, LSL #+1
   \   000000B8   83308CE0           ADD      R3,R12,R3, LSL #+1
   \   000000BC   B32092E1           LDRH     R2,[R2, +R3]
   \   000000C0   DAFFFFEA           B        ??gb2un_3
    215            }
    216            des[j] = 0;
   \                     ??gb2un_4:
   \   000000C4   880084E0           ADD      R0,R4,R8, LSL #+1
   \   000000C8   0010A0E3           MOV      R1,#+0
   \   000000CC   B010C0E1           STRH     R1,[R0, #+0]
    217          }
   \   000000D0   F181BDE8           POP      {R0,R4-R8,PC}    ;; return
   \                     ??gb2un_7:
   \   000000D4   80FDFEFF           DC32     0xfffffffffffefd80
    218          

   \                                 In segment CODE, align 4, keep-with-next
    219          void un2gb(char *des, wchar_t *sou, int len)
    220          {
   \                     ??un2gb:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0160A0E1           MOV      R6,R1
   \   00000010   0270A0E1           MOV      R7,R2
    221            int i;
    222            int j = 0;
   \   00000014   0050A0E3           MOV      R5,#+0
    223            SWAP_T a;
    224            int sou_len = wstrlen(sou);
   \   00000018   0600A0E1           MOV      R0,R6
   \   0000001C   570100EF           SWI      +343
    225            if(sou_len > len) sou_len = len;
   \   00000020   000057E1           CMP      R7,R0
   \   00000024   0700A0B1           MOVLT    R0,R7
    226          
    227            for(i = 0; i < sou_len; i++)
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   010050E3           CMP      R0,#+1
   \   00000030   060000AA           BGE      ??un2gb_1
    228            {
    229              if(*(sou + i) <= 0x80)
    230              {
    231                des[j] = sou[i];
    232                j++;
    233              }
    234              /*
    235              else if(*(sou + i) == 0x3000)
    236              {
    237                des[j] = 0xA1;
    238                des[j + 1] = 0xA1;
    239                j += 2;
    240              }
    241              */
    242              else if(*(sou + i) >= BASE_MIN)
    243              {
    244                int k = 0;
    245                a.data = *(sou + i);
    246                while(k <= BASE_LEN)
    247                {
    248                  if(*((wchar_t*)CODEMAP_ADDR + k) == a.data)
    249                  {
    250                    a.data = k + BASE_CODE;
    251                    des[j] = a.low;
    252                    des[j + 1] = a.high;
    253                    j += 2;
    254                    break;
    255                  }
    256                  k++;
    257                }
    258              }
    259              else
    260              {
    261                des[j] = '?';
    262                j++;
    263              }
    264            }
    265            des[j] = 0;
   \                     ??un2gb_2:
   \   00000034   0000A0E3           MOV      R0,#+0
   \   00000038   0400C5E7           STRB     R0,[R5, +R4]
    266          }
   \   0000003C   F180BDE8           POP      {R0,R4-R7,PC}    ;; return
   \                     ??un2gb_3:
   \   00000040   3F20A0E3           MOV      R2,#+63
   \                     ??un2gb_4:
   \   00000044   0420C5E7           STRB     R2,[R5, +R4]
   \   00000048   015085E2           ADD      R5,R5,#+1
   \                     ??un2gb_5:
   \   0000004C   011081E2           ADD      R1,R1,#+1
   \                     ??un2gb_1:
   \   00000050   000051E1           CMP      R1,R0
   \   00000054   F6FFFFAA           BGE      ??un2gb_2
   \   00000058   812086E0           ADD      R2,R6,R1, LSL #+1
   \   0000005C   B020D2E1           LDRH     R2,[R2, #+0]
   \   00000060   810052E3           CMP      R2,#+129
   \   00000064   812086E0           ADD      R2,R6,R1, LSL #+1
   \   00000068   B020D2E1           LDRH     R2,[R2, #+0]
   \   0000006C   F4FFFF3A           BCC      ??un2gb_4
   \   00000070   BA0D52E3           CMP      R2,#+11904
   \   00000074   F1FFFF3A           BCC      ??un2gb_3
   \   00000078   817086E0           ADD      R7,R6,R1, LSL #+1
   \   0000007C   B070D7E1           LDRH     R7,[R7, #+0]
   \   00000080   0020A0E3           MOV      R2,#+0
   \   00000084   B070CDE1           STRH     R7,[SP, #+0]
   \   00000088   040000EA           B        ??un2gb_6
   \                     ??un2gb_7:
   \   0000008C   012082E2           ADD      R2,R2,#+1
   \   00000090   6130A0E3           MOV      R3,#+97
   \   00000094   7D3C83E3           ORR      R3,R3,#0x7D00
   \   00000098   030052E1           CMP      R2,R3
   \   0000009C   EAFFFFAA           BGE      ??un2gb_5
   \                     ??un2gb_6:
   \   000000A0   ........           LDR      R3,??DataTable10  ;; timer_disable + 600
   \   000000A4   003093E5           LDR      R3,[R3, #+0]
   \   000000A8   823083E0           ADD      R3,R3,R2, LSL #+1
   \   000000AC   B030D3E1           LDRH     R3,[R3, #+0]
   \   000000B0   070053E1           CMP      R3,R7
   \   000000B4   F4FFFF1A           BNE      ??un2gb_7
   \   000000B8   4070A0E3           MOV      R7,#+64
   \   000000BC   817C87E3           ORR      R7,R7,#0x8100
   \   000000C0   022087E0           ADD      R2,R7,R2
   \   000000C4   B020CDE1           STRH     R2,[SP, #+0]
   \   000000C8   0120DDE5           LDRB     R2,[SP, #+1]
   \   000000CC   0420C5E7           STRB     R2,[R5, +R4]
   \   000000D0   0030DDE5           LDRB     R3,[SP, #+0]
   \   000000D4   042085E0           ADD      R2,R5,R4
   \   000000D8   025085E2           ADD      R5,R5,#+2
   \   000000DC   0130C2E5           STRB     R3,[R2, #+1]
   \   000000E0   D9FFFFEA           B        ??un2gb_5
    267          

   \                                 In segment CODE, align 4, keep-with-next
    268          void DrawHighlightID(int Font,int StrID,int CEN, int XPos, int YPos, int MaxXPos, int MaxYPos, int borderColor, int NormalColor)
    269          {
   \                     ??DrawHighlightID:
   \   00000000   F84F2DE9           PUSH     {R3-R11,LR}
   \   00000004   28609DE5           LDR      R6,[SP, #+40]
   \   00000008   2C709DE5           LDR      R7,[SP, #+44]
   \   0000000C   30809DE5           LDR      R8,[SP, #+48]
   \   00000010   34909DE5           LDR      R9,[SP, #+52]
   \   00000014   0140A0E1           MOV      R4,R1
   \   00000018   0250A0E1           MOV      R5,R2
    270               SetFont(Font);
   \   0000001C   F10100EF           SWI      +497
    271               if(cfg_highlight)
   \   00000020   60019FE5           LDR      R0,??DrawHighlightID_1  ;; cfg_highlight
   \   00000024   000090E5           LDR      R0,[R0, #+0]
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   4500000A           BEQ      ??DrawHighlightID_2
    272               {
    273                   DrawString(StrID,CEN,XPos-1,YPos-1,MaxXPos-1,MaxYPos,0,1,borderColor,borderColor);
   \   00000030   00009DE5           LDR      R0,[SP, #+0]
   \   00000034   01B047E2           SUB      R11,R7,#+1
   \   00000038   01A040E2           SUB      R10,R0,#+1
   \   0000003C   0900A0E1           MOV      R0,R9
   \   00000040   01002DE9           PUSH     {R0}
   \   00000044   01002DE9           PUSH     {R0}
   \   00000048   013046E2           SUB      R3,R6,#+1
   \   0000004C   0A20A0E1           MOV      R2,R10
   \   00000050   0510A0E1           MOV      R1,R5
   \   00000054   0100A0E3           MOV      R0,#+1
   \   00000058   01002DE9           PUSH     {R0}
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   01002DE9           PUSH     {R0}
   \   00000064   0800A0E1           MOV      R0,R8
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   0B00A0E1           MOV      R0,R11
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   ED0100EF           SWI      +493
   \   0000007C   0900A0E1           MOV      R0,R9
   \   00000080   01002DE9           PUSH     {R0}
   \   00000084   01002DE9           PUSH     {R0}
   \   00000088   013086E2           ADD      R3,R6,#+1
   \   0000008C   0A20A0E1           MOV      R2,R10
   \   00000090   0510A0E1           MOV      R1,R5
   \   00000094   0100A0E3           MOV      R0,#+1
   \   00000098   01002DE9           PUSH     {R0}
   \   0000009C   0000A0E3           MOV      R0,#+0
   \   000000A0   01002DE9           PUSH     {R0}
   \   000000A4   0800A0E1           MOV      R0,R8
   \   000000A8   01002DE9           PUSH     {R0}
   \   000000AC   00082DE9           PUSH     {R11}
   \   000000B0   0400A0E1           MOV      R0,R4
    274                   DrawString(StrID,CEN,XPos-1,YPos+1,MaxXPos-1,MaxYPos,0,1,borderColor,borderColor);
   \   000000B4   ED0100EF           SWI      +493
   \   000000B8   30D08DE2           ADD      SP,SP,#+48
    275                   DrawString(StrID,CEN,XPos+1,YPos-1,MaxXPos+1,MaxYPos,0,1,borderColor,borderColor);
   \   000000BC   00009DE5           LDR      R0,[SP, #+0]
   \   000000C0   01B087E2           ADD      R11,R7,#+1
   \   000000C4   01A080E2           ADD      R10,R0,#+1
   \   000000C8   0900A0E1           MOV      R0,R9
   \   000000CC   01002DE9           PUSH     {R0}
   \   000000D0   01002DE9           PUSH     {R0}
   \   000000D4   013046E2           SUB      R3,R6,#+1
   \   000000D8   0A20A0E1           MOV      R2,R10
   \   000000DC   0510A0E1           MOV      R1,R5
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   01002DE9           PUSH     {R0}
   \   000000E8   0000A0E3           MOV      R0,#+0
   \   000000EC   01002DE9           PUSH     {R0}
   \   000000F0   0800A0E1           MOV      R0,R8
   \   000000F4   01002DE9           PUSH     {R0}
   \   000000F8   0B00A0E1           MOV      R0,R11
   \   000000FC   01002DE9           PUSH     {R0}
   \   00000100   0400A0E1           MOV      R0,R4
   \   00000104   ED0100EF           SWI      +493
    276                   DrawString(StrID,CEN,XPos+1,YPos+1,MaxXPos+1,MaxYPos,0,1,borderColor,borderColor);
   \   00000108   0900A0E1           MOV      R0,R9
   \   0000010C   01002DE9           PUSH     {R0}
   \   00000110   00022DE9           PUSH     {R9}
   \   00000114   013086E2           ADD      R3,R6,#+1
   \   00000118   0100A0E3           MOV      R0,#+1
   \   0000011C   01002DE9           PUSH     {R0}
   \   00000120   0A20A0E1           MOV      R2,R10
   \   00000124   0510A0E1           MOV      R1,R5
   \   00000128   0000A0E3           MOV      R0,#+0
   \   0000012C   01002DE9           PUSH     {R0}
   \   00000130   0800A0E1           MOV      R0,R8
   \   00000134   01002DE9           PUSH     {R0}
   \   00000138   00082DE9           PUSH     {R11}
   \   0000013C   0400A0E1           MOV      R0,R4
   \   00000140   ED0100EF           SWI      +493
   \   00000144   30D08DE2           ADD      SP,SP,#+48
    277               }
    278               DrawString(StrID,CEN,XPos,YPos,MaxXPos,MaxYPos,0,1,NormalColor,NormalColor);
   \                     ??DrawHighlightID_2:
   \   00000148   38009DE5           LDR      R0,[SP, #+56]
   \   0000014C   0630A0E1           MOV      R3,R6
   \   00000150   01002DE9           PUSH     {R0}
   \   00000154   01002DE9           PUSH     {R0}
   \   00000158   0510A0E1           MOV      R1,R5
   \   0000015C   0100A0E3           MOV      R0,#+1
   \   00000160   01002DE9           PUSH     {R0}
   \   00000164   0000A0E3           MOV      R0,#+0
   \   00000168   01002DE9           PUSH     {R0}
   \   0000016C   00012DE9           PUSH     {R8}
   \   00000170   80002DE9           PUSH     {R7}
   \   00000174   18209DE5           LDR      R2,[SP, #+24]
   \   00000178   0400A0E1           MOV      R0,R4
   \   0000017C   ED0100EF           SWI      +493
    279          }
   \   00000180   1CD08DE2           ADD      SP,SP,#+28
   \   00000184   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??DrawHighlightID_1:
   \   00000188   ........           DC32     cfg_highlight
    280          

   \                                 In segment CODE, align 4, keep-with-next
    281          char *load_db_file()
    282          {
    283            int f;
    284            W_FSTAT _fstat;
    285            getdir(tmpname, cfg_location_file);
   \                     ??load_db_file:
   \   00000000   ........           LDR      R0,??DataTable44  ;; timer_disable
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   28D04DE2           SUB      SP,SP,#+40
   \   0000000C   7810A0E3           MOV      R1,#+120
   \   00000010   441D81E3           ORR      R1,R1,#0x1100
   \   00000014   004081E0           ADD      R4,R1,R0
   \   00000018   ........           LDR      R1,??DataTable21  ;; cfg_location_file
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           _BLF     ??getdir,??getdir??rA
    286            if (w_fstat(tmpname, &_fstat) == 0) {
   \   00000024   0D10A0E1           MOV      R1,SP
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   F90200EF           SWI      +761
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   2000001A           BNE      ??load_db_file_1
    287              if ((f = w_fopen(tmpname, WA_Read, 0x1FF, NULL)) >= 0) {
   \   00000038   ........           LDR      R0,??DataTable13  ;; timer_disable + 4472
   \   0000003C   0030A0E3           MOV      R3,#+0
   \   00000040   FF20A0E3           MOV      R2,#+255
   \   00000044   402F82E3           ORR      R2,R2,#0x100
   \   00000048   0110A0E3           MOV      R1,#+1
   \   0000004C   F80200EF           SWI      +760
   \   00000050   0040B0E1           MOVS     R4,R0
   \   00000054   1800004A           BMI      ??load_db_file_1
    288                char * buffer = new char[_fstat.st_size + 1];
   \   00000058   18009DE5           LDR      R0,[SP, #+24]
   \   0000005C   010080E2           ADD      R0,R0,#+1
   \   00000060   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   00000064   0050B0E1           MOVS     R5,R0
    289                if(buffer) {
   \   00000068   1300000A           BEQ      ??load_db_file_1
    290                  buffer[w_fread(f, buffer, _fstat.st_size)] = 0;
   \   0000006C   18209DE5           LDR      R2,[SP, #+24]
   \   00000070   0510A0E1           MOV      R1,R5
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   FB0200EF           SWI      +763
   \   0000007C   0010A0E3           MOV      R1,#+0
   \   00000080   0510C0E7           STRB     R1,[R0, +R5]
    291                  w_fclose(f);
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   FD0200EF           SWI      +765
    292                  if(db_buf) delete(db_buf);
   \   0000008C   ........           LDR      R0,??DataTable85  ;; timer_disable + 604
   \   00000090   000090E5           LDR      R0,[R0, #+0]
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   0200000A           BEQ      ??load_db_file_2
   \   0000009C   ........           LDR      R0,??DataTable85  ;; timer_disable + 604
   \   000000A0   000090E5           LDR      R0,[R0, #+0]
   \   000000A4   ........           _BLF     `??operator delete`,`??operator delete??rA`
    293                  db_buf = buffer;
   \                     ??load_db_file_2:
   \   000000A8   ........           LDR      R0,??DataTable44  ;; timer_disable
   \   000000AC   5C5280E5           STR      R5,[R0, #+604]
    294                  return db_buf;
   \   000000B0   0500A0E1           MOV      R0,R5
   \   000000B4   28D08DE2           ADD      SP,SP,#+40
   \   000000B8   3080BDE8           POP      {R4,R5,PC}
    295                }
    296              }
    297            }
    298          
    299            if(db_buf) delete(db_buf);
   \                     ??load_db_file_1:
   \   000000BC   ........           LDR      R0,??DataTable85  ;; timer_disable + 604
   \   000000C0   000090E5           LDR      R0,[R0, #+0]
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   0200000A           BEQ      ??load_db_file_3
   \   000000CC   ........           LDR      R0,??DataTable85  ;; timer_disable + 604
   \   000000D0   000090E5           LDR      R0,[R0, #+0]
   \   000000D4   ........           _BLF     `??operator delete`,`??operator delete??rA`
    300            db_buf = 0;
   \                     ??load_db_file_3:
   \   000000D8   ........           LDR      R0,??DataTable85  ;; timer_disable + 604
   \   000000DC   0010A0E3           MOV      R1,#+0
   \   000000E0   001080E5           STR      R1,[R0, #+0]
    301            return db_buf;
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   28D08DE2           ADD      SP,SP,#+40
   \   000000EC   3080BDE8           POP      {R4,R5,PC}       ;; return
    302          }
    303          

   \                                 In segment CODE, align 4, keep-with-next
    304          int AddTo_db()
    305          {
    306            int status = 0;
    307            int f;
    308          
    309            getdir(tmpname, cfg_location_file);
   \                     ??AddTo_db:
   \   00000000   ........           LDR      R0,??DataTable44  ;; timer_disable
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   7810A0E3           MOV      R1,#+120
   \   0000000C   441D81E3           ORR      R1,R1,#0x1100
   \   00000010   0050A0E3           MOV      R5,#+0
   \   00000014   004081E0           ADD      R4,R1,R0
   \   00000018   ........           LDR      R1,??DataTable21  ;; cfg_location_file
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           _BLF     ??getdir,??getdir??rA
    310            if ((f = w_fopen(tmpname, WA_Append, 0x1FF, NULL)) >= 0)
   \   00000024   0030A0E3           MOV      R3,#+0
   \   00000028   FF20A0E3           MOV      R2,#+255
   \   0000002C   402F82E3           ORR      R2,R2,#0x100
   \   00000030   0410A0E3           MOV      R1,#+4
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   F80200EF           SWI      +760
   \   0000003C   0040B0E1           MOVS     R4,R0
   \   00000040   2A00004A           BMI      ??AddTo_db_1
    311            {
    312              if(cfg_cellidmode == 0){
   \   00000044   ........           LDR      R0,??DataTable83  ;; cfg_cellidmode
   \   00000048   7810A0E3           MOV      R1,#+120
   \   0000004C   000090E5           LDR      R0,[R0, #+0]
   \   00000050   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   ........           LDR      R0,??DataTable44  ;; timer_disable
    313                snwprintf(wsnewdb, MAX_AUTOLOCATION_LEN - 1, L"[%04X:%04X]:%ls\r\n", currentLAC, currentCID, SIwstr);
   \   0000005C   C8209F05           LDREQ    R2,??AddTo_db_2  ;; `?<Constant L"\\x5b\\x25\\x30\\x35\\x64\\x3a\\x25\\x30\\` + 36
   \   00000060   001081E0           ADD      R1,R1,R0
    314              }
    315              else {
    316                snwprintf(wsnewdb, MAX_AUTOLOCATION_LEN - 1, L"[%05d:%05d]:%ls\r\n", currentLAC, currentCID, SIwstr);
   \   00000064   C4209F15           LDRNE    R2,??AddTo_db_2+0x4  ;; `?<Constant L"\\x5b\\x25\\x30\\x35\\x64\\x3a\\x25\\x30\\`
   \   00000068   02002DE9           PUSH     {R1}
   \   0000006C   B410D0E1           LDRH     R1,[R0, #+4]
   \   00000070   3850A0E3           MOV      R5,#+56
   \   00000074   505D85E3           ORR      R5,R5,#0x1400
   \   00000078   02002DE9           PUSH     {R1}
   \   0000007C   B230D0E1           LDRH     R3,[R0, #+2]
   \   00000080   000085E0           ADD      R0,R5,R0
   \   00000084   5F10A0E3           MOV      R1,#+95
   \   00000088   150100EF           SWI      +277
    317              }
    318              if(encode_type == 0)
   \   0000008C   ........           LDR      R0,??DataTable45  ;; timer_disable + 596
   \   00000090   08D08DE2           ADD      SP,SP,#+8
   \   00000094   000090E5           LDR      R0,[R0, #+0]
   \   00000098   5F20A0E3           MOV      R2,#+95
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   ........           LDR      R0,??DataTable44  ;; timer_disable
   \   000000A4   C03085E3           ORR      R3,R5,#0xC0
   \   000000A8   001085E0           ADD      R1,R5,R0
   \   000000AC   000083E0           ADD      R0,R3,R0
   \   000000B0   0100001A           BNE      ??AddTo_db_3
    319              {
    320                unicode2char(snewdb, wsnewdb, MAX_AUTOLOCATION_LEN - 1);
   \   000000B4   ........           BL       ??unicode2char
   \   000000B8   000000EA           B        ??AddTo_db_4
    321              }
    322              else
    323              {
    324                un2gb(snewdb, wsnewdb, MAX_AUTOLOCATION_LEN - 1);
   \                     ??AddTo_db_3:
   \   000000BC   ........           BL       ??un2gb
    325              }
    326              w_fwrite(f, snewdb, strlen(snewdb));
   \                     ??AddTo_db_4:
   \   000000C0   ........           LDR      R0,??DataTable44  ;; timer_disable
   \   000000C4   C01085E3           ORR      R1,R5,#0xC0
   \   000000C8   005081E0           ADD      R5,R1,R0
   \   000000CC   0500A0E1           MOV      R0,R5
   \   000000D0   5A0100EF           SWI      +346
   \   000000D4   0020A0E1           MOV      R2,R0
   \   000000D8   0510A0E1           MOV      R1,R5
   \   000000DC   0400A0E1           MOV      R0,R4
   \   000000E0   FA0200EF           SWI      +762
    327              w_fclose(f);
   \   000000E4   0400A0E1           MOV      R0,R4
   \   000000E8   FD0200EF           SWI      +765
    328              status = 1;
   \   000000EC   0150A0E3           MOV      R5,#+1
    329            }
    330            load_db_file();
   \                     ??AddTo_db_1:
   \   000000F0   ........           BL       ??load_db_file
    331            if (!showCellID) wstrcpy(CellNameStatus, SIwstr);
   \   000000F4   ........           LDR      R0,??DataTable86  ;; timer_disable + 626
   \   000000F8   0000D0E5           LDRB     R0,[R0, #+0]
   \   000000FC   000050E3           CMP      R0,#+0
   \   00000100   0700001A           BNE      ??AddTo_db_5
   \   00000104   ........           LDR      R0,??DataTable44  ;; timer_disable
   \   00000108   7810A0E3           MOV      R1,#+120
   \   0000010C   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000110   001081E0           ADD      R1,R1,R0
   \   00000114   7820A0E3           MOV      R2,#+120
   \   00000118   D02E82E3           ORR      R2,R2,#0xD00
   \   0000011C   000082E0           ADD      R0,R2,R0
   \   00000120   520100EF           SWI      +338
    332            return status;
   \                     ??AddTo_db_5:
   \   00000124   0500A0E1           MOV      R0,R5
   \   00000128   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??AddTo_db_2:
   \   0000012C   ........           DC32     `?<Constant L"\\x5b\\x25\\x30\\x35\\x64\\x3a\\x25\\x30\\` + 36
   \   00000130   ........           DC32     `?<Constant L"\\x5b\\x25\\x30\\x35\\x64\\x3a\\x25\\x30\\`
    333          }
    334          

   \                                 In segment CODE, align 4, keep-with-next
    335          void vibrate(int mode)
    336          {
   \                     ??vibrate:
   \   00000000   00402DE9           PUSH     {LR}
    337            if (mode > 0) {
   \   00000004   010050E3           CMP      R0,#+1
   \   00000008   0080BDB8           POPLT    {PC}
    338              PAudioControl pAC = AudioControl_Init();
   \   0000000C   DF0100EF           SWI      +479
    339              if( !pAC ) pAC = *GetAudioControlPtr();
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100001A           BNE      ??vibrate_1
   \   00000018   D18100EF           SWI      +33233
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
    340              if (cfg_vibrate == 1) AudioControl_Vibrate(pAC, 70, 70, 350);
   \                     ??vibrate_1:
   \   00000020   ........           LDR      R1,??DataTable91  ;; cfg_vibrate
   \   00000024   001091E5           LDR      R1,[R1, #+0]
   \   00000028   010051E3           CMP      R1,#+1
   \   0000002C   0500001A           BNE      ??vibrate_2
   \   00000030   5E30A0E3           MOV      R3,#+94
   \   00000034   403F83E3           ORR      R3,R3,#0x100
   \   00000038   4620A0E3           MOV      R2,#+70
   \   0000003C   4610A0E3           MOV      R1,#+70
   \   00000040   D20100EF           SWI      +466
   \   00000044   0080BDE8           POP      {PC}
    341              if (cfg_vibrate == 2) AudioControl_Vibrate(pAC, 250, 0, 250);
   \                     ??vibrate_2:
   \   00000048   ........           LDR      R1,??DataTable91  ;; cfg_vibrate
   \   0000004C   001091E5           LDR      R1,[R1, #+0]
   \   00000050   020051E3           CMP      R1,#+2
   \   00000054   0300001A           BNE      ??vibrate_3
   \   00000058   FA30A0E3           MOV      R3,#+250
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   FA10A0E3           MOV      R1,#+250
   \   00000064   060000EA           B        ??vibrate_4
    342              if (cfg_vibrate == 3) AudioControl_Vibrate(pAC, 500, 0, 500);
   \                     ??vibrate_3:
   \   00000068   ........           LDR      R1,??DataTable91  ;; cfg_vibrate
   \   0000006C   001091E5           LDR      R1,[R1, #+0]
   \   00000070   030051E3           CMP      R1,#+3
   \   00000074   0080BD18           POPNE    {PC}
   \   00000078   7D3FA0E3           MOV      R3,#+500
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   7D1FA0E3           MOV      R1,#+500
   \                     ??vibrate_4:
   \   00000084   D20100EF           SWI      +466
    343            }
    344          }
   \   00000088   0080BDE8           POP      {PC}             ;; return
    345          

   \                                 In segment CODE, align 4, keep-with-next
    346          void GetLocationImage(wchar_t *path, wchar_t *name)
    347          {
    348            if(ImageID_Get(path,name,&location_image)<0)
   \                     ??GetLocationImage:
   \   00000000   ........           LDR      R2,??DataTable56  ;; timer_disable + 16
   \   00000004   70402DE9           PUSH     {R4-R6,LR}
   \   00000008   CC0200EF           SWI      +716
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0400005A           BPL      ??GetLocationImage_1
    349            {
    350              location_image = NOIMAGE;
   \   00000014   ........           LDR      R0,??DataTable56  ;; timer_disable + 16
   \   00000018   FF10A0E3           MOV      R1,#+255
   \   0000001C   FF1C81E3           ORR      R1,R1,#0xFF00
   \   00000020   B010C0E1           STRH     R1,[R0, #+0]
   \   00000024   7080BDE8           POP      {R4-R6,PC}
    351            }
    352            else
    353            {
    354              int Width  = GetImageWidth(location_image);
   \                     ??GetLocationImage_1:
   \   00000028   ........           LDR      R4,??DataTable44  ;; timer_disable
   \   0000002C   B001D4E1           LDRH     R0,[R4, #+16]
   \   00000030   930200EF           SWI      +659
   \   00000034   0050A0E1           MOV      R5,R0
    355              int Height = GetImageHeight(location_image);
   \   00000038   B001D4E1           LDRH     R0,[R4, #+16]
   \   0000003C   940200EF           SWI      +660
   \   00000040   0020A0E1           MOV      R2,R0
    356              int Width0  = cfg_location_image.x2 - cfg_location_image.x1;
   \   00000044   ........           LDR      R0,??DataTable58  ;; cfg_location_image
   \   00000048   B210D0E1           LDRH     R1,[R0, #+2]
   \   0000004C   B030D0E1           LDRH     R3,[R0, #+0]
   \   00000050   033041E0           SUB      R3,R1,R3
    357              int Height0 = cfg_location_image.y2 - cfg_location_image.y1;
   \   00000054   B610D0E1           LDRH     R1,[R0, #+6]
   \   00000058   B400D0E1           LDRH     R0,[R0, #+4]
   \   0000005C   006041E0           SUB      R6,R1,R0
    358              if((imageWidth = (Width * Height0) / Height) <= Width0)
   \   00000060   960500E0           MUL      R0,R6,R5
   \   00000064   0210A0E1           MOV      R1,R2
   \   00000068   ........           _BLF     ??div32_a,??rA??div32_a
   \   0000006C   010053E1           CMP      R3,R1
    359              {
    360                imageHeight = Height0;
   \   00000070   20009FA5           LDRGE    R0,??GetLocationImage_2  ;; timer_disable + 616
   \   00000074   641284E5           STR      R1,[R4, #+612]
   \   00000078   006080A5           STRGE    R6,[R0, #+0]
   \   0000007C   7080BDA8           POPGE    {R4-R6,PC}
    361              }
    362              else
    363              {
    364                imageWidth  = Width0;
   \   00000080   643284E5           STR      R3,[R4, #+612]
    365                imageHeight = (Height * Width0) / Width;
   \   00000084   930200E0           MUL      R0,R3,R2
   \   00000088   0510A0E1           MOV      R1,R5
   \   0000008C   ........           _BLF     ??div32_a,??rA??div32_a
   \   00000090   681284E5           STR      R1,[R4, #+616]
    366              }
    367            }
    368          }
   \   00000094   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??GetLocationImage_2:
   \   00000098   ........           DC32     timer_disable + 616
    369          

   \                                 In segment CODE, align 4, keep-with-next
    370          void UpdateLocationImage()
    371          {
   \                     ??UpdateLocationImage:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    372            FSTAT _fstat;
    373            imageWidth = imageHeight = 0;
   \   00000004   ........           LDR      R4,??DataTable44  ;; timer_disable
   \   00000008   1CD04DE2           SUB      SP,SP,#+28
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   680284E5           STR      R0,[R4, #+616]
   \   00000014   640284E5           STR      R0,[R4, #+612]
    374            if(location_image != NOIMAGE)
   \   00000018   B001D4E1           LDRH     R0,[R4, #+16]
   \   0000001C   FF10A0E3           MOV      R1,#+255
   \   00000020   FF1C81E3           ORR      R1,R1,#0xFF00
   \   00000024   010050E1           CMP      R0,R1
   \   00000028   0300000A           BEQ      ??UpdateLocationImage_1
    375            {
    376              ImageID_Free(location_image);
   \   0000002C   CD0200EF           SWI      +717
    377              location_image = NOIMAGE;
   \   00000030   FF00A0E3           MOV      R0,#+255
   \   00000034   FF0C80E3           ORR      R0,R0,#0xFF00
   \   00000038   B001C4E1           STRH     R0,[R4, #+16]
    378            }
    379          
    380            if(cfg_show_type & 2)
   \                     ??UpdateLocationImage_1:
   \   0000003C   ........           LDR      R0,??DataTable90  ;; cfg_show_type
   \   00000040   000090E5           LDR      R0,[R0, #+0]
   \   00000044   020010E3           TST      R0,#0x2
   \   00000048   2500000A           BEQ      ??UpdateLocationImage_2
    381            {
    382              getdir(tmppath, cfg_images_path);
   \   0000004C   98109FE5           LDR      R1,??UpdateLocationImage_3  ;; cfg_images_path
   \   00000050   7850A0E3           MOV      R5,#+120
   \   00000054   F05E85E3           ORR      R5,R5,#0xF00
   \   00000058   040085E0           ADD      R0,R5,R4
   \   0000005C   ........           _BLF     ??getdir,??getdir??rA
    383              wstrcpy(tmpname,CellName);
   \   00000060   800F85E2           ADD      R0,R5,#+512
   \   00000064   046080E0           ADD      R6,R0,R4
   \   00000068   C00E40E2           SUB      R0,R0,#+3072
   \   0000006C   041080E0           ADD      R1,R0,R4
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   520100EF           SWI      +338
    384              wstrcat(tmpname,L".png");
   \   00000078   70109FE5           LDR      R1,??UpdateLocationImage_3+0x4  ;; `?<Constant L"\\x2e\\x6a\\x70\\x67">` + 12
   \   0000007C   0600A0E1           MOV      R0,R6
   \   00000080   540100EF           SWI      +340
    385          
    386              if (fstat(tmppath,tmpname,&_fstat) == 0)
   \   00000084   0D20A0E1           MOV      R2,SP
   \   00000088   0610A0E1           MOV      R1,R6
   \   0000008C   040085E0           ADD      R0,R5,R4
   \   00000090   1C0100EF           SWI      +284
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   800F85E2           ADD      R0,R5,#+512
   \   0000009C   0D00000A           BEQ      ??UpdateLocationImage_4
    387              {
    388                GetLocationImage(tmppath,tmpname);
    389              }
    390              else
    391              {
    392                wstrcpy(tmpname,CellName);
   \   000000A0   C00E40E2           SUB      R0,R0,#+3072
   \   000000A4   041080E0           ADD      R1,R0,R4
   \   000000A8   0600A0E1           MOV      R0,R6
   \   000000AC   520100EF           SWI      +338
    393                wstrcat(tmpname,L".jpg");
   \   000000B0   3C109FE5           LDR      R1,??UpdateLocationImage_3+0x8  ;; `?<Constant L"\\x2e\\x6a\\x70\\x67">`
   \   000000B4   0600A0E1           MOV      R0,R6
   \   000000B8   540100EF           SWI      +340
    394                if (fstat(tmppath,tmpname,&_fstat) == 0)
   \   000000BC   0D20A0E1           MOV      R2,SP
   \   000000C0   0610A0E1           MOV      R1,R6
   \   000000C4   040085E0           ADD      R0,R5,R4
   \   000000C8   1C0100EF           SWI      +284
   \   000000CC   000050E3           CMP      R0,#+0
   \   000000D0   0300001A           BNE      ??UpdateLocationImage_2
    395                {
    396                  GetLocationImage(tmppath,tmpname);
   \   000000D4   800F85E2           ADD      R0,R5,#+512
   \                     ??UpdateLocationImage_4:
   \   000000D8   041080E0           ADD      R1,R0,R4
   \   000000DC   040085E0           ADD      R0,R5,R4
   \   000000E0   ........           BL       ??GetLocationImage
    397                }
    398              }
    399            }
    400          }
   \                     ??UpdateLocationImage_2:
   \   000000E4   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   000000E8   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??UpdateLocationImage_3:
   \   000000EC   ........           DC32     cfg_images_path
   \   000000F0   ........           DC32     `?<Constant L"\\x2e\\x6a\\x70\\x67">` + 12
   \   000000F4   ........           DC32     `?<Constant L"\\x2e\\x6a\\x70\\x67">`
    401          

   \                                 In segment CODE, align 4, keep-with-next
    402          void InitVar()
    403          {
   \                     ??InitVar:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    404            InitConfig();
    405          
    406            StatusIndication_SetItemText(SBY_GetStatusIndication(Find_StandbyBook()), wnd, empty);
   \   00000004   ........           LDR      R4,??DataTable44  ;; timer_disable
   \   00000008   1CD04DE2           SUB      SP,SP,#+28
   \   0000000C   ........           _BLF     ??InitConfig,??InitConfig??rA
   \   00000010   310100EF           SWI      +305
   \   00000014   180200EF           SWI      +536
   \   00000018   6C1294E5           LDR      R1,[R4, #+620]
   \   0000001C   9024E0E3           MVN      R2,#-1879048192
   \   00000020   420100EF           SWI      +322
    407            wnd = items[cfg_location];
   \   00000024   ........           LDR      R0,??DataTable102  ;; cfg_location
   \   00000028   54129FE5           LDR      R1,??InitVar_1   ;; items
   \   0000002C   000090E5           LDR      R0,[R0, #+0]
   \   00000030   000191E7           LDR      R0,[R1, +R0, LSL #+2]
    408          
    409            NewActionTimeout = cfg_new_action_timeout * 60000;
   \   00000034   6010A0E3           MOV      R1,#+96
   \   00000038   6C0284E5           STR      R0,[R4, #+620]
   \   0000003C   44029FE5           LDR      R0,??InitVar_1+0x4  ;; cfg_new_action_timeout
   \   00000040   EA1C81E3           ORR      R1,R1,#0xEA00
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   910000E0           MUL      R0,R1,R0
   \   0000004C   500284E5           STR      R0,[R4, #+592]
    410          
    411            DisplayWidth  = Display_GetWidth(0);
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   590200EF           SWI      +601
   \   00000058   3C0284E5           STR      R0,[R4, #+572]
    412            DisplayHeight = Display_GetHeight(0);
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   580200EF           SWI      +600
   \   00000064   400284E5           STR      R0,[R4, #+576]
    413          
    414            StatusBarY    = DispObject_GetWindowHeight(*StatusRow_p());
   \   00000068   F28100EF           SWI      +33266
   \   0000006C   000090E5           LDR      R0,[R0, #+0]
   \   00000070   F40200EF           SWI      +756
   \   00000074   480284E5           STR      R0,[R4, #+584]
    415            SoftBarY      = DisplayHeight - DispObject_GetWindowHeight(DispObject_SoftKeys_Get());
   \   00000078   A30200EF           SWI      +675
   \   0000007C   F40200EF           SWI      +756
   \   00000080   401294E5           LDR      R1,[R4, #+576]
   \   00000084   000041E0           SUB      R0,R1,R0
   \   00000088   440284E5           STR      R0,[R4, #+580]
    416          
    417            FSTAT _fstat;
    418            if(auto_image != NOIMAGE)
   \   0000008C   BE00D4E1           LDRH     R0,[R4, #+14]
   \   00000090   FF10A0E3           MOV      R1,#+255
   \   00000094   FF1C81E3           ORR      R1,R1,#0xFF00
   \   00000098   010050E1           CMP      R0,R1
   \   0000009C   0300000A           BEQ      ??InitVar_2
    419            {
    420              ImageID_Free(auto_image);
   \   000000A0   CD0200EF           SWI      +717
    421              auto_image = NOIMAGE;
   \   000000A4   FF00A0E3           MOV      R0,#+255
   \   000000A8   FF0C80E3           ORR      R0,R0,#0xFF00
   \   000000AC   BE00C4E1           STRH     R0,[R4, #+14]
    422            }
    423          
    424            if(cfg_auto_image_show)
   \                     ??InitVar_2:
   \   000000B0   ........           LDR      R0,??DataTable59  ;; cfg_auto_image_show
   \   000000B4   000090E5           LDR      R0,[R0, #+0]
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   2900000A           BEQ      ??InitVar_3
    425            {
    426              extractdir(tmppath, tmpname, cfg_auto_file);
   \   000000C0   C4219FE5           LDR      R2,??InitVar_1+0x8  ;; cfg_auto_file
   \   000000C4   7800A0E3           MOV      R0,#+120
   \   000000C8   440D80E3           ORR      R0,R0,#0x1100
   \   000000CC   045080E0           ADD      R5,R0,R4
   \   000000D0   806F40E2           SUB      R6,R0,#+512
   \   000000D4   0510A0E1           MOV      R1,R5
   \   000000D8   040086E0           ADD      R0,R6,R4
   \   000000DC   ........           _BLF     ??extractdir,??extractdir??rA
    427              if(fstat(tmppath,tmpname,&_fstat)!=0)
   \   000000E0   0D20A0E1           MOV      R2,SP
   \   000000E4   0510A0E1           MOV      R1,R5
   \   000000E8   040086E0           ADD      R0,R6,R4
   \   000000EC   1C0100EF           SWI      +284
   \   000000F0   000050E3           CMP      R0,#+0
   \   000000F4   1000000A           BEQ      ??InitVar_4
    428              {
    429                MessageBox(EMPTY_TEXTID, TextID_Create(LG_AUTOLOCATIONIMG,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
   \   000000F8   90019FE5           LDR      R0,??InitVar_1+0xC  ;; items + 208
   \   000000FC   FF40A0E3           MOV      R4,#+255
   \   00000100   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000104   0420A0E1           MOV      R2,R4
   \   00000108   0010A0E3           MOV      R1,#+0
   \   0000010C   5D0100EF           SWI      +349
   \   00000110   0010A0E1           MOV      R1,R0
   \   00000114   0000A0E3           MOV      R0,#+0
   \   00000118   01002DE9           PUSH     {R0}
   \   0000011C   0130A0E3           MOV      R3,#+1
   \   00000120   0420A0E1           MOV      R2,R4
   \   00000124   410E86E2           ADD      R0,R6,#+1040
   \   00000128   01002DE9           PUSH     {R0}
   \   0000012C   9004E0E3           MVN      R0,#-1879048192
   \   00000130   570200EF           SWI      +599
   \   00000134   08D08DE2           ADD      SP,SP,#+8
   \   00000138   0A0000EA           B        ??InitVar_3
    430              }
    431              else if(ImageID_Get(tmppath,tmpname,&auto_image)<0) auto_image = NOIMAGE;
   \                     ??InitVar_4:
   \   0000013C   0E2084E2           ADD      R2,R4,#+14
   \   00000140   800F86E2           ADD      R0,R6,#+512
   \   00000144   041080E0           ADD      R1,R0,R4
   \   00000148   040086E0           ADD      R0,R6,R4
   \   0000014C   CC0200EF           SWI      +716
   \   00000150   000050E3           CMP      R0,#+0
   \   00000154   0300005A           BPL      ??InitVar_3
   \   00000158   ........           LDR      R0,??DataTable62  ;; timer_disable + 14
   \   0000015C   FF10A0E3           MOV      R1,#+255
   \   00000160   FF1C81E3           ORR      R1,R1,#0xFF00
   \   00000164   B010C0E1           STRH     R1,[R0, #+0]
    432            }
    433          
    434            isUCodeFile = false;
   \                     ??InitVar_3:
   \   00000168   ........           LDR      R0,??DataTable42  ;; timer_disable + 628
   \   0000016C   0010A0E3           MOV      R1,#+0
   \   00000170   0010C0E5           STRB     R1,[R0, #+0]
    435            if(cfg_encode_type == 0)
   \   00000174   18019FE5           LDR      R0,??InitVar_1+0x10  ;; cfg_encode_type
   \   00000178   000090E5           LDR      R0,[R0, #+0]
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   0A00001A           BNE      ??InitVar_5
    436            {
    437              encode_type = 0;
   \   00000184   ........           LDR      R0,??DataTable45  ;; timer_disable + 596
   \   00000188   001080E5           STR      R1,[R0, #+0]
    438              if(!load_encode_file())
   \   0000018C   ........           BL       ??load_encode_file
   \   00000190   000050E3           CMP      R0,#+0
   \   00000194   2100001A           BNE      ??InitVar_6
    439              {
    440                MessageBox(EMPTY_TEXTID, TextID_Create(LG_GFGENCODEFILENOTFOUND,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
   \   00000198   F8009FE5           LDR      R0,??InitVar_1+0x14  ;; items + 156
   \   0000019C   FF40A0E3           MOV      R4,#+255
   \   000001A0   FF4C84E3           ORR      R4,R4,#0xFF00
   \   000001A4   0420A0E1           MOV      R2,R4
   \   000001A8   0010A0E3           MOV      R1,#+0
   \   000001AC   0F0000EA           B        ??InitVar_7
    441              }
    442            }
    443            else
    444            {
    445              encode_type = 1;
   \                     ??InitVar_5:
   \   000001B0   ........           LDR      R4,??DataTable44  ;; timer_disable
   \   000001B4   0100A0E3           MOV      R0,#+1
   \   000001B8   540284E5           STR      R0,[R4, #+596]
    446              CODEMAP_ADDR = (int)wcstoul(cfg_codemap_addr,0,0);
   \   000001BC   D8009FE5           LDR      R0,??InitVar_1+0x18  ;; cfg_codemap_addr
   \   000001C0   0020A0E3           MOV      R2,#+0
   \   000001C4   ........           _BLF     wcstoul,??wcstoul??rA
   \   000001C8   580284E5           STR      R0,[R4, #+600]
    447              if(CODEMAP_ADDR == 0)
   \   000001CC   000050E3           CMP      R0,#+0
   \   000001D0   1200001A           BNE      ??InitVar_6
    448              {
    449                encode_type = 0;
   \   000001D4   ........           LDR      R0,??DataTable45  ;; timer_disable + 596
   \   000001D8   0010A0E3           MOV      R1,#+0
   \   000001DC   001080E5           STR      R1,[R0, #+0]
    450                MessageBox(EMPTY_TEXTID, TextID_Create(LG_GFGINCORRECTCODEMAPADDR,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
   \   000001E0   B8009FE5           LDR      R0,??InitVar_1+0x1C  ;; items + 100
   \   000001E4   FF40A0E3           MOV      R4,#+255
   \   000001E8   FF4C84E3           ORR      R4,R4,#0xFF00
   \   000001EC   0420A0E1           MOV      R2,R4
   \                     ??InitVar_7:
   \   000001F0   5D0100EF           SWI      +349
   \   000001F4   0010A0E3           MOV      R1,#+0
   \   000001F8   02002DE9           PUSH     {R1}
   \   000001FC   0130A0E3           MOV      R3,#+1
   \   00000200   0420A0E1           MOV      R2,R4
   \   00000204   8810A0E3           MOV      R1,#+136
   \   00000208   4C1D81E3           ORR      R1,R1,#0x1300
   \   0000020C   02002DE9           PUSH     {R1}
   \   00000210   0010A0E1           MOV      R1,R0
   \   00000214   9004E0E3           MVN      R0,#-1879048192
   \   00000218   570200EF           SWI      +599
   \   0000021C   08D08DE2           ADD      SP,SP,#+8
    451              }
    452            }
    453          
    454            if(!load_db_file())
   \                     ??InitVar_6:
   \   00000220   ........           BL       ??load_db_file
   \   00000224   000050E3           CMP      R0,#+0
   \   00000228   1000001A           BNE      ??InitVar_8
    455            {
    456              MessageBox(EMPTY_TEXTID, TextID_Create(LG_DBLOADERROR,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
   \   0000022C   70009FE5           LDR      R0,??InitVar_1+0x20  ;; items + 40
   \   00000230   FF40A0E3           MOV      R4,#+255
   \   00000234   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000238   0420A0E1           MOV      R2,R4
   \   0000023C   0010A0E3           MOV      R1,#+0
   \   00000240   5D0100EF           SWI      +349
   \   00000244   0010A0E3           MOV      R1,#+0
   \   00000248   02002DE9           PUSH     {R1}
   \   0000024C   0130A0E3           MOV      R3,#+1
   \   00000250   0420A0E1           MOV      R2,R4
   \   00000254   8810A0E3           MOV      R1,#+136
   \   00000258   4C1D81E3           ORR      R1,R1,#0x1300
   \   0000025C   02002DE9           PUSH     {R1}
   \   00000260   0010A0E1           MOV      R1,R0
   \   00000264   9004E0E3           MVN      R0,#-1879048192
   \   00000268   570200EF           SWI      +599
   \   0000026C   08D08DE2           ADD      SP,SP,#+8
    457            }
    458          
    459            getdir(logFolder, cfg_logs_path);
   \                     ??InitVar_8:
   \   00000270   30109FE5           LDR      R1,??InitVar_1+0x24  ;; cfg_logs_path
   \   00000274   ........           LDR      R0,??DataTable95  ;; timer_disable + 632
   \   00000278   ........           _BLF     ??getdir,??getdir??rA
    460          }
   \   0000027C   1CD08DE2           ADD      SP,SP,#+28
   \   00000280   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??InitVar_1:
   \   00000284   ........           DC32     items
   \   00000288   ........           DC32     cfg_new_action_timeout
   \   0000028C   ........           DC32     cfg_auto_file
   \   00000290   ........           DC32     items + 208
   \   00000294   ........           DC32     cfg_encode_type
   \   00000298   ........           DC32     items + 156
   \   0000029C   ........           DC32     cfg_codemap_addr
   \   000002A0   ........           DC32     items + 100
   \   000002A4   ........           DC32     items + 40
   \   000002A8   ........           DC32     cfg_logs_path
    461          

   \                                 In segment CODE, align 4, keep-with-next
    462          int getPlaceIndex(const wchar_t *name)
    463          {
   \                     ??getPlaceIndex:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    464            for(unsigned int i=0; i<MAX_PLACE_NUM; i++)
   \   00000008   0050A0E3           MOV      R5,#+0
    465            {
    466              if(*cfg_place[i].enable)
   \                     ??getPlaceIndex_1:
   \   0000000C   ........           LDR      R1,??DataTable53  ;; cfg_place
   \   00000010   1800A0E3           MOV      R0,#+24
   \   00000014   901521E0           MLA      R1,R0,R5,R1
   \   00000018   000091E5           LDR      R0,[R1, #+0]
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0800000A           BEQ      ??getPlaceIndex_2
    467              {
    468                if(wstrcmp(cfg_place[i].name, name) == 0) return i;
   \   00000028   ........           LDR      R2,??DataTable53  ;; cfg_place
   \   0000002C   1800A0E3           MOV      R0,#+24
   \   00000030   902522E0           MLA      R2,R0,R5,R2
   \   00000034   0410A0E1           MOV      R1,R4
   \   00000038   040092E5           LDR      R0,[R2, #+4]
   \   0000003C   560100EF           SWI      +342
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0500A001           MOVEQ    R0,R5
   \   00000048   3080BD08           POPEQ    {R4,R5,PC}
    469              }
    470            }
   \                     ??getPlaceIndex_2:
   \   0000004C   015085E2           ADD      R5,R5,#+1
   \   00000050   100055E3           CMP      R5,#+16
   \   00000054   ECFFFF3A           BCC      ??getPlaceIndex_1
    471            return -1;
   \   00000058   0000E0E3           MVN      R0,#+0
   \   0000005C   3080BDE8           POP      {R4,R5,PC}       ;; return
    472          }
    473          

   \                                 In segment CODE, align 4, keep-with-next
    474          int getProfile(int indx)
    475          {
    476            if((indx >= 0) && (indx < MAX_PLACE_NUM))
   \                     ??getProfile:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   0F00004A           BMI      ??getProfile_1
   \   00000008   100050E3           CMP      R0,#+16
   \   0000000C   0D0000AA           BGE      ??getProfile_1
    477            {
    478              if(*cfg_place[indx].profile) return *cfg_place[indx].profile - 1;
   \   00000010   ........           LDR      R2,??DataTable53  ;; cfg_place
   \   00000014   1810A0E3           MOV      R1,#+24
   \   00000018   912022E0           MLA      R2,R1,R0,R2
   \   0000001C   081092E5           LDR      R1,[R2, #+8]
   \   00000020   001091E5           LDR      R1,[R1, #+0]
   \   00000024   000051E3           CMP      R1,#+0
   \   00000028   0600000A           BEQ      ??getProfile_1
   \   0000002C   ........           LDR      R2,??DataTable53  ;; cfg_place
   \   00000030   1810A0E3           MOV      R1,#+24
   \   00000034   912020E0           MLA      R0,R1,R0,R2
   \   00000038   080090E5           LDR      R0,[R0, #+8]
   \   0000003C   000090E5           LDR      R0,[R0, #+0]
   \   00000040   010040E2           SUB      R0,R0,#+1
   \   00000044   1EFF2FE1           BX       LR
    479            }
    480            return -1;
   \                     ??getProfile_1:
   \   00000048   0000E0E3           MVN      R0,#+0
   \   0000004C   1EFF2FE1           BX       LR               ;; return
    481          }
    482          

   \                                 In segment CODE, align 4, keep-with-next
    483          int getVibrate(int indx)
    484          {
    485            if((indx >= 0) && (indx < MAX_PLACE_NUM)) return *cfg_place[indx].vibrate;
   \                     ??getVibrate:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   0700004A           BMI      ??getVibrate_1
   \   00000008   100050E3           CMP      R0,#+16
   \   0000000C   050000AA           BGE      ??getVibrate_1
   \   00000010   ........           LDR      R2,??DataTable53  ;; cfg_place
   \   00000014   1810A0E3           MOV      R1,#+24
   \   00000018   912020E0           MLA      R0,R1,R0,R2
   \   0000001C   0C0090E5           LDR      R0,[R0, #+12]
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   1EFF2FE1           BX       LR
    486            return -1;
   \                     ??getVibrate_1:
   \   00000028   0000E0E3           MVN      R0,#+0
   \   0000002C   1EFF2FE1           BX       LR               ;; return
    487          }
    488          

   \                                 In segment CODE, align 4, keep-with-next
    489          const wchar_t * getSoundFile(int indx)
    490          {
    491            if((indx >= 0) && (indx < MAX_PLACE_NUM))
   \                     ??getSoundFile:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   0D00004A           BMI      ??getSoundFile_1
   \   00000008   100050E3           CMP      R0,#+16
   \   0000000C   0B0000AA           BGE      ??getSoundFile_1
    492            {
    493              if(*cfg_place[indx].sound_enable) return cfg_place[indx].sound_file;
   \   00000010   ........           LDR      R2,??DataTable53  ;; cfg_place
   \   00000014   1810A0E3           MOV      R1,#+24
   \   00000018   912022E0           MLA      R2,R1,R0,R2
   \   0000001C   101092E5           LDR      R1,[R2, #+16]
   \   00000020   001091E5           LDR      R1,[R1, #+0]
   \   00000024   000051E3           CMP      R1,#+0
   \   00000028   0400000A           BEQ      ??getSoundFile_1
   \   0000002C   ........           LDR      R2,??DataTable53  ;; cfg_place
   \   00000030   1810A0E3           MOV      R1,#+24
   \   00000034   912020E0           MLA      R0,R1,R0,R2
   \   00000038   140090E5           LDR      R0,[R0, #+20]
   \   0000003C   1EFF2FE1           BX       LR
    494            }
    495            return 0;
   \                     ??getSoundFile_1:
   \   00000040   0000A0E3           MOV      R0,#+0
   \   00000044   1EFF2FE1           BX       LR               ;; return
    496          }
    497          

   \                                 In segment CODE, align 4, keep-with-next
    498          int equ2manual_profile(int profile)
    499          {
    500            for(unsigned int i=0; i<MAX_MANUAL_PROFILE_NUM; i++)
   \                     ??equ2manual_profile:
   \   00000000   0010A0E3           MOV      R1,#+0
    501            {
    502              if(*cfg_manual_profile[i])
   \                     ??equ2manual_profile_1:
   \   00000004   3C209FE5           LDR      R2,??equ2manual_profile_2  ;; cfg_manual_profile
   \   00000008   012192E7           LDR      R2,[R2, +R1, LSL #+2]
   \   0000000C   002092E5           LDR      R2,[R2, #+0]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   0600000A           BEQ      ??equ2manual_profile_3
    503              {
    504                if((*cfg_manual_profile[i] - 1) == profile) return 1;
   \   00000018   28209FE5           LDR      R2,??equ2manual_profile_2  ;; cfg_manual_profile
   \   0000001C   012192E7           LDR      R2,[R2, +R1, LSL #+2]
   \   00000020   002092E5           LDR      R2,[R2, #+0]
   \   00000024   012042E2           SUB      R2,R2,#+1
   \   00000028   000052E1           CMP      R2,R0
   \   0000002C   0100A003           MOVEQ    R0,#+1
   \   00000030   1EFF2F01           BXEQ     LR
    505              }
    506            }
   \                     ??equ2manual_profile_3:
   \   00000034   011081E2           ADD      R1,R1,#+1
   \   00000038   070051E3           CMP      R1,#+7
   \   0000003C   F0FFFF3A           BCC      ??equ2manual_profile_1
    507            return 0;
   \   00000040   0000A0E3           MOV      R0,#+0
   \   00000044   1EFF2FE1           BX       LR               ;; return
   \                     ??equ2manual_profile_2:
   \   00000048   ........           DC32     cfg_manual_profile
    508          }
    509          

   \                                 In segment CODE, align 4, keep-with-next
    510          void DrawParams(int y)
    511          {
   \                     ??DrawParams:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    512            GC *GC_DISP=get_DisplayGC ();
   \   00000008   E50100EF           SWI      +485
   \   0000000C   0050A0E1           MOV      R5,R0
    513          
    514            if ((cfg_show_type & 2) && visible && (location_image != NOIMAGE))
   \   00000010   ........           LDR      R0,??DataTable90  ;; cfg_show_type
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   020010E3           TST      R0,#0x2
   \   0000001C   1600000A           BEQ      ??DrawParams_1
   \   00000020   ........           LDR      R0,??DataTable119  ;; timer_disable + 625
   \   00000024   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   1200000A           BEQ      ??DrawParams_1
   \   00000030   ........           LDR      R0,??DataTable56  ;; timer_disable + 16
   \   00000034   FF10A0E3           MOV      R1,#+255
   \   00000038   B000D0E1           LDRH     R0,[R0, #+0]
   \   0000003C   FF1C81E3           ORR      R1,R1,#0xFF00
   \   00000040   010050E1           CMP      R0,R1
   \   00000044   0C00000A           BEQ      ??DrawParams_1
    515            {
    516              GC_PutChar(GC_DISP, cfg_location_image.x1, cfg_location_image.y1 - y, imageWidth, imageHeight, location_image);
   \   00000048   ........           LDR      R0,??DataTable121  ;; timer_disable
   \   0000004C   ........           LDR      R1,??DataTable58  ;; cfg_location_image
   \   00000050   B021D0E1           LDRH     R2,[R0, #+16]
   \   00000054   04002DE9           PUSH     {R2}
   \   00000058   682290E5           LDR      R2,[R0, #+616]
   \   0000005C   04002DE9           PUSH     {R2}
   \   00000060   643290E5           LDR      R3,[R0, #+612]
   \   00000064   B400D1E1           LDRH     R0,[R1, #+4]
   \   00000068   B010D1E1           LDRH     R1,[R1, #+0]
   \   0000006C   042040E0           SUB      R2,R0,R4
   \   00000070   0500A0E1           MOV      R0,R5
   \   00000074   400100EF           SWI      +320
   \   00000078   08D08DE2           ADD      SP,SP,#+8
    517            }
    518          
    519            if(cfg_auto_image_show && AutoLocation && (auto_image != NOIMAGE))
   \                     ??DrawParams_1:
   \   0000007C   ........           LDR      R0,??DataTable59  ;; cfg_auto_image_show
   \   00000080   000090E5           LDR      R0,[R0, #+0]
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   1700000A           BEQ      ??DrawParams_2
   \   0000008C   ........           LDR      R0,??DataTable87  ;; timer_disable + 627
   \   00000090   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   1300000A           BEQ      ??DrawParams_2
   \   0000009C   ........           LDR      R0,??DataTable62  ;; timer_disable + 14
   \   000000A0   FF10A0E3           MOV      R1,#+255
   \   000000A4   B000D0E1           LDRH     R0,[R0, #+0]
   \   000000A8   FF1C81E3           ORR      R1,R1,#0xFF00
   \   000000AC   010050E1           CMP      R0,R1
   \   000000B0   0D00000A           BEQ      ??DrawParams_2
    520            {
    521              GC_PutChar(GC_DISP, cfg_auto_image_x, cfg_auto_image_y - y, 0, 0, auto_image);
   \   000000B4   ........           LDR      R0,??DataTable62  ;; timer_disable + 14
   \   000000B8   0030A0E3           MOV      R3,#+0
   \   000000BC   B000D0E1           LDRH     R0,[R0, #+0]
   \   000000C0   01002DE9           PUSH     {R0}
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   01002DE9           PUSH     {R0}
   \   000000CC   F4009FE5           LDR      R0,??DrawParams_3  ;; cfg_auto_image_y
   \   000000D0   000090E5           LDR      R0,[R0, #+0]
   \   000000D4   042040E0           SUB      R2,R0,R4
   \   000000D8   EC009FE5           LDR      R0,??DrawParams_3+0x4  ;; cfg_auto_image_x
   \   000000DC   001090E5           LDR      R1,[R0, #+0]
   \   000000E0   0500A0E1           MOV      R0,R5
   \   000000E4   400100EF           SWI      +320
   \   000000E8   08D08DE2           ADD      SP,SP,#+8
    522            }
    523          
    524            if((cfg_location == 9) && (cfg_show_type & 1) && visible && (CellNameID != empty))
   \                     ??DrawParams_2:
   \   000000EC   ........           LDR      R0,??DataTable102  ;; cfg_location
   \   000000F0   000090E5           LDR      R0,[R0, #+0]
   \   000000F4   090050E3           CMP      R0,#+9
   \   000000F8   3080BD18           POPNE    {R4,R5,PC}
   \   000000FC   ........           LDR      R1,??DataTable119  ;; timer_disable + 625
   \   00000100   ........           LDR      R0,??DataTable90  ;; cfg_show_type
   \   00000104   0010D1E5           LDRB     R1,[R1, #+0]
   \   00000108   000090E5           LDR      R0,[R0, #+0]
   \   0000010C   010000E2           AND      R0,R0,#0x1
   \   00000110   000011E1           TST      R1,R0
   \   00000114   3080BD08           POPEQ    {R4,R5,PC}
   \   00000118   ........           LDR      R0,??DataTable89  ;; timer_disable + 608
   \   0000011C   9014E0E3           MVN      R1,#-1879048192
   \   00000120   000090E5           LDR      R0,[R0, #+0]
   \   00000124   010050E1           CMP      R0,R1
   \   00000128   3080BD08           POPEQ    {R4,R5,PC}
    525            {
    526              if(cfg_cell_align == RIGHT)
   \   0000012C   9C009FE5           LDR      R0,??DrawParams_3+0x8  ;; cfg_cell_align
   \   00000130   9C109FE5           LDR      R1,??DrawParams_3+0xC  ;; cfg_cell_color
   \   00000134   000090E5           LDR      R0,[R0, #+0]
   \   00000138   001091E5           LDR      R1,[R1, #+0]
   \   0000013C   010050E3           CMP      R0,#+1
   \   00000140   ........           LDR      R0,??DataTable121  ;; timer_disable
   \   00000144   02002DE9           PUSH     {R1}
   \   00000148   88109FE5           LDR      R1,??DrawParams_3+0x10  ;; cfg_cell_border
   \   0000014C   001091E5           LDR      R1,[R1, #+0]
   \   00000150   02002DE9           PUSH     {R1}
   \   00000154   401290E5           LDR      R1,[R0, #+576]
   \   00000158   02002DE9           PUSH     {R1}
   \   0000015C   0900001A           BNE      ??DrawParams_4
    527                DrawHighlightID(cfg_cell_font, CellNameID, cfg_cell_align, 1, cfg_cell_y - y, cfg_cell_x, DisplayHeight, cfg_cell_border, cfg_cell_color);
   \   00000160   74109FE5           LDR      R1,??DrawParams_3+0x14  ;; cfg_cell_x
   \   00000164   0130A0E3           MOV      R3,#+1
   \   00000168   001091E5           LDR      R1,[R1, #+0]
   \   0000016C   0120A0E3           MOV      R2,#+1
   \   00000170   02002DE9           PUSH     {R1}
   \   00000174   64109FE5           LDR      R1,??DrawParams_3+0x18  ;; cfg_cell_y
   \   00000178   001091E5           LDR      R1,[R1, #+0]
   \   0000017C   041041E0           SUB      R1,R1,R4
   \   00000180   02002DE9           PUSH     {R1}
   \   00000184   090000EA           B        ??DrawParams_5
    528              else
    529                DrawHighlightID(cfg_cell_font, CellNameID, cfg_cell_align, cfg_cell_x, cfg_cell_y - y, DisplayWidth, DisplayHeight, cfg_cell_border, cfg_cell_color);
   \                     ??DrawParams_4:
   \   00000188   3C1290E5           LDR      R1,[R0, #+572]
   \   0000018C   02002DE9           PUSH     {R1}
   \   00000190   48109FE5           LDR      R1,??DrawParams_3+0x18  ;; cfg_cell_y
   \   00000194   001091E5           LDR      R1,[R1, #+0]
   \   00000198   041041E0           SUB      R1,R1,R4
   \   0000019C   02002DE9           PUSH     {R1}
   \   000001A0   34109FE5           LDR      R1,??DrawParams_3+0x14  ;; cfg_cell_x
   \   000001A4   003091E5           LDR      R3,[R1, #+0]
   \   000001A8   20109FE5           LDR      R1,??DrawParams_3+0x8  ;; cfg_cell_align
   \   000001AC   002091E5           LDR      R2,[R1, #+0]
   \                     ??DrawParams_5:
   \   000001B0   601290E5           LDR      R1,[R0, #+608]
   \   000001B4   28009FE5           LDR      R0,??DrawParams_3+0x1C  ;; cfg_cell_font
   \   000001B8   000090E5           LDR      R0,[R0, #+0]
   \   000001BC   ........           BL       ??DrawHighlightID
   \   000001C0   14D08DE2           ADD      SP,SP,#+20
    530            }
    531          
    532          }
   \   000001C4   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??DrawParams_3:
   \   000001C8   ........           DC32     cfg_auto_image_y
   \   000001CC   ........           DC32     cfg_auto_image_x
   \   000001D0   ........           DC32     cfg_cell_align
   \   000001D4   ........           DC32     cfg_cell_color
   \   000001D8   ........           DC32     cfg_cell_border
   \   000001DC   ........           DC32     cfg_cell_x
   \   000001E0   ........           DC32     cfg_cell_y
   \   000001E4   ........           DC32     cfg_cell_font
    533          

   \                                 In segment CODE, align 4, keep-with-next
    534          void onTimer_disable (u16 timerID, LPARAM lparam)
    535          {
    536            IsInStandby = false;
   \                     ??onTimer_disable:
   \   00000000   ........           LDR      R0,??DataTable74  ;; timer_disable + 624
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   0010C0E5           STRB     R1,[R0, #+0]
    537          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return
    538          

   \                                 In segment CODE, align 4, keep-with-next
    539          void Display_ReDraw(DISP_OBJ* DO,int a,int b,int c)
    540          {
   \                     ??Display_ReDraw:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    541            IsInStandby = true;
   \   00000004   ........           LDR      R8,??DataTable69  ;; timer_disable
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   7002C8E5           STRB     R0,[R8, #+624]
    542            Timer_ReSet(&timer_disable,cfg_update_interval << 1, onTimer_disable,0);
   \   00000014   ........           LDR      R0,??DataTable103  ;; cfg_update_interval
   \   00000018   0150A0E1           MOV      R5,R1
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   0260A0E1           MOV      R6,R2
   \   00000024   44209FE5           LDR      R2,??Display_ReDraw_1  ;; ??onTimer_disable
   \   00000028   0370A0E1           MOV      R7,R3
   \   0000002C   0030A0E3           MOV      R3,#+0
   \   00000030   8010A0E1           LSL      R1,R0,#+1
   \   00000034   0800A0E1           MOV      R0,R8
   \   00000038   280100EF           SWI      +296
    543            DrawParams(StatusBarY);
   \   0000003C   480298E5           LDR      R0,[R8, #+584]
   \   00000040   ........           BL       ??DrawParams
    544            if (Display_oldReDraw) Display_oldReDraw(DO,a,b,c);
   \   00000044   240298E5           LDR      R0,[R8, #+548]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   F081BD08           POPEQ    {R4-R8,PC}
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   18409FE5           LDR      R4,??Display_ReDraw_1+0x4  ;; timer_disable + 548
   \   00000058   0730A0E1           MOV      R3,R7
   \   0000005C   004094E5           LDR      R4,[R4, #+0]
   \   00000060   0620A0E1           MOV      R2,R6
   \   00000064   0510A0E1           MOV      R1,R5
   \   00000068   34FF2FE1           BLX      R4
    545          }
   \   0000006C   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??Display_ReDraw_1:
   \   00000070   ........           DC32     ??onTimer_disable
   \   00000074   ........           DC32     timer_disable + 548
    546          

   \                                 In segment CODE, align 4, keep-with-next
    547          void Status_ReDraw(DISP_OBJ * d, int a, int b, int c)
    548          {
   \                     ??Status_ReDraw:
   \   00000000   10402DE9           PUSH     {R4,LR}
    549            Status_oldReDraw(d, a, b, c);
   \   00000004   ........           LDR      R4,??DataTable121  ;; timer_disable
   \   00000008   18C294E5           LDR      R12,[R4, #+536]
   \   0000000C   3CFF2FE1           BLX      R12
    550            if(IsInStandby || (!cfg_standby_only)) DrawParams(0);
   \   00000010   7002D4E5           LDRB     R0,[R4, #+624]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0300001A           BNE      ??Status_ReDraw_1
   \   0000001C   ........           LDR      R0,??DataTable73  ;; cfg_standby_only
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   1080BD18           POPNE    {R4,PC}
   \                     ??Status_ReDraw_1:
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   ........           BL       ??DrawParams
    551          }
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
    552          

   \                                 In segment CODE, align 4, keep-with-next
    553          void Soft_ReDraw(DISP_OBJ* DO,int a,int b,int c)
    554          {
   \                     ??Soft_ReDraw:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    555            BOOK *bk1 = FindBook(isImageViewerBook);
   \   00000008   A0009FE5           LDR      R0,??Soft_ReDraw_1  ;; ??isImageViewerBook
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0370A0E1           MOV      R7,R3
   \   00000018   300100EF           SWI      +304
   \   0000001C   0080A0E1           MOV      R8,R0
    556            BOOK *bk2 = FindBook(get_IsCameraBook());
   \   00000020   338300EF           SWI      +33587
   \   00000024   300100EF           SWI      +304
    557            bool flag = (!cfg_standby_only) && (!bk1) && (!bk2);
   \   00000028   ........           LDR      R1,??DataTable73  ;; cfg_standby_only
   \   0000002C   001091E5           LDR      R1,[R1, #+0]
   \   00000030   000051E3           CMP      R1,#+0
    558          
    559            if(IsInStandby)
   \   00000034   ........           LDR      R1,??DataTable74  ;; timer_disable + 624
   \   00000038   00005803           CMPEQ    R8,#+0
   \   0000003C   0010D1E5           LDRB     R1,[R1, #+0]
   \   00000040   00005003           CMPEQ    R0,#+0
   \   00000044   0100A003           MOVEQ    R0,#+1
   \   00000048   0000A013           MOVNE    R0,#+0
   \   0000004C   000051E3           CMP      R1,#+0
   \   00000050   0900000A           BEQ      ??Soft_ReDraw_2
    560            {
    561              DrawParams(SoftBarY);
   \   00000054   ........           LDR      R8,??DataTable121  ;; timer_disable
   \   00000058   440298E5           LDR      R0,[R8, #+580]
   \   0000005C   ........           BL       ??DrawParams
    562              Soft_oldReDraw(DO,a,b,c);
   \   00000060   0730A0E1           MOV      R3,R7
   \   00000064   0620A0E1           MOV      R2,R6
   \   00000068   0510A0E1           MOV      R1,R5
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   304298E5           LDR      R4,[R8, #+560]
   \   00000074   34FF2FE1           BLX      R4
   \   00000078   F081BDE8           POP      {R4-R8,PC}
    563            }
    564            else
    565            {
    566              if(flag) DrawParams(SoftBarY);
   \                     ??Soft_ReDraw_2:
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   0200000A           BEQ      ??Soft_ReDraw_3
   \   00000084   28009FE5           LDR      R0,??Soft_ReDraw_1+0x4  ;; timer_disable + 580
   \   00000088   000090E5           LDR      R0,[R0, #+0]
   \   0000008C   ........           BL       ??DrawParams
    567              Soft_oldReDraw(DO,a,b,c);
   \                     ??Soft_ReDraw_3:
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   ........           LDR      R4,??DataTable114  ;; timer_disable + 560
   \   00000098   0730A0E1           MOV      R3,R7
   \   0000009C   004094E5           LDR      R4,[R4, #+0]
   \   000000A0   0620A0E1           MOV      R2,R6
   \   000000A4   0510A0E1           MOV      R1,R5
   \   000000A8   34FF2FE1           BLX      R4
    568            }
    569          }
   \   000000AC   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??Soft_ReDraw_1:
   \   000000B0   ........           DC32     ??isImageViewerBook
   \   000000B4   ........           DC32     timer_disable + 580
    570          

   \                                 In segment CODE, align 4, keep-with-next
    571          void InvalidateAll()
    572          {
    573              if(GUI_display) DispObject_InvalidateRect(GUI_display,0);
   \                     ??InvalidateAll:
   \   00000000   ........           LDR      R0,??DataTable112  ;; timer_disable + 552
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0300000A           BEQ      ??InvalidateAll_1
   \   00000014   ........           LDR      R0,??DataTable112  ;; timer_disable + 552
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   EF0100EF           SWI      +495
    574              if(GUI_status)  DispObject_InvalidateRect(*GUI_status,0);
   \                     ??InvalidateAll_1:
   \   00000024   ........           LDR      R0,??DataTable110  ;; timer_disable + 540
   \   00000028   000090E5           LDR      R0,[R0, #+0]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0400000A           BEQ      ??InvalidateAll_2
   \   00000034   ........           LDR      R0,??DataTable110  ;; timer_disable + 540
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   000090E5           LDR      R0,[R0, #+0]
   \   00000040   000090E5           LDR      R0,[R0, #+0]
   \   00000044   EF0100EF           SWI      +495
    575              if(GUI_soft)    DispObject_InvalidateRect(GUI_soft,0);
   \                     ??InvalidateAll_2:
   \   00000048   ........           LDR      R0,??DataTable116  ;; timer_disable + 564
   \   0000004C   000090E5           LDR      R0,[R0, #+0]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0080BD08           POPEQ    {PC}
   \   00000058   ........           LDR      R0,??DataTable116  ;; timer_disable + 564
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   000090E5           LDR      R0,[R0, #+0]
   \   00000064   EF0100EF           SWI      +495
    576          }
   \   00000068   0080BDE8           POP      {PC}             ;; return
    577          

   \                                 In segment CODE, align 4, keep-with-next
    578          int CheckCurrentCell()
    579          {
    580            if(cfg_cellidmode == 0){
   \                     ??CheckCurrentCell:
   \   00000000   ........           LDR      R0,??DataTable83  ;; cfg_cellidmode
   \   00000004   70402DE9           PUSH     {R4-R6,LR}
   \   00000008   ........           LDR      R4,??DataTable121  ;; timer_disable
   \   0000000C   14D04DE2           SUB      SP,SP,#+20
   \   00000010   000090E5           LDR      R0,[R0, #+0]
    581              snwprintf(CellName, 16, L"%04X:%04X", currentLAC, currentCID);
    582            }
    583            else {
    584              snwprintf(CellName, 16, L"%05d:%05d", currentLAC, currentCID);
   \   00000014   1010A0E3           MOV      R1,#+16
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   B400D4E1           LDRH     R0,[R4, #+4]
   \   00000020   74219F05           LDREQ    R2,??CheckCurrentCell_1  ;; `?<Constant "[%s]">` + 28
    585            }
    586          
    587            wstrcpy(CellNameStatus, CellName);
   \   00000024   7850A0E3           MOV      R5,#+120
   \   00000028   70219F15           LDRNE    R2,??CheckCurrentCell_1+0x4  ;; `?<Constant "[%s]">` + 8
   \   0000002C   01002DE9           PUSH     {R0}
   \   00000030   B230D4E1           LDRH     R3,[R4, #+2]
   \   00000034   505E85E3           ORR      R5,R5,#0x500
    588            wstr2strn(logCellName, CellName, 15);
   \   00000038   406FC5E3           BIC      R6,R5,#0x100
   \   0000003C   7800A0E3           MOV      R0,#+120
   \   00000040   500E80E3           ORR      R0,R0,#0x500
   \   00000044   040080E0           ADD      R0,R0,R4
   \   00000048   150100EF           SWI      +277
   \   0000004C   04D08DE2           ADD      SP,SP,#+4
   \   00000050   041085E0           ADD      R1,R5,R4
   \   00000054   800E85E3           ORR      R0,R5,#0x800
   \   00000058   040080E0           ADD      R0,R0,R4
   \   0000005C   520100EF           SWI      +338
   \   00000060   0F20A0E3           MOV      R2,#+15
   \   00000064   041085E0           ADD      R1,R5,R4
   \   00000068   040086E0           ADD      R0,R6,R4
   \   0000006C   5B0100EF           SWI      +347
    589          
    590            char lacCidKey[20];
    591            sprintf(lacCidKey, "[%s]", logCellName);
   \   00000070   2C119FE5           LDR      R1,??CheckCurrentCell_1+0x8  ;; `?<Constant "[%s]">`
   \   00000074   042086E0           ADD      R2,R6,R4
   \   00000078   0D00A0E1           MOV      R0,SP
   \   0000007C   140100EF           SWI      +276
    592          
    593            int LocFound = 0;
    594            if(db_buf)
   \   00000080   5C0294E5           LDR      R0,[R4, #+604]
   \   00000084   0060A0E3           MOV      R6,#+0
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   2200000A           BEQ      ??CheckCurrentCell_2
    595            {
    596              if (char * param = manifest_GetParam(db_buf, lacCidKey, 0)) {
   \   00000090   ........           LDR      R0,??DataTable85  ;; timer_disable + 604
   \   00000094   0020A0E3           MOV      R2,#+0
   \   00000098   000090E5           LDR      R0,[R0, #+0]
   \   0000009C   0D10A0E1           MOV      R1,SP
   \   000000A0   750100EF           SWI      +373
   \   000000A4   0050B0E1           MOVS     R5,R0
   \   000000A8   1B00000A           BEQ      ??CheckCurrentCell_2
    597                strcpy(logCellName, param);
   \   000000AC   0510A0E1           MOV      R1,R5
   \   000000B0   7800A0E3           MOV      R0,#+120
   \   000000B4   400E80E3           ORR      R0,R0,#0x400
   \   000000B8   040080E0           ADD      R0,R0,R4
   \   000000BC   A00100EF           SWI      +416
    598                if(encode_type == 0)
   \   000000C0   540294E5           LDR      R0,[R4, #+596]
   \   000000C4   FF20A0E3           MOV      R2,#+255
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   D4009FE5           LDR      R0,??CheckCurrentCell_1+0xC  ;; timer_disable + 1400
   \   000000D0   0510A0E1           MOV      R1,R5
   \   000000D4   0100001A           BNE      ??CheckCurrentCell_3
    599                {
    600                  char2unicode(CellName, param, 255);
   \   000000D8   ........           BL       ??char2unicode
   \   000000DC   000000EA           B        ??CheckCurrentCell_4
    601                }
    602                else
    603                {
    604                  gb2un(CellName, param, 255);
   \                     ??CheckCurrentCell_3:
   \   000000E0   ........           BL       ??gb2un
    605                }
    606                if (!showCellID) wstrcpy(CellNameStatus, CellName);
   \                     ??CheckCurrentCell_4:
   \   000000E4   ........           LDR      R0,??DataTable86  ;; timer_disable + 626
   \   000000E8   0000D0E5           LDRB     R0,[R0, #+0]
   \   000000EC   000050E3           CMP      R0,#+0
   \   000000F0   0500001A           BNE      ??CheckCurrentCell_5
   \   000000F4   7800A0E3           MOV      R0,#+120
   \   000000F8   500E80E3           ORR      R0,R0,#0x500
   \   000000FC   041080E0           ADD      R1,R0,R4
   \   00000100   800E80E3           ORR      R0,R0,#0x800
   \   00000104   040080E0           ADD      R0,R0,R4
   \   00000108   520100EF           SWI      +338
    607                LocFound = 1;
    608                mfree(param);
   \                     ??CheckCurrentCell_5:
   \   0000010C   0500A0E1           MOV      R0,R5
   \   00000110   040100EF           SWI      +260
   \   00000114   0160A0E3           MOV      R6,#+1
   \   00000118   060000EA           B        ??CheckCurrentCell_6
    609              }
    610            }
   \                     ??CheckCurrentCell_2:
   \   0000011C   ........           LDR      R0,??DataTable87  ;; timer_disable + 627
   \   00000120   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000124   000050E3           CMP      R0,#+0
   \   00000128   0200000A           BEQ      ??CheckCurrentCell_6
    611          
    612            if ((LocFound == 0) && (AutoLocation == true)) {
    613              if(AddTo_db()) LocFound = 1;
   \   0000012C   ........           BL       ??AddTo_db
   \   00000130   000050E3           CMP      R0,#+0
   \   00000134   0160A013           MOVNE    R6,#+1
    614            }
    615          
    616            if(CellNameID != empty) TextID_Destroy(CellNameID);
   \                     ??CheckCurrentCell_6:
   \   00000138   ........           LDR      R0,??DataTable89  ;; timer_disable + 608
   \   0000013C   9014E0E3           MVN      R1,#-1879048192
   \   00000140   000090E5           LDR      R0,[R0, #+0]
   \   00000144   010050E1           CMP      R0,R1
   \   00000148   0200000A           BEQ      ??CheckCurrentCell_7
   \   0000014C   ........           LDR      R0,??DataTable89  ;; timer_disable + 608
   \   00000150   000090E5           LDR      R0,[R0, #+0]
   \   00000154   610100EF           SWI      +353
    617            CellNameID = TextID_Create(CellNameStatus,ENC_UCS2,TEXTID_ANY_LEN);
   \                     ??CheckCurrentCell_7:
   \   00000158   FF20A0E3           MOV      R2,#+255
   \   0000015C   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000160   0010A0E3           MOV      R1,#+0
   \   00000164   7800A0E3           MOV      R0,#+120
   \   00000168   D00E80E3           ORR      R0,R0,#0xD00
   \   0000016C   040080E0           ADD      R0,R0,R4
   \   00000170   5D0100EF           SWI      +349
   \   00000174   600284E5           STR      R0,[R4, #+608]
    618          
    619            UpdateLocationImage();
   \   00000178   ........           BL       ??UpdateLocationImage
    620          
    621            if(cfg_show_type) InvalidateAll();
   \   0000017C   ........           LDR      R0,??DataTable90  ;; cfg_show_type
   \   00000180   000090E5           LDR      R0,[R0, #+0]
   \   00000184   000050E3           CMP      R0,#+0
   \   00000188   0000000A           BEQ      ??CheckCurrentCell_8
   \   0000018C   ........           BL       ??InvalidateAll
    622          
    623            return LocFound;
   \                     ??CheckCurrentCell_8:
   \   00000190   0600A0E1           MOV      R0,R6
   \   00000194   14D08DE2           ADD      SP,SP,#+20
   \   00000198   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??CheckCurrentCell_1:
   \   0000019C   ........           DC32     `?<Constant "[%s]">` + 28
   \   000001A0   ........           DC32     `?<Constant "[%s]">` + 8
   \   000001A4   ........           DC32     `?<Constant "[%s]">`
   \   000001A8   ........           DC32     timer_disable + 1400
    624          }
    625          

   \                                 In segment CODE, align 4, keep-with-next
    626          void CheckCellName()
    627          {
    628            int file;
    629          
    630            vibrate(cfg_vibrate);
   \                     ??CheckCellName:
   \   00000000   ........           LDR      R0,??DataTable91  ;; cfg_vibrate
   \   00000004   F0402DE9           PUSH     {R4-R7,LR}
    631          
    632            prevLAC = currentLAC;
   \   00000008   ........           LDR      R4,??DataTable121  ;; timer_disable
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   000090E5           LDR      R0,[R0, #+0]
    633            prevCID = currentCID;
    634            wstrcpy(prevCellName, CellName);
   \   00000014   7860A0E3           MOV      R6,#+120
   \   00000018   ........           BL       ??vibrate
   \   0000001C   B200D4E1           LDRH     R0,[R4, #+2]
   \   00000020   906E86E3           ORR      R6,R6,#0x900
   \   00000024   407E46E2           SUB      R7,R6,#+1024
   \   00000028   B600C4E1           STRH     R0,[R4, #+6]
   \   0000002C   B400D4E1           LDRH     R0,[R4, #+4]
   \   00000030   041087E0           ADD      R1,R7,R4
   \   00000034   B800C4E1           STRH     R0,[R4, #+8]
   \   00000038   040086E0           ADD      R0,R6,R4
   \   0000003C   520100EF           SWI      +338
    635          
    636          
    637            int LocFound = CheckCurrentCell();
   \   00000040   ........           BL       ??CheckCurrentCell
   \   00000044   0050A0E1           MOV      R5,R0
    638          
    639            if((( wstrcmp(CellName, prevCellName) != 0) && (LocFound == 1)) || (LocFound != prevLocFound))
   \   00000048   041086E0           ADD      R1,R6,R4
   \   0000004C   040087E0           ADD      R0,R7,R4
   \   00000050   560100EF           SWI      +342
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0100000A           BEQ      ??CheckCellName_1
   \   0000005C   010055E3           CMP      R5,#+1
   \   00000060   0300000A           BEQ      ??CheckCellName_2
   \                     ??CheckCellName_1:
   \   00000064   D4019FE5           LDR      R0,??CheckCellName_3  ;; timer_disable + 588
   \   00000068   000090E5           LDR      R0,[R0, #+0]
   \   0000006C   000055E1           CMP      R5,R0
   \   00000070   0400000A           BEQ      ??CheckCellName_4
    640            {
    641              Timer_ReSet(&timerNewAction, NewActionTimeout, onTimerNewAction, 0);
   \                     ??CheckCellName_2:
   \   00000074   ........           LDR      R2,??DataTable99  ;; ??onTimerNewAction
   \   00000078   501294E5           LDR      R1,[R4, #+592]
   \   0000007C   0030A0E3           MOV      R3,#+0
   \   00000080   0C0084E2           ADD      R0,R4,#+12
   \   00000084   280100EF           SWI      +296
    642            }
    643          
    644            prevLocFound = LocFound;
   \                     ??CheckCellName_4:
   \   00000088   B0019FE5           LDR      R0,??CheckCellName_3  ;; timer_disable + 588
   \   0000008C   005080E5           STR      R5,[R0, #+0]
    645          
    646            if(cfg_log_mode == 0) return;
   \   00000090   AC019FE5           LDR      R0,??CheckCellName_3+0x4  ;; cfg_log_mode
   \   00000094   000090E5           LDR      R0,[R0, #+0]
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   F380BD08           POPEQ    {R0,R1,R4-R7,PC}
    647            if((cfg_log_mode == 0x02) && (wstrcmp(CellName, prevCellName) == 0)) return;
   \   000000A0   9C019FE5           LDR      R0,??CheckCellName_3+0x4  ;; cfg_log_mode
   \   000000A4   000090E5           LDR      R0,[R0, #+0]
   \   000000A8   020050E3           CMP      R0,#+2
   \   000000AC   0400001A           BNE      ??CheckCellName_5
   \   000000B0   041086E0           ADD      R1,R6,R4
   \   000000B4   040087E0           ADD      R0,R7,R4
   \   000000B8   560100EF           SWI      +342
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   040000EA           B        ??CheckCellName_6
    648            if((cfg_log_mode == 0x03) && (LocFound == 0)) return;
   \                     ??CheckCellName_5:
   \   000000C4   78019FE5           LDR      R0,??CheckCellName_3+0x4  ;; cfg_log_mode
   \   000000C8   000090E5           LDR      R0,[R0, #+0]
   \   000000CC   030050E3           CMP      R0,#+3
   \   000000D0   0200001A           BNE      ??CheckCellName_7
   \   000000D4   000055E3           CMP      R5,#+0
   \                     ??CheckCellName_6:
   \   000000D8   0500001A           BNE      ??CheckCellName_8
   \   000000DC   F380BDE8           POP      {R0,R1,R4-R7,PC}
    649            if((cfg_log_mode == 0x04) && (LocFound == 1)) return;
   \                     ??CheckCellName_7:
   \   000000E0   5C019FE5           LDR      R0,??CheckCellName_3+0x4  ;; cfg_log_mode
   \   000000E4   000090E5           LDR      R0,[R0, #+0]
   \   000000E8   040050E3           CMP      R0,#+4
   \   000000EC   01005503           CMPEQ    R5,#+1
   \   000000F0   F380BD08           POPEQ    {R0,R1,R4-R7,PC}
    650          
    651            DATETIME dt;
    652            REQUEST_DATEANDTIME_GET(SYNC, &dt);
   \                     ??CheckCellName_8:
   \   000000F4   ........           LDR      R0,??DataTable98  ;; SYNC
   \   000000F8   0D10A0E1           MOV      R1,SP
   \   000000FC   000090E5           LDR      R0,[R0, #+0]
   \   00000100   6E0100EF           SWI      +366
    653          
    654            wchar_t * logFile = new wchar_t[16];
   \   00000104   2000A0E3           MOV      R0,#+32
   \   00000108   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   0000010C   0050A0E1           MOV      R5,R0
    655            if (cfg_date_format)
   \   00000110   30019FE5           LDR      R0,??CheckCellName_3+0x8  ;; cfg_date_format
   \   00000114   000090E5           LDR      R0,[R0, #+0]
   \   00000118   000050E3           CMP      R0,#+0
   \   0000011C   0600000A           BEQ      ??CheckCellName_9
    656              snwprintf(logFile, 11, _T("%02d-%02d-%04d."), dt.date.day, dt.date.mon, dt.date.year);
   \   00000120   B000DDE1           LDRH     R0,[SP, #+0]
   \   00000124   20219FE5           LDR      R2,??CheckCellName_3+0xC  ;; `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\` + 32
   \   00000128   01002DE9           PUSH     {R0}
   \   0000012C   0600DDE5           LDRB     R0,[SP, #+6]
   \   00000130   01002DE9           PUSH     {R0}
   \   00000134   0B30DDE5           LDRB     R3,[SP, #+11]
   \   00000138   050000EA           B        ??CheckCellName_10
    657            else
    658              snwprintf(logFile, 11, _T("%04d-%02d-%02d."), dt.date.year, dt.date.mon, dt.date.day);
   \                     ??CheckCellName_9:
   \   0000013C   0300DDE5           LDRB     R0,[SP, #+3]
   \   00000140   08219FE5           LDR      R2,??CheckCellName_3+0x10  ;; `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\`
   \   00000144   01002DE9           PUSH     {R0}
   \   00000148   0600DDE5           LDRB     R0,[SP, #+6]
   \   0000014C   01002DE9           PUSH     {R0}
   \   00000150   B830DDE1           LDRH     R3,[SP, #+8]
   \                     ??CheckCellName_10:
   \   00000154   0B10A0E3           MOV      R1,#+11
   \   00000158   0500A0E1           MOV      R0,R5
   \   0000015C   150100EF           SWI      +277
    659            wstrcat(logFile, (cfg_log_ext ? _T("ini"):_T("txt")));
   \   00000160   EC009FE5           LDR      R0,??CheckCellName_3+0x14  ;; cfg_log_ext
   \   00000164   08D08DE2           ADD      SP,SP,#+8
   \   00000168   000090E5           LDR      R0,[R0, #+0]
   \   0000016C   000050E3           CMP      R0,#+0
   \   00000170   E0109F15           LDRNE    R1,??CheckCellName_3+0x18  ;; `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\` + 64
   \   00000174   0500A0E1           MOV      R0,R5
   \   00000178   DC109F05           LDREQ    R1,??CheckCellName_3+0x1C  ;; `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\` + 144
   \   0000017C   540100EF           SWI      +340
    660          
    661            if ((file = _fopen(logFolder, logFile, FSX_O_CREAT|FSX_O_APPEND|FSX_O_RDWR, FSX_S_IREAD|FSX_S_IWRITE, 0)) >= 0)
   \   00000180   0000A0E3           MOV      R0,#+0
   \   00000184   01002DE9           PUSH     {R0}
   \   00000188   ........           LDR      R0,??DataTable95  ;; timer_disable + 632
   \   0000018C   603FA0E3           MOV      R3,#+384
   \   00000190   432FA0E3           MOV      R2,#+268
   \   00000194   0510A0E1           MOV      R1,R5
   \   00000198   160100EF           SWI      +278
   \   0000019C   0070B0E1           MOVS     R7,R0
   \   000001A0   04D08DE2           ADD      SP,SP,#+4
   \   000001A4   2200004A           BMI      ??CheckCellName_11
    662            {
    663              char * newlog = new char[strlen(logCellName) + 32];
   \   000001A8   B0009FE5           LDR      R0,??CheckCellName_3+0x20  ;; timer_disable + 1144
   \   000001AC   5A0100EF           SWI      +346
   \   000001B0   200080E2           ADD      R0,R0,#+32
   \   000001B4   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   000001B8   0060A0E1           MOV      R6,R0
    664              if(cfg_cellidmode == 0){
   \   000001BC   ........           LDR      R0,??DataTable96  ;; cfg_cellidmode
   \   000001C0   000090E5           LDR      R0,[R0, #+0]
   \   000001C4   000050E3           CMP      R0,#+0
    665                sprintf(newlog, "%02d:%02d:%02d - [%04X:%04X] %s\n", dt.time.hour, dt.time.min, dt.time.sec, currentLAC, currentCID, logCellName);
   \   000001C8   94109F05           LDREQ    R1,??CheckCellName_3+0x24  ;; `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\` + 108
   \   000001CC   7800A0E3           MOV      R0,#+120
    666              }
    667              else {
    668                sprintf(newlog, "%02d:%02d:%02d - [%05d:%05d] %s\n", dt.time.hour, dt.time.min, dt.time.sec, currentLAC, currentCID, logCellName);
   \   000001D0   90109F15           LDRNE    R1,??CheckCellName_3+0x28  ;; `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\` + 72
   \   000001D4   400E80E3           ORR      R0,R0,#0x400
   \   000001D8   040080E0           ADD      R0,R0,R4
   \   000001DC   01002DE9           PUSH     {R0}
   \   000001E0   B400D4E1           LDRH     R0,[R4, #+4]
   \   000001E4   01002DE9           PUSH     {R0}
   \   000001E8   B200D4E1           LDRH     R0,[R4, #+2]
   \   000001EC   01002DE9           PUSH     {R0}
   \   000001F0   1200DDE5           LDRB     R0,[SP, #+18]
   \   000001F4   01002DE9           PUSH     {R0}
   \   000001F8   1420DDE5           LDRB     R2,[SP, #+20]
   \   000001FC   1530DDE5           LDRB     R3,[SP, #+21]
   \   00000200   0600A0E1           MOV      R0,R6
   \   00000204   140100EF           SWI      +276
   \   00000208   10D08DE2           ADD      SP,SP,#+16
    669              }
    670          
    671              fwrite(file, newlog, strlen(newlog));
   \   0000020C   0600A0E1           MOV      R0,R6
   \   00000210   5A0100EF           SWI      +346
   \   00000214   0020A0E1           MOV      R2,R0
   \   00000218   0610A0E1           MOV      R1,R6
   \   0000021C   0700A0E1           MOV      R0,R7
   \   00000220   190100EF           SWI      +281
    672              fclose(file);
   \   00000224   0700A0E1           MOV      R0,R7
   \   00000228   170100EF           SWI      +279
    673              delete(newlog);
   \   0000022C   0600A0E1           MOV      R0,R6
   \   00000230   ........           _BLF     `??operator delete`,`??operator delete??rA`
    674            }
    675            delete(logFile);
   \                     ??CheckCellName_11:
   \   00000234   0500A0E1           MOV      R0,R5
   \   00000238   ........           _BLF     `??operator delete`,`??operator delete??rA`
    676            return;
   \   0000023C   F380BDE8           POP      {R0,R1,R4-R7,PC}  ;; return
   \                     ??CheckCellName_3:
   \   00000240   ........           DC32     timer_disable + 588
   \   00000244   ........           DC32     cfg_log_mode
   \   00000248   ........           DC32     cfg_date_format
   \   0000024C   ........           DC32     `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\` + 32
   \   00000250   ........           DC32     `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\`
   \   00000254   ........           DC32     cfg_log_ext
   \   00000258   ........           DC32     `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\` + 64
   \   0000025C   ........           DC32     `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\` + 144
   \   00000260   ........           DC32     timer_disable + 1144
   \   00000264   ........           DC32     `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\` + 108
   \   00000268   ........           DC32     `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\` + 72
    677          }
    678          

   \                                 In segment CODE, align 4, keep-with-next
    679          void onTimerNewAction(u16 timerID, LPARAM lparam)
    680          {
   \                     ??onTimerNewAction:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    681            wstrcpy(prevCellNameAction, CellNameAction);
   \   00000004   ........           LDR      R5,??DataTable121  ;; timer_disable
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   7860A0E3           MOV      R6,#+120
   \   00000010   B06E86E3           ORR      R6,R6,#0xB00
   \   00000014   407E46E2           SUB      R7,R6,#+1024
   \   00000018   051087E0           ADD      R1,R7,R5
   \   0000001C   050086E0           ADD      R0,R6,R5
   \   00000020   520100EF           SWI      +338
    682            wstrcpy(CellNameAction, CellName);
   \   00000024   600E46E2           SUB      R0,R6,#+1536
   \   00000028   051080E0           ADD      R1,R0,R5
   \   0000002C   050087E0           ADD      R0,R7,R5
   \   00000030   520100EF           SWI      +338
    683          
    684            int indx = getPlaceIndex(CellNameAction);
   \   00000034   050087E0           ADD      R0,R7,R5
   \   00000038   ........           BL       ??getPlaceIndex
   \   0000003C   0040A0E1           MOV      R4,R0
    685            if ( wstrcmp(CellNameAction, prevCellNameAction) != 0)
   \   00000040   051086E0           ADD      R1,R6,R5
   \   00000044   050087E0           ADD      R0,R7,R5
   \   00000048   560100EF           SWI      +342
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   1B00000A           BEQ      ??onTimerNewAction_1
    686            {
    687              vibrate(getVibrate(indx));
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   ........           BL       ??getVibrate
   \   0000005C   ........           BL       ??vibrate
    688          
    689              const wchar_t *soundFile = getSoundFile(indx);
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       ??getSoundFile
   \   00000068   0060B0E1           MOVS     R6,R0
    690              if(soundFile && (!GetSilent() || (cfg_silent==1)))
   \   0000006C   1400000A           BEQ      ??onTimerNewAction_1
   \   00000070   4B0200EF           SWI      +587
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   0300000A           BEQ      ??onTimerNewAction_2
   \   0000007C   D4009FE5           LDR      R0,??onTimerNewAction_3  ;; cfg_silent
   \   00000080   000090E5           LDR      R0,[R0, #+0]
   \   00000084   010050E3           CMP      R0,#+1
   \   00000088   0D00001A           BNE      ??onTimerNewAction_1
    691              {
    692                char vol;
    693                GetAudioSettings(2,&vol);
   \                     ??onTimerNewAction_2:
   \   0000008C   04108DE2           ADD      R1,SP,#+4
   \   00000090   0200A0E3           MOV      R0,#+2
   \   00000094   4D0200EF           SWI      +589
    694                extractdir(tmppath, tmpname, soundFile);
   \   00000098   A00E87E2           ADD      R0,R7,#+2560
   \   0000009C   057080E0           ADD      R7,R0,R5
   \   000000A0   808F40E2           SUB      R8,R0,#+512
   \   000000A4   0620A0E1           MOV      R2,R6
   \   000000A8   0710A0E1           MOV      R1,R7
   \   000000AC   050088E0           ADD      R0,R8,R5
   \   000000B0   ........           _BLF     ??extractdir,??extractdir??rA
    695                PlayFileV(tmppath, tmpname, vol);
   \   000000B4   0420DDE5           LDRB     R2,[SP, #+4]
   \   000000B8   0710A0E1           MOV      R1,R7
   \   000000BC   050088E0           ADD      R0,R8,R5
   \   000000C0   4A0200EF           SWI      +586
    696              }
    697            }
    698          
    699            int req_profile = getProfile(indx);
   \                     ??onTimerNewAction_1:
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   ........           BL       ??getProfile
   \   000000CC   0040A0E1           MOV      R4,R0
    700            int cur_profile;
    701            REQUEST_PROFILE_GETACTIVEPROFILE(SYNC , &cur_profile);
   \   000000D0   ........           LDR      R0,??DataTable98  ;; SYNC
   \   000000D4   0D10A0E1           MOV      R1,SP
   \   000000D8   000090E5           LDR      R0,[R0, #+0]
   \   000000DC   B40100EF           SWI      +436
    702            if(req_profile >= 0)
   \   000000E0   000054E3           CMP      R4,#+0
   \   000000E4   0700004A           BMI      ??onTimerNewAction_4
    703            {
    704              if(!equ2manual_profile(cur_profile))
   \   000000E8   00009DE5           LDR      R0,[SP, #+0]
   \   000000EC   ........           BL       ??equ2manual_profile
   \   000000F0   000050E3           CMP      R0,#+0
   \   000000F4   1100001A           BNE      ??onTimerNewAction_5
    705              {
    706                Profile_SetActive(req_profile,cfg_set_in_gdfs);
   \   000000F8   5C009FE5           LDR      R0,??onTimerNewAction_3+0x4  ;; cfg_set_in_gdfs
   \   000000FC   001090E5           LDR      R1,[R0, #+0]
   \   00000100   0400A0E1           MOV      R0,R4
   \   00000104   0C0000EA           B        ??onTimerNewAction_6
    707              }
    708            }
    709            else if(cfg_default_profile > 0)
   \                     ??onTimerNewAction_4:
   \   00000108   50009FE5           LDR      R0,??onTimerNewAction_3+0x8  ;; cfg_default_profile
   \   0000010C   000090E5           LDR      R0,[R0, #+0]
   \   00000110   010050E3           CMP      R0,#+1
   \   00000114   090000BA           BLT      ??onTimerNewAction_5
    710            {
    711              req_profile = cfg_default_profile - 1;
    712              if(!equ2manual_profile(cur_profile))
   \   00000118   00009DE5           LDR      R0,[SP, #+0]
   \   0000011C   ........           BL       ??equ2manual_profile
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   0500001A           BNE      ??onTimerNewAction_5
    713              {
    714                Profile_SetActive(req_profile,cfg_set_in_gdfs);
   \   00000128   2C009FE5           LDR      R0,??onTimerNewAction_3+0x4  ;; cfg_set_in_gdfs
   \   0000012C   001090E5           LDR      R1,[R0, #+0]
   \   00000130   28009FE5           LDR      R0,??onTimerNewAction_3+0x8  ;; cfg_default_profile
   \   00000134   000090E5           LDR      R0,[R0, #+0]
   \   00000138   010040E2           SUB      R0,R0,#+1
   \                     ??onTimerNewAction_6:
   \   0000013C   B50100EF           SWI      +437
    715              }
    716            }
    717          
    718            Timer_ReSet(&timerNewAction, NewActionTimeout, onTimerNewAction, 0);
   \                     ??onTimerNewAction_5:
   \   00000140   ........           LDR      R2,??DataTable99  ;; ??onTimerNewAction
   \   00000144   501295E5           LDR      R1,[R5, #+592]
   \   00000148   0030A0E3           MOV      R3,#+0
   \   0000014C   0C0085E2           ADD      R0,R5,#+12
   \   00000150   280100EF           SWI      +296
    719          }
   \   00000154   F381BDE8           POP      {R0,R1,R4-R8,PC}  ;; return
   \                     ??onTimerNewAction_3:
   \   00000158   ........           DC32     cfg_silent
   \   0000015C   ........           DC32     cfg_set_in_gdfs
   \   00000160   ........           DC32     cfg_default_profile
    720          

   \                                 In segment CODE, align 4, keep-with-next
    721          void onTimer(u16 timerID, LPARAM lparam)
    722          {
   \                     ??onTimer:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    723            PLMN_LAC_DESC plmn_lac;
    724            RAT_CI_DESC rat_ci;
    725            char CSReg;
    726            get_CellData(&plmn_lac,&rat_ci,&CSReg);
    727            currentLAC = plmn_lac.LAC[0]<<8|plmn_lac.LAC[1];
   \   00000004   ........           LDR      R4,??DataTable121  ;; timer_disable
   \   00000008   28D04DE2           SUB      SP,SP,#+40
   \   0000000C   0D20A0E1           MOV      R2,SP
   \   00000010   10108DE2           ADD      R1,SP,#+16
   \   00000014   04008DE2           ADD      R0,SP,#+4
   \   00000018   240300EF           SWI      +804
   \   0000001C   0C00DDE5           LDRB     R0,[SP, #+12]
   \   00000020   0D10DDE5           LDRB     R1,[SP, #+13]
   \   00000024   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000028   B200C4E1           STRH     R0,[R4, #+2]
    728            currentCID  = rat_ci.CI;
   \   0000002C   14109DE5           LDR      R1,[SP, #+20]
   \   00000030   B410C4E1           STRH     R1,[R4, #+4]
    729            if((currentLAC != prevLAC) || (currentCID != prevCID)) CheckCellName();
   \   00000034   B610D4E1           LDRH     R1,[R4, #+6]
   \   00000038   010050E1           CMP      R0,R1
   \   0000003C   0300001A           BNE      ??onTimer_1
   \   00000040   B400D4E1           LDRH     R0,[R4, #+4]
   \   00000044   B810D4E1           LDRH     R1,[R4, #+8]
   \   00000048   010050E1           CMP      R0,R1
   \   0000004C   0000000A           BEQ      ??onTimer_2
   \                     ??onTimer_1:
   \   00000050   ........           BL       ??CheckCellName
    730            if (visible && (cfg_location < 9)) {
   \                     ??onTimer_2:
   \   00000054   ........           LDR      R0,??DataTable119  ;; timer_disable + 625
   \   00000058   0000D0E5           LDRB     R0,[R0, #+0]
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   1000000A           BEQ      ??onTimer_3
   \   00000064   ........           LDR      R0,??DataTable102  ;; cfg_location
   \   00000068   000090E5           LDR      R0,[R0, #+0]
   \   0000006C   090050E3           CMP      R0,#+9
   \   00000070   0C0000AA           BGE      ??onTimer_3
    731              StatusIndication_SetItemText(SBY_GetStatusIndication(Find_StandbyBook()), wnd, TextID_Create(CellNameStatus,ENC_UCS2,TEXTID_ANY_LEN));
   \   00000074   FF20A0E3           MOV      R2,#+255
   \   00000078   FF2C82E3           ORR      R2,R2,#0xFF00
   \   0000007C   0010A0E3           MOV      R1,#+0
   \   00000080   7800A0E3           MOV      R0,#+120
   \   00000084   D00E80E3           ORR      R0,R0,#0xD00
   \   00000088   040080E0           ADD      R0,R0,R4
   \   0000008C   5D0100EF           SWI      +349
   \   00000090   0050A0E1           MOV      R5,R0
   \   00000094   310100EF           SWI      +305
   \   00000098   180200EF           SWI      +536
   \   0000009C   6C1294E5           LDR      R1,[R4, #+620]
   \   000000A0   0520A0E1           MOV      R2,R5
   \   000000A4   420100EF           SWI      +322
    732            }
    733            Timer_ReSet(&timer, cfg_update_interval, onTimer, 0);
   \                     ??onTimer_3:
   \   000000A8   ........           LDR      R0,??DataTable103  ;; cfg_update_interval
   \   000000AC   ........           LDR      R2,??DataTable168  ;; ??onTimer
   \   000000B0   001090E5           LDR      R1,[R0, #+0]
   \   000000B4   0C009FE5           LDR      R0,??onTimer_4   ;; timer_disable + 10
   \   000000B8   0030A0E3           MOV      R3,#+0
   \   000000BC   280100EF           SWI      +296
    734          }
   \   000000C0   28D08DE2           ADD      SP,SP,#+40
   \   000000C4   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??onTimer_4:
   \   000000C8   ........           DC32     timer_disable + 10
    735          

   \                                 In segment CODE, align 4, keep-with-next
    736          void Send_REDRAW_RELEASE()
    737          {
   \                     ??Send_REDRAW_RELEASE:
   \   00000000   10402DE9           PUSH     {R4,LR}
    738            REDRAW_RELEASE_MESSAGE * sbm = new REDRAW_RELEASE_MESSAGE;
   \   00000004   1800A0E3           MOV      R0,#+24
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   0040A0E1           MOV      R4,R0
    739          
    740            // Status
    741            sbm->SI_OldOnRedraw = Status_oldReDraw;
   \   00000010   ........           LDR      R0,??DataTable121  ;; timer_disable
   \   00000014   181290E5           LDR      R1,[R0, #+536]
   \   00000018   081084E5           STR      R1,[R4, #+8]
    742            sbm->SI_NewOnRedraw = Status_ReDraw;
   \   0000001C   ........           LDR      R1,??DataTable164  ;; ??Status_ReDraw
   \   00000020   0C1084E5           STR      R1,[R4, #+12]
    743            // Screen
    744            sbm->SB_OldOnRedraw = Display_oldReDraw;
   \   00000024   241290E5           LDR      R1,[R0, #+548]
   \   00000028   001084E5           STR      R1,[R4, #+0]
    745            sbm->SB_NewOnRedraw = Display_ReDraw;
   \   0000002C   ........           LDR      R1,??DataTable166  ;; ??Display_ReDraw
   \   00000030   041084E5           STR      R1,[R4, #+4]
    746            // Soft
    747            sbm->SK_OldOnRedraw = Soft_oldReDraw;
   \   00000034   300290E5           LDR      R0,[R0, #+560]
   \   00000038   100084E5           STR      R0,[R4, #+16]
    748            sbm->SK_NewOnRedraw = Soft_ReDraw;
   \   0000003C   ........           LDR      R0,??DataTable165  ;; ??Soft_ReDraw
   \   00000040   140084E5           STR      R0,[R4, #+20]
    749          
    750            // посылаем всем  мессагу со старыми и своими методами Redraw
    751            UI_Event_wData(SBY_REDRAW_RELEASE_EVENT, sbm, (void (*)(void*))mfree_adr());
   \   00000044   048100EF           SWI      +33028
   \   00000048   0020A0E1           MOV      R2,R0
   \   0000004C   0410A0E1           MOV      R1,R4
   \   00000050   E300A0E3           MOV      R0,#+227
   \   00000054   C00F80E3           ORR      R0,R0,#0x300
   \   00000058   A90100EF           SWI      +425
    752          }
   \   0000005C   1080BDE8           POP      {R4,PC}          ;; return
    753          

   \                                 In segment CODE, align 4, keep-with-next
    754          int SB_ELF_Killed(void *mess ,BOOK* book)
    755          {
    756            // если был убит эльф рисующий на ГЭ или просто нужно перетосовать методы
    757            REDRAW_RELEASE_MESSAGE * sbm =(REDRAW_RELEASE_MESSAGE*)mess;
    758            REDRAW_RELEASE_MESSAGE * ms = 0;
    759          
    760            //Проверим статус
    761            //его ли метод мы используем в качестве oldRedraw?
    762            if (sbm->SI_NewOnRedraw == Status_oldReDraw)
   \                     ??SB_ELF_Killed:
   \   00000000   84119FE5           LDR      R1,??SB_ELF_Killed_1  ;; timer_disable + 536
   \   00000004   70402DE9           PUSH     {R4-R6,LR}
   \   00000008   001091E5           LDR      R1,[R1, #+0]
   \   0000000C   0050A0E1           MOV      R5,R0
   \   00000010   0C0095E5           LDR      R0,[R5, #+12]
   \   00000014   0040A0E3           MOV      R4,#+0
   \   00000018   010050E1           CMP      R0,R1
   \   0000001C   1500001A           BNE      ??SB_ELF_Killed_2
    763            {
    764              ms = new REDRAW_RELEASE_MESSAGE;
    765              memcpy(ms, sbm, sizeof(REDRAW_RELEASE_MESSAGE));
    766          
    767              // если он был убит, то заменяем свой oldRedraw на его..
    768              if (sbm->SI_OldOnRedraw!=EMPTY_REDRAW_METHOD) Status_oldReDraw = sbm->SI_OldOnRedraw;
    769          
    770              // ставим свой метод наверх
    771              DISP_DESC_SetOnRedraw(DispObject_GetDESC(*GUI_status), Status_ReDraw);
   \   00000020   ........           LDR      R6,??DataTable164  ;; ??Status_ReDraw
   \   00000024   1800A0E3           MOV      R0,#+24
   \   00000028   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000002C   0040A0E1           MOV      R4,R0
   \   00000030   1820A0E3           MOV      R2,#+24
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   130100EF           SWI      +275
   \   0000003C   080095E5           LDR      R0,[R5, #+8]
   \   00000040   0010E0E3           MVN      R1,#+0
   \   00000044   010050E1           CMP      R0,R1
   \   00000048   3C019F15           LDRNE    R0,??SB_ELF_Killed_1  ;; timer_disable + 536
   \   0000004C   08109515           LDRNE    R1,[R5, #+8]
   \   00000050   00108015           STRNE    R1,[R0, #+0]
   \   00000054   ........           LDR      R0,??DataTable110  ;; timer_disable + 540
   \   00000058   000090E5           LDR      R0,[R0, #+0]
   \   0000005C   000090E5           LDR      R0,[R0, #+0]
   \   00000060   1F0200EF           SWI      +543
   \   00000064   0610A0E1           MOV      R1,R6
   \   00000068   280200EF           SWI      +552
    772          
    773              // и шлём мессагу снова, чтоб следующие ельфы сделали тоже самое
    774              ms->SI_OldOnRedraw = EMPTY_REDRAW_METHOD;
   \   0000006C   0000E0E3           MVN      R0,#+0
   \   00000070   080084E5           STR      R0,[R4, #+8]
    775              ms->SI_NewOnRedraw = Status_ReDraw;
   \   00000074   0C6084E5           STR      R6,[R4, #+12]
    776            }
    777          
    778            //Проверим главный экран
    779            //его ли метод мы используем в качестве oldRedraw?
    780            if (sbm->SB_NewOnRedraw == Display_oldReDraw)
   \                     ??SB_ELF_Killed_2:
   \   00000078   10119FE5           LDR      R1,??SB_ELF_Killed_1+0x4  ;; timer_disable + 548
   \   0000007C   040095E5           LDR      R0,[R5, #+4]
   \   00000080   001091E5           LDR      R1,[R1, #+0]
   \   00000084   010050E1           CMP      R0,R1
   \   00000088   1600001A           BNE      ??SB_ELF_Killed_3
    781            {
    782              if(!ms)
   \   0000008C   000054E3           CMP      R4,#+0
   \   00000090   0500001A           BNE      ??SB_ELF_Killed_4
    783              {
    784                ms = new REDRAW_RELEASE_MESSAGE;
   \   00000094   1800A0E3           MOV      R0,#+24
   \   00000098   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000009C   0040A0E1           MOV      R4,R0
    785                memcpy(ms, sbm, sizeof(REDRAW_RELEASE_MESSAGE));
   \   000000A0   1820A0E3           MOV      R2,#+24
   \   000000A4   0510A0E1           MOV      R1,R5
   \   000000A8   130100EF           SWI      +275
    786              }
    787          
    788              // если он был убит, то заменяем свой oldRedraw на его..
    789              if (sbm->SB_OldOnRedraw!=EMPTY_REDRAW_METHOD) Display_oldReDraw = sbm->SB_OldOnRedraw;
   \                     ??SB_ELF_Killed_4:
   \   000000AC   000095E5           LDR      R0,[R5, #+0]
    790          
    791              // ставим свой метод наверх
    792              DISP_DESC_SetOnRedraw(DispObject_GetDESC(GUI_display), Display_ReDraw);
   \   000000B0   ........           LDR      R6,??DataTable166  ;; ??Display_ReDraw
   \   000000B4   0010E0E3           MVN      R1,#+0
   \   000000B8   010050E1           CMP      R0,R1
   \   000000BC   CC009F15           LDRNE    R0,??SB_ELF_Killed_1+0x4  ;; timer_disable + 548
   \   000000C0   00109515           LDRNE    R1,[R5, #+0]
   \   000000C4   00108015           STRNE    R1,[R0, #+0]
   \   000000C8   ........           LDR      R0,??DataTable112  ;; timer_disable + 552
   \   000000CC   000090E5           LDR      R0,[R0, #+0]
   \   000000D0   1F0200EF           SWI      +543
   \   000000D4   0610A0E1           MOV      R1,R6
   \   000000D8   280200EF           SWI      +552
    793          
    794              // и шлём мессагу снова, чтоб следующие ельфы сделали тоже самое
    795              ms->SB_OldOnRedraw = EMPTY_REDRAW_METHOD;
   \   000000DC   0000E0E3           MVN      R0,#+0
   \   000000E0   000084E5           STR      R0,[R4, #+0]
    796              ms->SB_NewOnRedraw = Display_ReDraw;
   \   000000E4   046084E5           STR      R6,[R4, #+4]
    797            }
    798          
    799            //Проверим софт
    800            //его ли метод мы используем в качестве oldRedraw?
    801            if (sbm->SK_NewOnRedraw == Soft_oldReDraw)
   \                     ??SB_ELF_Killed_3:
   \   000000E8   ........           LDR      R1,??DataTable114  ;; timer_disable + 560
   \   000000EC   140095E5           LDR      R0,[R5, #+20]
   \   000000F0   001091E5           LDR      R1,[R1, #+0]
   \   000000F4   010050E1           CMP      R0,R1
   \   000000F8   1600001A           BNE      ??SB_ELF_Killed_5
    802            {
    803              if(!ms)
   \   000000FC   000054E3           CMP      R4,#+0
   \   00000100   0500001A           BNE      ??SB_ELF_Killed_6
    804              {
    805                ms = new REDRAW_RELEASE_MESSAGE;
   \   00000104   1800A0E3           MOV      R0,#+24
   \   00000108   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000010C   0040A0E1           MOV      R4,R0
    806                memcpy(ms, sbm, sizeof(REDRAW_RELEASE_MESSAGE));
   \   00000110   1820A0E3           MOV      R2,#+24
   \   00000114   0510A0E1           MOV      R1,R5
   \   00000118   130100EF           SWI      +275
    807              }
    808          
    809              // если он был убит, то заменяем свой oldRedraw на его..
    810              if (sbm->SK_OldOnRedraw!=EMPTY_REDRAW_METHOD) Soft_oldReDraw = sbm->SK_OldOnRedraw;
   \                     ??SB_ELF_Killed_6:
   \   0000011C   100095E5           LDR      R0,[R5, #+16]
   \   00000120   0010E0E3           MVN      R1,#+0
   \   00000124   010050E1           CMP      R0,R1
   \   00000128   ........           LDRNE    R0,??DataTable114  ;; timer_disable + 560
   \   0000012C   10109515           LDRNE    R1,[R5, #+16]
    811          
    812              // ставим свой метод наверх
    813              DISP_DESC_SetOnRedraw(DispObject_GetDESC(GUI_soft), Soft_ReDraw);
   \   00000130   ........           LDR      R5,??DataTable165  ;; ??Soft_ReDraw
   \   00000134   00108015           STRNE    R1,[R0, #+0]
   \   00000138   ........           LDR      R0,??DataTable116  ;; timer_disable + 564
   \   0000013C   000090E5           LDR      R0,[R0, #+0]
   \   00000140   1F0200EF           SWI      +543
   \   00000144   0510A0E1           MOV      R1,R5
   \   00000148   280200EF           SWI      +552
    814          
    815              // и шлём мессагу снова, чтоб следующие ельфы сделали тоже самое
    816              ms->SK_OldOnRedraw = EMPTY_REDRAW_METHOD;
   \   0000014C   0000E0E3           MVN      R0,#+0
   \   00000150   100084E5           STR      R0,[R4, #+16]
    817              ms->SK_NewOnRedraw = Soft_ReDraw;
   \   00000154   145084E5           STR      R5,[R4, #+20]
    818            }
    819            if(ms)
   \                     ??SB_ELF_Killed_5:
   \   00000158   000054E3           CMP      R4,#+0
   \   0000015C   0800000A           BEQ      ??SB_ELF_Killed_7
    820            {
    821              UI_Event_wData(SBY_REDRAW_RELEASE_EVENT ,ms,(void (*)(void*))mfree_adr());
   \   00000160   048100EF           SWI      +33028
   \   00000164   0020A0E1           MOV      R2,R0
   \   00000168   0410A0E1           MOV      R1,R4
   \   0000016C   E300A0E3           MOV      R0,#+227
   \   00000170   C00F80E3           ORR      R0,R0,#0x300
   \   00000174   A90100EF           SWI      +425
    822              return(BLOCK_EVENT_GLOBALLY);
   \   00000178   9A00A0E3           MOV      R0,#+154
   \   0000017C   800F80E3           ORR      R0,R0,#0x200
   \   00000180   7080BDE8           POP      {R4-R6,PC}
    823            }
    824            return(0);
   \                     ??SB_ELF_Killed_7:
   \   00000184   0000A0E3           MOV      R0,#+0
   \   00000188   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??SB_ELF_Killed_1:
   \   0000018C   ........           DC32     timer_disable + 536
   \   00000190   ........           DC32     timer_disable + 548
    825          }

   \                                 In segment CODE, align 4, keep-with-next
    826          int TerminateElf(void * ,BOOK* book)
    827          {
   \                     ??TerminateElf:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    828            Send_REDRAW_RELEASE();
   \   00000008   ........           BL       ??Send_REDRAW_RELEASE
    829            FreeBook(book);
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   2F0100EF           SWI      +303
    830            return(1);
   \   00000014   0100A0E3           MOV      R0,#+1
   \   00000018   1080BDE8           POP      {R4,PC}          ;; return
    831          }
    832          

   \                                 In segment CODE, align 4, keep-with-next
    833          int ShowAuthorInfo(void *mess ,BOOK* book)
    834          {
    835          #if (!defined(LANG_RU) && !defined(LANG_EN))
    836            MessageBox(EMPTY_TEXTID,TextID_Create( LELFNAME _T("\n") LELFVERSION _T("\n") LAUTHORINFO _T("\n") LTRANSLATED TRANSLATED_BY,0,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
    837          #else
    838            MessageBox(EMPTY_TEXTID,TextID_Create( LELFNAME _T("\n") LELFVERSION _T("\n") LAUTHORINFO,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
   \                     ??ShowAuthorInfo:
   \   00000000   44009FE5           LDR      R0,??ShowAuthorInfo_1  ;; `?<Constant L"\\x4d\\x69\\x6e\\x69\\x47\\x50\\x53\\xa\\x_1`
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   FF40A0E3           MOV      R4,#+255
   \   00000010   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000014   0420A0E1           MOV      R2,R4
   \   00000018   5D0100EF           SWI      +349
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   02002DE9           PUSH     {R1}
   \   00000024   0130A0E3           MOV      R3,#+1
   \   00000028   0420A0E1           MOV      R2,R4
   \   0000002C   8810A0E3           MOV      R1,#+136
   \   00000030   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000034   02002DE9           PUSH     {R1}
   \   00000038   0010A0E1           MOV      R1,R0
   \   0000003C   9004E0E3           MVN      R0,#-1879048192
   \   00000040   570200EF           SWI      +599
    839          #endif
    840            return(1);
   \   00000044   0100A0E3           MOV      R0,#+1
   \   00000048   1680BDE8           POP      {R1,R2,R4,PC}    ;; return
   \                     ??ShowAuthorInfo_1:
   \   0000004C   ........           DC32     `?<Constant L"\\x4d\\x69\\x6e\\x69\\x47\\x50\\x53\\xa\\x_1`
    841          }
    842          

   \                                 In segment CODE, align 4, keep-with-next
    843          static int onReconfigElf(void *mess , BOOK *book)
    844          {
   \                     ??onReconfigElf:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    845            RECONFIG_EVENT_DATA *reconf=(RECONFIG_EVENT_DATA *)mess;
    846            int result=0;
    847            if (wstrcmpi(reconf->path,successed_config_path)==0 && wstrcmpi(reconf->name,successed_config_name)==0)
   \   00000008   ........           LDR      R0,??DataTable125  ;; successed_config_path
   \   0000000C   0050A0E3           MOV      R5,#+0
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   9F0200EF           SWI      +671
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   2F00001A           BNE      ??onReconfigElf_1
   \   00000024   ........           LDR      R0,??DataTable124  ;; successed_config_name
   \   00000028   001090E5           LDR      R1,[R0, #+0]
   \   0000002C   800084E2           ADD      R0,R4,#+128
   \   00000030   9F0200EF           SWI      +671
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   2900001A           BNE      ??onReconfigElf_1
    848            {
    849              MessageBox(EMPTY_TEXTID, TextID_Create(LG_UPDSETTING,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
   \   0000003C   A8009FE5           LDR      R0,??onReconfigElf_2  ;; `?<Constant L"\\x4d\\x69\\x6e\\x69\\x47\\x50\\x53\\x27\\`
   \   00000040   FF40A0E3           MOV      R4,#+255
   \   00000044   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000048   0420A0E1           MOV      R2,R4
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   5D0100EF           SWI      +349
   \   00000054   0510A0E1           MOV      R1,R5
   \   00000058   02002DE9           PUSH     {R1}
   \   0000005C   0130A0E3           MOV      R3,#+1
   \   00000060   0420A0E1           MOV      R2,R4
   \   00000064   8810A0E3           MOV      R1,#+136
   \   00000068   4C1D81E3           ORR      R1,R1,#0x1300
   \   0000006C   02002DE9           PUSH     {R1}
   \   00000070   0010A0E1           MOV      R1,R0
   \   00000074   9004E0E3           MVN      R0,#-1879048192
   \   00000078   570200EF           SWI      +599
    850              InitVar();
   \   0000007C   ........           BL       ??InitVar
    851              CheckCurrentCell();
   \   00000080   ........           BL       ??CheckCurrentCell
    852          
    853              if (visible && (cfg_location < 9)) {
   \   00000084   ........           LDR      R0,??DataTable119  ;; timer_disable + 625
   \   00000088   0000D0E5           LDRB     R0,[R0, #+0]
   \   0000008C   08D08DE2           ADD      SP,SP,#+8
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   1100000A           BEQ      ??onReconfigElf_3
   \   00000098   ........           LDR      R0,??DataTable127  ;; cfg_location
   \   0000009C   000090E5           LDR      R0,[R0, #+0]
   \   000000A0   090050E3           CMP      R0,#+9
   \   000000A4   0D0000AA           BGE      ??onReconfigElf_3
    854                StatusIndication_SetItemText(SBY_GetStatusIndication(Find_StandbyBook()), wnd, TextID_Create(CellNameStatus,ENC_UCS2,TEXTID_ANY_LEN));
   \   000000A8   ........           LDR      R4,??DataTable121  ;; timer_disable
   \   000000AC   FF20A0E3           MOV      R2,#+255
   \   000000B0   FF2C82E3           ORR      R2,R2,#0xFF00
   \   000000B4   0010A0E3           MOV      R1,#+0
   \   000000B8   7800A0E3           MOV      R0,#+120
   \   000000BC   D00E80E3           ORR      R0,R0,#0xD00
   \   000000C0   040080E0           ADD      R0,R0,R4
   \   000000C4   5D0100EF           SWI      +349
   \   000000C8   0050A0E1           MOV      R5,R0
   \   000000CC   310100EF           SWI      +305
   \   000000D0   180200EF           SWI      +536
   \   000000D4   6C1294E5           LDR      R1,[R4, #+620]
   \   000000D8   0520A0E1           MOV      R2,R5
   \   000000DC   420100EF           SWI      +322
    855              }
    856          
    857              result=1;
   \                     ??onReconfigElf_3:
   \   000000E0   0150A0E3           MOV      R5,#+1
    858            }
    859            return(result);
   \                     ??onReconfigElf_1:
   \   000000E4   0500A0E1           MOV      R0,R5
   \   000000E8   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??onReconfigElf_2:
   \   000000EC   ........           DC32     `?<Constant L"\\x4d\\x69\\x6e\\x69\\x47\\x50\\x53\\x27\\`
    860          }
    861          

   \                                 In segment CODE, align 4, keep-with-next
    862          int onBcfgConfig(void* mess, BOOK* bk)
    863          {
    864            FSTAT _fstat;
    865          
    866            extractdir(tmppath, tmpname, cfg_bcfgedit);
   \                     ??onBcfgConfig:
   \   00000000   20219FE5           LDR      R2,??onBcfgConfig_1+0x4  ;; cfg_bcfgedit
   \   00000004   70402DE9           PUSH     {R4-R6,LR}
   \   00000008   ........           LDR      R4,??DataTable171  ;; timer_disable
   \   0000000C   1CD04DE2           SUB      SP,SP,#+28
   \   00000010   7800A0E3           MOV      R0,#+120
   \   00000014   440D80E3           ORR      R0,R0,#0x1100
   \   00000018   045080E0           ADD      R5,R0,R4
   \   0000001C   806F40E2           SUB      R6,R0,#+512
   \   00000020   0510A0E1           MOV      R1,R5
   \   00000024   040086E0           ADD      R0,R6,R4
   \   00000028   ........           _BLF     ??extractdir,??extractdir??rA
    867            if(fstat(tmppath,tmpname,&_fstat)==0)
   \   0000002C   0D20A0E1           MOV      R2,SP
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   040086E0           ADD      R0,R6,R4
   \   00000038   1C0100EF           SWI      +284
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0B00000A           BEQ      ??onBcfgConfig_2
    868            {
    869            }
    870            else if(fstat(GetDir(DIR_ELFS|MEM_INTERNAL), tmpname,&_fstat)==0)
   \   00000044   1100A0E3           MOV      R0,#+17
   \   00000048   050100EF           SWI      +261
   \   0000004C   ........           LDR      R1,??DataTable126  ;; timer_disable + 4472
   \   00000050   0D20A0E1           MOV      R2,SP
   \   00000054   1C0100EF           SWI      +284
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   1500001A           BNE      ??onBcfgConfig_3
    871            {
    872              wstrcpy(tmppath,GetDir(DIR_ELFS|MEM_INTERNAL));
   \   00000060   1100A0E3           MOV      R0,#+17
   \                     ??onBcfgConfig_4:
   \   00000064   050100EF           SWI      +261
   \   00000068   0010A0E1           MOV      R1,R0
   \   0000006C   B8009FE5           LDR      R0,??onBcfgConfig_1+0x8  ;; timer_disable + 3960
   \   00000070   520100EF           SWI      +338
    873            }
    874            else if(fstat(GetDir(DIR_ELFS|MEM_EXTERNAL), tmpname,&_fstat)==0)
    875            {
    876              wstrcpy(tmppath,GetDir(DIR_ELFS|MEM_EXTERNAL));
    877            }
    878            else
    879            {
    880              MessageBox(EMPTY_TEXTID, TextID_Create(LG_GFGBCFGEDITNOTFOUND,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
    881              return 1;
    882            }
    883            wstrcat(tmppath,L"/");
   \                     ??onBcfgConfig_2:
   \   00000074   2A1F8FE2           ADR      R1,??onBcfgConfig_1  ;; 0x2F, 0x00, 0x00, 0x00
   \   00000078   040086E0           ADD      R0,R6,R4
   \   0000007C   540100EF           SWI      +340
    884            wstrcat(tmppath, tmpname);
   \   00000080   800F86E2           ADD      R0,R6,#+512
   \   00000084   041080E0           ADD      R1,R0,R4
   \   00000088   040086E0           ADD      R0,R6,R4
   \   0000008C   540100EF           SWI      +340
    885            elfload(tmppath, (void*)successed_config_path, (void*)successed_config_name,0);
   \   00000090   ........           LDR      R0,??DataTable124  ;; successed_config_name
   \   00000094   0030A0E3           MOV      R3,#+0
   \   00000098   002090E5           LDR      R2,[R0, #+0]
   \   0000009C   ........           LDR      R0,??DataTable125  ;; successed_config_path
   \   000000A0   001090E5           LDR      R1,[R0, #+0]
   \   000000A4   040086E0           ADD      R0,R6,R4
   \   000000A8   0D0100EF           SWI      +269
    886            return 1;
   \   000000AC   0100A0E3           MOV      R0,#+1
   \   000000B0   1CD08DE2           ADD      SP,SP,#+28
   \   000000B4   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??onBcfgConfig_3:
   \   000000B8   1000A0E3           MOV      R0,#+16
   \   000000BC   050100EF           SWI      +261
   \   000000C0   ........           LDR      R1,??DataTable126  ;; timer_disable + 4472
   \   000000C4   0D20A0E1           MOV      R2,SP
   \   000000C8   1C0100EF           SWI      +284
   \   000000CC   000050E3           CMP      R0,#+0
   \   000000D0   1000A003           MOVEQ    R0,#+16
   \   000000D4   E2FFFF0A           BEQ      ??onBcfgConfig_4
   \   000000D8   50009FE5           LDR      R0,??onBcfgConfig_1+0xC  ;; `?<Constant L"\\x42\\x63\\x66\\x67\\x45\\x64\\x69\\x74\\`
   \   000000DC   FF40A0E3           MOV      R4,#+255
   \   000000E0   FF4C84E3           ORR      R4,R4,#0xFF00
   \   000000E4   0420A0E1           MOV      R2,R4
   \   000000E8   0010A0E3           MOV      R1,#+0
   \   000000EC   5D0100EF           SWI      +349
   \   000000F0   0010A0E3           MOV      R1,#+0
   \   000000F4   02002DE9           PUSH     {R1}
   \   000000F8   0130A0E3           MOV      R3,#+1
   \   000000FC   0420A0E1           MOV      R2,R4
   \   00000100   411E86E2           ADD      R1,R6,#+1040
   \   00000104   02002DE9           PUSH     {R1}
   \   00000108   0010A0E1           MOV      R1,R0
   \   0000010C   9004E0E3           MVN      R0,#-1879048192
   \   00000110   570200EF           SWI      +599
   \   00000114   0100A0E3           MOV      R0,#+1
   \   00000118   08D08DE2           ADD      SP,SP,#+8
   \   0000011C   1CD08DE2           ADD      SP,SP,#+28
   \   00000120   7080BDE8           POP      {R4-R6,PC}
   \                     ??onBcfgConfig_1:
   \   00000124   2F000000           DC8      0x2F, 0x00, 0x00, 0x00
   \   00000128   ........           DC32     cfg_bcfgedit
   \   0000012C   ........           DC32     timer_disable + 3960
   \   00000130   ........           DC32     `?<Constant L"\\x42\\x63\\x66\\x67\\x45\\x64\\x69\\x74\\`
    887          }
    888          

   \                                 In segment DYN_PAGE, align 4, align-sorted
    889          const PAGE_MSG MiniGPS_BasePageEvents[]@ "DYN_PAGE" ={
   \                     MiniGPS_BasePageEvents:
   \   00000000   E3030000....       DC32 995, ??SB_ELF_Killed, 997, ??TerminateElf, 998, ??ShowAuthorInfo
   \              ....E5030000
   \              ........E603
   \              0000........
   \   00000018   E4030000....       DC32 996, ??onReconfigElf, 64, 0H
   \              ....40000000
   \              00000000    
    890            SBY_REDRAW_RELEASE_EVENT,  SB_ELF_Killed,
    891            ELF_TERMINATE_EVENT,       TerminateElf,
    892            ELF_SHOW_INFO_EVENT,       ShowAuthorInfo,
    893            ELF_RECONFIG_EVENT,        onReconfigElf,
    894            NIL_EVENT_TAG,             NULL
    895          };
    896          
    897          PAGE_DESC base_page ={"MiniGPS_BasePage",0,MiniGPS_BasePageEvents};
    898          
    899          

   \                                 In segment CODE, align 4, keep-with-next
    900          void elf_exit(void)
    901          {
   \                     ??elf_exit:
   \   00000000   00402DE9           PUSH     {LR}
    902            kill_data(&ELF_BEGIN, (void(*)(void*))mfree_adr());
   \   00000004   048100EF           SWI      +33028
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??elf_exit_1  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??elf_exit_1:
   \   00000018   ........           DC32     ELF_BEGIN
    903          }
    904          

   \                                 In segment CODE, align 4, keep-with-next
    905          int isMiniGPSBook(BOOK * book)
    906          {
    907            if(!strcmp(book->xbook->name,myappname)) return 1;
   \                     ??isMiniGPSBook:
   \   00000000   20109FE5           LDR      R1,??isMiniGPSBook_1  ;; myappname
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   040090E5           LDR      R0,[R0, #+4]
   \   00000010   590100EF           SWI      +345
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   0080BD08           POPEQ    {PC}
    908            return 0;
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   0080BDE8           POP      {PC}             ;; return
   \                     ??isMiniGPSBook_1:
   \   00000028   ........           DC32     myappname
    909          }
    910          

   \                                 In segment CODE, align 4, keep-with-next
    911          void ShowHideProc()
    912          {
    913            if(cfg_location < 9)
   \                     ??ShowHideProc:
   \   00000000   ........           LDR      R0,??DataTable127  ;; cfg_location
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   090050E3           CMP      R0,#+9
   \   00000010   170000AA           BGE      ??ShowHideProc_1
    914            {
    915              if (visible)
   \   00000014   ........           LDR      R0,??DataTable128  ;; timer_disable + 625
   \   00000018   0000D0E5           LDRB     R0,[R0, #+0]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0500000A           BEQ      ??ShowHideProc_2
    916              {
    917                StatusIndication_SetItemText(SBY_GetStatusIndication(Find_StandbyBook()), wnd, empty);
   \   00000024   310100EF           SWI      +305
   \   00000028   180200EF           SWI      +536
   \   0000002C   54109FE5           LDR      R1,??ShowHideProc_3  ;; timer_disable + 620
   \   00000030   9024E0E3           MVN      R2,#-1879048192
   \   00000034   001091E5           LDR      R1,[R1, #+0]
   \   00000038   0C0000EA           B        ??ShowHideProc_4
    918              }
    919              else
    920              {
    921                StatusIndication_SetItemText(SBY_GetStatusIndication(Find_StandbyBook()), wnd, TextID_Create(CellNameStatus,ENC_UCS2,TEXTID_ANY_LEN));
   \                     ??ShowHideProc_2:
   \   0000003C   ........           LDR      R4,??DataTable171  ;; timer_disable
   \   00000040   FF20A0E3           MOV      R2,#+255
   \   00000044   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000048   0010A0E3           MOV      R1,#+0
   \   0000004C   7800A0E3           MOV      R0,#+120
   \   00000050   D00E80E3           ORR      R0,R0,#0xD00
   \   00000054   040080E0           ADD      R0,R0,R4
   \   00000058   5D0100EF           SWI      +349
   \   0000005C   0050A0E1           MOV      R5,R0
   \   00000060   310100EF           SWI      +305
   \   00000064   180200EF           SWI      +536
   \   00000068   6C1294E5           LDR      R1,[R4, #+620]
   \   0000006C   0520A0E1           MOV      R2,R5
   \                     ??ShowHideProc_4:
   \   00000070   420100EF           SWI      +322
    922              }
    923            }
    924            visible = !visible;
   \                     ??ShowHideProc_1:
   \   00000074   ........           LDR      R4,??DataTable171  ;; timer_disable
   \   00000078   7102D4E5           LDRB     R0,[R4, #+625]
   \   0000007C   010020E2           EOR      R0,R0,#0x1
   \   00000080   7102C4E5           STRB     R0,[R4, #+625]
    925          }
   \   00000084   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??ShowHideProc_3:
   \   00000088   ........           DC32     timer_disable + 620
    926          

   \                                 In segment CODE, align 4, keep-with-next
    927          void CellIdProc()
    928          {
    929            showCellID = !showCellID;
   \                     ??CellIdProc:
   \   00000000   ........           LDR      R0,??DataTable171  ;; timer_disable
   \   00000004   7212D0E5           LDRB     R1,[R0, #+626]
   \   00000008   011021E2           EOR      R1,R1,#0x1
   \   0000000C   7212C0E5           STRB     R1,[R0, #+626]
    930            CheckCurrentCell();
   \   00000010   ........           B        ??CheckCurrentCell  ;; tailcall
    931          }
    932          

   \                                 In segment CODE, align 4, keep-with-next
    933          void OKPressed(BOOK * bk, wchar_t *string, int len)
    934          {
   \                     ??OKPressed:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    935            MyBOOK * myBook=(MyBOOK *)bk;
    936            wstrcpy(SIwstr, string);
   \   00000008   38009FE5           LDR      R0,??OKPressed_1  ;; timer_disable + 4984
   \   0000000C   520100EF           SWI      +338
    937            FREE_GUI(myBook->text_input);
   \   00000010   200094E5           LDR      R0,[R4, #+32]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200000A           BEQ      ??OKPressed_2
   \   0000001C   CE0100EF           SWI      +462
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   200084E5           STR      R0,[R4, #+32]
    938            AutoLocation=true;
   \                     ??OKPressed_2:
   \   00000028   ........           LDR      R0,??DataTable138  ;; timer_disable + 627
   \   0000002C   0110A0E3           MOV      R1,#+1
   \   00000030   0010C0E5           STRB     R1,[R0, #+0]
    939            CheckCurrentCell();
   \   00000034   ........           BL       ??CheckCurrentCell
    940            BookObj_Hide((BOOK*)myBook,0);
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   710100EF           SWI      +369
    941          //  BookObj_SetFocus(Find_StandbyBook(),0);
    942            return;
   \   00000044   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??OKPressed_1:
   \   00000048   ........           DC32     timer_disable + 4984
    943          }
    944          

   \                                 In segment CODE, align 4, keep-with-next
    945          void BackPressed(BOOK * bk, u16 *string, int len)
    946          {
   \                     ??BackPressed:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    947            MyBOOK * myBook=(MyBOOK *)bk;
    948            FREE_GUI(myBook->text_input);
   \   00000008   200094E5           LDR      R0,[R4, #+32]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0200000A           BEQ      ??BackPressed_1
   \   00000014   CE0100EF           SWI      +462
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   200084E5           STR      R0,[R4, #+32]
    949            BookObj_Hide((BOOK*)myBook,0);
   \                     ??BackPressed_1:
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   710100EF           SWI      +369
    950          //  BookObj_SetFocus(Find_StandbyBook(),0);
    951            return;
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
    952          }
    953          

   \                                 In segment CODE, align 4, keep-with-next
    954          int NewKey(int key, int r1, int mode, LPARAM, DISP_OBJ*)
    955          {
   \                     ??NewKey:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0250A0E1           MOV      R5,R2
    956            if(!isKeylocked() || cfg_ignore_keylock)
   \   0000000C   B70100EF           SWI      +439
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0400000A           BEQ      ??NewKey_1
   \   00000018   4C029FE5           LDR      R0,??NewKey_2    ;; cfg_ignore_keylock
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   7080BD08           POPEQ    {R4-R6,PC}
    957            {
    958              if(Display_GetTopBook(0)==Find_StandbyBook())
   \   00000028   0000A0E3           MOV      R0,#+0
   \                     ??NewKey_1:
   \   0000002C   1B0300EF           SWI      +795
   \   00000030   0060A0E1           MOV      R6,R0
   \   00000034   310100EF           SWI      +305
   \   00000038   000056E1           CMP      R6,R0
   \   0000003C   8800001A           BNE      ??NewKey_3
    959              {
    960                if(cfg_ctrlmode == 0)
   \   00000040   28029FE5           LDR      R0,??NewKey_2+0x4  ;; cfg_ctrlmode
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0C00001A           BNE      ??NewKey_4
    961                {
    962                  if((key == cfg_menukey) && (mode == cfg_menukeymode))
   \   00000050   1C029FE5           LDR      R0,??NewKey_2+0x8  ;; cfg_menukey
   \   00000054   000090E5           LDR      R0,[R0, #+0]
   \   00000058   000054E1           CMP      R4,R0
   \   0000005C   8000001A           BNE      ??NewKey_3
   \   00000060   10029FE5           LDR      R0,??NewKey_2+0xC  ;; cfg_menukeymode
   \   00000064   000090E5           LDR      R0,[R0, #+0]
   \   00000068   000055E1           CMP      R5,R0
   \   0000006C   7C00001A           BNE      ??NewKey_3
    963                  {
    964                    ShowMenu(&MiniGPSBook->book);
   \   00000070   ........           LDR      R0,??DataTable172  ;; timer_disable + 532
   \   00000074   000090E5           LDR      R0,[R0, #+0]
   \   00000078   ........           _BLF     ??ShowMenu,??ShowMenu??rA
   \   0000007C   0000A0E3           MOV      R0,#+0
   \   00000080   7080BDE8           POP      {R4-R6,PC}
    965                  }
    966                }
    967                else
    968                {
    969                  if((key == cfg_showkey) && (mode == cfg_showkeymode))
   \                     ??NewKey_4:
   \   00000084   F0019FE5           LDR      R0,??NewKey_2+0x10  ;; cfg_showkey
   \   00000088   000090E5           LDR      R0,[R0, #+0]
   \   0000008C   000054E1           CMP      R4,R0
   \   00000090   0500001A           BNE      ??NewKey_5
   \   00000094   E4019FE5           LDR      R0,??NewKey_2+0x14  ;; cfg_showkeymode
   \   00000098   000090E5           LDR      R0,[R0, #+0]
   \   0000009C   000055E1           CMP      R5,R0
   \   000000A0   0100001A           BNE      ??NewKey_5
    970                  {
    971                    ShowHideProc();
   \   000000A4   ........           BL       ??ShowHideProc
   \   000000A8   6C0000EA           B        ??NewKey_6
    972                  }
    973                  else if((key == cfg_showcellid) && (mode == cfg_chowcellidmode))
   \                     ??NewKey_5:
   \   000000AC   D0019FE5           LDR      R0,??NewKey_2+0x18  ;; cfg_showcellid
   \   000000B0   000090E5           LDR      R0,[R0, #+0]
   \   000000B4   000054E1           CMP      R4,R0
   \   000000B8   0500001A           BNE      ??NewKey_7
   \   000000BC   C4019FE5           LDR      R0,??NewKey_2+0x1C  ;; cfg_chowcellidmode
   \   000000C0   000090E5           LDR      R0,[R0, #+0]
   \   000000C4   000055E1           CMP      R5,R0
   \   000000C8   0100001A           BNE      ??NewKey_7
    974                  {
    975                    CellIdProc();
   \   000000CC   ........           BL       ??CellIdProc
   \   000000D0   620000EA           B        ??NewKey_6
    976                  }
    977                  else if((key == cfg_autolocation) && (mode == cfg_autolocationmode))
   \                     ??NewKey_7:
   \   000000D4   B0019FE5           LDR      R0,??NewKey_2+0x20  ;; cfg_autolocation
   \   000000D8   000090E5           LDR      R0,[R0, #+0]
   \   000000DC   000054E1           CMP      R4,R0
   \   000000E0   5E00001A           BNE      ??NewKey_6
   \   000000E4   A4019FE5           LDR      R0,??NewKey_2+0x24  ;; cfg_autolocationmode
   \   000000E8   000090E5           LDR      R0,[R0, #+0]
   \   000000EC   000055E1           CMP      R5,R0
   \   000000F0   5A00001A           BNE      ??NewKey_6
    978                  {
    979                    if (AutoLocation == false)
   \   000000F4   ........           LDR      R0,??DataTable138  ;; timer_disable + 627
   \   000000F8   0000D0E5           LDRB     R0,[R0, #+0]
   \   000000FC   000050E3           CMP      R0,#+0
   \   00000100   4300001A           BNE      ??NewKey_8
    980                    {
    981                      if(MiniGPSBook->text_input) GUIObject_Destroy(MiniGPSBook->text_input);
   \   00000104   ........           LDR      R0,??DataTable172  ;; timer_disable + 532
   \   00000108   000090E5           LDR      R0,[R0, #+0]
   \   0000010C   200090E5           LDR      R0,[R0, #+32]
   \   00000110   000050E3           CMP      R0,#+0
   \   00000114   0300000A           BEQ      ??NewKey_9
   \   00000118   ........           LDR      R0,??DataTable172  ;; timer_disable + 532
   \   0000011C   000090E5           LDR      R0,[R0, #+0]
   \   00000120   200090E5           LDR      R0,[R0, #+32]
   \   00000124   CE0100EF           SWI      +462
    982                      TEXTID text = TextID_Create(SIwstr,ENC_UCS2,TEXTID_ANY_LEN);
   \                     ??NewKey_9:
   \   00000128   ........           LDR      R4,??DataTable171  ;; timer_disable
   \   0000012C   FF60A0E3           MOV      R6,#+255
   \   00000130   FF6C86E3           ORR      R6,R6,#0xFF00
   \   00000134   0620A0E1           MOV      R2,R6
   \   00000138   0010A0E3           MOV      R1,#+0
   \   0000013C   7800A0E3           MOV      R0,#+120
   \   00000140   4C0D80E3           ORR      R0,R0,#0x1300
   \   00000144   040080E0           ADD      R0,R0,R4
   \   00000148   5D0100EF           SWI      +349
   \   0000014C   0050A0E1           MOV      R5,R0
    983                      MiniGPSBook->text_input = CreateStringInputVA(0,
    984                                                    VAR_BOOK(MiniGPSBook),
    985                                                    VAR_STRINP_FIXED_TEXT(TextID_Create(LG_CURRENTLOCATION,ENC_UCS2,TEXTID_ANY_LEN)),
    986                                                    VAR_STRINP_TEXT(text),
    987                                                    VAR_STRINP_NEW_LINE(0),
    988                                                    VAR_STRINP_ENABLE_EMPTY_STR(0),
    989                                                    VAR_STRINP_MAX_LEN(MAX_AUTOLOCATION_LEN - 1),
    990                                                    VAR_STRINP_MODE(IT_STRING),
    991                                                    VAR_OK_PROC(OKPressed),
    992                                                    VAR_PREV_ACTION_PROC(BackPressed),
    993                                                    0);
   \   00000150   3C019FE5           LDR      R0,??NewKey_2+0x28  ;; `?<Constant L"\\x41\\x75\\x74\\x6f\\x20\\x6c\\x6f\\x63\\` + 48
   \   00000154   0620A0E1           MOV      R2,R6
   \   00000158   0010A0E3           MOV      R1,#+0
   \   0000015C   5D0100EF           SWI      +349
   \   00000160   30319FE5           LDR      R3,??NewKey_2+0x2C  ;; VAR_ARG_STRINP_FIXED_TEXT
   \   00000164   0010A0E3           MOV      R1,#+0
   \   00000168   02002DE9           PUSH     {R1}
   \   0000016C   28119FE5           LDR      R1,??NewKey_2+0x30  ;; ??BackPressed
   \   00000170   02002DE9           PUSH     {R1}
   \   00000174   24119FE5           LDR      R1,??NewKey_2+0x34  ;; VAR_ARG_CALL_BACK_PREV_ACT
   \   00000178   02002DE9           PUSH     {R1}
   \   0000017C   20119FE5           LDR      R1,??NewKey_2+0x38  ;; ??OKPressed
   \   00000180   02002DE9           PUSH     {R1}
   \   00000184   1C119FE5           LDR      R1,??NewKey_2+0x3C  ;; VAR_ARG_CALL_BACK_OK
   \   00000188   02002DE9           PUSH     {R1}
   \   0000018C   0110A0E3           MOV      R1,#+1
   \   00000190   02002DE9           PUSH     {R1}
   \   00000194   10119FE5           LDR      R1,??NewKey_2+0x40  ;; VAR_ARG_STRINP_MODE
   \   00000198   02002DE9           PUSH     {R1}
   \   0000019C   5F10A0E3           MOV      R1,#+95
   \   000001A0   02002DE9           PUSH     {R1}
   \   000001A4   04119FE5           LDR      R1,??NewKey_2+0x44  ;; VAR_ARG_STRINP_MAX_LEN
   \   000001A8   02002DE9           PUSH     {R1}
   \   000001AC   0010A0E3           MOV      R1,#+0
   \   000001B0   02002DE9           PUSH     {R1}
   \   000001B4   F8109FE5           LDR      R1,??NewKey_2+0x48  ;; VAR_ARG_STRINP_EMPTY_STR_EN
   \   000001B8   02002DE9           PUSH     {R1}
   \   000001BC   0010A0E3           MOV      R1,#+0
   \   000001C0   02002DE9           PUSH     {R1}
   \   000001C4   EC109FE5           LDR      R1,??NewKey_2+0x4C  ;; VAR_ARG_STRINP_NEW_LINE
   \   000001C8   02002DE9           PUSH     {R1}
   \   000001CC   E8109FE5           LDR      R1,??NewKey_2+0x50  ;; VAR_ARG_STRINP_TEXT
   \   000001D0   20002DE9           PUSH     {R5}
   \   000001D4   02002DE9           PUSH     {R1}
   \   000001D8   E0109FE5           LDR      R1,??NewKey_2+0x54  ;; VAR_ARG_BOOK
   \   000001DC   01002DE9           PUSH     {R0}
   \   000001E0   142294E5           LDR      R2,[R4, #+532]
   \   000001E4   0000A0E3           MOV      R0,#+0
   \   000001E8   440100EF           SWI      +324
   \   000001EC   40D08DE2           ADD      SP,SP,#+64
   \   000001F0   0010A0E1           MOV      R1,R0
   \   000001F4   140294E5           LDR      R0,[R4, #+532]
   \   000001F8   201080E5           STR      R1,[R0, #+32]
    994                      BookObj_SetFocus( &MiniGPSBook->book,0);
   \   000001FC   0010A0E3           MOV      R1,#+0
   \   00000200   320100EF           SWI      +306
    995                      GUIObject_Show(MiniGPSBook->text_input);
   \   00000204   140294E5           LDR      R0,[R4, #+532]
   \   00000208   200090E5           LDR      R0,[R0, #+32]
   \   0000020C   340100EF           SWI      +308
   \   00000210   120000EA           B        ??NewKey_6
    996                    }
    997                    else
    998                    {
    999                      AutoLocation = false;
   \                     ??NewKey_8:
   \   00000214   ........           LDR      R0,??DataTable138  ;; timer_disable + 627
   \   00000218   0010A0E3           MOV      R1,#+0
   \   0000021C   0010C0E5           STRB     R1,[R0, #+0]
   1000                      MessageBox(EMPTY_TEXTID, TextID_Create(LG_AUTOLOCATIONOFF,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
   \   00000220   9C009FE5           LDR      R0,??NewKey_2+0x58  ;; `?<Constant L"\\x41\\x75\\x74\\x6f\\x20\\x6c\\x6f\\x63\\`
   \   00000224   FF60A0E3           MOV      R6,#+255
   \   00000228   FF6C86E3           ORR      R6,R6,#0xFF00
   \   0000022C   0620A0E1           MOV      R2,R6
   \   00000230   5D0100EF           SWI      +349
   \   00000234   0010A0E1           MOV      R1,R0
   \   00000238   0000A0E3           MOV      R0,#+0
   \   0000023C   01002DE9           PUSH     {R0}
   \   00000240   0130A0E3           MOV      R3,#+1
   \   00000244   0620A0E1           MOV      R2,R6
   \   00000248   8800A0E3           MOV      R0,#+136
   \   0000024C   4C0D80E3           ORR      R0,R0,#0x1300
   \   00000250   01002DE9           PUSH     {R0}
   \   00000254   9004E0E3           MVN      R0,#-1879048192
   \   00000258   570200EF           SWI      +599
   \   0000025C   08D08DE2           ADD      SP,SP,#+8
   1001                    }
   1002                  }
   1003                  InvalidateAll();
   \                     ??NewKey_6:
   \   00000260   ........           BL       ??InvalidateAll
   1004                }
   1005              }
   1006            }
   1007            return 0;
   \                     ??NewKey_3:
   \   00000264   0000A0E3           MOV      R0,#+0
   \   00000268   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??NewKey_2:
   \   0000026C   ........           DC32     cfg_ignore_keylock
   \   00000270   ........           DC32     cfg_ctrlmode
   \   00000274   ........           DC32     cfg_menukey
   \   00000278   ........           DC32     cfg_menukeymode
   \   0000027C   ........           DC32     cfg_showkey
   \   00000280   ........           DC32     cfg_showkeymode
   \   00000284   ........           DC32     cfg_showcellid
   \   00000288   ........           DC32     cfg_chowcellidmode
   \   0000028C   ........           DC32     cfg_autolocation
   \   00000290   ........           DC32     cfg_autolocationmode
   \   00000294   ........           DC32     `?<Constant L"\\x41\\x75\\x74\\x6f\\x20\\x6c\\x6f\\x63\\` + 48
   \   00000298   ........           DC32     VAR_ARG_STRINP_FIXED_TEXT
   \   0000029C   ........           DC32     ??BackPressed
   \   000002A0   ........           DC32     VAR_ARG_CALL_BACK_PREV_ACT
   \   000002A4   ........           DC32     ??OKPressed
   \   000002A8   ........           DC32     VAR_ARG_CALL_BACK_OK
   \   000002AC   ........           DC32     VAR_ARG_STRINP_MODE
   \   000002B0   ........           DC32     VAR_ARG_STRINP_MAX_LEN
   \   000002B4   ........           DC32     VAR_ARG_STRINP_EMPTY_STR_EN
   \   000002B8   ........           DC32     VAR_ARG_STRINP_NEW_LINE
   \   000002BC   ........           DC32     VAR_ARG_STRINP_TEXT
   \   000002C0   ........           DC32     VAR_ARG_BOOK
   \   000002C4   ........           DC32     `?<Constant L"\\x41\\x75\\x74\\x6f\\x20\\x6c\\x6f\\x63\\`
   1008          }
   1009          

   \                                 In segment CODE, align 4, keep-with-next
   1010          int StandbyModeActivatedHook(void *msg, BOOK * book, PAGE_DESC * page_desc, LPARAM ClientData, u16 event)
   1011          {
   1012              IsInStandby = true;
   \                     ??StandbyModeActivatedHook:
   \   00000000   ........           LDR      R0,??DataTable140  ;; timer_disable + 624
   \   00000004   0110A0E3           MOV      R1,#+1
   \   00000008   0010C0E5           STRB     R1,[R0, #+0]
   1013              return(0);
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   1EFF2FE1           BX       LR               ;; return
   1014          }
   1015          

   \                                 In segment CODE, align 4, keep-with-next
   1016          int StandbyModeDeactivatedHook(void *msg, BOOK * book, PAGE_DESC * page_desc, LPARAM ClientData, u16 event)
   1017          {
   1018              IsInStandby = false;
   \                     ??StandbyModeDeactivatedHook:
   \   00000000   ........           LDR      R0,??DataTable140  ;; timer_disable + 624
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   0010C0E5           STRB     R1,[R0, #+0]
   1019              return(0);
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   1EFF2FE1           BX       LR               ;; return
   1020          }
   1021          

   \                                 In segment CODE, align 4, keep-with-next
   1022          void onCloseMiniGPSBook(BOOK * book)
   1023          {
   \                     ??onCloseMiniGPSBook:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   1024            MyBOOK *mbk = (MyBOOK *)book;
   1025            if (mbk)
   \   00000008   3080BD08           POPEQ    {R4,R5,PC}
   1026            {
   1027              myModifyUIHook(STANDBY_NOT_IDLE_EVENT,UI_STANDBY_UNFOCUS_EVENT,StandbyModeDeactivatedHook,0);
   \   0000000C   ........           LDR      R0,??DataTable158  ;; UI_STANDBY_UNFOCUS_EVENT
   \   00000010   ........           LDR      R2,??DataTable157  ;; ??StandbyModeDeactivatedHook
   \   00000014   001090E5           LDR      R1,[R0, #+0]
   \   00000018   ........           LDR      R0,??DataTable159  ;; STANDBY_NOT_IDLE_EVENT
   \   0000001C   0030A0E3           MOV      R3,#+0
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   ........           BL       ??myModifyUIHook
   1028              myModifyUIHook(STANDBY_IDLE_EVENT,PHONE_IN_STBY_EVENT,StandbyModeActivatedHook,0);
   \   00000028   ........           LDR      R0,??DataTable161  ;; PHONE_IN_STBY_EVENT
   \   0000002C   ........           LDR      R2,??DataTable162  ;; ??StandbyModeActivatedHook
   \   00000030   001090E5           LDR      R1,[R0, #+0]
   \   00000034   ........           LDR      R0,??DataTable163  ;; STANDBY_IDLE_EVENT
   \   00000038   0030A0E3           MOV      R3,#+0
   \   0000003C   000090E5           LDR      R0,[R0, #+0]
   \   00000040   ........           BL       ??myModifyUIHook
   1029          
   1030              if(Display_desc) DISP_DESC_SetOnRedraw(Display_desc, Display_oldReDraw);
   \   00000044   90019FE5           LDR      R0,??onCloseMiniGPSBook_1  ;; timer_disable + 556
   \   00000048   000090E5           LDR      R0,[R0, #+0]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0200000A           BEQ      ??onCloseMiniGPSBook_2
   \   00000054   ........           LDR      R5,??DataTable155  ;; timer_disable
   \   00000058   241295E5           LDR      R1,[R5, #+548]
   \   0000005C   280200EF           SWI      +552
   1031              if(Status_desc)  DISP_DESC_SetOnRedraw(Status_desc, Status_oldReDraw);
   \                     ??onCloseMiniGPSBook_2:
   \   00000060   78019FE5           LDR      R0,??onCloseMiniGPSBook_1+0x4  ;; timer_disable + 544
   \   00000064   000090E5           LDR      R0,[R0, #+0]
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0200000A           BEQ      ??onCloseMiniGPSBook_3
   \   00000070   ........           LDR      R5,??DataTable155  ;; timer_disable
   \   00000074   181295E5           LDR      R1,[R5, #+536]
   \   00000078   280200EF           SWI      +552
   1032              if(Soft_desc)    DISP_DESC_SetOnRedraw(Soft_desc, Soft_oldReDraw);
   \                     ??onCloseMiniGPSBook_3:
   \   0000007C   60019FE5           LDR      R0,??onCloseMiniGPSBook_1+0x8  ;; timer_disable + 568
   \   00000080   000090E5           LDR      R0,[R0, #+0]
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   0200000A           BEQ      ??onCloseMiniGPSBook_4
   \   0000008C   ........           LDR      R5,??DataTable155  ;; timer_disable
   \   00000090   301295E5           LDR      R1,[R5, #+560]
   \   00000094   280200EF           SWI      +552
   1033          
   1034              if(timer_disable) Timer_Kill(&timer_disable);
   \                     ??onCloseMiniGPSBook_4:
   \   00000098   ........           LDR      R0,??DataTable155  ;; timer_disable
   \   0000009C   B000D0E1           LDRH     R0,[R0, #+0]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0100000A           BEQ      ??onCloseMiniGPSBook_5
   \   000000A8   ........           LDR      R0,??DataTable155  ;; timer_disable
   \   000000AC   2A0100EF           SWI      +298
   1035              if(timer) Timer_Kill(&timer);
   \                     ??onCloseMiniGPSBook_5:
   \   000000B0   30019FE5           LDR      R0,??onCloseMiniGPSBook_1+0xC  ;; timer_disable + 10
   \   000000B4   B000D0E1           LDRH     R0,[R0, #+0]
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   0100000A           BEQ      ??onCloseMiniGPSBook_6
   \   000000C0   20019FE5           LDR      R0,??onCloseMiniGPSBook_1+0xC  ;; timer_disable + 10
   \   000000C4   2A0100EF           SWI      +298
   1036              if(timerNewAction) Timer_Kill(&timerNewAction);
   \                     ??onCloseMiniGPSBook_6:
   \   000000C8   1C019FE5           LDR      R0,??onCloseMiniGPSBook_1+0x10  ;; timer_disable + 12
   \   000000CC   B000D0E1           LDRH     R0,[R0, #+0]
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   0100000A           BEQ      ??onCloseMiniGPSBook_7
   \   000000D8   0C019FE5           LDR      R0,??onCloseMiniGPSBook_1+0x10  ;; timer_disable + 12
   \   000000DC   2A0100EF           SWI      +298
   1037              ModifyKeyHook(NewKey, KEY_HOOK_REMOVE, NULL);
   \                     ??onCloseMiniGPSBook_7:
   \   000000E0   ........           LDR      R0,??DataTable167  ;; ??NewKey
   \   000000E4   0020A0E3           MOV      R2,#+0
   \   000000E8   0010A0E3           MOV      R1,#+0
   \   000000EC   070100EF           SWI      +263
   1038          
   1039              StatusIndication_SetItemText(SBY_GetStatusIndication(Find_StandbyBook()), wnd, empty);
   \   000000F0   310100EF           SWI      +305
   \   000000F4   180200EF           SWI      +536
   \   000000F8   F0109FE5           LDR      R1,??onCloseMiniGPSBook_1+0x14  ;; timer_disable + 620
   \   000000FC   9024E0E3           MVN      R2,#-1879048192
   \   00000100   001091E5           LDR      R1,[R1, #+0]
   \   00000104   420100EF           SWI      +322
   1040          
   1041              FREE_GUI(mbk->menu);
   \   00000108   180094E5           LDR      R0,[R4, #+24]
   \   0000010C   000050E3           CMP      R0,#+0
   \   00000110   0200000A           BEQ      ??onCloseMiniGPSBook_8
   \   00000114   CE0100EF           SWI      +462
   \   00000118   0000A0E3           MOV      R0,#+0
   \   0000011C   180084E5           STR      R0,[R4, #+24]
   1042              FREE_GUI(mbk->text_input);
   \                     ??onCloseMiniGPSBook_8:
   \   00000120   200094E5           LDR      R0,[R4, #+32]
   \   00000124   000050E3           CMP      R0,#+0
   \   00000128   0200000A           BEQ      ??onCloseMiniGPSBook_9
   \   0000012C   CE0100EF           SWI      +462
   \   00000130   0000A0E3           MOV      R0,#+0
   \   00000134   200084E5           STR      R0,[R4, #+32]
   1043          
   1044              if(auto_image != NOIMAGE)
   \                     ??onCloseMiniGPSBook_9:
   \   00000138   B4009FE5           LDR      R0,??onCloseMiniGPSBook_1+0x18  ;; timer_disable + 14
   \   0000013C   FF10A0E3           MOV      R1,#+255
   \   00000140   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000144   FF1C81E3           ORR      R1,R1,#0xFF00
   \   00000148   010050E1           CMP      R0,R1
   \   0000014C   0400000A           BEQ      ??onCloseMiniGPSBook_10
   1045              {
   1046                ImageID_Free(auto_image);
   \   00000150   ........           LDR      R5,??DataTable155  ;; timer_disable
   \   00000154   CD0200EF           SWI      +717
   1047                auto_image = NOIMAGE;
   \   00000158   FF00A0E3           MOV      R0,#+255
   \   0000015C   FF0C80E3           ORR      R0,R0,#0xFF00
   \   00000160   BE00C5E1           STRH     R0,[R5, #+14]
   1048              }
   1049          
   1050              if(location_image != NOIMAGE)
   \                     ??onCloseMiniGPSBook_10:
   \   00000164   8C009FE5           LDR      R0,??onCloseMiniGPSBook_1+0x1C  ;; timer_disable + 16
   \   00000168   FF10A0E3           MOV      R1,#+255
   \   0000016C   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000170   FF1C81E3           ORR      R1,R1,#0xFF00
   \   00000174   010050E1           CMP      R0,R1
   \   00000178   0400000A           BEQ      ??onCloseMiniGPSBook_11
   1051              {
   1052                ImageID_Free(location_image);
   \   0000017C   ........           LDR      R5,??DataTable155  ;; timer_disable
   \   00000180   CD0200EF           SWI      +717
   1053                location_image = NOIMAGE;
   \   00000184   FF00A0E3           MOV      R0,#+255
   \   00000188   FF0C80E3           ORR      R0,R0,#0xFF00
   \   0000018C   B001C5E1           STRH     R0,[R5, #+16]
   1054              }
   1055          
   1056              if(CellNameID != empty)
   \                     ??onCloseMiniGPSBook_11:
   \   00000190   64009FE5           LDR      R0,??onCloseMiniGPSBook_1+0x20  ;; timer_disable + 608
   \   00000194   9014E0E3           MVN      R1,#-1879048192
   \   00000198   000090E5           LDR      R0,[R0, #+0]
   \   0000019C   010050E1           CMP      R0,R1
   \   000001A0   0300000A           BEQ      ??onCloseMiniGPSBook_12
   1057              {
   1058                TextID_Destroy(CellNameID);
   \   000001A4   ........           LDR      R5,??DataTable155  ;; timer_disable
   \   000001A8   610100EF           SWI      +353
   1059                CellNameID = empty;
   \   000001AC   9004E0E3           MVN      R0,#-1879048192
   \   000001B0   600285E5           STR      R0,[R5, #+608]
   1060              }
   1061          
   1062              if(db_buf) delete(db_buf);
   \                     ??onCloseMiniGPSBook_12:
   \   000001B4   44009FE5           LDR      R0,??onCloseMiniGPSBook_1+0x24  ;; timer_disable + 604
   \   000001B8   000090E5           LDR      R0,[R0, #+0]
   \   000001BC   000050E3           CMP      R0,#+0
   \   000001C0   0200000A           BEQ      ??onCloseMiniGPSBook_13
   \   000001C4   34009FE5           LDR      R0,??onCloseMiniGPSBook_1+0x24  ;; timer_disable + 604
   \   000001C8   000090E5           LDR      R0,[R0, #+0]
   \   000001CC   ........           _BLF     `??operator delete`,`??operator delete??rA`
   1063              SUBPROC(elf_exit);
   \                     ??onCloseMiniGPSBook_13:
   \   000001D0   ........           LDR      R0,??DataTable173  ;; ??elf_exit
   \   000001D4   080100EF           SWI      +264
   1064            }
   1065          }
   \   000001D8   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??onCloseMiniGPSBook_1:
   \   000001DC   ........           DC32     timer_disable + 556
   \   000001E0   ........           DC32     timer_disable + 544
   \   000001E4   ........           DC32     timer_disable + 568
   \   000001E8   ........           DC32     timer_disable + 10
   \   000001EC   ........           DC32     timer_disable + 12
   \   000001F0   ........           DC32     timer_disable + 620
   \   000001F4   ........           DC32     timer_disable + 14
   \   000001F8   ........           DC32     timer_disable + 16
   \   000001FC   ........           DC32     timer_disable + 608
   \   00000200   ........           DC32     timer_disable + 604
   1066          

   \                                 In segment CODE, align 4, keep-with-next
   1067          int MainPageEnter(void *, BOOK *bk)
   1068          {
   1069            myModifyUIHook(STANDBY_NOT_IDLE_EVENT,UI_STANDBY_UNFOCUS_EVENT,StandbyModeDeactivatedHook,1);
   \                     ??MainPageEnter:
   \   00000000   ........           LDR      R2,??DataTable157  ;; ??StandbyModeDeactivatedHook
   \   00000004   ........           LDR      R0,??DataTable158  ;; UI_STANDBY_UNFOCUS_EVENT
   \   00000008   30402DE9           PUSH     {R4,R5,LR}
   \   0000000C   001090E5           LDR      R1,[R0, #+0]
   \   00000010   ........           LDR      R0,??DataTable159  ;; STANDBY_NOT_IDLE_EVENT
   1070            myModifyUIHook(STANDBY_IDLE_EVENT,PHONE_IN_STBY_EVENT,StandbyModeActivatedHook,1);
   1071            
   1072            GUI_status = StatusRow_p();
   \   00000014   ........           LDR      R4,??DataTable171  ;; timer_disable
   \   00000018   000090E5           LDR      R0,[R0, #+0]
   \   0000001C   0130A0E3           MOV      R3,#+1
   \   00000020   ........           BL       ??myModifyUIHook
   \   00000024   ........           LDR      R0,??DataTable161  ;; PHONE_IN_STBY_EVENT
   \   00000028   ........           LDR      R2,??DataTable162  ;; ??StandbyModeActivatedHook
   \   0000002C   001090E5           LDR      R1,[R0, #+0]
   \   00000030   ........           LDR      R0,??DataTable163  ;; STANDBY_IDLE_EVENT
   \   00000034   0130A0E3           MOV      R3,#+1
   \   00000038   000090E5           LDR      R0,[R0, #+0]
   1073            Status_desc = DispObject_GetDESC (* GUI_status);
   1074            Status_oldReDraw = DispObject_GetOnRedraw (* GUI_status);
   1075            DISP_DESC_SetOnRedraw (Status_desc, (DISP_OBJ_ONREDRAW_METHOD)Status_ReDraw);
   1076            
   1077            GUI_soft = DispObject_SoftKeys_Get();
   1078            Soft_desc = DispObject_GetDESC (GUI_soft);
   1079            Soft_oldReDraw = DispObject_GetOnRedraw(GUI_soft);
   1080            DISP_DESC_SetOnRedraw(Soft_desc, (DISP_OBJ_ONREDRAW_METHOD)Soft_ReDraw);
   1081            
   1082            GUI_display = GUIObject_GetDispObject( SBY_GetStatusIndication(Find_StandbyBook()) );
   1083            Display_oldReDraw = DispObject_GetOnRedraw(GUI_display);
   1084            Display_desc = DispObject_GetDESC (GUI_display);
   1085            DISP_DESC_SetOnRedraw(Display_desc, Display_ReDraw);
   1086            
   1087            ModifyKeyHook(NewKey, KEY_HOOK_ADD, NULL);
   \   0000003C   0050A0E3           MOV      R5,#+0
   \   00000040   ........           BL       ??myModifyUIHook
   \   00000044   F28100EF           SWI      +33266
   \   00000048   1C0284E5           STR      R0,[R4, #+540]
   \   0000004C   000090E5           LDR      R0,[R0, #+0]
   \   00000050   1F0200EF           SWI      +543
   \   00000054   200284E5           STR      R0,[R4, #+544]
   \   00000058   1C0294E5           LDR      R0,[R4, #+540]
   \   0000005C   000090E5           LDR      R0,[R0, #+0]
   \   00000060   290200EF           SWI      +553
   \   00000064   ........           LDR      R1,??DataTable164  ;; ??Status_ReDraw
   \   00000068   180284E5           STR      R0,[R4, #+536]
   \   0000006C   200294E5           LDR      R0,[R4, #+544]
   \   00000070   280200EF           SWI      +552
   \   00000074   A30200EF           SWI      +675
   \   00000078   340284E5           STR      R0,[R4, #+564]
   \   0000007C   1F0200EF           SWI      +543
   \   00000080   380284E5           STR      R0,[R4, #+568]
   \   00000084   340294E5           LDR      R0,[R4, #+564]
   \   00000088   290200EF           SWI      +553
   \   0000008C   ........           LDR      R1,??DataTable165  ;; ??Soft_ReDraw
   \   00000090   300284E5           STR      R0,[R4, #+560]
   \   00000094   380294E5           LDR      R0,[R4, #+568]
   \   00000098   280200EF           SWI      +552
   \   0000009C   310100EF           SWI      +305
   \   000000A0   180200EF           SWI      +536
   \   000000A4   680100EF           SWI      +360
   \   000000A8   280284E5           STR      R0,[R4, #+552]
   \   000000AC   290200EF           SWI      +553
   \   000000B0   240284E5           STR      R0,[R4, #+548]
   \   000000B4   280294E5           LDR      R0,[R4, #+552]
   \   000000B8   1F0200EF           SWI      +543
   \   000000BC   ........           LDR      R1,??DataTable166  ;; ??Display_ReDraw
   \   000000C0   2C0284E5           STR      R0,[R4, #+556]
   \   000000C4   280200EF           SWI      +552
   \   000000C8   ........           LDR      R0,??DataTable167  ;; ??NewKey
   \   000000CC   0020A0E3           MOV      R2,#+0
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   070100EF           SWI      +263
   1088            Timer_ReSet(&timer, 1000, onTimer, 0);
   \   000000D8   ........           LDR      R2,??DataTable168  ;; ??onTimer
   \   000000DC   0530A0E1           MOV      R3,R5
   \   000000E0   FA1FA0E3           MOV      R1,#+1000
   \   000000E4   0A0084E2           ADD      R0,R4,#+10
   \   000000E8   280100EF           SWI      +296
   1089            Timer_ReSet(&timerNewAction, NewActionTimeout, onTimerNewAction, 0);
   \   000000EC   ........           LDR      R2,??DataTable169  ;; ??onTimerNewAction
   \   000000F0   501294E5           LDR      R1,[R4, #+592]
   \   000000F4   0530A0E1           MOV      R3,R5
   \   000000F8   0C0084E2           ADD      R0,R4,#+12
   \   000000FC   280100EF           SWI      +296
   1090            return(0);
   \   00000100   0500A0E1           MOV      R0,R5
   \   00000104   3080BDE8           POP      {R4,R5,PC}       ;; return
   1091          }
   1092          

   \                                 In segment DYN_PAGE, align 4, align-sorted
   1093          const PAGE_MSG MiniGPS_MainPageEvents[]@ "DYN_PAGE" ={
   \                     MiniGPS_MainPageEvents:
   \   00000000   42000000....       DC32 66, ??MainPageEnter, 64, 0H
   \              ....40000000
   \              00000000    

   \                                 In segment DATA_I, align 4, align-sorted
   \                     timer_disable:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for timer_disable>`
   \                     currentLAC:
   \   00000002                      DS8 2
   \   00000004                      REQUIRE `?<Initializer for currentLAC>`
   \                     currentCID:
   \   00000004                      DS8 2
   \   00000006                      REQUIRE `?<Initializer for currentCID>`
   \                     prevLAC:
   \   00000006                      DS8 2
   \   00000008                      REQUIRE `?<Initializer for prevLAC>`
   \                     prevCID:
   \   00000008                      DS8 2
   \   0000000A                      REQUIRE `?<Initializer for prevCID>`
   \                     timer:
   \   0000000A                      DS8 2
   \   0000000C                      REQUIRE `?<Initializer for timer>`
   \                     timerNewAction:
   \   0000000C                      DS8 2
   \   0000000E                      REQUIRE `?<Initializer for timerNewAction>`
   \                     auto_image:
   \   0000000E                      DS8 2
   \   00000010                      REQUIRE `?<Initializer for auto_image>`
   \                     location_image:
   \   00000010                      DS8 2
   \   00000012                      REQUIRE `?<Initializer for location_image>`
   \   00000012                      DS8 2
   \                     encode_buf:
   \   00000014                      DS8 512
   \   00000214                      REQUIRE `?<Initializer for encode_buf>`
   \                     MiniGPSBook:
   \   00000214                      DS8 4
   \   00000218                      REQUIRE `?<Initializer for MiniGPSBook>`
   \                     Status_oldReDraw:
   \   00000218                      DS8 4
   \   0000021C                      REQUIRE `?<Initializer for Status_oldReDraw>`
   \                     GUI_status:
   \   0000021C                      DS8 4
   \   00000220                      REQUIRE `?<Initializer for GUI_status>`
   \                     Status_desc:
   \   00000220                      DS8 4
   \   00000224                      REQUIRE `?<Initializer for Status_desc>`
   \                     Display_oldReDraw:
   \   00000224                      DS8 4
   \   00000228                      REQUIRE `?<Initializer for Display_oldReDraw>`
   \                     GUI_display:
   \   00000228                      DS8 4
   \   0000022C                      REQUIRE `?<Initializer for GUI_display>`
   \                     Display_desc:
   \   0000022C                      DS8 4
   \   00000230                      REQUIRE `?<Initializer for Display_desc>`
   \                     Soft_oldReDraw:
   \   00000230                      DS8 4
   \   00000234                      REQUIRE `?<Initializer for Soft_oldReDraw>`
   \                     GUI_soft:
   \   00000234                      DS8 4
   \   00000238                      REQUIRE `?<Initializer for GUI_soft>`
   \                     Soft_desc:
   \   00000238                      DS8 4
   \   0000023C                      REQUIRE `?<Initializer for Soft_desc>`
   \                     DisplayWidth:
   \   0000023C                      DS8 4
   \   00000240                      REQUIRE `?<Initializer for DisplayWidth>`
   \                     DisplayHeight:
   \   00000240                      DS8 4
   \   00000244                      REQUIRE `?<Initializer for DisplayHeight>`
   \                     SoftBarY:
   \   00000244                      DS8 4
   \   00000248                      REQUIRE `?<Initializer for SoftBarY>`
   \                     StatusBarY:
   \   00000248                      DS8 4
   \   0000024C                      REQUIRE `?<Initializer for StatusBarY>`
   \                     prevLocFound:
   \   0000024C                      DS8 4
   \   00000250                      REQUIRE `?<Initializer for prevLocFound>`
   \                     NewActionTimeout:
   \   00000250                      DS8 4
   \   00000254                      REQUIRE `?<Initializer for NewActionTimeout>`
   \                     encode_type:
   \   00000254                      DS8 4
   \   00000258                      REQUIRE `?<Initializer for encode_type>`
   \                     CODEMAP_ADDR:
   \   00000258                      DS8 4
   \   0000025C                      REQUIRE `?<Initializer for CODEMAP_ADDR>`
   \                     db_buf:
   \   0000025C                      DS8 4
   \   00000260                      REQUIRE `?<Initializer for db_buf>`
   \                     CellNameID:
   \   00000260                      DS8 4
   \   00000264                      REQUIRE `?<Initializer for CellNameID>`
   \                     imageWidth:
   \   00000264                      DS8 4
   \   00000268                      REQUIRE `?<Initializer for imageWidth>`
   \                     imageHeight:
   \   00000268                      DS8 4
   \   0000026C                      REQUIRE `?<Initializer for imageHeight>`
   \                     wnd:
   \   0000026C                      DS8 4
   \   00000270                      REQUIRE `?<Initializer for wnd>`
   \                     IsInStandby:
   \   00000270                      DS8 1
   \   00000271                      REQUIRE `?<Initializer for IsInStandby>`
   \                     visible:
   \   00000271                      DS8 1
   \   00000272                      REQUIRE `?<Initializer for visible>`
   \                     showCellID:
   \   00000272                      DS8 1
   \   00000273                      REQUIRE `?<Initializer for showCellID>`
   \                     AutoLocation:
   \   00000273                      DS8 1
   \   00000274                      REQUIRE `?<Initializer for AutoLocation>`
   \                     isUCodeFile:
   \   00000274                      DS8 1
   \   00000275                      REQUIRE `?<Initializer for isUCodeFile>`
   \   00000275                      DS8 3
   \                     logFolder:
   \   00000278                      DS8 512
   \   00000478                      REQUIRE `?<Initializer for logFolder>`
   \                     logCellName:
   \   00000478                      DS8 256
   \   00000578                      REQUIRE `?<Initializer for logCellName>`
   \                     CellName:
   \   00000578                      DS8 512
   \   00000778                      REQUIRE `?<Initializer for CellName>`
   \                     CellNameAction:
   \   00000778                      DS8 512
   \   00000978                      REQUIRE `?<Initializer for CellNameAction>`
   \                     prevCellName:
   \   00000978                      DS8 512
   \   00000B78                      REQUIRE `?<Initializer for prevCellName>`
   \                     prevCellNameAction:
   \   00000B78                      DS8 512
   \   00000D78                      REQUIRE `?<Initializer for prevCellNameAction>`
   \                     CellNameStatus:
   \   00000D78                      DS8 512
   \   00000F78                      REQUIRE `?<Initializer for CellNameStatus>`
   \                     tmppath:
   \   00000F78                      DS8 512
   \   00001178                      REQUIRE `?<Initializer for tmppath>`
   \                     tmpname:
   \   00001178                      DS8 512
   \   00001378                      REQUIRE `?<Initializer for tmpname>`
   \                     SIwstr:
   \   00001378                      DS8 192
   \   00001438                      REQUIRE `?<Initializer for SIwstr>`
   \                     wsnewdb:
   \   00001438                      DS8 192
   \   000014F8                      REQUIRE `?<Initializer for wsnewdb>`
   \                     snewdb:
   \   000014F8                      DS8 96
   \   00001558                      REQUIRE `?<Initializer for snewdb>`
   \                     base_page:
   \   00001558                      DS8 12
   \   00001564                      REQUIRE `?<Initializer for base_page>`
   1094            PAGE_ENTER_EVENT_TAG,      MainPageEnter,
   1095            NIL_EVENT_TAG,             NULL
   1096          };
   1097          
   1098          PAGE_DESC main_page ={"MiniGPS_MainPage",0,MiniGPS_MainPageEvents};
   \                     main_page:
   \   00001564                      DS8 12
   \   00001570                      REQUIRE `?<Initializer for main_page>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     myappname:
   \   00000000                      DS8 8
   \   00000008                      REQUIRE `?<Initializer for myappname>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     cfg_manual_profile:
   \   00000000                      DS8 28
   \   0000001C                      REQUIRE `?<Initializer for cfg_manual_profile>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     cfg_place:
   \   00000000                      DS8 384
   \   00000180                      REQUIRE `?<Initializer for cfg_place>`
   1099          

   \                                 In segment CODE, align 4, keep-with-next
   1100          int main (void)
   1101          {
   1102            if(FindBook(isMiniGPSBook))
   \                     main:
   \   00000000   EC009FE5           LDR      R0,??main_0      ;; ??isMiniGPSBook
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   300100EF           SWI      +304
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1300000A           BEQ      ??main_1
   1103            {
   1104              MessageBox(EMPTY_TEXTID, TextID_Create(LELFNAME _T("\n") LG_ALREADY_STARTED,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
   \   00000014   DC009FE5           LDR      R0,??main_0+0x4  ;; `?<Constant "MiniGPS">` + 8
   \   00000018   FF40A0E3           MOV      R4,#+255
   \   0000001C   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000020   0420A0E1           MOV      R2,R4
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   5D0100EF           SWI      +349
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   02002DE9           PUSH     {R1}
   \   00000034   0130A0E3           MOV      R3,#+1
   \   00000038   0420A0E1           MOV      R2,R4
   \   0000003C   8810A0E3           MOV      R1,#+136
   \   00000040   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000044   02002DE9           PUSH     {R1}
   \   00000048   0010A0E1           MOV      R1,R0
   \   0000004C   9004E0E3           MVN      R0,#-1879048192
   \   00000050   570200EF           SWI      +599
   1105              SUBPROC(elf_exit);
   \   00000054   ........           LDR      R0,??DataTable173  ;; ??elf_exit
   \   00000058   080100EF           SWI      +264
   \   0000005C   08D08DE2           ADD      SP,SP,#+8
   \   00000060   1A0000EA           B        ??main_2
   1106            }
   1107            else
   1108            {
   1109          
   1110              InitVar();
   1111              MiniGPSBook = new MyBOOK;
   \                     ??main_1:
   \   00000064   ........           LDR      R4,??DataTable171  ;; timer_disable
   \   00000068   ........           BL       ??InitVar
   \   0000006C   2400A0E3           MOV      R0,#+36
   \   00000070   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000074   140284E5           STR      R0,[R4, #+532]
   1112              memset(MiniGPSBook,0,sizeof(MyBOOK));
   \   00000078   2420A0E3           MOV      R2,#+36
   \   0000007C   0010A0E3           MOV      R1,#+0
   \   00000080   120100EF           SWI      +274
   1113              if(!CreateBook((BOOK*)MiniGPSBook,onCloseMiniGPSBook,&base_page,ELFNAME,-1,0))
   \   00000084   70309FE5           LDR      R3,??main_0+0x8  ;; `?<Constant "MiniGPS">`
   \   00000088   70109FE5           LDR      R1,??main_0+0xC  ;; ??onCloseMiniGPSBook
   \   0000008C   0000A0E3           MOV      R0,#+0
   \   00000090   01002DE9           PUSH     {R0}
   \   00000094   0000E0E1           MVN      R0,R0
   \   00000098   01002DE9           PUSH     {R0}
   \   0000009C   5800A0E3           MOV      R0,#+88
   \   000000A0   540D80E3           ORR      R0,R0,#0x1500
   \   000000A4   042080E0           ADD      R2,R0,R4
   \   000000A8   140294E5           LDR      R0,[R4, #+532]
   \   000000AC   2B0100EF           SWI      +299
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   08D08DE2           ADD      SP,SP,#+8
   \   000000B8   0600001A           BNE      ??main_3
   1114              {
   1115                delete MiniGPSBook;
   \   000000BC   ........           LDR      R0,??DataTable172  ;; timer_disable + 532
   \   000000C0   000090E5           LDR      R0,[R0, #+0]
   \   000000C4   ........           _BLF     `??operator delete`,`??operator delete??rA`
   1116                SUBPROC(elf_exit);
   \   000000C8   ........           LDR      R0,??DataTable173  ;; ??elf_exit
   \   000000CC   080100EF           SWI      +264
   1117                return 0;
   \                     ??main_2:
   \   000000D0   0000A0E3           MOV      R0,#+0
   \   000000D4   1080BDE8           POP      {R4,PC}
   1118              }
   1119              
   1120              BookObj_GotoPage((BOOK*)MiniGPSBook,&main_page);
   \                     ??main_3:
   \   000000D8   6400A0E3           MOV      R0,#+100
   \   000000DC   540D80E3           ORR      R0,R0,#0x1500
   \   000000E0   041080E0           ADD      R1,R0,R4
   \   000000E4   140294E5           LDR      R0,[R4, #+532]
   \   000000E8   2D0100EF           SWI      +301
   1121          
   1122            }
   1123            return 0;
   \   000000EC   0000A0E3           MOV      R0,#+0
   \   000000F0   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??main_0:
   \   000000F4   ........           DC32     ??isMiniGPSBook
   \   000000F8   ........           DC32     `?<Constant "MiniGPS">` + 8
   \   000000FC   ........           DC32     `?<Constant "MiniGPS">`
   \   00000100   ........           DC32     ??onCloseMiniGPSBook
   1124          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     timer_disable + 600

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   ........           DC32     timer_disable + 4472

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   ........           DC32     cfg_location_file

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable42:
   \   00000000   ........           DC32     timer_disable + 628

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable44:
   \   00000000   ........           DC32     timer_disable

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable45:
   \   00000000   ........           DC32     timer_disable + 596

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable53:
   \   00000000   ........           DC32     cfg_place

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable56:
   \   00000000   ........           DC32     timer_disable + 16

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable58:
   \   00000000   ........           DC32     cfg_location_image

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable59:
   \   00000000   ........           DC32     cfg_auto_image_show

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable62:
   \   00000000   ........           DC32     timer_disable + 14

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable69:
   \   00000000   ........           DC32     timer_disable

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable73:
   \   00000000   ........           DC32     cfg_standby_only

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable74:
   \   00000000   ........           DC32     timer_disable + 624

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable83:
   \   00000000   ........           DC32     cfg_cellidmode

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable85:
   \   00000000   ........           DC32     timer_disable + 604

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable86:
   \   00000000   ........           DC32     timer_disable + 626

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable87:
   \   00000000   ........           DC32     timer_disable + 627

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable89:
   \   00000000   ........           DC32     timer_disable + 608

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable90:
   \   00000000   ........           DC32     cfg_show_type

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable91:
   \   00000000   ........           DC32     cfg_vibrate

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable95:
   \   00000000   ........           DC32     timer_disable + 632

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable96:
   \   00000000   ........           DC32     cfg_cellidmode

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable98:
   \   00000000   ........           DC32     SYNC

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable99:
   \   00000000   ........           DC32     ??onTimerNewAction

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable102:
   \   00000000   ........           DC32     cfg_location

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable103:
   \   00000000   ........           DC32     cfg_update_interval

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable110:
   \   00000000   ........           DC32     timer_disable + 540

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable112:
   \   00000000   ........           DC32     timer_disable + 552

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable114:
   \   00000000   ........           DC32     timer_disable + 560

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable116:
   \   00000000   ........           DC32     timer_disable + 564

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable119:
   \   00000000   ........           DC32     timer_disable + 625

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable121:
   \   00000000   ........           DC32     timer_disable

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable124:
   \   00000000   ........           DC32     successed_config_name

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable125:
   \   00000000   ........           DC32     successed_config_path

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable126:
   \   00000000   ........           DC32     timer_disable + 4472

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable127:
   \   00000000   ........           DC32     cfg_location

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable128:
   \   00000000   ........           DC32     timer_disable + 625

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable138:
   \   00000000   ........           DC32     timer_disable + 627

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable140:
   \   00000000   ........           DC32     timer_disable + 624

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable155:
   \   00000000   ........           DC32     timer_disable

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable157:
   \   00000000   ........           DC32     ??StandbyModeDeactivatedHook

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable158:
   \   00000000   ........           DC32     UI_STANDBY_UNFOCUS_EVENT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable159:
   \   00000000   ........           DC32     STANDBY_NOT_IDLE_EVENT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable161:
   \   00000000   ........           DC32     PHONE_IN_STBY_EVENT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable162:
   \   00000000   ........           DC32     ??StandbyModeActivatedHook

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable163:
   \   00000000   ........           DC32     STANDBY_IDLE_EVENT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable164:
   \   00000000   ........           DC32     ??Status_ReDraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable165:
   \   00000000   ........           DC32     ??Soft_ReDraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable166:
   \   00000000   ........           DC32     ??Display_ReDraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable167:
   \   00000000   ........           DC32     ??NewKey

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable168:
   \   00000000   ........           DC32     ??onTimer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable169:
   \   00000000   ........           DC32     ??onTimerNewAction

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable171:
   \   00000000   ........           DC32     timer_disable

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable172:
   \   00000000   ........           DC32     timer_disable + 532

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable173:
   \   00000000   ........           DC32     ??elf_exit

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for timer_disable>`:
   \   00000000   0000               DC16 0
   \                     `?<Initializer for currentLAC>`:
   \   00000002   0000               DC16 0
   \                     `?<Initializer for currentCID>`:
   \   00000004   0000               DC16 0
   \                     `?<Initializer for prevLAC>`:
   \   00000006   0000               DC16 0
   \                     `?<Initializer for prevCID>`:
   \   00000008   0000               DC16 0
   \                     `?<Initializer for timer>`:
   \   0000000A   0000               DC16 0
   \                     `?<Initializer for timerNewAction>`:
   \   0000000C   0000               DC16 0
   \                     `?<Initializer for auto_image>`:
   \   0000000E   FFFF               DC16 65535
   \                     `?<Initializer for location_image>`:
   \   00000010   FFFF               DC16 65535
   \   00000012   0000               DC8 0, 0
   \                     `?<Initializer for encode_buf>`:
   \   00000014   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000024   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000034   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000044   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000054   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000064   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000074   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000084   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000094   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000F4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000104   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000114   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000124   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000134   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000144   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000154   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000164   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000174   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000184   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000194   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001A4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001B4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001C4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001D4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001E4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001F4   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000204   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for MiniGPSBook>`:
   \   00000214   00000000           DC32 0H
   \                     `?<Initializer for Status_oldReDraw>`:
   \   00000218   00000000           DC32 0H
   \                     `?<Initializer for GUI_status>`:
   \   0000021C   00000000           DC32 0H
   \                     `?<Initializer for Status_desc>`:
   \   00000220   00000000           DC32 0H
   \                     `?<Initializer for Display_oldReDraw>`:
   \   00000224   00000000           DC32 0H
   \                     `?<Initializer for GUI_display>`:
   \   00000228   00000000           DC32 0H
   \                     `?<Initializer for Display_desc>`:
   \   0000022C   00000000           DC32 0H
   \                     `?<Initializer for Soft_oldReDraw>`:
   \   00000230   00000000           DC32 0H
   \                     `?<Initializer for GUI_soft>`:
   \   00000234   00000000           DC32 0H
   \                     `?<Initializer for Soft_desc>`:
   \   00000238   00000000           DC32 0H
   \                     `?<Initializer for DisplayWidth>`:
   \   0000023C   00000000           DC32 0
   \                     `?<Initializer for DisplayHeight>`:
   \   00000240   00000000           DC32 0
   \                     `?<Initializer for SoftBarY>`:
   \   00000244   00000000           DC32 0
   \                     `?<Initializer for StatusBarY>`:
   \   00000248   00000000           DC32 0
   \                     `?<Initializer for prevLocFound>`:
   \   0000024C   FFFFFFFF           DC32 -1
   \                     `?<Initializer for NewActionTimeout>`:
   \   00000250   C0270900           DC32 600000
   \                     `?<Initializer for encode_type>`:
   \   00000254   00000000           DC32 0
   \                     `?<Initializer for CODEMAP_ADDR>`:
   \   00000258   0000D445           DC32 1171521536
   \                     `?<Initializer for db_buf>`:
   \   0000025C   00000000           DC32 0H
   \                     `?<Initializer for CellNameID>`:
   \   00000260   FFFFFF6F           DC32 1879048191
   \                     `?<Initializer for imageWidth>`:
   \   00000264   00000000           DC32 0
   \                     `?<Initializer for imageHeight>`:
   \   00000268   00000000           DC32 0
   \                     `?<Initializer for wnd>`:
   \   0000026C   06000000           DC32 6
   \                     `?<Initializer for IsInStandby>`:
   \   00000270   00                 DC8 0
   \                     `?<Initializer for visible>`:
   \   00000271   01                 DC8 1
   \                     `?<Initializer for showCellID>`:
   \   00000272   00                 DC8 0
   \                     `?<Initializer for AutoLocation>`:
   \   00000273   00                 DC8 0
   \                     `?<Initializer for isUCodeFile>`:
   \   00000274   00                 DC8 0
   \   00000275   000000             DC8 0, 0, 0
   \                     `?<Initializer for logFolder>`:
   \   00000278   0000               DC16 0
   \   0000027A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000028A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000029A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002EA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002FA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000030A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000031A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000032A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000033A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000034A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000035A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000036A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000037A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000038A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000039A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003EA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003FA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000040A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000041A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000042A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000043A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000044A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000045A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000046A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000        
   \                     `?<Initializer for logCellName>`:
   \   00000478   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000000000  
   \   00000489   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000499   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004A9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004B9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004C9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004D9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004E9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004F9   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000509   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000519   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000529   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000539   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000549   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000559   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000569   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000      
   \                     `?<Initializer for CellName>`:
   \   00000578   0000               DC16 0
   \   0000057A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000058A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000059A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005EA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005FA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000060A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000061A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000062A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000063A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000064A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000065A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000066A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000067A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000068A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000069A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006EA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006FA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000070A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000071A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000072A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000073A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000074A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000075A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000076A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000        
   \                     `?<Initializer for CellNameAction>`:
   \   00000778   0000               DC16 0
   \   0000077A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000078A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000079A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007EA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007FA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000080A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000081A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000082A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000083A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000084A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000085A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000086A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000087A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000088A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000089A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008EA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008FA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000090A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000091A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000092A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000093A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000094A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000095A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000096A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000        
   \                     `?<Initializer for prevCellName>`:
   \   00000978   0000               DC16 0
   \   0000097A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000098A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000099A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009EA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000009FA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A0A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A1A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A2A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A3A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A4A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A5A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A6A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A7A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A8A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000A9A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000AAA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000ABA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000ACA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000ADA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000AEA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000AFA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B0A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B1A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B2A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B3A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B4A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B5A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B6A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000        
   \                     `?<Initializer for prevCellNameAction>`:
   \   00000B78   0000               DC16 0
   \   00000B7A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B8A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000B9A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000BAA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000BBA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000BCA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000BDA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000BEA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000BFA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C0A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C1A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C2A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C3A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C4A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C5A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C6A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C7A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C8A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000C9A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000CAA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000CBA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000CCA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000CDA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000CEA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000CFA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D0A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D1A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D2A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D3A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D4A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D5A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D6A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000        
   \                     `?<Initializer for CellNameStatus>`:
   \   00000D78   0000               DC16 0
   \   00000D7A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D8A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000D9A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000DAA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000DBA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000DCA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000DDA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000DEA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000DFA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E0A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E1A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E2A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E3A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E4A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E5A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E6A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E7A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E8A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000E9A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000EAA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000EBA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000ECA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000EDA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000EEA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000EFA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F0A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F1A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F2A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F3A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F4A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F5A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F6A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000        
   \                     `?<Initializer for tmppath>`:
   \   00000F78   0000               DC16 0
   \   00000F7A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F8A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000F9A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000FAA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000FBA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000FCA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000FDA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000FEA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000FFA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000100A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000101A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000102A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000103A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000104A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000105A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000106A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000107A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000108A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000109A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000010AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000010BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000010CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000010DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000010EA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000010FA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000110A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000111A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000112A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000113A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000114A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000115A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000116A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000        
   \                     `?<Initializer for tmpname>`:
   \   00001178   0000               DC16 0
   \   0000117A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000118A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000119A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000011AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000011BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000011CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000011DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000011EA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000011FA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000120A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000121A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000122A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000123A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000124A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000125A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000126A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000127A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000128A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000129A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000012AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000012BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000012CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000012DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000012EA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000012FA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000130A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000131A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000132A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000133A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000134A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000135A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000136A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000        
   \                     `?<Initializer for SIwstr>`:
   \   00001378   0000               DC16 0
   \   0000137A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000138A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000139A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000013AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000013BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000013CA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000013DA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000013EA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000013FA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000140A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000141A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000142A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              0000        
   \                     `?<Initializer for wsnewdb>`:
   \   00001438   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001448   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001458   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001468   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001478   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001488   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001498   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000014A8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000014B8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000014C8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000014D8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000014E8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for snewdb>`:
   \   000014F8   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001508   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001518   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001528   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001538   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00001548   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for base_page>`:
   \   00001558   ........0000       DC32 `?<Constant "MiniGPS_BasePage">`, 0H, MiniGPS_BasePageEvents
   \              0000........
   \                     `?<Initializer for main_page>`:
   \   00001564   ........0000       DC32 `?<Constant "MiniGPS_MainPage">`, 0H, MiniGPS_MainPageEvents
   \              0000........

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for myappname>`:
   \   00000000   4D696E694750       DC8 "MiniGPS"
   \              5300        

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for cfg_manual_profile>`:
   \   00000000   ............       DC32 cfg_manual_profile1, cfg_manual_profile2, cfg_manual_profile3
   \              ............
   \   0000000C   ............       DC32 cfg_manual_profile4, cfg_manual_profile5, cfg_manual_profile6
   \              ............
   \   00000018   ........           DC32 cfg_manual_profile7

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for cfg_place>`:
   \   00000000   ............       DC32 cfg_place_enable1, cfg_place_name1, cfg_place_profile1
   \              ............
   \   0000000C   ............       DC32 cfg_place_vibrate1, cfg_place_sound_enable1, cfg_sound_file1
   \              ............
   \   00000018   ............       DC32 cfg_place_enable2, cfg_place_name2, cfg_place_profile2
   \              ............
   \   00000024   ............       DC32 cfg_place_vibrate2, cfg_place_sound_enable2, cfg_sound_file2
   \              ............
   \   00000030   ............       DC32 cfg_place_enable3, cfg_place_name3, cfg_place_profile3
   \              ............
   \   0000003C   ............       DC32 cfg_place_vibrate3, cfg_place_sound_enable3, cfg_sound_file3
   \              ............
   \   00000048   ............       DC32 cfg_place_enable4, cfg_place_name4, cfg_place_profile4
   \              ............
   \   00000054   ............       DC32 cfg_place_vibrate4, cfg_place_sound_enable4, cfg_sound_file4
   \              ............
   \   00000060   ............       DC32 cfg_place_enable5, cfg_place_name5, cfg_place_profile5
   \              ............
   \   0000006C   ............       DC32 cfg_place_vibrate5, cfg_place_sound_enable5, cfg_sound_file5
   \              ............
   \   00000078   ............       DC32 cfg_place_enable6, cfg_place_name6, cfg_place_profile6
   \              ............
   \   00000084   ............       DC32 cfg_place_vibrate6, cfg_place_sound_enable6, cfg_sound_file6
   \              ............
   \   00000090   ............       DC32 cfg_place_enable7, cfg_place_name7, cfg_place_profile7
   \              ............
   \   0000009C   ............       DC32 cfg_place_vibrate7, cfg_place_sound_enable7, cfg_sound_file7
   \              ............
   \   000000A8   ............       DC32 cfg_place_enable8, cfg_place_name8, cfg_place_profile8
   \              ............
   \   000000B4   ............       DC32 cfg_place_vibrate8, cfg_place_sound_enable8, cfg_sound_file8
   \              ............
   \   000000C0   ............       DC32 cfg_place_enable9, cfg_place_name9, cfg_place_profile9
   \              ............
   \   000000CC   ............       DC32 cfg_place_vibrate9, cfg_place_sound_enable9, cfg_sound_file9
   \              ............
   \   000000D8   ............       DC32 cfg_place_enable10, cfg_place_name10, cfg_place_profile10
   \              ............
   \   000000E4   ............       DC32 cfg_place_vibrate10, cfg_place_sound_enable10, cfg_sound_file10
   \              ............
   \   000000F0   ............       DC32 cfg_place_enable11, cfg_place_name11, cfg_place_profile11
   \              ............
   \   000000FC   ............       DC32 cfg_place_vibrate11, cfg_place_sound_enable11, cfg_sound_file11
   \              ............
   \   00000108   ............       DC32 cfg_place_enable12, cfg_place_name12, cfg_place_profile12
   \              ............
   \   00000114   ............       DC32 cfg_place_vibrate12, cfg_place_sound_enable12, cfg_sound_file12
   \              ............
   \   00000120   ............       DC32 cfg_place_enable13, cfg_place_name13, cfg_place_profile13
   \              ............
   \   0000012C   ............       DC32 cfg_place_vibrate13, cfg_place_sound_enable13, cfg_sound_file13
   \              ............
   \   00000138   ............       DC32 cfg_place_enable14, cfg_place_name14, cfg_place_profile14
   \              ............
   \   00000144   ............       DC32 cfg_place_vibrate14, cfg_place_sound_enable14, cfg_sound_file14
   \              ............
   \   00000150   ............       DC32 cfg_place_enable15, cfg_place_name15, cfg_place_profile15
   \              ............
   \   0000015C   ............       DC32 cfg_place_vibrate15, cfg_place_sound_enable15, cfg_sound_file15
   \              ............
   \   00000168   ............       DC32 cfg_place_enable16, cfg_place_name16, cfg_place_profile16
   \              ............
   \   00000174   ............       DC32 cfg_place_vibrate16, cfg_place_sound_enable16, cfg_sound_file16
   \              ............

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41\\x75\\x74\\x6f\\x20\\x6c\\x6f\\x63\\`:
   \   00000000   410075007400       DC8 41H, 0, 75H, 0, 74H, 0, 6FH, 0
   \              6F00        
   \   00000008   20006C006F00       DC8 20H, 0, 6CH, 0, 6FH, 0, 63H, 0
   \              6300        
   \   00000010   610074006900       DC8 61H, 0, 74H, 0, 69H, 0, 6FH, 0
   \              6F00        
   \   00000018   6E0020006400       DC8 6EH, 0, 20H, 0, 64H, 0, 69H, 0
   \              6900        
   \   00000020   730061006200       DC8 73H, 0, 61H, 0, 62H, 0, 6CH, 0
   \              6C00        
   \   00000028   650064002E00       DC8 65H, 0, 64H, 0, 2EH, 0, 0, 0
   \              0000        
   \   00000030   430075007200       DC8 43H, 0, 75H, 0, 72H, 0, 72H, 0
   \              7200        
   \   00000038   65006E007400       DC8 65H, 0, 6EH, 0, 74H, 0, 20H, 0
   \              2000        
   \   00000040   6C006F006300       DC8 6CH, 0, 6FH, 0, 63H, 0, 61H, 0
   \              6100        
   \   00000048   740069006F00       DC8 74H, 0, 69H, 0, 6FH, 0, 6EH, 0
   \              6E00        
   \   00000050   3A000000           DC8 3AH, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x25\\x30\\x34\\x64\\x2d\\x25\\x30\\x32\\`:
   \   00000000   250030003400       DC8 25H, 0, 30H, 0, 34H, 0, 64H, 0
   \              6400        
   \   00000008   2D0025003000       DC8 2DH, 0, 25H, 0, 30H, 0, 32H, 0
   \              3200        
   \   00000010   64002D002500       DC8 64H, 0, 2DH, 0, 25H, 0, 30H, 0
   \              3000        
   \   00000018   320064002E00       DC8 32H, 0, 64H, 0, 2EH, 0, 0, 0
   \              0000        
   \   00000020   250030003200       DC8 25H, 0, 30H, 0, 32H, 0, 64H, 0
   \              6400        
   \   00000028   2D0025003000       DC8 2DH, 0, 25H, 0, 30H, 0, 32H, 0
   \              3200        
   \   00000030   64002D002500       DC8 64H, 0, 2DH, 0, 25H, 0, 30H, 0
   \              3000        
   \   00000038   340064002E00       DC8 34H, 0, 64H, 0, 2EH, 0, 0, 0
   \              0000        
   \   00000040   69006E006900       DC8 69H, 0, 6EH, 0, 69H, 0, 0, 0
   \              0000        
   \   00000048   253032643A25       DC8 "%02d:%02d:%02d - [%05d:%05d] %s\012"
   \              3032643A2530
   \              3264202D205B
   \              253035643A25
   \              3035645D2025
   \              730A00      
   \   00000069   000000             DC8 0, 0, 0
   \   0000006C   253032643A25       DC8 "%02d:%02d:%02d - [%04X:%04X] %s\012"
   \              3032643A2530
   \              3264202D205B
   \              253034583A25
   \              3034585D2025
   \              730A00      
   \   0000008D   000000             DC8 0, 0, 0
   \   00000090   740078007400       DC8 74H, 0, 78H, 0, 74H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "[%s]">`:
   \   00000000   5B25735D00         DC8 "[%s]"
   \   00000005   000000             DC8 0, 0, 0
   \   00000008   250030003500       DC8 25H, 0, 30H, 0, 35H, 0, 64H, 0
   \              6400        
   \   00000010   3A0025003000       DC8 3AH, 0, 25H, 0, 30H, 0, 35H, 0
   \              3500        
   \   00000018   64000000           DC8 64H, 0, 0, 0
   \   0000001C   250030003400       DC8 25H, 0, 30H, 0, 34H, 0, 58H, 0
   \              5800        
   \   00000024   3A0025003000       DC8 3AH, 0, 25H, 0, 30H, 0, 34H, 0
   \              3400        
   \   0000002C   58000000           DC8 58H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x2e\\x6a\\x70\\x67">`:
   \   00000000   2E006A007000       DC8 2EH, 0, 6AH, 0, 70H, 0, 67H, 0
   \              6700        
   \   00000008   0000               DC8 0, 0
   \   0000000A   0000               DC8 0, 0
   \   0000000C   2E0070006E00       DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000014   0000               DC8 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x5b\\x25\\x30\\x35\\x64\\x3a\\x25\\x30\\`:
   \   00000000   5B0025003000       DC8 5BH, 0, 25H, 0, 30H, 0, 35H, 0
   \              3500        
   \   00000008   64003A002500       DC8 64H, 0, 3AH, 0, 25H, 0, 30H, 0
   \              3000        
   \   00000010   350064005D00       DC8 35H, 0, 64H, 0, 5DH, 0, 3AH, 0
   \              3A00        
   \   00000018   25006C007300       DC8 25H, 0, 6CH, 0, 73H, 0, 0DH, 0
   \              0D00        
   \   00000020   0A000000           DC8 0AH, 0, 0, 0
   \   00000024   5B0025003000       DC8 5BH, 0, 25H, 0, 30H, 0, 34H, 0
   \              3400        
   \   0000002C   58003A002500       DC8 58H, 0, 3AH, 0, 25H, 0, 30H, 0
   \              3000        
   \   00000034   340058005D00       DC8 34H, 0, 58H, 0, 5DH, 0, 3AH, 0
   \              3A00        
   \   0000003C   25006C007300       DC8 25H, 0, 6CH, 0, 73H, 0, 0DH, 0
   \              0D00        
   \   00000044   0A000000           DC8 0AH, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "ImageViewerBook">`:
   \   00000000   496D61676556       DC8 "ImageViewerBook"
   \              696577657242
   \              6F6F6B00    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "MiniGPS_MainPage">`:
   \   00000000   4D696E694750       DC8 "MiniGPS_MainPage"
   \              535F4D61696E
   \              5061676500  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "MiniGPS_BasePage">`:
   \   00000000   4D696E694750       DC8 "MiniGPS_BasePage"
   \              535F42617365
   \              5061676500  
   \   00000011   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "MiniGPS">`:
   \   00000000   4D696E694750       DC8 "MiniGPS"
   \              5300        
   \   00000008   4D0069006E00       DC8 4DH, 0, 69H, 0, 6EH, 0, 69H, 0
   \              6900        
   \   00000010   470050005300       DC8 47H, 0, 50H, 0, 53H, 0, 0AH, 0
   \              0A00        
   \   00000018   41006C007200       DC8 41H, 0, 6CH, 0, 72H, 0, 65H, 0
   \              6500        
   \   00000020   610064007900       DC8 61H, 0, 64H, 0, 79H, 0, 20H, 0
   \              2000        
   \   00000028   730074006100       DC8 73H, 0, 74H, 0, 61H, 0, 72H, 0
   \              7200        
   \   00000030   740065006400       DC8 74H, 0, 65H, 0, 64H, 0, 21H, 0
   \              2100        
   \   00000038   0000               DC8 0, 0
   \   0000003A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   2F000000           DC8 2FH, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x42\\x63\\x66\\x67\\x45\\x64\\x69\\x74\\`:
   \   00000000   420063006600       DC8 42H, 0, 63H, 0, 66H, 0, 67H, 0
   \              6700        
   \   00000008   450064006900       DC8 45H, 0, 64H, 0, 69H, 0, 74H, 0
   \              7400        
   \   00000010   2E0065006C00       DC8 2EH, 0, 65H, 0, 6CH, 0, 66H, 0
   \              6600        
   \   00000018   20006E006F00       DC8 20H, 0, 6EH, 0, 6FH, 0, 74H, 0
   \              7400        
   \   00000020   200066006F00       DC8 20H, 0, 66H, 0, 6FH, 0, 75H, 0
   \              7500        
   \   00000028   6E0064002100       DC8 6EH, 0, 64H, 0, 21H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x4d\\x69\\x6e\\x69\\x47\\x50\\x53\\x27\\`:
   \   00000000   4D0069006E00       DC8 4DH, 0, 69H, 0, 6EH, 0, 69H, 0
   \              6900        
   \   00000008   470050005300       DC8 47H, 0, 50H, 0, 53H, 0, 27H, 0
   \              2700        
   \   00000010   730020007300       DC8 73H, 0, 20H, 0, 73H, 0, 65H, 0
   \              6500        
   \   00000018   740074006900       DC8 74H, 0, 74H, 0, 69H, 0, 6EH, 0
   \              6E00        
   \   00000020   670073002000       DC8 67H, 0, 73H, 0, 20H, 0, 75H, 0
   \              7500        
   \   00000028   700064006100       DC8 70H, 0, 64H, 0, 61H, 0, 74H, 0
   \              7400        
   \   00000030   650064002100       DC8 65H, 0, 64H, 0, 21H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x4d\\x69\\x6e\\x69\\x47\\x50\\x53\\xa\\x_1`:
   \   00000000   4D0069006E00       DC8 4DH, 0, 69H, 0, 6EH, 0, 69H, 0
   \              6900        
   \   00000008   470050005300       DC8 47H, 0, 50H, 0, 53H, 0, 0AH, 0
   \              0A00        
   \   00000010   32002E003600       DC8 32H, 0, 2EH, 0, 36H, 0, 0AH, 0
   \              0A00        
   \   00000018   A90020006300       DC8 0A9H, 0, 20H, 0, 63H, 0, 6FH, 0
   \              6F00        
   \   00000020   700069006E00       DC8 70H, 0, 69H, 0, 6EH, 0, 69H, 0
   \              6900        
   \   00000028   0A0074007700       DC8 0AH, 0, 74H, 0, 77H, 0, 65H, 0
   \              6500        
   \   00000030   61006B007300       DC8 61H, 0, 6BH, 0, 73H, 0, 20H, 0
   \              2000        
   \   00000038   620079000A00       DC8 62H, 0, 79H, 0, 0AH, 0, 7AH, 0
   \              7A00        
   \   00000040   6F0079006400       DC8 6FH, 0, 79H, 0, 64H, 0, 2CH, 0
   \              2C00        
   \   00000048   200050006C00       DC8 20H, 0, 50H, 0, 6CH, 0, 6FH, 0
   \              6F00        
   \   00000050   69006B002C00       DC8 69H, 0, 6BH, 0, 2CH, 0, 20H, 0
   \              2000        
   \   00000058   6D006F007500       DC8 6DH, 0, 6FH, 0, 75H, 0, 73H, 0
   \              7300        
   \   00000060   650078002C00       DC8 65H, 0, 78H, 0, 2CH, 0, 20H, 0
   \              2000        
   \   00000068   4A006F006B00       DC8 4AH, 0, 6FH, 0, 6BH, 0, 65H, 0
   \              6500        
   \   00000070   720020005800       DC8 72H, 0, 20H, 0, 58H, 0, 54H, 0
   \              5400        
   \   00000078   2C0020005300       DC8 2CH, 0, 20H, 0, 53H, 0, 74H, 0
   \              7400        
   \   00000080   6F006E006F00       DC8 6FH, 0, 6EH, 0, 6FH, 0, 73H, 0
   \              7300        
   \   00000088   2C0020004200       DC8 2CH, 0, 20H, 0, 42H, 0, 69H, 0
   \              6900        
   \   00000090   670048006500       DC8 67H, 0, 48H, 0, 65H, 0, 72H, 0
   \              7200        
   \   00000098   630075006C00       DC8 63H, 0, 75H, 0, 6CH, 0, 65H, 0
   \              6500        
   \   000000A0   73000000           DC8 73H, 0, 0, 0
   1125          
   1126          /*
   1127          Revision history:
   1128            2.6
   1129                + Изменения в структуре конфигурационного файла.
   1130                + Возможность вкл/выкл меню.
   1131                + Возможность выбора где отображать местополжение - только в режиме ожидания или везде.
   1132                + В меню добавлен пункт "Об эльфе".
   1133                + Исправлена ошибка с отображением "софтов" в альбомной ориентации в камере и при просмотре изображений.
   1134            2.5.1
   1135                + Исправлена мелкая ошибка
   1136            2.5
   1137                + Изменения в структуре конфигурационного файла.
   1138                + Добавлено меню
   1139                + Формат картинки, соответсвующей данному месту, может быть как png, так и jpg
   1140                  Примечание. Если если есть картинки обоих форматов, то будет загружена в формате png.
   1141            2.4
   1142                + Возвращена возможность вывода имени в фиксированные места.
   1143                + Добавлена поддержка китайского языка.
   1144                + Исправлены мелкие ошибки
   1145            2.3
   1146                + Немного переделан алгоритм перерисовки.
   1147                + Исправлены мелкие ошибки
   1148            2.2
   1149                + Изменения в структуре конфигурационного файла.
   1150                + Возможность задать шрифт, цвет, выравнивание и координаты для выводимого
   1151                  на ГЭ имени местоположения.
   1152                + Отображение на экране в виде иконки включенного режима "автодобавления места".
   1153                + Отображение на экране картинки соответсвующей данному месту.
   1154                  Имя картинки в виде <имя места>.png (например, дом.png)
   1155                + Возможность выбора что отображать.
   1156                + Немного изменен алгоритм переключения профиля в зависимости от местоположения.
   1157                  Теперь переключение происходит не только при смене места, но и при выключении
   1158                  профиля, включенного "вручную".
   1159                + Немного изменен алгоритм включения профиля по умолчанию. Теперь он так же
   1160                  включается если в течении времени "Задержка действия (мин)" телефон не был
   1161                  подключен ни к одной из базовых станций, имена которых введены в "Места"
   1162                + Небольшая оптипизация кода
   1163            2.1
   1164                + Исправлена проблема с некорректным сохранением и последущем выводом на
   1165                  экран имени места, введенного не латинскими сиволами (например, русскими т.д.)
   1166                + Теперь при включении режима "автодобавления места" в базу добавляются не
   1167                  только вновь найденные станции, но и текущая (если ее там не было)
   1168                + Небольшая оптипизация кода и исправление ошибок
   1169            2.0
   1170                + Переход на bcfg (за основу взята версия 1.19.2)
   1171                + Автоматический выбор громкости воспроизведения звуков
   1172                + Небольшая оптипизация кода и исправление ошибок
   1173          
   1174          */

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     AddTo_db()                        20
     BackPressed(BOOK *, u16 *, int)
                                        8
     CellIdProc()                       4
     CheckCellName()                   44
     CheckCurrentCell()                40
     Display_ReDraw(DISP_OBJ *, int, int, int)
                                       24
     DrawHighlightID(int, int, int, int, int, int, int, int, int)
                                       88
     DrawParams(int)                   32
     GetLocationImage(wchar_t *, wchar_t *)
                                       16
     InitVar()                         52
     InvalidateAll()                    4
     MainPageEnter(void *, BOOK *)     12
     NewKey(int, int, int, LPARAM, DISP_OBJ *)
                                       80
     OKPressed(BOOK *, wchar_t *, int)
                                        8
     SB_ELF_Killed(void *, BOOK *)     16
     Send_REDRAW_RELEASE()              8
     ShowAuthorInfo(void *, BOOK *)    16
     ShowHideProc()                    12
     Soft_ReDraw(DISP_OBJ *, int, int, int)
                                       24
     StandbyModeActivatedHook(void *, BOOK *, PAGE_DESC *, LPARAM, u16)
                                        0
     StandbyModeDeactivatedHook(void *, BOOK *, PAGE_DESC *, LPARAM, u16)
                                        0
     Status_ReDraw(DISP_OBJ *, int, int, int)
                                        8
     TerminateElf(void *, BOOK *)       8
     UpdateLocationImage()             44
     char2unicode(wchar_t *, char *, int)
                                        4
     elf_exit()                         4
     equ2manual_profile(int)            0
     gb2un(wchar_t *, char *, int)     28
     getPlaceIndex(wchar_t const *)    12
     getProfile(int)                    0
     getSoundFile(int)                  0
     getVibrate(int)                    0
     isImageViewerBook(BOOK *)          4
     isMiniGPSBook(BOOK *)              4
     load_db_file()                    52
     load_encode_file()                52
     main()                            16
     myModifyUIHook(int, int, int (*)(void *, BOOK *, PAGE_DESC *, LPARAM, u16), int)
                                        4
     onBcfgConfig(void *, BOOK *)      52
     onCloseMiniGPSBook(BOOK *)        12
     onReconfigElf(void *, BOOK *)     20
     onTimer(u16, LPARAM)              52
     onTimerNewAction(u16, LPARAM)     32
     onTimer_disable(u16, LPARAM)       0
     un2gb(char *, wchar_t *, int)     24
     unicode2char(char *, wchar_t *, int)
                                       20
     vibrate(int)                       4
     w2c(wchar_t)                       0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     prevLAC_action                    2
     prevCID_action                    2
     items                           268
     isImageViewerBook(BOOK *)        44
     myModifyUIHook(int, int, int (*)(void *, BOOK *, PAGE_DESC *, LPARAM, u16), int)
                                      40
     load_encode_file()              224
     char2unicode(wchar_t *, char *, int)
                                      96
     w2c(wchar_t)                     88
     unicode2char(char *, wchar_t *, int)
                                      76
     gb2un(wchar_t *, char *, int)   216
     un2gb(char *, wchar_t *, int)   228
     DrawHighlightID(int, int, int, int, int, int, int, int, int)
                                     396
     load_db_file()                  240
     AddTo_db()                      308
     vibrate(int)                    140
     GetLocationImage(wchar_t *, wchar_t *)
                                     156
     UpdateLocationImage()           248
     InitVar()                       684
     getPlaceIndex(wchar_t const *)   96
     getProfile(int)                  80
     getVibrate(int)                  48
     getSoundFile(int)                72
     equ2manual_profile(int)          76
     DrawParams(int)                 488
     onTimer_disable(u16, LPARAM)     16
     Display_ReDraw(DISP_OBJ *, int, int, int)
                                     120
     Status_ReDraw(DISP_OBJ *, int, int, int)
                                      56
     Soft_ReDraw(DISP_OBJ *, int, int, int)
                                     184
     InvalidateAll()                 108
     CheckCurrentCell()              428
     CheckCellName()                 620
     onTimerNewAction(u16, LPARAM)   356
     onTimer(u16, LPARAM)            204
     Send_REDRAW_RELEASE()            96
     SB_ELF_Killed(void *, BOOK *)   404
     TerminateElf(void *, BOOK *)     28
     ShowAuthorInfo(void *, BOOK *)   80
     onReconfigElf(void *, BOOK *)   240
     onBcfgConfig(void *, BOOK *)    308
     MiniGPS_BasePageEvents           40
     elf_exit()                       28
     isMiniGPSBook(BOOK *)            44
     ShowHideProc()                  140
     CellIdProc()                     20
     OKPressed(BOOK *, wchar_t *, int)
                                      76
     BackPressed(BOOK *, u16 *, int)
                                      48
     NewKey(int, int, int, LPARAM, DISP_OBJ *)
                                     712
     StandbyModeActivatedHook(void *, BOOK *, PAGE_DESC *, LPARAM, u16)
                                      20
     StandbyModeDeactivatedHook(void *, BOOK *, PAGE_DESC *, LPARAM, u16)
                                      20
     onCloseMiniGPSBook(BOOK *)      516
     MainPageEnter(void *, BOOK *)   264
     MiniGPS_MainPageEvents           16
     timer_disable                  5488
     myappname                         8
     cfg_manual_profile               28
     cfg_place                       384
     main()                          260
     ??DataTable10                     4
     ??DataTable13                     4
     ??DataTable21                     4
     ??DataTable42                     4
     ??DataTable44                     4
     ??DataTable45                     4
     ??DataTable53                     4
     ??DataTable56                     4
     ??DataTable58                     4
     ??DataTable59                     4
     ??DataTable62                     4
     ??DataTable69                     4
     ??DataTable73                     4
     ??DataTable74                     4
     ??DataTable83                     4
     ??DataTable85                     4
     ??DataTable86                     4
     ??DataTable87                     4
     ??DataTable89                     4
     ??DataTable90                     4
     ??DataTable91                     4
     ??DataTable95                     4
     ??DataTable96                     4
     ??DataTable98                     4
     ??DataTable99                     4
     ??DataTable102                    4
     ??DataTable103                    4
     ??DataTable110                    4
     ??DataTable112                    4
     ??DataTable114                    4
     ??DataTable116                    4
     ??DataTable119                    4
     ??DataTable121                    4
     ??DataTable124                    4
     ??DataTable125                    4
     ??DataTable126                    4
     ??DataTable127                    4
     ??DataTable128                    4
     ??DataTable138                    4
     ??DataTable140                    4
     ??DataTable155                    4
     ??DataTable157                    4
     ??DataTable158                    4
     ??DataTable159                    4
     ??DataTable161                    4
     ??DataTable162                    4
     ??DataTable163                    4
     ??DataTable164                    4
     ??DataTable165                    4
     ??DataTable166                    4
     ??DataTable167                    4
     ??DataTable168                    4
     ??DataTable169                    4
     ??DataTable171                    4
     ??DataTable172                    4
     ??DataTable173                    4
     ?<Initializer for timer_disable>
                                    5488
     ?<Initializer for myappname>      8
     ?<Initializer for cfg_manual_profile>
                                      28
     ?<Initializer for cfg_place>    384
     ?<Constant L"\x41\x75\x74\x6f\x20\x6c\x6f\x63\
                                      84
     ?<Constant L"\x25\x30\x34\x64\x2d\x25\x30\x32\
                                     152
     ?<Constant "[%s]">               48
     ?<Constant L"\x2e\x6a\x70\x67">
                                      24
     ?<Constant L"\x5b\x25\x30\x35\x64\x3a\x25\x30\
                                      72
     ?<Constant "ImageViewerBook">    16
     ?<Constant "MiniGPS_MainPage">   20
     ?<Constant "MiniGPS_BasePage">   20
     ?<Constant "MiniGPS">            60
     ?<Constant L"\x2f">               4
     ?<Constant L"\x42\x63\x66\x67\x45\x64\x69\x74\
                                      48
     ?<Constant L"\x4d\x69\x6e\x69\x47\x50\x53\x27\
                                      56
     ?<Constant L"\x4d\x69\x6e\x69\x47\x50\x53\xa\x_1
                                     164
      Others                         336

 
 9 976 bytes in segment CODE
 1 036 bytes in segment DATA_C
 5 908 bytes in segment DATA_I
 5 908 bytes in segment DATA_ID
     4 bytes in segment DATA_Z
    56 bytes in segment DYN_PAGE
    24 bytes in segment INITTAB
 
 9 664 bytes of CODE  memory (+ 336 bytes shared)
 7 000 bytes of CONST memory
 5 912 bytes of DATA  memory

Errors: none
Warnings: none
