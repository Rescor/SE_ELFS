################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  10/Jun/2013  22:43:19                             #
#           Target CPU    =  ARM                                               #
#           List file     =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample #
#                            \Release\List\BcfgExample.map                     #
#           Output file 1 =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample #
#                            \Release\Exe\BcfgExample.elf                      #
#                            Format: elf, variant: -ynpra                      #
#           Command line  =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample #
#                            \Release\Obj\_cpp2.r79                            #
#                            Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample #
#                            \Release\Obj\conf_loader.r79                      #
#                            Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample #
#                            \Release\Obj\config_data.r79                      #
#                            Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample #
#                            \Release\Obj\func.r79                             #
#                            Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample #
#                            \Release\Obj\main.r79                             #
#                            -o                                                #
#                            Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample #
#                            \Release\Exe\BcfgExample.elf                      #
#                            -Felf -l                                          #
#                            Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample #
#                            \Release\List\BcfgExample.map                     #
#                            -xms -IZ:\home\perk11\IAR2\arm\LIB\ -f            #
#                            Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample #
#                            \..\include\1.xcl                                 #
#                            (-carm -ynpra -V(CODE)CODE_AREA,12                #
#                            -V(DATA)DATA_AREA,12                              #
#                            -Z(CODE_AREA)ELFBEGIN,DATA_ID,START,CODE,DATA_C,I #
#                            NITTAB,DATA_Z,DATA_N,CONFIG_C,DYN_CONST,DYN_CONST #
#                            _DESC,DYN_PAGE,DYN_PAGE_DESC=0-FFFFFFFF           #
#                            -Z(DATA_AREA)DATA_I=0-FFFFFFFF) -n                #
#                            Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.r79 -s    #
#                            main                                              #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE_AREA 000003FC  Relocatable, from module : main




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  ARMv4M                 = USED
  ARMv4T                 = USED
  ARMv5T                 = USED
  StackAlign4            = USED
  __cpu_mode             = __pcs__interwork
  __data_model           = absolute
  __dlib_file_descriptor = 1
  __endian               = little
  __rt_version           = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample\Release\Obj\_cpp2.r79
  PROGRAM MODULE, NAME : _cpp2

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00000018 - 00000023 (0xc bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(size_t)    00000018        main (main)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000024 - 0000002F (0xc bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new[](size_t)
                                   00000024        LoadConfigData(wchar_t const *, wchar_t const *) (conf_loader)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000030 - 0000003B (0xc bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   00000030        LoadConfigData(wchar_t const *, wchar_t const *) (conf_loader)
                                                   main (main)
               stack 1 = 00000000 ( 00000004 )

    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample\Release\Obj\conf_loader.r79
  PROGRAM MODULE, NAME : conf_loader

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000000 - 00000007 (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   LoadConfigData(wchar_t const *, wchar_t const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           successed_config_name   00000004        ReconfigElf(void *, BOOK *) (main)
           successed_config_path   00000000        ReconfigElf(void *, BOOK *) (main)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000003C - 00000157 (0x11c bytes), align: 2
  Segment part 7.             Intra module refs:   InitConfig()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadConfigData(wchar_t const *, wchar_t const *)
                                   0000003C 
               stack 1 = 00000000 ( 00000040 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000158 - 0000018B (0x34 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitConfig()            00000158        ReconfigElf(void *, BOOK *) (main)
                                                   main (main)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000000 - 00000007 (0x8 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 00000528 - 00000533 (0xc bytes), align: 2
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        00000528 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00000524 - 00000525 (0x2 bytes), align: 1
  Segment part 2.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000004B8 - 000004DB (0x24 bytes), align: 2
  Segment part 3.             Intra module refs:   InitConfig()

    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample\Release\Obj\config_data.r79
  PROGRAM MODULE, NAME : config_data

  SEGMENTS IN THE MODULE
  ======================
CONFIG_C
  Relative segment, address: CODE_AREA 00000534 - 0000055F (0x2c bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000560 - 00000563 (0x4 bytes), align: 2
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IS_ENABLED              00000560        Draw(DISP_OBJ *, int, int, int) (main)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000564 - 0000058F (0x2c bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000590 - 00000593 (0x4 bytes), align: 2
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           X_POS                   00000590        Draw(DISP_OBJ *, int, int, int) (main)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000594 - 00000597 (0x4 bytes), align: 2
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Y_POS                   00000594        Draw(DISP_OBJ *, int, int, int) (main)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000598 - 000005C3 (0x2c bytes), align: 2
  Segment part 7. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000005C4 - 000005EF (0x2c bytes), align: 2
  Segment part 8. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000005F0 - 000005F3 (0x4 bytes), align: 2
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PEN_COLOR               000005F0        Draw(DISP_OBJ *, int, int, int) (main)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000005F4 - 0000061F (0x2c bytes), align: 2
  Segment part 10. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000620 - 00000623 (0x4 bytes), align: 2
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BRUSH_COLOR             00000620        Draw(DISP_OBJ *, int, int, int) (main)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000624 - 0000064F (0x2c bytes), align: 2
  Segment part 12. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000650 - 0000067B (0x2c bytes), align: 2
  Segment part 13. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000067C - 0000067F (0x4 bytes), align: 2
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SHOW_IF_LOCKED          0000067C 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000680 - 000006DF (0x60 bytes), align: 2
  Segment part 15. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000006E0 - 0000070B (0x2c bytes), align: 2
  Segment part 16. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000070C - 0000070F (0x4 bytes), align: 2
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           REFRESH_TIME            0000070C        Segment part 20 (main)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000710 - 0000073B (0x2c bytes), align: 2
  Segment part 18. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0000073C - 00000B3B (0x400 bytes), align: 2
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UTF16_TEST              0000073C 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000B3C - 00000B67 (0x2c bytes), align: 2
  Segment part 20. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000B68 - 00000B6B (0x4 bytes), align: 2
  Segment part 21. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           INT_TEST                00000B68 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000B6C - 00000B97 (0x2c bytes), align: 2
  Segment part 22. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000B98 - 00000BD7 (0x40 bytes), align: 2
  Segment part 23. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WIN_TEST                00000B98 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000BD8 - 00000C03 (0x2c bytes), align: 2
  Segment part 24. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000C04 - 00000C43 (0x40 bytes), align: 2
  Segment part 25. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PASS_TEST               00000C04 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000C44 - 00000C6F (0x2c bytes), align: 2
  Segment part 26. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000C70 - 00000C73 (0x4 bytes), align: 2
  Segment part 27. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000C74 - 00000C9F (0x2c bytes), align: 2
  Segment part 28. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000CA0 - 00000CA3 (0x4 bytes), align: 2
  Segment part 29. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000CA4 - 00000CCF (0x2c bytes), align: 2
  Segment part 30. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000CD0 - 00000CD3 (0x4 bytes), align: 2
  Segment part 31. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FONT                    00000CD0        Draw(DISP_OBJ *, int, int, int) (main)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000CD4 - 00000CFF (0x2c bytes), align: 2
  Segment part 32. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000D00 - 00000D03 (0x4 bytes), align: 2
  Segment part 33. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KEY                     00000D00 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000D04 - 00000D07 (0x4 bytes), align: 2
  Segment part 34. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KEYMODE                 00000D04 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000D08 - 00000D33 (0x2c bytes), align: 2
  Segment part 35. ROOT.
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00000D34 - 00000D3B (0x8 bytes), align: 2
  Segment part 36. ROOT.

    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample\Release\Obj\func.r79
  PROGRAM MODULE, NAME : func

  SEGMENTS IN THE MODULE
  ======================
ELFBEGIN
  Relative segment, address: CODE_AREA 00000000, align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ELF_BEGIN               00000000 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000018C - 000001A3 (0x18 bytes), align: 2
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           kill_data               0000018C        elf_exit() (main)
           seqkill                 00000190 
           ASYNC                   000001A0 
           SYNC                    0000019C 
    -------------------------------------------------------------------------
DYN_CONST_DESC
  Relative segment, address: CODE_AREA 00000D3C - 00000D3F (0x4 bytes), align: 2
  Segment part 681. ROOT.
    -------------------------------------------------------------------------
DYN_PAGE
  Relative segment, address: CODE_AREA 00000D40, align: 2
  Segment part 682.
    -------------------------------------------------------------------------
DYN_PAGE_DESC
  Relative segment, address: CODE_AREA 00000D60 - 00000D63 (0x4 bytes), align: 2
  Segment part 683. ROOT.

    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\BcfgExample\Release\Obj\main.r79
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000008 - 00000015 (0xe bytes), align: 2
  Segment part 5.             Intra module refs:   Draw(DISP_OBJ *, int, int, int)
                                                   ReconfigElf(void *, BOOK *)
                                                   Segment part 26
                                                   onTimer(u16, LPARAM)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SIDheap                 0000000C 
           SIonRedraw              00000010 
           StatusRow               00000008 
           timer                   00000014 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000001A4 - 000001BF (0x1c bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 25
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elf_exit()              000001A4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000001C0 - 0000028F (0xd0 bytes), align: 2
  Segment part 11.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Draw(DISP_OBJ *, int, int, int)
                                   000001C0 
               stack 1 = 00000000 ( 00000038 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000290 - 000002F3 (0x64 bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 27
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           onTimer(u16, LPARAM)    00000290 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000002F4 - 00000307 (0x14 bytes), align: 2
  Segment part 15.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000308 - 0000035B (0x54 bytes), align: 2
  Segment part 17.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000035C - 000003CB (0x70 bytes), align: 2
  Segment part 19.            Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000003CC - 000003CF (0x4 bytes), align: 2
  Segment part 20.            Intra module refs:   ReconfigElf(void *, BOOK *)
                                                   onTimer(u16, LPARAM)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000003D0 - 000003FB (0x2c bytes), align: 2
  Segment part 22.            Intra module refs:   main
    -------------------------------------------------------------------------
DYN_PAGE
  Relative segment, address: CODE_AREA 00000D40 - 00000D5F (0x20 bytes), align: 2
  Segment part 7.             Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000004DC - 000004F3 (0x18 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 000004F4 - 0000050B (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   ShowAuthorInfo(void *, BOOK *)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000050C - 00000523 (0x18 bytes), align: 2
  Segment part 4.             Intra module refs:   main
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000003FC - 000004AB (0xb0 bytes), align: 2
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    000003FC        Absolute parts (?ABS_ENTRY_MOD)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000004AC - 000004AF (0x4 bytes), align: 2
  Segment part 25.            Intra module refs:   main
                                                   onMyBookClose(BOOK *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000004B0 - 000004B3 (0x4 bytes), align: 2
  Segment part 26.            Intra module refs:   main
                                                   onMyBookClose(BOOK *)
                                                   onTimer(u16, LPARAM)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000004B4 - 000004B7 (0x4 bytes), align: 2
  Segment part 27.            Intra module refs:   ReconfigElf(void *, BOOK *)
                                                   main
                                                   onTimer(u16, LPARAM)
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000008 - 00000015 (0xe bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 5




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
ELFBEGIN             CODE_AREA           00000000                     rel    0
DATA_ID              CODE_AREA      00000000 - 00000015          16   rel    2
START                CODE_AREA           00000016                     dse    0
CODE                 CODE_AREA      00000018 - 000004B7         4A0   rel    2
DATA_C               CODE_AREA      000004B8 - 00000525          6E   rel    2
INITTAB              CODE_AREA      00000528 - 00000533           C   rel    2
DATA_Z               CODE_AREA           00000534                     dse    0
DATA_N               CODE_AREA           00000534                     dse    0
CONFIG_C             CODE_AREA      00000534 - 00000D3B         808   rel    2
DYN_CONST            CODE_AREA           00000D3C                     dse    0
DYN_CONST_DESC       CODE_AREA      00000D3C - 00000D3F           4   rel    2
DYN_PAGE             CODE_AREA      00000D40 - 00000D5F          20   rel    2
DYN_PAGE_DESC        CODE_AREA      00000D60 - 00000D63           4   rel    2
DATA_I               DATA_AREA      00000000 - 00000015          16   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 3 424 bytes of CODE memory
    22 bytes of DATA memory

Errors: none
Warnings: none

