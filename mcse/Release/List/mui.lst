##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  22:47:58 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\mui.cpp   #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\mui.cpp   #
#                       -D NDEBUG -D USEZLIB -D OLDFUNCTIONS -lCN            #
#                       Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\L #
#                       ist\ -la Z:\home\perk11\www\perk11.info\svn\SE\mcse\ #
#                       Release\List\ -o Z:\home\perk11\www\perk11.info\svn\ #
#                       SE\mcse\Release\Obj\ -s9 --no_unroll                 #
#                       --no_code_motion --cpu_mode arm --endian little      #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --enable_multibytes --fpu None --eec++               #
#                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8 #
#                       n.h --preinclude Z:\home\perk11\www\perk11.info\svn\ #
#                       SE\mcse\..\deleaker\mem2.h -I                        #
#                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2    #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\L #
#                       ist\mui.lst                                          #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\O #
#                       bj\mui.r79                                           #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\mcse\mui.cpp
      1          #include "inc\mc.h"
      2          #include "inc\lng.h"
      3          #include "inc\mui.h"
      4          

   \                                 In segment DATA_C, align 4, align-sorted
      5          const wchar_t mclg_deffile[]=L"default.mclg";
      6          const wchar_t mclg_ext[]=L"mclg";
      7          
      8          const MUI_STR mui[]={
   \                     mui:
   \   00000000   01000000....       DC32 1, `?<Constant L"\\x41d\\x435\\x442">`, 2
   \              ....02000000
   \   0000000C   ........0A00       DC32 `?<Constant L"\\x414\\x430">`, 10, `?<Constant L"\\x431">`, 11
   \              0000........
   \              0B000000    
   \   0000001C   ........0C00       DC32 `?<Constant L"\\x41a\\x431">`, 12, `?<Constant L"\\x41c\\x431">`
   \              0000........
   \   00000028   32000000....       DC32 50, `?<Constant L"\\x41a\\x43e\\x43d\\x444\\x438\\x433\\x4`, 51
   \              ....33000000
   \   00000034   ........3400       DC32 `?<Constant L"\\x42f\\x437\\x44b\\x43a">`, 52
   \              0000        
   \   0000003C   ........6400       DC32 `?<Constant L"\\x420\\x443\\x441\\x441\\x43a\\x438\\x4`, 100
   \              0000        
   \   00000044   ........6500       DC32 `?<Constant L"\\x421\\x43e\\x437\\x434\\x430\\x43d\\x4`, 101
   \              0000        
   \   0000004C   ........6600       DC32 `?<Constant L"\\x41a\\x43e\\x43f\\x438\\x440\\x43e\\x4`, 102
   \              0000        
   \   00000054   ........6700       DC32 `?<Constant L"\\x41f\\x435\\x440\\x435\\x43c\\x435\\x4`, 103
   \              0000        
   \   0000005C   ........E803       DC32 `?<Constant L"\\x423\\x434\\x430\\x43b\\x435\\x43d\\x4`, 1000
   \              0000        
   \   00000064   ........E903       DC32 `?<Constant L"\\x41c\\x435\\x43d\\x44e\\x20\\x4d\\x43"`, 1001
   \              0000        
   \   0000006C   ........EA03       DC32 `?<Constant L"\\x412\\x44b\\x431\\x43e\\x440">`, 1002
   \              0000        
   \   00000074   ........F203       DC32 `?<Constant L"\\x41d\\x430\\x437\\x430\\x434">`, 1010
   \              0000        
   \   0000007C   ........FC03       DC32 `?<Constant L"\\x41e\\x442\\x43a\\x440\\x44b\\x442\\x4`, 1020
   \              0000        
   \   00000084   ........FD03       DC32 `?<Constant L"\\x424\\x430\\x439\\x43b\\x2e\\x2e\\x2e"`, 1021
   \              0000        
   \   0000008C   ........FE03       DC32 `?<Constant L"\\x412\\x44b\\x434\\x435\\x43b\\x438\\x4_1`, 1022
   \              0000        
   \   00000094   ........0004       DC32 `?<Constant L"\\x412\\x44b\\x434\\x435\\x43b\\x438\\x4`, 1024
   \              0000        
   \   0000009C   ........FF03       DC32 `?<Constant L"\\x418\\x43d\\x432\\x435\\x440\\x442\\x4`, 1023
   \              0000        
   \   000000A4   ........0604       DC32 `?<Constant L"\\x421\\x431\\x440\\x43e\\x441\\x438\\x4`, 1030
   \              0000        
   \   000000AC   ........0704       DC32 `?<Constant L"\\x41e\\x43f\\x435\\x440\\x430\\x446\\x4`, 1031
   \              0000        
   \   000000B4   ........0D04       DC32 `?<Constant L"\\x412\\x441\\x442\\x430\\x432\\x438\\x4`, 1037
   \              0000        
   \   000000BC   ........0804       DC32 `?<Constant L"\\x41e\\x442\\x43c\\x435\\x43d\\x438\\x4`, 1032
   \              0000        
   \   000000C4   ........0904       DC32 `?<Constant L"\\x41a\\x43e\\x43f\\x438\\x440\\x43e\\x4_1`, 1033
   \              0000        
   \   000000CC   ........0A04       DC32 `?<Constant L"\\x41f\\x435\\x440\\x435\\x43c\\x435\\x4_1`, 1034
   \              0000        
   \   000000D4   ........0B04       DC32 `?<Constant L"\\x423\\x434\\x430\\x43b\\x438\\x442\\x4`, 1035
   \              0000        
   \   000000DC   ........0C04       DC32 `?<Constant L"\\x41f\\x435\\x440\\x435\\x438\\x43c\\x4`, 1036
   \              0000        
   \   000000E4   ........1004       DC32 `?<Constant L"\\x41d\\x43e\\x432\\x430\\x44f\\x20\\x43`, 1040
   \              0000        
   \   000000EC   ........1A04       DC32 `?<Constant L"\\x421\\x432\\x43e\\x439\\x441\\x442\\x4`, 1050
   \              0000        
   \   000000F4   ........4204       DC32 `?<Constant L"\\x414\\x438\\x441\\x43a\\x438">`, 1090
   \              0000        
   \   000000FC   ........3804       DC32 `?<Constant L"\\x412\\x438\\x434\\x2e\\x2e\\x2e">`, 1080
   \              0000        
   \   00000104   ........3904       DC32 `?<Constant L"\\x421\\x43e\\x440\\x442\\x438\\x440\\x4`, 1081
   \              0000        
   \   0000010C   ........3A04       DC32 `?<Constant L"\\x41f\\x43e\\x20\\x438\\x43c\\x435\\x43`, 1082
   \              0000        
   \   00000114   ........3B04       DC32 `?<Constant L"\\x41f\\x43e\\x20\\x442\\x438\\x43f\\x44`, 1083
   \              0000        
   \   0000011C   ........3C04       DC32 `?<Constant L"\\x41f\\x43e\\x20\\x440\\x430\\x437\\x43`, 1084
   \              0000        
   \   00000124   ........3D04       DC32 `?<Constant L"\\x41f\\x43e\\x20\\x434\\x430\\x442\\x43`, 1085
   \              0000        
   \   0000012C   ........4404       DC32 `?<Constant L"\\x41e\\x431\\x440\\x430\\x442\\x43d\\x4`, 1092
   \              0000        
   \   00000134   ........4304       DC32 `?<Constant L"\\x424\\x438\\x43b\\x44c\\x442\\x440">`, 1091
   \              0000        
   \   0000013C   ........0E04       DC32 `?<Constant L"\\x41e\\x431\\x43d\\x43e\\x432\\x438\\x4`, 1038
   \              0000        
   \   00000144   ........2404       DC32 `?<Constant L"\\x41d\\x43e\\x432\\x44b\\x439\\x20\\x44`, 1060
   \              0000        
   \   0000014C   ........2504       DC32 `?<Constant L"\\x417\\x430\\x43a\\x43b\\x430\\x434\\x4`, 1061
   \              0000        
   \   00000154   ........2604       DC32 `?<Constant L"\\x417\\x430\\x43a\\x43b\\x430\\x434\\x4_1`, 1062
   \              0000        
   \   0000015C   ........2704       DC32 `?<Constant L"\\x414\\x43e\\x431\\x430\\x432\\x438\\x4`, 1063
   \              0000        
   \   00000164   ........2E04       DC32 `?<Constant L"\\x421\\x43f\\x438\\x441\\x43e\\x43a">`, 1070
   \              0000        
   \   0000016C   ........2F04       DC32 `?<Constant L"\\x420\\x430\\x437\\x43d\\x43e\\x435\\x2`, 1071
   \              0000        
   \   00000174   ........3004       DC32 `?<Constant L"\\x41d\\x430\\x441\\x442\\x440\\x43e\\x4`, 1072
   \              0000        
   \   0000017C   ........4C04       DC32 `?<Constant L"\\x41e\\x431\\x20\\x44d\\x43b\\x44c\\x44`, 1100
   \              0000        
   \   00000184   ........B004       DC32 `?<Constant L"\\x412\\x44b\\x445\\x43e\\x434">`, 1200
   \              0000        
   \   0000018C   ........DC05       DC32 `?<Constant L"\\x41f\\x435\\x440\\x435\\x434\\x430\\x4`, 1500
   \              0000        
   \   00000194   ........DD05       DC32 `?<Constant L"\\x418\\x43c\\x44f">`, 1501
   \              0000        
   \   0000019C   ........DE05       DC32 `?<Constant L"\\x41f\\x43e\\x43b\\x43d\\x43e\\x435\\x2`, 1502
   \              0000        
   \   000001A4   ........E705       DC32 `?<Constant L"\\x420\\x430\\x437\\x43c\\x435\\x440">`, 1511
   \              0000        
   \   000001AC   ........E805       DC32 `?<Constant L"\\x41e\\x431\\x449\\x438\\x439">`, 1512
   \              0000        
   \   000001B4   ........E905       DC32 `?<Constant L"\\x41f\\x430\\x43f\\x43e\\x43a">`, 1513
   \              0000        
   \   000001BC   ........DF05       DC32 `?<Constant L"\\x424\\x430\\x439\\x43b\\x43e\\x432">`, 1503
   \              0000        
   \   000001C4   ........E005       DC32 `?<Constant L"\\x414\\x430\\x442\\x430\\x20\\x441\\x43`, 1504
   \              0000        
   \   000001CC   ........E105       DC32 `?<Constant L"\\x410\\x442\\x440\\x438\\x431\\x443\\x4`, 1505
   \              0000        
   \   000001D4   ........E205       DC32 `?<Constant L"\\x422\\x43e\\x43b\\x44c\\x43a\\x43e\\x2`, 1506
   \              0000        
   \   000001DC   ........E305       DC32 `?<Constant L"\\x421\\x43a\\x440\\x44b\\x442\\x44b\\x4`, 1507
   \              0000        
   \   000001E4   ........E405       DC32 `?<Constant L"\\x421\\x438\\x441\\x442\\x435\\x43c\\x4`, 1508
   \              0000        
   \   000001EC   ........E505       DC32 `?<Constant L"\\x410\\x440\\x445\\x438\\x432\\x43d\\x4`, 1509
   \              0000        
   \   000001F4   ........EA05       DC32 `?<Constant L"\\x41e\\x431\\x440\\x430\\x431\\x430\\x4`, 1514
   \              0000        
   \   000001FC   ........EB05       DC32 `?<Constant L"\\x41d\\x435\\x441\\x436\\x430\\x442\\x4`, 1515
   \              0000        
   \   00000204   ........EC05       DC32 `?<Constant L"\\x421\\x436\\x430\\x442\\x44b\\x439">`, 1516
   \              0000        
   \   0000020C   ........B80B       DC32 `?<Constant L"\\x41e\\x431\\x449\\x438\\x439\\x20\\x44`, 3000
   \              0000        
   \   00000214   ........B90B       DC32 `?<Constant L"\\x423\\x434\\x430\\x43b\\x438\\x442\\x4_1`, 3001
   \              0000        
   \   0000021C   ........BA0B       DC32 `?<Constant L"\\x41a\\x43e\\x43f\\x438\\x440\\x43e\\x4_2`, 3002
   \              0000        
   \   00000224   ........BB0B       DC32 `?<Constant L"\\x41f\\x435\\x440\\x435\\x43c\\x435\\x2`, 3003
   \              0000        
   \   0000022C   ........C00B       DC32 `?<Constant L"\\x41f\\x440\\x435\\x440\\x432\\x430\\x4`, 3008
   \              0000        
   \   00000234   ........BC0B       DC32 `?<Constant L"\\x41e\\x447\\x438\\x441\\x442\\x438\\x4`, 3004
   \              0000        
   \   0000023C   ........BD0B       DC32 `?<Constant L"\\x424\\x430\\x439\\x43b\\x20\\x441\\x44`, 3005
   \              0000        
   \   00000244   ........BE0B       DC32 `?<Constant L"\\x412\\x44b\\x439\\x442\\x438\\x20\\x43`, 3006
   \              0000        
   \   0000024C   ........BF0B       DC32 `?<Constant L"\\x41f\\x440\\x438\\x43c\\x435\\x43d\\x4`, 3007
   \              0000        
   \   00000254   ........C10B       DC32 `?<Constant L"\\x41f\\x440\\x438\\x43c\\x435\\x43d\\x4_1`, 3009
   \              0000        
   \   0000025C   ........A10F       DC32 `?<Constant L"\\x424\\x430\\x439\\x43b\\x20\\x25\\x73\\`, 4001
   \              0000        
   \   00000264   ........A20F       DC32 `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43`, 4002
   \              0000        
   \   0000026C   ........A30F       DC32 `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_1`, 4003
   \              0000        
   \   00000274   ........A40F       DC32 `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_2`, 4004
   \              0000        
   \   0000027C   ........A50F       DC32 `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_3`, 4005
   \              0000        
   \   00000284   ........A60F       DC32 `?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4`, 4006
   \              0000        
   \   0000028C   ........A70F       DC32 `?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4_1`, 4007
   \              0000        
   \   00000294   ........A80F       DC32 `?<Constant L"\\x412\\x44b\\x43f\\x43e\\x43b\\x43d\\x4`, 4008
   \              0000        
   \   0000029C   ........A90F       DC32 `?<Constant L"\\x41d\\x435\\x442\\x20\\x444\\x430\\x43`, 4009
   \              0000        
   \   000002A4   ........AA0F       DC32 `?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4_2`, 4010
   \              0000        
   \   000002AC   ........AB0F       DC32 `?<Constant L"\\x41e\\x448\\x438\\x431\\x43a\\x430\\x2`, 4011
   \              0000        
   \   000002B4   ........AC0F       DC32 `?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4_3`, 4012
   \              0000        
   \   000002BC   ........AD0F       DC32 `?<Constant L"\\x41d\\x435\\x20\\x445\\x432\\x430\\x44`, 4013
   \              0000        
   \   000002C4   ........AE0F       DC32 `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_4`, 4014
   \              0000        
   \   000002CC   ........8813       DC32 `?<Constant L"\\x41e\\x448\\x438\\x431\\x43a\\x430\\x2_1`, 5000
   \              0000        
   \   000002D4   ........8913       DC32 `?<Constant L"\\x427\\x442\\x435\\x43d\\x438\\x435\\x2`, 5001
   \              0000        
   \   000002DC   ........8A13       DC32 `?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4`, 5002
   \              0000        
   \   000002E4   ........8B13       DC32 `?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4_1`, 5003
   \              0000        
   \   000002EC   ........8C13       DC32 `?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4_2`, 5004
   \              0000        
   \   000002F4   ........           DC32 `?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4_3`
   \   000002F8   6D636C6700         DC8 "mclg"
   \   000002FD   000000             DC8 0, 0, 0
   \                     mclg_deffile:
   \   00000300   640065006600       DC8 64H, 0, 65H, 0, 66H, 0, 61H, 0
   \              6100        
   \   00000308   75006C007400       DC8 75H, 0, 6CH, 0, 74H, 0, 2EH, 0
   \              2E00        
   \   00000310   6D0063006C00       DC8 6DH, 0, 63H, 0, 6CH, 0, 67H, 0
   \              6700        
   \   00000318   0000               DC8 0, 0
   \   0000031A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     mclg_ext:
   \   00000000   6D0063006C00       DC8 6DH, 0, 63H, 0, 6CH, 0, 67H, 0
   \              6700        
   \   00000008   0000               DC8 0, 0
   \   0000000A   0000               DC8 0, 0
      9          	{id_no, sz_no},
     10          	{id_yes, sz_yes},
     11          
     12          	{id_byte, sz_byte},
     13          	{id_kbyte, sz_kbyte},
     14          	{id_mbyte, sz_mbyte},
     15          
     16          	{id_reconfig, sz_reconfig},
     17          	{id_lng, sz_lng},
     18          	{id_lngname, sz_lngname},
     19          
     20          	{id_dirmking, sz_dirmking},
     21          	{id_copying, sz_copying},
     22          	{id_moveing, sz_moveing},
     23          	{id_deling, sz_deling},
     24          
     25          	{id_mcmenu, sz_mcmenu},
     26          	{id_select, sz_select},
     27          	{id_back, sz_back},
     28          
     29          	{id_open, sz_open},
     30          	{id_file_m, sz_file_m},
     31          	{id_chk, sz_chk},
     32          	{id_chkall, sz_chkall},
     33          	{id_invchk, sz_invchk},
     34          	{id_unchall, sz_unchall},
     35          	{id_oper_m, sz_oper_m},
     36          	{id_past, sz_past},
     37          	{id_cancel, sz_cancel},
     38          	{id_copy, sz_copy},
     39          	{id_move, sz_move},
     40          	{id_del, sz_del},
     41          	{id_rename, sz_rename},
     42          	{id_newdir, sz_newdir},
     43          	{id_prop, sz_prop},
     44          	{id_drvinf, sz_drvinf},
     45          	{id_view_m, sz_view_m},
     46          	{id_sort_m, sz_sort_m},
     47          	{id_sortn, sz_sortn},
     48          	{id_sorte, sz_sorte},
     49          	{id_sorts, sz_sorts},
     50          	{id_sortd, sz_sortd},
     51          	{id_sortr, sz_sortr},
     52          	{id_filter, sz_filter},
     53          	{id_refresh, sz_refresh},
     54          	{id_newfile, sz_newfile},
     55          	{id_bm_m, sz_bm_m},
     56          	{id_bm, sz_bm},
     57          	{id_add, sz_add},
     58          	{id_bml, sz_bml},
     59          	{id_misc_m, sz_misc_m},
     60          	{id_settings, sz_settings},
     61          	{id_about_m, sz_about_m},
     62          	{id_exit, sz_exit},
     63                  
     64                  {id_sendfile, sz_sendfile},
     65          
     66          	{id_name, sz_name},
     67          	{id_fullname, sz_fullname},
     68          	{id_size, sz_size},
     69          	{id_global, sz_global},
     70          	{id_folders, sz_folders},
     71          	{id_files, sz_files},
     72          	{id_date, sz_date},
     73          	{id_attr, sz_attr},
     74          	{id_readonly, sz_readonly},
     75          	{id_hidden, sz_hidden},
     76          	{id_system, sz_system},
     77          	{id_arh, sz_arh},
     78          	{id_subdirs, sz_subdirs},
     79          	{id_ncsize, sz_ncsize},
     80          	{id_csize, sz_csize},
     81          	{id_cglobal, sz_cglobal},
     82          
     83          	{id_pmt_del, sz_pmt_del},
     84          	{id_pmt_copy, sz_pmt_copy},
     85          	{id_pmt_move, sz_pmt_move},
     86          	{id_pmt_stop, sz_pmt_stop},
     87          	{id_pmt_cancel, sz_pmt_cancel},
     88          	{id_pmt_exists, sz_pmt_exists},
     89          	{id_pmt_exit, sz_pmt_exit},
     90          	{id_pmt_impcs, sz_pmt_impcs},
     91          	{id_pmt_implg, sz_pmt_implg},
     92          	{id_pmt_rodel, sz_pmt_rodel},
     93          
     94          	{id_err_attrset, sz_err_attrset},
     95          	{id_err_makedir, sz_err_makedir},
     96          	{id_err_rename, sz_err_rename},
     97          	{id_err_delete, sz_err_delete},
     98          	{id_err_badname_t, sz_err_badname_t},
     99          	{id_err_baddrv_t, sz_err_baddrv_t},
    100          	{id_err_resnok, sz_err_resnok},
    101          	{id_err_nofiles, sz_err_nofiles},
    102          	{id_err_badname, sz_err_badname},
    103          	{id_err_badkey, sz_err_badkey},
    104          	{id_err_badformat, sz_err_badformat},
    105          	{id_err_nomemory, sz_err_nomemory},
    106          	{id_err_makefile, sz_err_makefile},
    107          	{id_err_ziperr, sz_err_ziperr},
    108          
    109          	{id_msg_zreading, sz_msg_zreading},
    110          	{id_msg_showhid_files, sz_msg_showhid_files},
    111          	{id_msg_showsys_files, sz_msg_showsys_files},
    112          	{id_msg_showhidsys_files, sz_msg_showhidsys_files},
    113          	{id_msg_showhid_drv, sz_msg_showhid_drv},
    114          };
    115          
    116          #define MUI_COUNT		 (sizeof(mui)/sizeof(MUI_STR))
    117          
    118          wchar_t* mui_ld[MUI_COUNT];
    119          

   \                                 In segment CODE, align 4, keep-with-next
    120          int getmuiind(int id)
    121          {
    122          	for(int cc=0; cc < MUI_COUNT; cc++)
   \                     ??getmuiind:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   000000EA           B        ??getmuiind_1
   \                     ??getmuiind_2:
   \   00000008   011081E2           ADD      R1,R1,#+1
   \                     ??getmuiind_1:
   \   0000000C   5F0051E3           CMP      R1,#+95
   \   00000010   0500002A           BCS      ??getmuiind_3
    123          		if (mui[cc].id == id) return cc;
   \   00000014   ........           LDR      R2,??DataTable5  ;; mui
   \   00000018   812192E7           LDR      R2,[R2, +R1, LSL #+3]
   \   0000001C   000052E1           CMP      R2,R0
   \   00000020   F8FFFF1A           BNE      ??getmuiind_2
   \   00000024   0100A0E1           MOV      R0,R1
   \   00000028   1EFF2FE1           BX       LR
    124          	return -1;  
   \                     ??getmuiind_3:
   \   0000002C   0000E0E3           MVN      R0,#+0
   \   00000030   1EFF2FE1           BX       LR               ;; return
    125          }
    126          

   \                                 In segment CODE, align 4, keep-with-next
    127          wchar_t* muitxt(int ind)
    128          {
    129          	if (ind < 0 || ind >= MUI_COUNT) return NULL;
   \                     ??muitxt:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   0100004A           BMI      ??muitxt_1
   \   00000008   5F0050E3           CMP      R0,#+95
   \   0000000C   0100003A           BCC      ??muitxt_2
   \                     ??muitxt_1:
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   1EFF2FE1           BX       LR
    130          	return mui_ld[ind] ? mui_ld[ind] : mui[ind].df_str;
   \                     ??muitxt_2:
   \   00000018   ........           LDR      R1,??DataTable15  ;; mui_ld
   \   0000001C   001191E7           LDR      R1,[R1, +R0, LSL #+2]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   ........           LDRNE    R1,??DataTable15  ;; mui_ld
   \   00000028   00019117           LDRNE    R0,[R1, +R0, LSL #+2]
   \   0000002C   1EFF2F11           BXNE     LR
   \   00000030   ........           LDR      R1,??DataTable5  ;; mui
   \   00000034   800181E0           ADD      R0,R1,R0, LSL #+3
   \   00000038   040090E5           LDR      R0,[R0, #+4]
   \   0000003C   1EFF2FE1           BX       LR               ;; return
    131          }

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     mui_ld:
   \   00000000                      DS8 380
    132          
    133          wchar_t* muibuff=NULL;
   \                     muibuff:
   \   0000017C                      DS8 4
    134          int muibuffsz=0;
   \                     muibuffsz:
   \   00000180                      DS8 4
    135          
    136          

   \                                 In segment CODE, align 4, keep-with-next
    137          void SaveMUI(wchar_t* filename)
    138          {
   \                     ??SaveMUI:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
    139            wchar_t *fn;
    140            if (filename)
   \   00000008   000050E3           CMP      R0,#+0
    141            {
    142              fn=filename;
   \   0000000C   0040A011           MOVNE    R4,R0
   \   00000010   0500001A           BNE      ??SaveMUI_1
    143            }
    144            else
    145            {
    146              if (!w_chdir(mcpath))
   \   00000014   ........           LDR      R0,??DataTable6  ;; mcpath
   \   00000018   F70200EF           SWI      +759
   \   0000001C   000050E3           CMP      R0,#+0
    147                fn=(wchar_t *)mclg_deffile;
   \   00000020   38419F05           LDREQ    R4,??SaveMUI_2   ;; mui + 768
    148            }
    149            int f;
    150          
    151            if (fn && (f = w_fopen(fn, WA_Read+WA_Write+WA_Create+WA_Truncate, 0x1FF, NULL)) >=0)
   \   00000024   000054E3           CMP      R4,#+0
   \   00000028   FF87BD08           POPEQ    {R0-R10,PC}
   \                     ??SaveMUI_1:
   \   0000002C   0030A0E3           MOV      R3,#+0
   \   00000030   FF20A0E3           MOV      R2,#+255
   \   00000034   402F82E3           ORR      R2,R2,#0x100
   \   00000038   4B10A0E3           MOV      R1,#+75
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   F80200EF           SWI      +760
   \   00000044   0050B0E1           MOVS     R5,R0
   \   00000048   FF87BD48           POPMI    {R0-R10,PC}
    152            {
    153              MCLG_hdr hdr;
    154              hdr.sig=mclg_sig;
   \   0000004C   10119FE5           LDR      R1,??SaveMUI_2+0x4  ;; mui + 760
    155              hdr.ver=mclg_ver;
    156              //	hdr.size=mclg_size;
    157              hdr.offset=mclg_offset;
    158              
    159              int bufsz=0;
   \   00000050   0040A0E3           MOV      R4,#+0
   \   00000054   001091E5           LDR      R1,[R1, #+0]
    160              for(int cc=0;cc<MUI_COUNT;cc++)
   \   00000058   0060A0E3           MOV      R6,#+0
   \   0000005C   00108DE5           STR      R1,[SP, #+0]
   \   00000060   0310A0E3           MOV      R1,#+3
   \   00000064   04108DE5           STR      R1,[SP, #+4]
   \   00000068   1010A0E3           MOV      R1,#+16
   \   0000006C   0C108DE5           STR      R1,[SP, #+12]
   \   00000070   050000EA           B        ??SaveMUI_3
    161                bufsz+=wstrlen(muitxt(cc))+1;
   \                     ??SaveMUI_4:
   \   00000074   0600A0E1           MOV      R0,R6
   \   00000078   ........           BL       ??muitxt
   \   0000007C   570100EF           SWI      +343
   \   00000080   010080E2           ADD      R0,R0,#+1
   \   00000084   044080E0           ADD      R4,R0,R4
   \   00000088   016086E2           ADD      R6,R6,#+1
   \                     ??SaveMUI_3:
   \   0000008C   5F0056E3           CMP      R6,#+95
   \   00000090   F7FFFF3A           BCC      ??SaveMUI_4
    162              wchar_t* buff;
    163              wchar_t* lp;
    164              lp=buff=new wchar_t[bufsz];
   \   00000094   8400A0E1           LSL      R0,R4,#+1
   \   00000098   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   0000009C   0060A0E1           MOV      R6,R0
   \   000000A0   0670A0E1           MOV      R7,R6
    165              
    166              hdr.size=mclg_size | (bufsz<<16);
   \   000000A4   5F10A0E3           MOV      R1,#+95
   \   000000A8   041881E1           ORR      R1,R1,R4, LSL #+16
   \   000000AC   08108DE5           STR      R1,[SP, #+8]
    167              MC_LG* lgtbl;
    168              MC_LG* lg;
    169              lg=lgtbl=new MC_LG[MUI_COUNT];
   \   000000B0   5F0FA0E3           MOV      R0,#+380
   \   000000B4   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   000000B8   0080A0E1           MOV      R8,R0
   \   000000BC   0890A0E1           MOV      R9,R8
    170              for(int cc=0;cc<MUI_COUNT;cc++)
   \   000000C0   00A0A0E3           MOV      R10,#+0
   \   000000C4   100000EA           B        ??SaveMUI_5
    171              {
    172                lg->id=mui[cc].id;
   \                     ??SaveMUI_6:
   \   000000C8   ........           LDR      R0,??DataTable5  ;; mui
   \   000000CC   8A0190E7           LDR      R0,[R0, +R10, LSL #+3]
   \   000000D0   ........           STRH     R0,[R9], #+2
    173                lg->ofs=lp-buff;
   \   000000D4   A700A0E1           LSR      R0,R7,#+1
   \   000000D8   A60040E0           SUB      R0,R0,R6, LSR #+1
   \   000000DC   ........           STRH     R0,[R9], #+2
    174                wstrcpy(lp, muitxt(cc));
   \   000000E0   0A00A0E1           MOV      R0,R10
   \   000000E4   ........           BL       ??muitxt
   \   000000E8   0010A0E1           MOV      R1,R0
   \   000000EC   0700A0E1           MOV      R0,R7
   \   000000F0   520100EF           SWI      +338
    175                lp+=wstrlen(muitxt(cc))+1;
   \   000000F4   0A00A0E1           MOV      R0,R10
   \   000000F8   ........           BL       ??muitxt
   \   000000FC   570100EF           SWI      +343
   \   00000100   800087E0           ADD      R0,R7,R0, LSL #+1
   \   00000104   027080E2           ADD      R7,R0,#+2
    176                lg++;
    177              }
   \   00000108   01A08AE2           ADD      R10,R10,#+1
   \                     ??SaveMUI_5:
   \   0000010C   5F005AE3           CMP      R10,#+95
   \   00000110   ECFFFF3A           BCC      ??SaveMUI_6
    178              w_fwrite(f,&hdr,sizeof(hdr));
   \   00000114   1020A0E3           MOV      R2,#+16
   \   00000118   0D10A0E1           MOV      R1,SP
   \   0000011C   0500A0E1           MOV      R0,R5
   \   00000120   FA0200EF           SWI      +762
    179              w_fwrite(f,lgtbl,MUI_COUNT*sizeof(MC_LG));
   \   00000124   5F2FA0E3           MOV      R2,#+380
   \   00000128   0810A0E1           MOV      R1,R8
   \   0000012C   0500A0E1           MOV      R0,R5
   \   00000130   FA0200EF           SWI      +762
    180              w_fwrite(f,buff,bufsz*sizeof(wchar_t));
   \   00000134   8420A0E1           LSL      R2,R4,#+1
   \   00000138   0610A0E1           MOV      R1,R6
   \   0000013C   0500A0E1           MOV      R0,R5
   \   00000140   FA0200EF           SWI      +762
    181              delete (lgtbl);
   \   00000144   0800A0E1           MOV      R0,R8
   \   00000148   ........           _BLF     `??operator delete`,`??operator delete??rA`
    182              delete (buff);
   \   0000014C   0600A0E1           MOV      R0,R6
   \   00000150   ........           _BLF     `??operator delete`,`??operator delete??rA`
    183              w_fclose(f);
   \   00000154   0500A0E1           MOV      R0,R5
   \   00000158   FD0200EF           SWI      +765
    184            }
    185          }
   \   0000015C   FF87BDE8           POP      {R0-R10,PC}      ;; return
   \                     ??SaveMUI_2:
   \   00000160   ........           DC32     mui + 768
   \   00000164   ........           DC32     mui + 760
    186          
    187          

   \                                 In segment CODE, align 4, keep-with-next
    188          int LoadMUI(wchar_t* filename)
    189          {
   \                     ??LoadMUI:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
    190            int res = 0;
   \   00000008   0040A0E3           MOV      R4,#+0
    191            int v1=0;
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   08108DE5           STR      R1,[SP, #+8]
    192            wchar_t *fn;
    193            if (filename)
   \   00000014   000050E3           CMP      R0,#+0
    194            {
    195              fn=filename;
   \   00000018   0050A011           MOVNE    R5,R0
   \   0000001C   0500001A           BNE      ??LoadMUI_1
    196            }
    197            else
    198            {
    199              if (!w_chdir(mcpath))
   \   00000020   ........           LDR      R0,??DataTable6  ;; mcpath
   \   00000024   F70200EF           SWI      +759
   \   00000028   000050E3           CMP      R0,#+0
    200                fn=(wchar_t *)mclg_deffile;
   \   0000002C   ........           LDREQ    R5,??DataTable16  ;; mui + 768
    201            }
    202            int f;
    203            if (fn && (f = w_fopen(fn, WA_Read, 0x1FF, NULL)) >=0)
   \   00000030   000055E3           CMP      R5,#+0
   \   00000034   8500000A           BEQ      ??LoadMUI_2
   \                     ??LoadMUI_1:
   \   00000038   0030A0E3           MOV      R3,#+0
   \   0000003C   FF20A0E3           MOV      R2,#+255
   \   00000040   402F82E3           ORR      R2,R2,#0x100
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0500A0E1           MOV      R0,R5
   \   0000004C   F80200EF           SWI      +760
   \   00000050   00008DE5           STR      R0,[SP, #+0]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   7C00004A           BMI      ??LoadMUI_2
    204            {
    205              MCLG_hdr hdr;
    206              if (w_fread(f, &hdr, sizeof(hdr))==sizeof(hdr))
   \   0000005C   1020A0E3           MOV      R2,#+16
   \   00000060   0C108DE2           ADD      R1,SP,#+12
   \   00000064   FB0200EF           SWI      +763
   \   00000068   100050E3           CMP      R0,#+16
   \   0000006C   6F00001A           BNE      ??LoadMUI_3
    207              {
    208                if (hdr.sig==mclg_sig)
   \   00000070   E4119FE5           LDR      R1,??LoadMUI_4   ;; mui + 760
   \   00000074   0C009DE5           LDR      R0,[SP, #+12]
   \   00000078   001091E5           LDR      R1,[R1, #+0]
   \   0000007C   010050E1           CMP      R0,R1
   \   00000080   6800001A           BNE      ??LoadMUI_5
    209                {
    210                  w_lseek(f,hdr.offset,WSEEK_SET);
   \   00000084   18109DE5           LDR      R1,[SP, #+24]
   \   00000088   00009DE5           LDR      R0,[SP, #+0]
    211                  int tblcn=(hdr.size & 0xffff);
    212                  int tblsz=tblcn*sizeof(MC_LG);
    213                  int bufsz=hdr.size>>16;
    214                  FreeMUI();
    215                  
    216                  muibuff=new wchar_t[bufsz];
   \   0000008C   ........           LDR      R8,??DataTable15  ;; mui_ld
   \   00000090   0220A0E3           MOV      R2,#+2
   \   00000094   FC0200EF           SWI      +764
   \   00000098   14009DE5           LDR      R0,[SP, #+20]
   \   0000009C   0018A0E1           LSL      R1,R0,#+16
   \   000000A0   2168A0E1           LSR      R6,R1,#+16
   \   000000A4   40B8A0E1           ASR      R11,R0,#+16
   \   000000A8   ........           BL       ??FreeMUI
   \   000000AC   8B00A0E1           LSL      R0,R11,#+1
   \   000000B0   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   000000B4   7C0188E5           STR      R0,[R8, #+380]
    217                  muibuffsz=bufsz*sizeof(wchar_t);
   \   000000B8   8B00A0E1           LSL      R0,R11,#+1
   \   000000BC   800188E5           STR      R0,[R8, #+384]
    218                  MC_LG* tbl;
    219                  MC_LG* lg;
    220                  lg=tbl=new MC_LG[tblcn];
   \   000000C0   0601A0E1           LSL      R0,R6,#+2
   \   000000C4   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   000000C8   0050A0E1           MOV      R5,R0
    221                  
    222                  if (hdr.ver==mclg_ver)
   \   000000CC   10009DE5           LDR      R0,[SP, #+16]
   \   000000D0   06A1A0E1           LSL      R10,R6,#+2
   \   000000D4   0570A0E1           MOV      R7,R5
   \   000000D8   030050E3           CMP      R0,#+3
   \   000000DC   1F00001A           BNE      ??LoadMUI_6
    223                  {
    224                    res = 
    225                      (w_fread(f, tbl, tblsz)==tblsz) &&
    226                        (w_fread(f, muibuff, bufsz*sizeof(wchar_t))==bufsz*sizeof(wchar_t));
   \   000000E0   00009DE5           LDR      R0,[SP, #+0]
   \   000000E4   0A20A0E1           MOV      R2,R10
   \   000000E8   0510A0E1           MOV      R1,R5
   \   000000EC   FB0200EF           SWI      +763
   \   000000F0   0A0050E1           CMP      R0,R10
   \   000000F4   1400001A           BNE      ??LoadMUI_7
   \   000000F8   ........           LDR      R0,??DataTable12  ;; mui_ld + 380
   \   000000FC   8B20A0E1           LSL      R2,R11,#+1
   \   00000100   001090E5           LDR      R1,[R0, #+0]
   \   00000104   00009DE5           LDR      R0,[SP, #+0]
   \   00000108   FB0200EF           SWI      +763
   \   0000010C   8B0050E1           CMP      R0,R11, LSL #+1
   \   00000110   0D00001A           BNE      ??LoadMUI_7
   \   00000114   0140A0E3           MOV      R4,#+1
    227                    if (res)
    228                    {
    229                      for(int cc=0;cc<tblcn;cc++)
   \   00000118   0090A0E3           MOV      R9,#+0
   \   0000011C   010056E3           CMP      R6,#+1
   \   00000120   3D0000BA           BLT      ??LoadMUI_8
   \                     ??LoadMUI_9:
   \   00000124   060059E1           CMP      R9,R6
   \   00000128   3B0000AA           BGE      ??LoadMUI_8
    230                      {
    231                        int ind=getmuiind(lg->id);
   \   0000012C   ........           LDRH     R0,[R7], #+2
    232                        mui_ld[ind]=muibuff + lg->ofs;
    233                        lg++;
    234                      }
   \   00000130   019089E2           ADD      R9,R9,#+1
   \   00000134   ........           BL       ??getmuiind
   \   00000138   ........           LDRH     R1,[R7], #+2
   \   0000013C   7C2198E5           LDR      R2,[R8, #+380]
   \   00000140   811082E0           ADD      R1,R2,R1, LSL #+1
   \   00000144   001188E7           STR      R1,[R8, +R0, LSL #+2]
   \   00000148   F5FFFFEA           B        ??LoadMUI_9
    235                    }
    236                    else
    237                    {
    238                      delete(muibuff);
   \                     ??LoadMUI_7:
   \   0000014C   7C0198E5           LDR      R0,[R8, #+380]
   \   00000150   ........           _BLF     `??operator delete`,`??operator delete??rA`
    239                      muibuff=NULL;
   \   00000154   0000A0E3           MOV      R0,#+0
   \   00000158   7C0188E5           STR      R0,[R8, #+380]
   \   0000015C   2E0000EA           B        ??LoadMUI_8
    240                    }
    241                  } 
    242                  else if (hdr.ver==2)
   \                     ??LoadMUI_6:
   \   00000160   020050E3           CMP      R0,#+2
   \   00000164   2C00001A           BNE      ??LoadMUI_8
    243                  {
    244                    char *oldm=new char[bufsz];
   \   00000168   0B00A0E1           MOV      R0,R11
   \   0000016C   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   00000170   0090A0E1           MOV      R9,R0
    245                    res = 
    246                      (w_fread(f, tbl, tblsz)==tblsz) &&
    247                        (w_fread(f, oldm, bufsz)==bufsz);
   \   00000174   00009DE5           LDR      R0,[SP, #+0]
   \   00000178   0A20A0E1           MOV      R2,R10
   \   0000017C   0510A0E1           MOV      R1,R5
   \   00000180   FB0200EF           SWI      +763
   \   00000184   0A0050E1           CMP      R0,R10
   \   00000188   1D00001A           BNE      ??LoadMUI_10
   \   0000018C   00009DE5           LDR      R0,[SP, #+0]
   \   00000190   0B20A0E1           MOV      R2,R11
   \   00000194   0910A0E1           MOV      R1,R9
   \   00000198   FB0200EF           SWI      +763
   \   0000019C   0B0050E1           CMP      R0,R11
   \   000001A0   1700001A           BNE      ??LoadMUI_10
   \   000001A4   0140A0E3           MOV      R4,#+1
    248                    if (res)
    249                    {
    250                      for(int cc=0;cc<tblcn;cc++)
   \   000001A8   00A0A0E3           MOV      R10,#+0
   \   000001AC   010056E3           CMP      R6,#+1
   \   000001B0   170000BA           BLT      ??LoadMUI_11
   \                     ??LoadMUI_12:
   \   000001B4   06005AE1           CMP      R10,R6
   \   000001B8   150000AA           BGE      ??LoadMUI_11
    251                      {
    252                        int ind=getmuiind(lg->id);
   \   000001BC   ........           LDRH     R0,[R7], #+2
    253                        wchar_t *tx=muibuff + lg->ofs;
    254                        win12512unicode(tx,oldm+lg->ofs,strlen(oldm+lg->ofs));
    255                        mui_ld[ind]=tx;
    256                        lg++;
    257                      }
   \   000001C0   01A08AE2           ADD      R10,R10,#+1
   \   000001C4   ........           BL       ??getmuiind
   \   000001C8   7C2198E5           LDR      R2,[R8, #+380]
   \   000001CC   00B0A0E1           MOV      R11,R0
   \   000001D0   B000D7E1           LDRH     R0,[R7, #+0]
   \   000001D4   802082E0           ADD      R2,R2,R0, LSL #+1
   \   000001D8   04208DE5           STR      R2,[SP, #+4]
   \   000001DC   090080E0           ADD      R0,R0,R9
   \   000001E0   5A0100EF           SWI      +346
   \   000001E4   0020A0E1           MOV      R2,R0
   \   000001E8   ........           LDRH     R0,[R7], #+2
   \   000001EC   091080E0           ADD      R1,R0,R9
   \   000001F0   04009DE5           LDR      R0,[SP, #+4]
   \   000001F4   ........           _BLF     ??win12512unicode,??win12512unicode??rA
   \   000001F8   04009DE5           LDR      R0,[SP, #+4]
   \   000001FC   0B0188E7           STR      R0,[R8, +R11, LSL #+2]
   \   00000200   EBFFFFEA           B        ??LoadMUI_12
    258                    }
    259                    else
    260                    {
    261                      delete(muibuff);
   \                     ??LoadMUI_10:
   \   00000204   7C0198E5           LDR      R0,[R8, #+380]
   \   00000208   ........           _BLF     `??operator delete`,`??operator delete??rA`
    262                      muibuff=NULL;
   \   0000020C   0000A0E3           MOV      R0,#+0
   \   00000210   7C0188E5           STR      R0,[R8, #+380]
    263                    }
    264                    delete oldm;  
   \                     ??LoadMUI_11:
   \   00000214   0900A0E1           MOV      R0,R9
   \   00000218   ........           _BLF     `??operator delete`,`??operator delete??rA`
    265                  }
    266                  delete(tbl);
   \                     ??LoadMUI_8:
   \   0000021C   0500A0E1           MOV      R0,R5
   \   00000220   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   00000224   010000EA           B        ??LoadMUI_3
    267                }
    268                else v1=1;
   \                     ??LoadMUI_5:
   \   00000228   0110A0E3           MOV      R1,#+1
   \   0000022C   08108DE5           STR      R1,[SP, #+8]
    269              }
    270              w_fclose(f);
   \                     ??LoadMUI_3:
   \   00000230   00009DE5           LDR      R0,[SP, #+0]
   \   00000234   FD0200EF           SWI      +765
    271            }
    272            int LoadMUIold(wchar_t* fname);
    273            if (v1) res=LoadMUIold(filename);
   \   00000238   08009DE5           LDR      R0,[SP, #+8]
   \   0000023C   000050E3           CMP      R0,#+0
   \   00000240   0200000A           BEQ      ??LoadMUI_2
   \   00000244   1C009DE5           LDR      R0,[SP, #+28]
   \   00000248   ........           BL       ??LoadMUIold
   \   0000024C   0040A0E1           MOV      R4,R0
    274            return res;
   \                     ??LoadMUI_2:
   \   00000250   0400A0E1           MOV      R0,R4
   \   00000254   20D08DE2           ADD      SP,SP,#+32
   \   00000258   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??LoadMUI_4:
   \   0000025C   ........           DC32     mui + 760
    275          }
    276          

   \                                 In segment CODE, align 4, keep-with-next
    277          void freeb(wchar_t* buf)
    278          {
   \                     ??freeb:
   \   00000000   00402DE9           PUSH     {LR}
    279            if (buf)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0080BD08           POPEQ    {PC}
    280              if ((int)buf<(int)muibuff || (int)buf>=(int)muibuff+muibuffsz)
   \   0000000C   28109FE5           LDR      R1,??freeb_1     ;; mui_ld + 380
   \   00000010   001091E5           LDR      R1,[R1, #+0]
   \   00000014   010050E1           CMP      R0,R1
   \   00000018   050000BA           BLT      ??freeb_2
   \   0000001C   1C109FE5           LDR      R1,??freeb_1+0x4  ;; mui_ld
   \   00000020   7C2191E5           LDR      R2,[R1, #+380]
   \   00000024   801191E5           LDR      R1,[R1, #+384]
   \   00000028   021081E0           ADD      R1,R1,R2
   \   0000002C   010050E1           CMP      R0,R1
   \   00000030   0080BDB8           POPLT    {PC}
    281                delete(buf);
   \                     ??freeb_2:
   \   00000034   ........           _BLF     `??operator delete`,`??operator delete??rA`
    282          }
   \   00000038   0080BDE8           POP      {PC}             ;; return
   \                     ??freeb_1:
   \   0000003C   ........           DC32     mui_ld + 380
   \   00000040   ........           DC32     mui_ld
    283          

   \                                 In segment CODE, align 4, keep-with-next
    284          void FreeMUI()
    285          {
   \                     ??FreeMUI:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    286            for(int cc=0;cc<MUI_COUNT;cc++)
   \   00000004   ........           LDR      R5,??DataTable15  ;; mui_ld
   \   00000008   0040A0E3           MOV      R4,#+0
   \   0000000C   070000EA           B        ??FreeMUI_1
    287              if (mui_ld[cc])
   \                     ??FreeMUI_2:
   \   00000010   ........           LDR      R0,??DataTable15  ;; mui_ld
   \   00000014   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0200000A           BEQ      ??FreeMUI_3
    288              {
    289                freeb(mui_ld[cc]);
   \   00000020   ........           BL       ??freeb
    290                mui_ld[cc]=NULL;
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   040185E7           STR      R0,[R5, +R4, LSL #+2]
    291              }
   \                     ??FreeMUI_3:
   \   0000002C   014084E2           ADD      R4,R4,#+1
   \                     ??FreeMUI_1:
   \   00000030   5F0054E3           CMP      R4,#+95
   \   00000034   F5FFFF3A           BCC      ??FreeMUI_2
    292            if (muibuff)
   \   00000038   ........           LDR      R0,??DataTable12  ;; mui_ld + 380
   \   0000003C   000090E5           LDR      R0,[R0, #+0]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   3080BD08           POPEQ    {R4,R5,PC}
    293            {
    294              delete(muibuff);
   \   00000048   ........           _BLF     `??operator delete`,`??operator delete??rA`
    295              muibuff=NULL;
   \   0000004C   0000A0E3           MOV      R0,#+0
   \   00000050   7C0185E5           STR      R0,[R5, #+380]
    296            }
    297          }
   \   00000054   3080BDE8           POP      {R4,R5,PC}       ;; return
    298          

   \                                 In segment CODE, align 4, keep-with-next
    299          void MUIProc(char *name, char *value, int is_utf)
    300          {
   \                     ??MUIProc:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   \   00000008   0270A0E1           MOV      R7,R2
    301            int id=strtol(name,0,10);
   \   0000000C   0A20A0E3           MOV      R2,#+10
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           _BLF     strtol,??strtol??rA
    302            int ind=getmuiind(id);
   \   00000018   ........           BL       ??getmuiind
   \   0000001C   0050B0E1           MOVS     R5,R0
    303            int len;
    304            if (ind<0)return;
   \   00000020   F081BD48           POPMI    {R4-R8,PC}
    305            
    306            freeb(mui_ld[ind]);
   \   00000024   ........           LDR      R0,??DataTable15  ;; mui_ld
    307            wchar_t* buf=NULL; 
   \   00000028   0060A0E3           MOV      R6,#+0
   \   0000002C   050190E7           LDR      R0,[R0, +R5, LSL #+2]
   \   00000030   ........           BL       ??freeb
    308            len=strlen(value);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   5A0100EF           SWI      +346
   \   0000003C   0080A0E1           MOV      R8,R0
    309            if (!is_utf)
   \   00000040   000057E3           CMP      R7,#+0
   \   00000044   0700001A           BNE      ??MUIProc_1
    310            {
    311              buf= new wchar_t[len+1];
   \   00000048   010088E2           ADD      R0,R8,#+1
   \   0000004C   8000A0E1           LSL      R0,R0,#+1
   \   00000050   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   00000054   0060A0E1           MOV      R6,R0
    312              win12512unicode(buf,value,len);
   \   00000058   0820A0E1           MOV      R2,R8
   \   0000005C   0410A0E1           MOV      R1,R4
   \   00000060   ........           _BLF     ??win12512unicode,??win12512unicode??rA
   \   00000064   150000EA           B        ??MUIProc_2
    313            }
    314            else
    315            {
    316              int ulen=utf8_to_utf16(value,len,NULL);
   \                     ??MUIProc_1:
   \   00000068   0020A0E3           MOV      R2,#+0
   \   0000006C   0810A0E1           MOV      R1,R8
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   ........           _BLF     ??utf8_to_utf16,??utf8_to_utf16??rA
    317              if (ulen!=-1)
   \   00000078   010070E3           CMN      R0,#+1
   \   0000007C   0F00000A           BEQ      ??MUIProc_2
    318              {
    319                buf= new wchar_t[ulen+1];
   \   00000080   010080E2           ADD      R0,R0,#+1
   \   00000084   8000A0E1           LSL      R0,R0,#+1
   \   00000088   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   0000008C   0060A0E1           MOV      R6,R0
    320                ulen=utf8_to_utf16(value,len,buf);
   \   00000090   0620A0E1           MOV      R2,R6
   \   00000094   0810A0E1           MOV      R1,R8
   \   00000098   0400A0E1           MOV      R0,R4
   \   0000009C   ........           _BLF     ??utf8_to_utf16,??utf8_to_utf16??rA
    321                if (ulen!=-1) buf[ulen]=0; else buf[0]=0;
   \   000000A0   010070E3           CMN      R0,#+1
   \   000000A4   0300000A           BEQ      ??MUIProc_3
   \   000000A8   800086E0           ADD      R0,R6,R0, LSL #+1
   \   000000AC   0010A0E3           MOV      R1,#+0
   \   000000B0   B010C0E1           STRH     R1,[R0, #+0]
   \   000000B4   010000EA           B        ??MUIProc_2
   \                     ??MUIProc_3:
   \   000000B8   0000A0E3           MOV      R0,#+0
   \   000000BC   B000C6E1           STRH     R0,[R6, #+0]
    322              }
    323            }
    324            for(int cc=0;buf[cc];cc++)
   \                     ??MUIProc_2:
   \   000000C0   B010D6E1           LDRH     R1,[R6, #+0]
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   0A20A0E3           MOV      R2,#+10
   \   000000CC   000051E3           CMP      R1,#+0
   \   000000D0   0800001A           BNE      ??MUIProc_4
   \   000000D4   ........           LDR      R0,??DataTable15  ;; mui_ld
   \   000000D8   056180E7           STR      R6,[R0, +R5, LSL #+2]
   \   000000DC   F081BDE8           POP      {R4-R8,PC}
    325              if (buf[cc]==L'^')buf[cc]=L'\n';
   \                     ??MUIProc_5:
   \   000000E0   801086E0           ADD      R1,R6,R0, LSL #+1
   \   000000E4   B010D1E1           LDRH     R1,[R1, #+0]
   \   000000E8   5E0051E3           CMP      R1,#+94
   \   000000EC   80108600           ADDEQ    R1,R6,R0, LSL #+1
   \   000000F0   B020C101           STRHEQ   R2,[R1, #+0]
   \   000000F4   010080E2           ADD      R0,R0,#+1
   \                     ??MUIProc_4:
   \   000000F8   801086E0           ADD      R1,R6,R0, LSL #+1
   \   000000FC   B010D1E1           LDRH     R1,[R1, #+0]
   \   00000100   000051E3           CMP      R1,#+0
   \   00000104   F5FFFF1A           BNE      ??MUIProc_5
    326            mui_ld[ind] = buf;
   \   00000108   ........           LDR      R0,??DataTable15  ;; mui_ld
   \   0000010C   056180E7           STR      R6,[R0, +R5, LSL #+2]
    327          }
   \   00000110   F081BDE8           POP      {R4-R8,PC}       ;; return
    328          

   \                                 In segment CODE, align 4, keep-with-next
    329          int LoadMUIold(wchar_t* fname)
    330          {
    331            int l;
    332            wchar_t* fn;
    333            if (fname)
    334            {
    335              l=0;
    336              fn=fname;
    337            }
    338            else
    339            {
    340              l=1;
    341              fn=(wchar_t *)mclg_deffile;
    342            }
    343            int res = EnumIni(l, fn, MUIProc);
    344            return res;
   \                     ??LoadMUIold:
   \   00000000   18209FE5           LDR      R2,??LoadMUIold_1  ;; ??MUIProc
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   ........           LDREQ    R0,??DataTable16  ;; mui + 768
   \   0000000C   0030A013           MOVNE    R3,#+0
   \   00000010   0130A003           MOVEQ    R3,#+1
   \   00000014   0010A0E1           MOV      R1,R0
   \   00000018   0300A0E1           MOV      R0,R3
   \   0000001C   ........           _BF      ??EnumIni,??EnumIni??rA  ;; tailcall
   \                     ??LoadMUIold_1:
   \   00000020   ........           DC32     ??MUIProc
    345          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     mui

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     mcpath

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     mui_ld + 380

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     mui_ld

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     mui + 768

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x42f\\x437\\x44b\\x43a">`:
   \   00000000   2F0437044B04       DC8 2FH, 4, 37H, 4, 4BH, 4, 3AH, 4
   \              3A04        
   \   00000008   0000               DC8 0, 0
   \   0000000A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x427\\x442\\x435\\x43d\\x438\\x435\\x2`:
   \   00000000   270442043504       DC8 27H, 4, 42H, 4, 35H, 4, 3DH, 4
   \              3D04        
   \   00000008   380435042000       DC8 38H, 4, 35H, 4, 20H, 0, 30H, 4
   \              3004        
   \   00000010   400445043804       DC8 40H, 4, 45H, 4, 38H, 4, 32H, 4
   \              3204        
   \   00000018   30040000           DC8 30H, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4`:
   \   00000000   1F043E043A04       DC8 1FH, 4, 3EH, 4, 3AH, 4, 30H, 4
   \              3004        
   \   00000008   37044B043204       DC8 37H, 4, 4BH, 4, 32H, 4, 30H, 4
   \              3004        
   \   00000010   42044C042000       DC8 42H, 4, 4CH, 4, 20H, 0, 41H, 4
   \              4104        
   \   00000018   3A0440044B04       DC8 3AH, 4, 40H, 4, 4BH, 4, 42H, 4
   \              4204        
   \   00000020   4B0435042000       DC8 4BH, 4, 35H, 4, 20H, 0, 44H, 4
   \              4404        
   \   00000028   300439043B04       DC8 30H, 4, 39H, 4, 3BH, 4, 4BH, 4
   \              4B04        
   \   00000030   0000               DC8 0, 0
   \   00000032   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4_1`:
   \   00000000   1F043E043A04       DC8 1FH, 4, 3EH, 4, 3AH, 4, 30H, 4
   \              3004        
   \   00000008   37044B043204       DC8 37H, 4, 4BH, 4, 32H, 4, 30H, 4
   \              3004        
   \   00000010   42044C042000       DC8 42H, 4, 4CH, 4, 20H, 0, 41H, 4
   \              4104        
   \   00000018   380441044204       DC8 38H, 4, 41H, 4, 42H, 4, 35H, 4
   \              3504        
   \   00000020   3C043D044B04       DC8 3CH, 4, 3DH, 4, 4BH, 4, 35H, 4
   \              3504        
   \   00000028   200044043004       DC8 20H, 0, 44H, 4, 30H, 4, 39H, 4
   \              3904        
   \   00000030   3B044B040000       DC8 3BH, 4, 4BH, 4, 0, 0
   \   00000036   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4_2`:
   \   00000000   1F043E043A04       DC8 1FH, 4, 3EH, 4, 3AH, 4, 30H, 4
   \              3004        
   \   00000008   37044B043204       DC8 37H, 4, 4BH, 4, 32H, 4, 30H, 4
   \              3004        
   \   00000010   42044C042000       DC8 42H, 4, 4CH, 4, 20H, 0, 41H, 4
   \              4104        
   \   00000018   3A0440044B04       DC8 3AH, 4, 40H, 4, 4BH, 4, 42H, 4
   \              4204        
   \   00000020   4B0435042000       DC8 4BH, 4, 35H, 4, 20H, 0, 38H, 4
   \              3804        
   \   00000028   200041043804       DC8 20H, 0, 41H, 4, 38H, 4, 41H, 4
   \              4104        
   \   00000030   420435043C04       DC8 42H, 4, 35H, 4, 3CH, 4, 3DH, 4
   \              3D04        
   \   00000038   4B0435042000       DC8 4BH, 4, 35H, 4, 20H, 0, 44H, 4
   \              4404        
   \   00000040   300439043B04       DC8 30H, 4, 39H, 4, 3BH, 4, 4BH, 4
   \              4B04        
   \   00000048   0000               DC8 0, 0
   \   0000004A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4_3`:
   \   00000000   1F043E043A04       DC8 1FH, 4, 3EH, 4, 3AH, 4, 30H, 4
   \              3004        
   \   00000008   37044B043204       DC8 37H, 4, 4BH, 4, 32H, 4, 30H, 4
   \              3004        
   \   00000010   42044C042000       DC8 42H, 4, 4CH, 4, 20H, 0, 41H, 4
   \              4104        
   \   00000018   3A0440044B04       DC8 3AH, 4, 40H, 4, 4BH, 4, 42H, 4
   \              4204        
   \   00000020   4B0435042000       DC8 4BH, 4, 35H, 4, 20H, 0, 34H, 4
   \              3404        
   \   00000028   380441043A04       DC8 38H, 4, 41H, 4, 3AH, 4, 38H, 4
   \              3804        
   \   00000030   0000               DC8 0, 0
   \   00000032   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x442">`:
   \   00000000   1D0435044204       DC8 1DH, 4, 35H, 4, 42H, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x414\\x430">`:
   \   00000000   140430040000       DC8 14H, 4, 30H, 4, 0, 0
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x431">`:
   \   00000000   31040000           DC8 31H, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41a\\x431">`:
   \   00000000   1A0431040000       DC8 1AH, 4, 31H, 4, 0, 0
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41c\\x431">`:
   \   00000000   1C0431040000       DC8 1CH, 4, 31H, 4, 0, 0
   \   00000006   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41a\\x43e\\x43d\\x444\\x438\\x433\\x4`:
   \   00000000   1A043E043D04       DC8 1AH, 4, 3EH, 4, 3DH, 4, 44H, 4
   \              4404        
   \   00000008   380433044304       DC8 38H, 4, 33H, 4, 43H, 4, 2DH, 0
   \              2D00        
   \   00000010   0A0040043004       DC8 0AH, 0, 40H, 4, 30H, 4, 46H, 4
   \              4604        
   \   00000018   38044F042000       DC8 38H, 4, 4FH, 4, 20H, 0, 3EH, 4
   \              3E04        
   \   00000020   31043D043E04       DC8 31H, 4, 3DH, 4, 3EH, 4, 32H, 4
   \              3204        
   \   00000028   3B0435043D04       DC8 3BH, 4, 35H, 4, 3DH, 4, 30H, 4
   \              3004        
   \   00000030   21000000           DC8 21H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x412\\x44b\\x434\\x435\\x43b\\x438\\x4`:
   \   00000000   12044B043404       DC8 12H, 4, 4BH, 4, 34H, 4, 35H, 4
   \              3504        
   \   00000008   3B0438044204       DC8 3BH, 4, 38H, 4, 42H, 4, 4CH, 4
   \              4C04        
   \   00000010   200032044104       DC8 20H, 0, 32H, 4, 41H, 4, 35H, 4
   \              3504        
   \   00000018   0000               DC8 0, 0
   \   0000001A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x420\\x443\\x441\\x441\\x43a\\x438\\x4`:
   \   00000000   200443044104       DC8 20H, 4, 43H, 4, 41H, 4, 41H, 4
   \              4104        
   \   00000008   3A0438043904       DC8 3AH, 4, 38H, 4, 39H, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x421\\x43e\\x437\\x434\\x430\\x43d\\x4`:
   \   00000000   21043E043704       DC8 21H, 4, 3EH, 4, 37H, 4, 34H, 4
   \              3404        
   \   00000008   30043D043804       DC8 30H, 4, 3DH, 4, 38H, 4, 35H, 4
   \              3504        
   \   00000010   20003F043004       DC8 20H, 0, 3FH, 4, 30H, 4, 3FH, 4
   \              3F04        
   \   00000018   3E043A040000       DC8 3EH, 4, 3AH, 4, 0, 0
   \   0000001E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41a\\x43e\\x43f\\x438\\x440\\x43e\\x4`:
   \   00000000   1A043E043F04       DC8 1AH, 4, 3EH, 4, 3FH, 4, 38H, 4
   \              3804        
   \   00000008   40043E043204       DC8 40H, 4, 3EH, 4, 32H, 4, 30H, 4
   \              3004        
   \   00000010   3D0438043504       DC8 3DH, 4, 38H, 4, 35H, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x435\\x440\\x435\\x43c\\x435\\x4`:
   \   00000000   1F0435044004       DC8 1FH, 4, 35H, 4, 40H, 4, 35H, 4
   \              3504        
   \   00000008   3C0435044904       DC8 3CH, 4, 35H, 4, 49H, 4, 35H, 4
   \              3504        
   \   00000010   3D0438043504       DC8 3DH, 4, 38H, 4, 35H, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x423\\x434\\x430\\x43b\\x435\\x43d\\x4`:
   \   00000000   230434043004       DC8 23H, 4, 34H, 4, 30H, 4, 3BH, 4
   \              3B04        
   \   00000008   35043D043804       DC8 35H, 4, 3DH, 4, 38H, 4, 35H, 4
   \              3504        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41c\\x435\\x43d\\x44e\\x20\\x4d\\x43"`:
   \   00000000   1C0435043D04       DC8 1CH, 4, 35H, 4, 3DH, 4, 4EH, 4
   \              4E04        
   \   00000008   20004D004300       DC8 20H, 0, 4DH, 0, 43H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x412\\x44b\\x431\\x43e\\x440">`:
   \   00000000   12044B043104       DC8 12H, 4, 4BH, 4, 31H, 4, 3EH, 4
   \              3E04        
   \   00000008   40040000           DC8 40H, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x430\\x437\\x430\\x434">`:
   \   00000000   1D0430043704       DC8 1DH, 4, 30H, 4, 37H, 4, 30H, 4
   \              3004        
   \   00000008   34040000           DC8 34H, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x442\\x43a\\x440\\x44b\\x442\\x4`:
   \   00000000   1E0442043A04       DC8 1EH, 4, 42H, 4, 3AH, 4, 40H, 4
   \              4004        
   \   00000008   4B0442044C04       DC8 4BH, 4, 42H, 4, 4CH, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x424\\x430\\x439\\x43b\\x2e\\x2e\\x2e"`:
   \   00000000   240430043904       DC8 24H, 4, 30H, 4, 39H, 4, 3BH, 4
   \              3B04        
   \   00000008   2E002E002E00       DC8 2EH, 0, 2EH, 0, 2EH, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x412\\x44b\\x434\\x435\\x43b\\x438\\x4_1`:
   \   00000000   12044B043404       DC8 12H, 4, 4BH, 4, 34H, 4, 35H, 4
   \              3504        
   \   00000008   3B0438044204       DC8 3BH, 4, 38H, 4, 42H, 4, 4CH, 4
   \              4C04        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x418\\x43d\\x432\\x435\\x440\\x442\\x4`:
   \   00000000   18043D043204       DC8 18H, 4, 3DH, 4, 32H, 4, 35H, 4
   \              3504        
   \   00000008   400442043804       DC8 40H, 4, 42H, 4, 38H, 4, 40H, 4
   \              4004        
   \   00000010   3E0432043004       DC8 3EH, 4, 32H, 4, 30H, 4, 42H, 4
   \              4204        
   \   00000018   4C040000           DC8 4CH, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x421\\x431\\x440\\x43e\\x441\\x438\\x4`:
   \   00000000   210431044004       DC8 21H, 4, 31H, 4, 40H, 4, 3EH, 4
   \              3E04        
   \   00000008   410438044204       DC8 41H, 4, 38H, 4, 42H, 4, 4CH, 4
   \              4C04        
   \   00000010   200032044104       DC8 20H, 0, 32H, 4, 41H, 4, 35H, 4
   \              3504        
   \   00000018   0000               DC8 0, 0
   \   0000001A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x43f\\x435\\x440\\x430\\x446\\x4`:
   \   00000000   1E043F043504       DC8 1EH, 4, 3FH, 4, 35H, 4, 40H, 4
   \              4004        
   \   00000008   300446043804       DC8 30H, 4, 46H, 4, 38H, 4, 38H, 4
   \              3804        
   \   00000010   2E002E002E00       DC8 2EH, 0, 2EH, 0, 2EH, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x412\\x441\\x442\\x430\\x432\\x438\\x4`:
   \   00000000   120441044204       DC8 12H, 4, 41H, 4, 42H, 4, 30H, 4
   \              3004        
   \   00000008   320438044204       DC8 32H, 4, 38H, 4, 42H, 4, 4CH, 4
   \              4C04        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x442\\x43c\\x435\\x43d\\x438\\x4`:
   \   00000000   1E0442043C04       DC8 1EH, 4, 42H, 4, 3CH, 4, 35H, 4
   \              3504        
   \   00000008   3D0438044204       DC8 3DH, 4, 38H, 4, 42H, 4, 4CH, 4
   \              4C04        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41a\\x43e\\x43f\\x438\\x440\\x43e\\x4_1`:
   \   00000000   1A043E043F04       DC8 1AH, 4, 3EH, 4, 3FH, 4, 38H, 4
   \              3804        
   \   00000008   40043E043204       DC8 40H, 4, 3EH, 4, 32H, 4, 30H, 4
   \              3004        
   \   00000010   42044C040000       DC8 42H, 4, 4CH, 4, 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x435\\x440\\x435\\x43c\\x435\\x4_1`:
   \   00000000   1F0435044004       DC8 1FH, 4, 35H, 4, 40H, 4, 35H, 4
   \              3504        
   \   00000008   3C0435044104       DC8 3CH, 4, 35H, 4, 41H, 4, 42H, 4
   \              4204        
   \   00000010   380442044C04       DC8 38H, 4, 42H, 4, 4CH, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x423\\x434\\x430\\x43b\\x438\\x442\\x4`:
   \   00000000   230434043004       DC8 23H, 4, 34H, 4, 30H, 4, 3BH, 4
   \              3B04        
   \   00000008   380442044C04       DC8 38H, 4, 42H, 4, 4CH, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x435\\x440\\x435\\x438\\x43c\\x4`:
   \   00000000   1F0435044004       DC8 1FH, 4, 35H, 4, 40H, 4, 35H, 4
   \              3504        
   \   00000008   38043C043504       DC8 38H, 4, 3CH, 4, 35H, 4, 3DH, 4
   \              3D04        
   \   00000010   3E0432043004       DC8 3EH, 4, 32H, 4, 30H, 4, 42H, 4
   \              4204        
   \   00000018   4C040000           DC8 4CH, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x43e\\x432\\x430\\x44f\\x20\\x43`:
   \   00000000   1D043E043204       DC8 1DH, 4, 3EH, 4, 32H, 4, 30H, 4
   \              3004        
   \   00000008   4F0420003F04       DC8 4FH, 4, 20H, 0, 3FH, 4, 30H, 4
   \              3004        
   \   00000010   3F043A043004       DC8 3FH, 4, 3AH, 4, 30H, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x421\\x432\\x43e\\x439\\x441\\x442\\x4`:
   \   00000000   210432043E04       DC8 21H, 4, 32H, 4, 3EH, 4, 39H, 4
   \              3904        
   \   00000008   410442043204       DC8 41H, 4, 42H, 4, 32H, 4, 30H, 4
   \              3004        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x414\\x438\\x441\\x43a\\x438">`:
   \   00000000   140438044104       DC8 14H, 4, 38H, 4, 41H, 4, 3AH, 4
   \              3A04        
   \   00000008   38040000           DC8 38H, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x412\\x438\\x434\\x2e\\x2e\\x2e">`:
   \   00000000   120438043404       DC8 12H, 4, 38H, 4, 34H, 4, 2EH, 0
   \              2E00        
   \   00000008   2E002E000000       DC8 2EH, 0, 2EH, 0, 0, 0
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x421\\x43e\\x440\\x442\\x438\\x440\\x4`:
   \   00000000   21043E044004       DC8 21H, 4, 3EH, 4, 40H, 4, 42H, 4
   \              4204        
   \   00000008   380440043E04       DC8 38H, 4, 40H, 4, 3EH, 4, 32H, 4
   \              3204        
   \   00000010   3A0430042E00       DC8 3AH, 4, 30H, 4, 2EH, 0, 2EH, 0
   \              2E00        
   \   00000018   2E000000           DC8 2EH, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x43e\\x20\\x438\\x43c\\x435\\x43`:
   \   00000000   1F043E042000       DC8 1FH, 4, 3EH, 4, 20H, 0, 38H, 4
   \              3804        
   \   00000008   3C0435043D04       DC8 3CH, 4, 35H, 4, 3DH, 4, 38H, 4
   \              3804        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x43e\\x20\\x442\\x438\\x43f\\x44`:
   \   00000000   1F043E042000       DC8 1FH, 4, 3EH, 4, 20H, 0, 42H, 4
   \              4204        
   \   00000008   38043F044304       DC8 38H, 4, 3FH, 4, 43H, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x43e\\x20\\x440\\x430\\x437\\x43`:
   \   00000000   1F043E042000       DC8 1FH, 4, 3EH, 4, 20H, 0, 40H, 4
   \              4004        
   \   00000008   300437043C04       DC8 30H, 4, 37H, 4, 3CH, 4, 35H, 4
   \              3504        
   \   00000010   400443040000       DC8 40H, 4, 43H, 4, 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x43e\\x20\\x434\\x430\\x442\\x43`:
   \   00000000   1F043E042000       DC8 1FH, 4, 3EH, 4, 20H, 0, 34H, 4
   \              3404        
   \   00000008   300442043504       DC8 30H, 4, 42H, 4, 35H, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x431\\x440\\x430\\x442\\x43d\\x4`:
   \   00000000   1E0431044004       DC8 1EH, 4, 31H, 4, 40H, 4, 30H, 4
   \              3004        
   \   00000008   42043D043004       DC8 42H, 4, 3DH, 4, 30H, 4, 4FH, 4
   \              4F04        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x424\\x438\\x43b\\x44c\\x442\\x440">`:
   \   00000000   240438043B04       DC8 24H, 4, 38H, 4, 3BH, 4, 4CH, 4
   \              4C04        
   \   00000008   420440040000       DC8 42H, 4, 40H, 4, 0, 0
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x431\\x43d\\x43e\\x432\\x438\\x4`:
   \   00000000   1E0431043D04       DC8 1EH, 4, 31H, 4, 3DH, 4, 3EH, 4
   \              3E04        
   \   00000008   320438044204       DC8 32H, 4, 38H, 4, 42H, 4, 4CH, 4
   \              4C04        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x43e\\x432\\x44b\\x439\\x20\\x44`:
   \   00000000   1D043E043204       DC8 1DH, 4, 3EH, 4, 32H, 4, 4BH, 4
   \              4B04        
   \   00000008   390420004404       DC8 39H, 4, 20H, 0, 44H, 4, 30H, 4
   \              3004        
   \   00000010   39043B040000       DC8 39H, 4, 3BH, 4, 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x417\\x430\\x43a\\x43b\\x430\\x434\\x4`:
   \   00000000   170430043A04       DC8 17H, 4, 30H, 4, 3AH, 4, 3BH, 4
   \              3B04        
   \   00000008   300434043A04       DC8 30H, 4, 34H, 4, 3AH, 4, 38H, 4
   \              3804        
   \   00000010   2E002E002E00       DC8 2EH, 0, 2EH, 0, 2EH, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x417\\x430\\x43a\\x43b\\x430\\x434\\x4_1`:
   \   00000000   170430043A04       DC8 17H, 4, 30H, 4, 3AH, 4, 3BH, 4
   \              3B04        
   \   00000008   300434043A04       DC8 30H, 4, 34H, 4, 3AH, 4, 30H, 4
   \              3004        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x414\\x43e\\x431\\x430\\x432\\x438\\x4`:
   \   00000000   14043E043104       DC8 14H, 4, 3EH, 4, 31H, 4, 30H, 4
   \              3004        
   \   00000008   320438044204       DC8 32H, 4, 38H, 4, 42H, 4, 4CH, 4
   \              4C04        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x421\\x43f\\x438\\x441\\x43e\\x43a">`:
   \   00000000   21043F043804       DC8 21H, 4, 3FH, 4, 38H, 4, 41H, 4
   \              4104        
   \   00000008   3E043A040000       DC8 3EH, 4, 3AH, 4, 0, 0
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x420\\x430\\x437\\x43d\\x43e\\x435\\x2`:
   \   00000000   200430043704       DC8 20H, 4, 30H, 4, 37H, 4, 3DH, 4
   \              3D04        
   \   00000008   3E0435042E00       DC8 3EH, 4, 35H, 4, 2EH, 0, 2EH, 0
   \              2E00        
   \   00000010   2E000000           DC8 2EH, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x430\\x441\\x442\\x440\\x43e\\x4`:
   \   00000000   1D0430044104       DC8 1DH, 4, 30H, 4, 41H, 4, 42H, 4
   \              4204        
   \   00000008   40043E043904       DC8 40H, 4, 3EH, 4, 39H, 4, 3AH, 4
   \              3A04        
   \   00000010   38040000           DC8 38H, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x431\\x20\\x44d\\x43b\\x44c\\x44`:
   \   00000000   1E0431042000       DC8 1EH, 4, 31H, 4, 20H, 0, 4DH, 4
   \              4D04        
   \   00000008   3B044C044404       DC8 3BH, 4, 4CH, 4, 44H, 4, 35H, 4
   \              3504        
   \   00000010   2E002E002E00       DC8 2EH, 0, 2EH, 0, 2EH, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x412\\x44b\\x445\\x43e\\x434">`:
   \   00000000   12044B044504       DC8 12H, 4, 4BH, 4, 45H, 4, 3EH, 4
   \              3E04        
   \   00000008   34040000           DC8 34H, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x435\\x440\\x435\\x434\\x430\\x4`:
   \   00000000   1F0435044004       DC8 1FH, 4, 35H, 4, 40H, 4, 35H, 4
   \              3504        
   \   00000008   340430044204       DC8 34H, 4, 30H, 4, 42H, 4, 4CH, 4
   \              4C04        
   \   00000010   200047043504       DC8 20H, 0, 47H, 4, 35H, 4, 40H, 4
   \              4004        
   \   00000018   350437042000       DC8 35H, 4, 37H, 4, 20H, 0, 42H, 0
   \              4200        
   \   00000020   54000000           DC8 54H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x418\\x43c\\x44f">`:
   \   00000000   18043C044F04       DC8 18H, 4, 3CH, 4, 4FH, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x43e\\x43b\\x43d\\x43e\\x435\\x2`:
   \   00000000   1F043E043B04       DC8 1FH, 4, 3EH, 4, 3BH, 4, 3DH, 4
   \              3D04        
   \   00000008   3E0435042000       DC8 3EH, 4, 35H, 4, 20H, 0, 38H, 4
   \              3804        
   \   00000010   3C044F040000       DC8 3CH, 4, 4FH, 4, 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x420\\x430\\x437\\x43c\\x435\\x440">`:
   \   00000000   200430043704       DC8 20H, 4, 30H, 4, 37H, 4, 3CH, 4
   \              3C04        
   \   00000008   350440040000       DC8 35H, 4, 40H, 4, 0, 0
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x431\\x449\\x438\\x439">`:
   \   00000000   1E0431044904       DC8 1EH, 4, 31H, 4, 49H, 4, 38H, 4
   \              3804        
   \   00000008   39040000           DC8 39H, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x430\\x43f\\x43e\\x43a">`:
   \   00000000   1F0430043F04       DC8 1FH, 4, 30H, 4, 3FH, 4, 3EH, 4
   \              3E04        
   \   00000008   3A040000           DC8 3AH, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x424\\x430\\x439\\x43b\\x43e\\x432">`:
   \   00000000   240430043904       DC8 24H, 4, 30H, 4, 39H, 4, 3BH, 4
   \              3B04        
   \   00000008   3E0432040000       DC8 3EH, 4, 32H, 4, 0, 0
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x414\\x430\\x442\\x430\\x20\\x441\\x43`:
   \   00000000   140430044204       DC8 14H, 4, 30H, 4, 42H, 4, 30H, 4
   \              3004        
   \   00000008   200041043E04       DC8 20H, 0, 41H, 4, 3EH, 4, 37H, 4
   \              3704        
   \   00000010   340430043D04       DC8 34H, 4, 30H, 4, 3DH, 4, 38H, 4
   \              3804        
   \   00000018   4F040000           DC8 4FH, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x410\\x442\\x440\\x438\\x431\\x443\\x4`:
   \   00000000   100442044004       DC8 10H, 4, 42H, 4, 40H, 4, 38H, 4
   \              3804        
   \   00000008   310443044204       DC8 31H, 4, 43H, 4, 42H, 4, 4BH, 4
   \              4B04        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x422\\x43e\\x43b\\x44c\\x43a\\x43e\\x2`:
   \   00000000   22043E043B04       DC8 22H, 4, 3EH, 4, 3BH, 4, 4CH, 4
   \              4C04        
   \   00000008   3A043E042000       DC8 3AH, 4, 3EH, 4, 20H, 0, 47H, 4
   \              4704        
   \   00000010   420435043D04       DC8 42H, 4, 35H, 4, 3DH, 4, 38H, 4
   \              3804        
   \   00000018   35040000           DC8 35H, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x421\\x43a\\x440\\x44b\\x442\\x44b\\x4`:
   \   00000000   21043A044004       DC8 21H, 4, 3AH, 4, 40H, 4, 4BH, 4
   \              4B04        
   \   00000008   42044B043904       DC8 42H, 4, 4BH, 4, 39H, 4, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x421\\x438\\x441\\x442\\x435\\x43c\\x4`:
   \   00000000   210438044104       DC8 21H, 4, 38H, 4, 41H, 4, 42H, 4
   \              4204        
   \   00000008   35043C043D04       DC8 35H, 4, 3CH, 4, 3DH, 4, 4BH, 4
   \              4B04        
   \   00000010   39040000           DC8 39H, 4, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x410\\x440\\x445\\x438\\x432\\x43d\\x4`:
   \   00000000   100440044504       DC8 10H, 4, 40H, 4, 45H, 4, 38H, 4
   \              3804        
   \   00000008   32043D044B04       DC8 32H, 4, 3DH, 4, 4BH, 4, 39H, 4
   \              3904        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x431\\x440\\x430\\x431\\x430\\x4`:
   \   00000000   1E0431044004       DC8 1EH, 4, 31H, 4, 40H, 4, 30H, 4
   \              3004        
   \   00000008   310430044204       DC8 31H, 4, 30H, 4, 42H, 4, 4BH, 4
   \              4B04        
   \   00000010   320430044204       DC8 32H, 4, 30H, 4, 42H, 4, 4CH, 4
   \              4C04        
   \   00000018   20003F043E04       DC8 20H, 0, 3FH, 4, 3EH, 4, 34H, 4
   \              3404        
   \   00000020   3A0430044204       DC8 3AH, 4, 30H, 4, 42H, 4, 30H, 4
   \              3004        
   \   00000028   3B043E043304       DC8 3BH, 4, 3EH, 4, 33H, 4, 38H, 4
   \              3804        
   \   00000030   0000               DC8 0, 0
   \   00000032   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x441\\x436\\x430\\x442\\x4`:
   \   00000000   1D0435044104       DC8 1DH, 4, 35H, 4, 41H, 4, 36H, 4
   \              3604        
   \   00000008   300442044B04       DC8 30H, 4, 42H, 4, 4BH, 4, 39H, 4
   \              3904        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x421\\x436\\x430\\x442\\x44b\\x439">`:
   \   00000000   210436043004       DC8 21H, 4, 36H, 4, 30H, 4, 42H, 4
   \              4204        
   \   00000008   4B0439040000       DC8 4BH, 4, 39H, 4, 0, 0
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x431\\x449\\x438\\x439\\x20\\x44`:
   \   00000000   1E0431044904       DC8 1EH, 4, 31H, 4, 49H, 4, 38H, 4
   \              3804        
   \   00000008   390420004104       DC8 39H, 4, 20H, 0, 41H, 4, 36H, 4
   \              3604        
   \   00000010   300442044B04       DC8 30H, 4, 42H, 4, 4BH, 4, 39H, 4
   \              3904        
   \   00000018   0000               DC8 0, 0
   \   0000001A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x423\\x434\\x430\\x43b\\x438\\x442\\x4_1`:
   \   00000000   230434043004       DC8 23H, 4, 34H, 4, 30H, 4, 3BH, 4
   \              3B04        
   \   00000008   380442044C04       DC8 38H, 4, 42H, 4, 4CH, 4, 3FH, 0
   \              3F00        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41a\\x43e\\x43f\\x438\\x440\\x43e\\x4_2`:
   \   00000000   1A043E043F04       DC8 1AH, 4, 3EH, 4, 3FH, 4, 38H, 4
   \              3804        
   \   00000008   40043E043204       DC8 40H, 4, 3EH, 4, 32H, 4, 30H, 4
   \              3004        
   \   00000010   42044C043F00       DC8 42H, 4, 4CH, 4, 3FH, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x435\\x440\\x435\\x43c\\x435\\x2`:
   \   00000000   1F0435044004       DC8 1FH, 4, 35H, 4, 40H, 4, 35H, 4
   \              3504        
   \   00000008   3C0435042D00       DC8 3CH, 4, 35H, 4, 2DH, 0, 0AH, 0
   \              0A00        
   \   00000010   410442043804       DC8 41H, 4, 42H, 4, 38H, 4, 42H, 4
   \              4204        
   \   00000018   4C043F000000       DC8 4CH, 4, 3FH, 0, 0, 0
   \   0000001E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x440\\x435\\x440\\x432\\x430\\x4`:
   \   00000000   1F0440043504       DC8 1FH, 4, 40H, 4, 35H, 4, 40H, 4
   \              4004        
   \   00000008   320430044204       DC8 32H, 4, 30H, 4, 42H, 4, 4CH, 4
   \              4C04        
   \   00000010   3F000000           DC8 3FH, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x447\\x438\\x441\\x442\\x438\\x4`:
   \   00000000   1E0447043804       DC8 1EH, 4, 47H, 4, 38H, 4, 41H, 4
   \              4104        
   \   00000008   420438044204       DC8 42H, 4, 38H, 4, 42H, 4, 4CH, 4
   \              4C04        
   \   00000010   200031044304       DC8 20H, 0, 31H, 4, 43H, 4, 44H, 4
   \              4404        
   \   00000018   350440043F00       DC8 35H, 4, 40H, 4, 3FH, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x424\\x430\\x439\\x43b\\x20\\x441\\x44`:
   \   00000000   240430043904       DC8 24H, 4, 30H, 4, 39H, 4, 3BH, 4
   \              3B04        
   \   00000008   200041044304       DC8 20H, 0, 41H, 4, 43H, 4, 49H, 4
   \              4904        
   \   00000010   350441044204       DC8 35H, 4, 41H, 4, 42H, 4, 32H, 4
   \              3204        
   \   00000018   430435044204       DC8 43H, 4, 35H, 4, 42H, 4, 2EH, 0
   \              2E00        
   \   00000020   200017043004       DC8 20H, 0, 17H, 4, 30H, 4, 3CH, 4
   \              3C04        
   \   00000028   35043D043804       DC8 35H, 4, 3DH, 4, 38H, 4, 42H, 4
   \              4204        
   \   00000030   4C043F000000       DC8 4CH, 4, 3FH, 0, 0, 0
   \   00000036   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x412\\x44b\\x439\\x442\\x438\\x20\\x43`:
   \   00000000   12044B043904       DC8 12H, 4, 4BH, 4, 39H, 4, 42H, 4
   \              4204        
   \   00000008   380420003804       DC8 38H, 4, 20H, 0, 38H, 4, 37H, 4
   \              3704        
   \   00000010   20004D004300       DC8 20H, 0, 4DH, 0, 43H, 0, 3FH, 0
   \              3F00        
   \   00000018   0000               DC8 0, 0
   \   0000001A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x440\\x438\\x43c\\x435\\x43d\\x4`:
   \   00000000   1F0440043804       DC8 1FH, 4, 40H, 4, 38H, 4, 3CH, 4
   \              3C04        
   \   00000008   35043D043804       DC8 35H, 4, 3DH, 4, 38H, 4, 42H, 4
   \              4204        
   \   00000010   4C0420004604       DC8 4CH, 4, 20H, 0, 46H, 4, 32H, 4
   \              3204        
   \   00000018   350442043E04       DC8 35H, 4, 42H, 4, 3EH, 4, 32H, 4
   \              3204        
   \   00000020   43044E042000       DC8 43H, 4, 4EH, 4, 20H, 0, 41H, 4
   \              4104        
   \   00000028   450435043C04       DC8 45H, 4, 35H, 4, 3CH, 4, 43H, 4
   \              4304        
   \   00000030   3F000000           DC8 3FH, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41f\\x440\\x438\\x43c\\x435\\x43d\\x4_1`:
   \   00000000   1F0440043804       DC8 1FH, 4, 40H, 4, 38H, 4, 3CH, 4
   \              3C04        
   \   00000008   35043D043804       DC8 35H, 4, 3DH, 4, 38H, 4, 42H, 4
   \              4204        
   \   00000010   4C0420004F04       DC8 4CH, 4, 20H, 0, 4FH, 4, 37H, 4
   \              3704        
   \   00000018   4B043A043F00       DC8 4BH, 4, 3AH, 4, 3FH, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x424\\x430\\x439\\x43b\\x20\\x25\\x73\\`:
   \   00000000   240430043904       DC8 24H, 4, 30H, 4, 39H, 4, 3BH, 4
   \              3B04        
   \   00000008   200025007300       DC8 20H, 0, 25H, 0, 73H, 0, 20H, 0
   \              2000        
   \   00000010   42043E043B04       DC8 42H, 4, 3EH, 4, 3BH, 4, 4CH, 4
   \              4C04        
   \   00000018   3A043E042000       DC8 3AH, 4, 3EH, 4, 20H, 0, 34H, 4
   \              3404        
   \   00000020   3B044F042000       DC8 3BH, 4, 4FH, 4, 20H, 0, 47H, 4
   \              4704        
   \   00000028   420435043D04       DC8 42H, 4, 35H, 4, 3DH, 4, 38H, 4
   \              3804        
   \   00000030   4F042E000A00       DC8 4FH, 4, 2EH, 0, 0AH, 0, 23H, 4
   \              2304        
   \   00000038   340430043B04       DC8 34H, 4, 30H, 4, 3BH, 4, 38H, 4
   \              3804        
   \   00000040   42044C043F00       DC8 42H, 4, 4CH, 4, 3FH, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43`:
   \   00000000   1D0435042000       DC8 1DH, 4, 35H, 4, 20H, 0, 43H, 4
   \              4304        
   \   00000008   340430043B04       DC8 34H, 4, 30H, 4, 3BH, 4, 3EH, 4
   \              3E04        
   \   00000010   41044C042000       DC8 41H, 4, 4CH, 4, 20H, 0, 37H, 4
   \              3704        
   \   00000018   300434043004       DC8 30H, 4, 34H, 4, 30H, 4, 42H, 4
   \              4204        
   \   00000020   4C0420003004       DC8 4CH, 4, 20H, 0, 30H, 4, 42H, 4
   \              4204        
   \   00000028   400438043104       DC8 40H, 4, 38H, 4, 31H, 4, 43H, 4
   \              4304        
   \   00000030   42044B042100       DC8 42H, 4, 4BH, 4, 21H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_1`:
   \   00000000   1D0435042000       DC8 1DH, 4, 35H, 4, 20H, 0, 43H, 4
   \              4304        
   \   00000008   340430043B04       DC8 34H, 4, 30H, 4, 3BH, 4, 3EH, 4
   \              3E04        
   \   00000010   41044C042000       DC8 41H, 4, 4CH, 4, 20H, 0, 41H, 4
   \              4104        
   \   00000018   3E0437043404       DC8 3EH, 4, 37H, 4, 34H, 4, 30H, 4
   \              3004        
   \   00000020   42044C042000       DC8 42H, 4, 4CH, 4, 20H, 0, 3FH, 4
   \              3F04        
   \   00000028   30043F043A04       DC8 30H, 4, 3FH, 4, 3AH, 4, 43H, 4
   \              4304        
   \   00000030   21000000           DC8 21H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_2`:
   \   00000000   1D0435042000       DC8 1DH, 4, 35H, 4, 20H, 0, 43H, 4
   \              4304        
   \   00000008   340430043B04       DC8 34H, 4, 30H, 4, 3BH, 4, 3EH, 4
   \              3E04        
   \   00000010   41044C042000       DC8 41H, 4, 4CH, 4, 20H, 0, 3FH, 4
   \              3F04        
   \   00000018   350440043504       DC8 35H, 4, 40H, 4, 35H, 4, 38H, 4
   \              3804        
   \   00000020   3C0435042D00       DC8 3CH, 4, 35H, 4, 2DH, 0, 0AH, 0
   \              0A00        
   \   00000028   3D043E043204       DC8 3DH, 4, 3EH, 4, 32H, 4, 30H, 4
   \              3004        
   \   00000030   42044C042100       DC8 42H, 4, 4CH, 4, 21H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_3`:
   \   00000000   1D0435042000       DC8 1DH, 4, 35H, 4, 20H, 0, 43H, 4
   \              4304        
   \   00000008   340430043B04       DC8 34H, 4, 30H, 4, 3BH, 4, 3EH, 4
   \              3E04        
   \   00000010   41044C042000       DC8 41H, 4, 4CH, 4, 20H, 0, 43H, 4
   \              4304        
   \   00000018   340430043B04       DC8 34H, 4, 30H, 4, 3BH, 4, 38H, 4
   \              3804        
   \   00000020   42044C042100       DC8 42H, 4, 4CH, 4, 21H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4`:
   \   00000000   1D0435043204       DC8 1DH, 4, 35H, 4, 32H, 4, 35H, 4
   \              3504        
   \   00000008   40043D043E04       DC8 40H, 4, 3DH, 4, 3EH, 4, 35H, 4
   \              3504        
   \   00000010   200038043C04       DC8 20H, 0, 38H, 4, 3CH, 4, 4FH, 4
   \              4F04        
   \   00000018   3A0020002500       DC8 3AH, 0, 20H, 0, 25H, 0, 6CH, 0
   \              6C00        
   \   00000020   73000000           DC8 73H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4_1`:
   \   00000000   1D0435043204       DC8 1DH, 4, 35H, 4, 32H, 4, 35H, 4
   \              3504        
   \   00000008   40043D044B04       DC8 40H, 4, 3DH, 4, 4BH, 4, 39H, 4
   \              3904        
   \   00000010   200034043804       DC8 20H, 0, 34H, 4, 38H, 4, 41H, 4
   \              4104        
   \   00000018   3A0421002000       DC8 3AH, 4, 21H, 0, 20H, 0, 25H, 0
   \              2500        
   \   00000020   74000000           DC8 74H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x412\\x44b\\x43f\\x43e\\x43b\\x43d\\x4`:
   \   00000000   12044B043F04       DC8 12H, 4, 4BH, 4, 3FH, 4, 3EH, 4
   \              3E04        
   \   00000008   3B043D043504       DC8 3BH, 4, 3DH, 4, 35H, 4, 3DH, 4
   \              3D04        
   \   00000010   3E0420004104       DC8 3EH, 4, 20H, 0, 41H, 4, 20H, 0
   \              2000        
   \   00000018   3E0448043804       DC8 3EH, 4, 48H, 4, 38H, 4, 31H, 4
   \              3104        
   \   00000020   3A0430043C04       DC8 3AH, 4, 30H, 4, 3CH, 4, 38H, 4
   \              3804        
   \   00000028   21000000           DC8 21H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x442\\x20\\x444\\x430\\x43`:
   \   00000000   1D0435044204       DC8 1DH, 4, 35H, 4, 42H, 4, 20H, 0
   \              2000        
   \   00000008   440430043904       DC8 44H, 4, 30H, 4, 39H, 4, 3BH, 4
   \              3B04        
   \   00000010   3E0432042100       DC8 3EH, 4, 32H, 4, 21H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4_2`:
   \   00000000   1D0435043204       DC8 1DH, 4, 35H, 4, 32H, 4, 35H, 4
   \              3504        
   \   00000008   40043D043E04       DC8 40H, 4, 3DH, 4, 3EH, 4, 35H, 4
   \              3504        
   \   00000010   200038043C04       DC8 20H, 0, 38H, 4, 3CH, 4, 4FH, 4
   \              4F04        
   \   00000018   21000000           DC8 21H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x448\\x438\\x431\\x43a\\x430\\x2`:
   \   00000000   1E0448043804       DC8 1EH, 4, 48H, 4, 38H, 4, 31H, 4
   \              3104        
   \   00000008   3A0430042000       DC8 3AH, 4, 30H, 4, 20H, 0, 3AH, 4
   \              3A04        
   \   00000010   3E043D044404       DC8 3EH, 4, 3DH, 4, 44H, 4, 38H, 4
   \              3804        
   \   00000018   330443044004       DC8 33H, 4, 43H, 4, 40H, 4, 30H, 4
   \              3004        
   \   00000020   460438043804       DC8 46H, 4, 38H, 4, 38H, 4, 20H, 0
   \              2000        
   \   00000028   3A043D043E04       DC8 3AH, 4, 3DH, 4, 3EH, 4, 3FH, 4
   \              3F04        
   \   00000030   3E043A042100       DC8 3EH, 4, 3AH, 4, 21H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4_3`:
   \   00000000   1D0435043204       DC8 1DH, 4, 35H, 4, 32H, 4, 35H, 4
   \              3504        
   \   00000008   40043D044B04       DC8 40H, 4, 3DH, 4, 4BH, 4, 39H, 4
   \              3904        
   \   00000010   200044043E04       DC8 20H, 0, 44H, 4, 3EH, 4, 40H, 4
   \              4004        
   \   00000018   3C0430044204       DC8 3CH, 4, 30H, 4, 42H, 4, 20H, 0
   \              2000        
   \   00000020   38043B043804       DC8 38H, 4, 3BH, 4, 38H, 4, 20H, 0
   \              2000        
   \   00000028   440430043904       DC8 44H, 4, 30H, 4, 39H, 4, 3BH, 4
   \              3B04        
   \   00000030   20003F043E04       DC8 20H, 0, 3FH, 4, 3EH, 4, 32H, 4
   \              3204        
   \   00000038   400435043604       DC8 40H, 4, 35H, 4, 36H, 4, 34H, 4
   \              3404        
   \   00000040   35043D042100       DC8 35H, 4, 3DH, 4, 21H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x20\\x445\\x432\\x430\\x44`:
   \   00000000   1D0435042000       DC8 1DH, 4, 35H, 4, 20H, 0, 45H, 4
   \              4504        
   \   00000008   320430044204       DC8 32H, 4, 30H, 4, 42H, 4, 30H, 4
   \              3004        
   \   00000010   350442042000       DC8 35H, 4, 42H, 4, 20H, 0, 3FH, 4
   \              3F04        
   \   00000018   30043C044F04       DC8 30H, 4, 3CH, 4, 4FH, 4, 42H, 4
   \              4204        
   \   00000020   380421000000       DC8 38H, 4, 21H, 0, 0, 0
   \   00000026   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_4`:
   \   00000000   1D0435042000       DC8 1DH, 4, 35H, 4, 20H, 0, 43H, 4
   \              4304        
   \   00000008   340430043B04       DC8 34H, 4, 30H, 4, 3BH, 4, 3EH, 4
   \              3E04        
   \   00000010   41044C042000       DC8 41H, 4, 4CH, 4, 20H, 0, 41H, 4
   \              4104        
   \   00000018   3E0437043404       DC8 3EH, 4, 37H, 4, 34H, 4, 30H, 4
   \              3004        
   \   00000020   42044C042000       DC8 42H, 4, 4CH, 4, 20H, 0, 3DH, 4
   \              3D04        
   \   00000028   3E0432044B04       DC8 3EH, 4, 32H, 4, 4BH, 4, 39H, 4
   \              3904        
   \   00000030   200044043004       DC8 20H, 0, 44H, 4, 30H, 4, 39H, 4
   \              3904        
   \   00000038   3B0421000000       DC8 3BH, 4, 21H, 0, 0, 0
   \   0000003E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x41e\\x448\\x438\\x431\\x43a\\x430\\x2_1`:
   \   00000000   1E0448043804       DC8 1EH, 4, 48H, 4, 38H, 4, 31H, 4
   \              3104        
   \   00000008   3A0430042000       DC8 3AH, 4, 30H, 4, 20H, 0, 5AH, 0
   \              5A00        
   \   00000010   690070003A00       DC8 69H, 0, 70H, 0, 3AH, 0, 20H, 0
   \              2000        
   \   00000018   250064002000       DC8 25H, 0, 64H, 0, 20H, 0, 32H, 4
   \              3204        
   \   00000020   200025007400       DC8 20H, 0, 25H, 0, 74H, 0, 21H, 0
   \              2100        
   \   00000028   0000               DC8 0, 0
   \   0000002A   0000               DC8 0, 0
    346          
    347          

   Maximum stack usage in bytes:

     Function                     CSTACK
     --------                     ------
     FreeMUI()                       12
     LoadMUI(wchar_t *)              68
     LoadMUIold(wchar_t *)            4
     MUIProc(char *, char *, int)    24
     SaveMUI(wchar_t *)              48
     freeb(wchar_t *)                 4
     getmuiind(int)                   0
     muitxt(int)                      0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     mui                             796
     mclg_ext                         12
     getmuiind(int)                   52
     muitxt(int)                      64
     mui_ld                          388
     SaveMUI(wchar_t *)              360
     LoadMUI(wchar_t *)              608
     freeb(wchar_t *)                 68
     FreeMUI()                        88
     MUIProc(char *, char *, int)    276
     LoadMUIold(wchar_t *)            36
     ??DataTable5                      4
     ??DataTable6                      4
     ??DataTable12                     4
     ??DataTable15                     4
     ??DataTable16                     4
     ?<Constant L"\x42f\x437\x44b\x43a">
                                      12
     ?<Constant L"\x427\x442\x435\x43d\x438\x435\x2
                                      28
     ?<Constant L"\x41f\x43e\x43a\x430\x437\x44b\x4
                                      52
     ?<Constant L"\x41f\x43e\x43a\x430\x437\x44b\x4_1
                                      56
     ?<Constant L"\x41f\x43e\x43a\x430\x437\x44b\x4_2
                                      76
     ?<Constant L"\x41f\x43e\x43a\x430\x437\x44b\x4_3
                                      52
     ?<Constant L"\x41d\x435\x442">    8
     ?<Constant L"\x414\x430">         8
     ?<Constant L"\x431">              4
     ?<Constant L"\x41a\x431">         8
     ?<Constant L"\x41c\x431">         8
     ?<Constant L"\x41a\x43e\x43d\x444\x438\x433\x4
                                      52
     ?<Constant L"\x412\x44b\x434\x435\x43b\x438\x4
                                      28
     ?<Constant L"\x420\x443\x441\x441\x43a\x438\x4
                                      16
     ?<Constant L"\x421\x43e\x437\x434\x430\x43d\x4
                                      32
     ?<Constant L"\x41a\x43e\x43f\x438\x440\x43e\x4
                                      24
     ?<Constant L"\x41f\x435\x440\x435\x43c\x435\x4
                                      24
     ?<Constant L"\x423\x434\x430\x43b\x435\x43d\x4
                                      20
     ?<Constant L"\x41c\x435\x43d\x44e\x20\x4d\x43"
                                      16
     ?<Constant L"\x412\x44b\x431\x43e\x440">
                                      12
     ?<Constant L"\x41d\x430\x437\x430\x434">
                                      12
     ?<Constant L"\x41e\x442\x43a\x440\x44b\x442\x4
                                      16
     ?<Constant L"\x424\x430\x439\x43b\x2e\x2e\x2e"
                                      16
     ?<Constant L"\x412\x44b\x434\x435\x43b\x438\x4_1
                                      20
     ?<Constant L"\x418\x43d\x432\x435\x440\x442\x4
                                      28
     ?<Constant L"\x421\x431\x440\x43e\x441\x438\x4
                                      28
     ?<Constant L"\x41e\x43f\x435\x440\x430\x446\x4
                                      24
     ?<Constant L"\x412\x441\x442\x430\x432\x438\x4
                                      20
     ?<Constant L"\x41e\x442\x43c\x435\x43d\x438\x4
                                      20
     ?<Constant L"\x41a\x43e\x43f\x438\x440\x43e\x4_1
                                      24
     ?<Constant L"\x41f\x435\x440\x435\x43c\x435\x4_1
                                      24
     ?<Constant L"\x423\x434\x430\x43b\x438\x442\x4
                                      16
     ?<Constant L"\x41f\x435\x440\x435\x438\x43c\x4
                                      28
     ?<Constant L"\x41d\x43e\x432\x430\x44f\x20\x43
                                      24
     ?<Constant L"\x421\x432\x43e\x439\x441\x442\x4
                                      20
     ?<Constant L"\x414\x438\x441\x43a\x438">
                                      12
     ?<Constant L"\x412\x438\x434\x2e\x2e\x2e">
                                      16
     ?<Constant L"\x421\x43e\x440\x442\x438\x440\x4
                                      28
     ?<Constant L"\x41f\x43e\x20\x438\x43c\x435\x43
                                      20
     ?<Constant L"\x41f\x43e\x20\x442\x438\x43f\x44
                                      16
     ?<Constant L"\x41f\x43e\x20\x440\x430\x437\x43
                                      24
     ?<Constant L"\x41f\x43e\x20\x434\x430\x442\x43
                                      16
     ?<Constant L"\x41e\x431\x440\x430\x442\x43d\x4
                                      20
     ?<Constant L"\x424\x438\x43b\x44c\x442\x440">
                                      16
     ?<Constant L"\x41e\x431\x43d\x43e\x432\x438\x4
                                      20
     ?<Constant L"\x41d\x43e\x432\x44b\x439\x20\x44
                                      24
     ?<Constant L"\x417\x430\x43a\x43b\x430\x434\x4
                                      24
     ?<Constant L"\x417\x430\x43a\x43b\x430\x434\x4_1
                                      20
     ?<Constant L"\x414\x43e\x431\x430\x432\x438\x4
                                      20
     ?<Constant L"\x421\x43f\x438\x441\x43e\x43a">
                                      16
     ?<Constant L"\x420\x430\x437\x43d\x43e\x435\x2
                                      20
     ?<Constant L"\x41d\x430\x441\x442\x440\x43e\x4
                                      20
     ?<Constant L"\x41e\x431\x20\x44d\x43b\x44c\x44
                                      24
     ?<Constant L"\x412\x44b\x445\x43e\x434">
                                      12
     ?<Constant L"\x41f\x435\x440\x435\x434\x430\x4
                                      36
     ?<Constant L"\x418\x43c\x44f">    8
     ?<Constant L"\x41f\x43e\x43b\x43d\x43e\x435\x2
                                      24
     ?<Constant L"\x420\x430\x437\x43c\x435\x440">
                                      16
     ?<Constant L"\x41e\x431\x449\x438\x439">
                                      12
     ?<Constant L"\x41f\x430\x43f\x43e\x43a">
                                      12
     ?<Constant L"\x424\x430\x439\x43b\x43e\x432">
                                      16
     ?<Constant L"\x414\x430\x442\x430\x20\x441\x43
                                      28
     ?<Constant L"\x410\x442\x440\x438\x431\x443\x4
                                      20
     ?<Constant L"\x422\x43e\x43b\x44c\x43a\x43e\x2
                                      28
     ?<Constant L"\x421\x43a\x440\x44b\x442\x44b\x4
                                      16
     ?<Constant L"\x421\x438\x441\x442\x435\x43c\x4
                                      20
     ?<Constant L"\x410\x440\x445\x438\x432\x43d\x4
                                      20
     ?<Constant L"\x41e\x431\x440\x430\x431\x430\x4
                                      52
     ?<Constant L"\x41d\x435\x441\x436\x430\x442\x4
                                      20
     ?<Constant L"\x421\x436\x430\x442\x44b\x439">
                                      16
     ?<Constant L"\x41e\x431\x449\x438\x439\x20\x44
                                      28
     ?<Constant L"\x423\x434\x430\x43b\x438\x442\x4_1
                                      20
     ?<Constant L"\x41a\x43e\x43f\x438\x440\x43e\x4_2
                                      24
     ?<Constant L"\x41f\x435\x440\x435\x43c\x435\x2
                                      32
     ?<Constant L"\x41f\x440\x435\x440\x432\x430\x4
                                      20
     ?<Constant L"\x41e\x447\x438\x441\x442\x438\x4
                                      32
     ?<Constant L"\x424\x430\x439\x43b\x20\x441\x44
                                      56
     ?<Constant L"\x412\x44b\x439\x442\x438\x20\x43
                                      28
     ?<Constant L"\x41f\x440\x438\x43c\x435\x43d\x4
                                      52
     ?<Constant L"\x41f\x440\x438\x43c\x435\x43d\x4_1
                                      32
     ?<Constant L"\x424\x430\x439\x43b\x20\x25\x73\
                                      72
     ?<Constant L"\x41d\x435\x20\x443\x434\x430\x43
                                      56
     ?<Constant L"\x41d\x435\x20\x443\x434\x430\x43_1
                                      52
     ?<Constant L"\x41d\x435\x20\x443\x434\x430\x43_2
                                      56
     ?<Constant L"\x41d\x435\x20\x443\x434\x430\x43_3
                                      40
     ?<Constant L"\x41d\x435\x432\x435\x440\x43d\x4
                                      36
     ?<Constant L"\x41d\x435\x432\x435\x440\x43d\x4_1
                                      36
     ?<Constant L"\x412\x44b\x43f\x43e\x43b\x43d\x4
                                      44
     ?<Constant L"\x41d\x435\x442\x20\x444\x430\x43
                                      24
     ?<Constant L"\x41d\x435\x432\x435\x440\x43d\x4_2
                                      28
     ?<Constant L"\x41e\x448\x438\x431\x43a\x430\x2
                                      56
     ?<Constant L"\x41d\x435\x432\x435\x440\x43d\x4_3
                                      72
     ?<Constant L"\x41d\x435\x20\x445\x432\x430\x44
                                      40
     ?<Constant L"\x41d\x435\x20\x443\x434\x430\x43_4
                                      64
     ?<Constant L"\x41e\x448\x438\x431\x43a\x430\x2_1
                                      44
      Others                         116

 
 1 676 bytes in segment CODE
 3 420 bytes in segment DATA_C
   388 bytes in segment DATA_Z
    12 bytes in segment INITTAB
 
 1 572 bytes of CODE  memory (+ 116 bytes shared)
 3 420 bytes of CONST memory
   388 bytes of DATA  memory

Errors: none
Warnings: none
