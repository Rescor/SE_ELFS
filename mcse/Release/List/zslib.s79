//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:48:41 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\zslib.cp /
//                       p                                                   /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\zslib.cp /
//                       p -D NDEBUG -D USEZLIB -D OLDFUNCTIONS -lCN         /
//                       Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\ /
//                       List\ -la Z:\home\perk11\www\perk11.info\svn\SE\mcs /
//                       e\Release\List\ -o Z:\home\perk11\www\perk11.info\s /
//                       vn\SE\mcse\Release\Obj\ -s9 --no_unroll             /
//                       --no_code_motion --cpu_mode arm --endian little     /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --enable_multibytes --fpu None --eec++              /
//                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl /
//                       8n.h --preinclude Z:\home\perk11\www\perk11.info\sv /
//                       n\SE\mcse\..\deleaker\mem2.h -I                     /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\ /
//                       List\zslib.s79                                      /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME zslib

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        MULTWEAK ??AddFile??rA
        PUBLIC ??CloseTabZip
        FUNCTION ??CloseTabZip,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??CloseTabZip??rT
        PUBLIC ??CloseZip
        FUNCTION ??CloseZip,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??CloseZip??rT
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable11 EQU 0
??DataTable2 EQU 0
??DataTable3 EQU 0
??DataTable4 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
        PUBLIC ??ExtractCurrentFile
        FUNCTION ??ExtractCurrentFile,0203H
        LOCFRAME CSTACK, 400, STACK
        MULTWEAK ??ExtractCurrentFile??rT
        PUBLIC ??ExtractDir
        FUNCTION ??ExtractDir,0203H
        LOCFRAME CSTACK, 40, STACK
        MULTWEAK ??ExtractDir??rT
        PUBLIC ??ExtractFile
        FUNCTION ??ExtractFile,0203H
        LOCFRAME CSTACK, 548, STACK
        MULTWEAK ??ExtractFile??rT
        PUBLIC ??ExtractFileByID
        FUNCTION ??ExtractFileByID,0203H
        LOCFRAME CSTACK, 28, STACK
        MULTWEAK ??ExtractFileByID??rT
        PUBLIC ??FillZipFiles
        FUNCTION ??FillZipFiles,0203H
        LOCFRAME CSTACK, 564, STACK
        MULTWEAK ??FillZipFiles??rT
        MULTWEAK ??FreeArchInfo??rA
        PUBLIC ??FreeZipInfo
        FUNCTION ??FreeZipInfo,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??FreeZipInfo??rT
        MULTWEAK ??GetFileExt??rA
        MULTWEAK ??GetFileName??rA
        MULTWEAK ??IsArchiveOpened??rA
        PUBLIC ??IsItZipFile
        FUNCTION ??IsItZipFile,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??IsItZipFile??rT
        MULTWEAK ??MsgBoxError??rA
        PUBLIC ??OpenTabZip
        FUNCTION ??OpenTabZip,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??OpenTabZip??rT
        PUBLIC ??OpenZip
        FUNCTION ??OpenZip,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??OpenZip??rT
        PUBLIC ??ReadZipInfo
        FUNCTION ??ReadZipInfo,0203H
        LOCFRAME CSTACK, 292, STACK
        MULTWEAK ??ReadZipInfo??rT
        PUBLIC ??SetCurrentFileInZip
        FUNCTION ??SetCurrentFileInZip,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??SetCurrentFileInZip??rT
        PUBLIC ??ZipBufferExtract
        FUNCTION ??ZipBufferExtract,0203H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??ZipBufferExtract??rT
        PUBLIC ??ZipBufferExtractEnd
        FUNCTION ??ZipBufferExtractEnd,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??ZipBufferExtractEnd??rT
        PUBLIC ??ZipError
        FUNCTION ??ZipError,0203H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??ZipError??rT
        MULTWEAK ??dos2utf16??rA
        MULTWEAK ??endprogr??rA
        MULTWEAK ??endprogrsp??rA
        MULTWEAK ??fexists??rA
        MULTWEAK ??incprogr??rA
        MULTWEAK ??incprogrsp??rA
        MULTWEAK ??initprogr??rA
        MULTWEAK ??mktree??rA
        MULTWEAK ??muitxt??rA
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new??rA`
        MULTWEAK `??operator new[]??rA`
        MULTWEAK ??unzClose??rA
        MULTWEAK ??unzCloseCurrentFile??rA
        MULTWEAK ??unzGetCurrentFileInfo??rA
        MULTWEAK ??unzGetGlobalInfo??rA
        MULTWEAK ??unzGoToFirstFile??rA
        MULTWEAK ??unzGoToNextFile??rA
        MULTWEAK ??unzOpen??rA
        MULTWEAK ??unzOpenCurrentFilePassword??rA
        MULTWEAK ??unzReadCurrentFile??rA
        MULTWEAK ??wstrreplace??rA
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        



















unzClose            SYMBOL "unzClose"
unzCloseCurrentFile SYMBOL "unzCloseCurrentFile"
unzGetCurrentFileInfo SYMBOL "unzGetCurrentFileInfo"
unzGetGlobalInfo    SYMBOL "unzGetGlobalInfo"
unzGoToFirstFile    SYMBOL "unzGoToFirstFile"
unzGoToNextFile     SYMBOL "unzGoToNextFile"
unzOpen             SYMBOL "unzOpen"
unzOpenCurrentFilePassword SYMBOL "unzOpenCurrentFilePassword"
unzReadCurrentFile  SYMBOL "unzReadCurrentFile"
??AddFile??rA       SYMBOL "??rA", ??AddFile

??CloseTabZip??rT   SYMBOL "??rT", ??CloseTabZip

??CloseZip??rT      SYMBOL "??rT", ??CloseZip

??ExtractCurrentFile??rT SYMBOL "??rT", ??ExtractCurrentFile

??ExtractDir??rT    SYMBOL "??rT", ??ExtractDir

??ExtractFile??rT   SYMBOL "??rT", ??ExtractFile

??ExtractFileByID??rT SYMBOL "??rT", ??ExtractFileByID

??FillZipFiles??rT  SYMBOL "??rT", ??FillZipFiles
??FreeArchInfo??rA  SYMBOL "??rA", ??FreeArchInfo

??FreeZipInfo??rT   SYMBOL "??rT", ??FreeZipInfo
??GetFileExt??rA    SYMBOL "??rA", ??GetFileExt
??GetFileName??rA   SYMBOL "??rA", ??GetFileName
??IsArchiveOpened??rA SYMBOL "??rA", ??IsArchiveOpened

??IsItZipFile??rT   SYMBOL "??rT", ??IsItZipFile
??MsgBoxError??rA   SYMBOL "??rA", ??MsgBoxError

??OpenTabZip??rT    SYMBOL "??rT", ??OpenTabZip

??OpenZip??rT       SYMBOL "??rT", ??OpenZip

??ReadZipInfo??rT   SYMBOL "??rT", ??ReadZipInfo

??SetCurrentFileInZip??rT SYMBOL "??rT", ??SetCurrentFileInZip

??ZipBufferExtract??rT SYMBOL "??rT", ??ZipBufferExtract

??ZipBufferExtractEnd??rT SYMBOL "??rT", ??ZipBufferExtractEnd

??ZipError??rT      SYMBOL "??rT", ??ZipError
??dos2utf16??rA     SYMBOL "??rA", ??dos2utf16
??endprogr??rA      SYMBOL "??rA", ??endprogr
??endprogrsp??rA    SYMBOL "??rA", ??endprogrsp
??fexists??rA       SYMBOL "??rA", ??fexists
??incprogr??rA      SYMBOL "??rA", ??incprogr
??incprogrsp??rA    SYMBOL "??rA", ??incprogrsp
??initprogr??rA     SYMBOL "??rA", ??initprogr
??mktree??rA        SYMBOL "??rA", ??mktree
??muitxt??rA        SYMBOL "??rA", ??muitxt
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new??rA` SYMBOL "??rA", `??operator new`
`??operator new[]??rA` SYMBOL "??rA", `??operator new[]`
??unzClose??rA      SYMBOL "??rA", unzClose
??unzCloseCurrentFile??rA SYMBOL "??rA", unzCloseCurrentFile
??unzGetCurrentFileInfo??rA SYMBOL "??rA", unzGetCurrentFileInfo
??unzGetGlobalInfo??rA SYMBOL "??rA", unzGetGlobalInfo
??unzGoToFirstFile??rA SYMBOL "??rA", unzGoToFirstFile
??unzGoToNextFile??rA SYMBOL "??rA", unzGoToNextFile
??unzOpen??rA       SYMBOL "??rA", unzOpen
??unzOpenCurrentFilePassword??rA SYMBOL "??rA", unzOpenCurrentFilePassword
??unzReadCurrentFile??rA SYMBOL "??rA", unzReadCurrentFile
??wstrreplace??rA   SYMBOL "??rA", ??wstrreplace

        EXTERN ??AddFile
        FUNCTION ??AddFile,0202H
        EXTERN ??FreeArchInfo
        FUNCTION ??FreeArchInfo,0202H
        EXTERN ??GetFileExt
        FUNCTION ??GetFileExt,0202H
        EXTERN ??GetFileName
        FUNCTION ??GetFileName,0202H
        EXTERN ??IsArchiveOpened
        FUNCTION ??IsArchiveOpened,0202H
        EXTERN ??MsgBoxError
        FUNCTION ??MsgBoxError,0202H
        EXTERN ??dos2utf16
        FUNCTION ??dos2utf16,0202H
        EXTERN ??endprogr
        FUNCTION ??endprogr,0202H
        EXTERN ??endprogrsp
        FUNCTION ??endprogrsp,0202H
        EXTERN ??fexists
        FUNCTION ??fexists,0202H
        EXTERN ??incprogr
        FUNCTION ??incprogr,0202H
        EXTERN ??incprogrsp
        FUNCTION ??incprogrsp,0202H
        EXTERN ??initprogr
        FUNCTION ??initprogr,0202H
        EXTERN ??mktree
        FUNCTION ??mktree,0202H
        EXTERN ??muitxt
        FUNCTION ??muitxt,0202H
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new`
        FUNCTION `??operator new`,0202H
        EXTERN `??operator new[]`
        FUNCTION `??operator new[]`,0202H
        EXTERN ??wstrreplace
        FUNCTION ??wstrreplace,0202H
        EXTERN Busy
        EXTERN CONFIG_ZIP_DETECT_BY
        EXTERN _ls_ls
        EXTERN msgbuf
        EXTERN progr_max
        EXTERN progr_start
        EXTERN progr_stop
        EXTERN progrsp_max
        EXTERN progrsp_start
        EXTERN tabs
        EXTERN unzClose
        FUNCTION unzClose,0202H
        EXTERN unzCloseCurrentFile
        FUNCTION unzCloseCurrentFile,0202H
        EXTERN unzGetCurrentFileInfo
        FUNCTION unzGetCurrentFileInfo,0202H
        EXTERN unzGetGlobalInfo
        FUNCTION unzGetGlobalInfo,0202H
        EXTERN unzGoToFirstFile
        FUNCTION unzGoToFirstFile,0202H
        EXTERN unzGoToNextFile
        FUNCTION unzGoToNextFile,0202H
        EXTERN unzOpen
        FUNCTION unzOpen,0202H
        EXTERN unzOpenCurrentFilePassword
        FUNCTION unzOpenCurrentFilePassword,0202H
        EXTERN unzReadCurrentFile
        FUNCTION unzReadCurrentFile,0202H


        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "unzGoToNextFile">`:
        DATA
        DC8 "unzGoToNextFile"
        DC8 "unzGetCurrentFileInfo"
        DC8 0, 0
        DC8 "no memory for fileinfo"
        DC8 0
        DC8 "unzGoToFirstFile"
        DC8 0, 0, 0
        DC8 "no memory"
        DC8 0, 0
        DC8 "unzGetGlobalInfo"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 2FH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "ExtractCurrentFile.ma...">`:
        DATA
        DC8 "ExtractCurrentFile.malloc"
        DC8 0, 0
        DC8 "ExtractCurrentFile.fopen"
        DC8 0, 0, 0
        DC8 "ExtractCurrentFile.unzReadCurrentFile"
        DC8 0, 0
        DC8 "ExtractCurrentFile.fwrite"
        DC8 0, 0
        DC8 "ExtractCurrentFile.unzOpenCurrentFile"
        DC8 0, 0
        DC8 "ExtractCurrentFile.unzCloseCurrentFile"
        DC8 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
zip_ext:
        DATA
        DC8 7AH, 0, 69H, 0, 70H, 0, 0, 0

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??ZipError??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??ZipError

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??ZipError
        ARM
??ZipError:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        LDR      R6,??ZipError_1  ;; msgbuf
        MOV      R4,R0
        MOV      R5,R1
        MOV      R0,#+89
        _BLF     ??muitxt,??muitxt??rA
        PUSH     {R5}
        CFI CFA R13+20
        MOV      R3,R4
        MOV      R2,R0
        MOV      R1,#+256
        MOV      R0,R6
        SWI      +277
        MOV      R0,R6
        _BLF     ??MsgBoxError,??MsgBoxError??rA
        POP      {R0,R4-R6,PC}    ;; return
        DATA
??ZipError_1:
        DC32     msgbuf
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??CloseZip??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??CloseZip

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??CloseZip
        ARM
??CloseZip:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+1040]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        _BLF     unzClose,??unzClose??rA
        MOV      R0,R4
        BL       ??FreeZipInfo
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??CloseTabZip??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??CloseTabZip

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??CloseTabZip
        ARM
??CloseTabZip:
        LDR      R1,??DataTable12  ;; tabs
        LDR      R0,[R1, +R0, LSL #+2]
        LDR      R0,[R0, #+2068]
        B        ??CloseZip       ;; tailcall
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??FreeZipInfo??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??FreeZipInfo

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??FreeZipInfo
        ARM
??FreeZipInfo:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOVS     R4,R0
        POPEQ    {R4,R5,PC}
        LDR      R0,[R4, #+1052]
        CMP      R0,#+0
        BEQ      ??FreeZipInfo_1
        LDR      R0,[R4, #+1044]
        MOV      R5,#+0
        CMP      R0,#+0
        BNE      ??FreeZipInfo_2
        B        ??FreeZipInfo_3
??FreeZipInfo_4:
        LDR      R0,[R4, #+1052]
        LDR      R0,[R0, +R5, LSL #+2]
        CMP      R0,#+0
        BEQ      ??FreeZipInfo_5
        LDR      R0,[R4, #+1052]
        LDR      R0,[R0, +R5, LSL #+2]
        _BLF     `??operator delete`,`??operator delete??rA`
??FreeZipInfo_5:
        ADD      R5,R5,#+1
??FreeZipInfo_2:
        LDR      R0,[R4, #+1044]
        CMP      R5,R0
        BCC      ??FreeZipInfo_4
??FreeZipInfo_3:
        LDR      R0,[R4, #+1052]
        _BLF     `??operator delete`,`??operator delete??rA`
??FreeZipInfo_1:
        MOV      R0,R4
        _BLF     ??FreeArchInfo,??FreeArchInfo??rA
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??ReadZipInfo??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??ReadZipInfo

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??ReadZipInfo
        ARM
??ReadZipInfo:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        SUB      SP,SP,#+256
        CFI CFA R13+276
        MOV      R4,R0
        LDR      R0,[R4, #+1040]
        MOV      R6,#+0
        CMP      R0,#+0
        BEQ      ??ReadZipInfo_1
        MOV      R0,#+20
        ORR      R0,R0,#0x400
        ADD      R1,R0,R4
        LDR      R0,[R4, #+1040]
        _BLF     unzGetGlobalInfo,??unzGetGlobalInfo??rA
        MOVS     R6,R0
        BNE      ??ReadZipInfo_2
        LDR      R0,[R4, #+1044]
        CMP      R0,#+0
        BEQ      ??ReadZipInfo_1
        STR      R0,[R4, #+1032]
        LDR      R0,??DataTable10  ;; progr_start
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BNE      ??ReadZipInfo_3
        LDR      R0,??ReadZipInfo_4  ;; Busy
        MOV      R1,#+1
        STR      R1,[R0, #+0]
        MOV      R0,#+90
        _BLF     ??initprogr,??initprogr??rA
        LDR      R0,??DataTable8  ;; progr_max
        LDR      R1,[R4, #+1032]
        MOV      R5,#+1
        STR      R1,[R0, #+0]
        MOV      R0,#+0
        _BLF     ??incprogr,??incprogr??rA
        B        ??ReadZipInfo_5
??ReadZipInfo_3:
        MOV      R5,#+0
??ReadZipInfo_5:
        LDR      R0,[R4, #+1032]
        LSL      R0,R0,#+2
        _BLF     `??operator new[]`,`??operator new[]??rA`
        STR      R0,[R4, #+1028]
        CMP      R0,#+0
        BEQ      ??ReadZipInfo_6
        LDR      R0,[R4, #+1032]
        MOV      R1,#+0
        LSL      R2,R0,#+2
        LDR      R0,[R4, #+1028]
        MOV      R6,#+28
        SWI      +274
        LDR      R0,[R4, #+1032]
        ORR      R6,R6,#0x400
        LSL      R0,R0,#+2
        _BLF     `??operator new[]`,`??operator new[]??rA`
        STR      R0,[R6, +R4]
        CMP      R0,#+0
        BEQ      ??ReadZipInfo_6
        LDR      R0,[R4, #+1032]
        MOV      R1,#+0
        LSL      R2,R0,#+2
        LDR      R0,[R4, #+1052]
        SWI      +274
??ReadZipInfo_6:
        LDR      R0,[R4, #+1028]
        CMP      R0,#+0
        LDRNE    R0,[R4, #+1052]
        CMPNE    R0,#+0
        BEQ      ??ReadZipInfo_7
        LDR      R0,[R4, #+1040]
        _BLF     unzGoToFirstFile,??unzGoToFirstFile??rA
        MOVS     R6,R0
        BNE      ??ReadZipInfo_8
        MOV      R7,#+0
        B        ??ReadZipInfo_9
??ReadZipInfo_10:
        LDR      R1,??ReadZipInfo_4+0x4  ;; `?<Constant "unzGoToNextFile">` + 40
        MVN      R6,#+0
        MOV      R0,R6
??ReadZipInfo_11:
        BL       ??ZipError
??ReadZipInfo_12:
        CMP      R5,#+0
        BEQ      ??ReadZipInfo_13
        MOV      R0,#+1
        _BLF     ??incprogr,??incprogr??rA
??ReadZipInfo_13:
        ADD      R7,R7,#+1
??ReadZipInfo_9:
        LDR      R0,[R4, #+1032]
        CMP      R7,R0
        BGE      ??ReadZipInfo_14
        CMP      R6,#+0
        BNE      ??ReadZipInfo_14
        LDR      R0,??DataTable9  ;; progr_stop
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BNE      ??ReadZipInfo_14
        MOV      R0,#+512
        _BLF     `??operator new[]`,`??operator new[]??rA`
        LDR      R1,[R4, #+1028]
        STR      R0,[R1, +R7, LSL #+2]
        MOV      R0,#+80
        _BLF     `??operator new`,`??operator new??rA`
        LDR      R1,[R4, #+1052]
        STR      R0,[R1, +R7, LSL #+2]
        LDR      R0,[R4, #+1028]
        LDR      R0,[R0, +R7, LSL #+2]
        CMP      R0,#+0
        BEQ      ??ReadZipInfo_10
        LDR      R0,[R4, #+1052]
        LDR      R0,[R0, +R7, LSL #+2]
        CMP      R0,#+0
        BEQ      ??ReadZipInfo_10
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+280
        PUSH     {R0}
        CFI CFA R13+284
        PUSH     {R0}
        CFI CFA R13+288
        PUSH     {R0}
        CFI CFA R13+292
        LDR      R0,[R4, #+1052]
        MOV      R3,#+256
        LDR      R1,[R0, +R7, LSL #+2]
        LDR      R0,[R4, #+1040]
        ADD      R2,SP,#+16
        _BLF     unzGetCurrentFileInfo,??unzGetCurrentFileInfo??rA
        MOVS     R6,R0
        ADD      SP,SP,#+16
        CFI CFA R13+276
        BNE      ??ReadZipInfo_15
        LDR      R0,[R4, #+1028]
        MOV      R2,#+47
        LDR      R0,[R0, +R7, LSL #+2]
        MOV      R1,#+92
        _BLF     ??wstrreplace,??wstrreplace??rA
        LDR      R0,[R4, #+1028]
        MOV      R1,SP
        LDR      R0,[R0, +R7, LSL #+2]
        _BLF     ??dos2utf16,??dos2utf16??rA
        LDR      R1,[R4, #+1044]
        ADD      R0,R7,#+1
        CMP      R0,R1
        BCS      ??ReadZipInfo_12
        LDR      R0,[R4, #+1040]
        _BLF     unzGoToNextFile,??unzGoToNextFile??rA
        MOVS     R6,R0
        BEQ      ??ReadZipInfo_12
        LDR      R1,??ReadZipInfo_4+0x8  ;; `?<Constant "unzGoToNextFile">`
        B        ??ReadZipInfo_11
??ReadZipInfo_15:
        LDR      R1,??ReadZipInfo_4+0xC  ;; `?<Constant "unzGoToNextFile">` + 16
        B        ??ReadZipInfo_11
??ReadZipInfo_8:
        LDR      R1,??ReadZipInfo_4+0x10  ;; `?<Constant "unzGoToNextFile">` + 64
        B        ??ReadZipInfo_16
??ReadZipInfo_7:
        LDR      R1,??ReadZipInfo_4+0x14  ;; `?<Constant "unzGoToNextFile">` + 84
        MVN      R6,#+0
        MOV      R0,R6
??ReadZipInfo_16:
        BL       ??ZipError
??ReadZipInfo_14:
        CMP      R5,#+0
        BEQ      ??ReadZipInfo_1
        _BLF     ??endprogr,??endprogr??rA
        LDR      R0,??ReadZipInfo_4  ;; Busy
        MOV      R1,#+0
        STR      R1,[R0, #+0]
        B        ??ReadZipInfo_1
??ReadZipInfo_2:
        LDR      R1,??ReadZipInfo_4+0x18  ;; `?<Constant "unzGoToNextFile">` + 96
        BL       ??ZipError
??ReadZipInfo_1:
        LDR      R0,??DataTable9  ;; progr_stop
        LDR      R0,[R0, #+0]
        ADD      SP,SP,#+256
        CFI CFA R13+20
        CMP      R0,#+0
        MVNNE    R6,#+102
        BICNE    R6,R6,#0x2B00
        MOV      R0,R6
        POP      {R4-R7,PC}       ;; return
        DATA
??ReadZipInfo_4:
        DC32     Busy
        DC32     `?<Constant "unzGoToNextFile">` + 40
        DC32     `?<Constant "unzGoToNextFile">`
        DC32     `?<Constant "unzGoToNextFile">` + 16
        DC32     `?<Constant "unzGoToNextFile">` + 64
        DC32     `?<Constant "unzGoToNextFile">` + 84
        DC32     `?<Constant "unzGoToNextFile">` + 96
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??OpenZip??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??OpenZip

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??OpenZip
        ARM
??OpenZip:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
        MOV      R5,R1
        MOV      R0,R5
        _BLF     unzOpen,??unzOpen??rA
        CMP      R0,#+0
        BEQ      ??OpenZip_1
        ADD      R1,R4,#+516
        STR      R0,[R1, #+524]
        MOV      R0,#+0
        STRH     R0,[R1, #+0]
        MOV      R0,#+1
        STR      R0,[R4, #+0]
        MOV      R1,R5
        ADD      R0,R4,#+4
        SWI      +338
        MOV      R0,R4
        BL       ??ReadZipInfo
        MOVS     R5,R0
        BNE      ??OpenZip_2
        MOV      R0,R5
        POP      {R4,R5,PC}
??OpenZip_1:
        MVN      R5,#+0
??OpenZip_2:
        MOV      R0,R4
        BL       ??CloseZip
        MOV      R0,R5
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??OpenTabZip??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??OpenTabZip

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??OpenTabZip
        ARM
??OpenTabZip:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R4,R0
        MOV      R5,R1
        MVN      R6,#+0
        _BLF     ??IsArchiveOpened,??IsArchiveOpened??rA
        CMP      R0,#+0
        BNE      ??OpenTabZip_1
        LDR      R0,??DataTable12  ;; tabs
        MOV      R1,R5
        LDR      R0,[R0, +R4, LSL #+2]
        LDR      R0,[R0, #+2068]
        BL       ??OpenZip
        MOV      R6,R0
??OpenTabZip_1:
        MOV      R0,R6
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??FillZipFiles??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??FillZipFiles

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??FillZipFiles
        ARM
??FillZipFiles:
        PUSH     {R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+36
        SUB      SP,SP,#+512
        CFI CFA R13+548
        MOV      R4,R0
        MOV      R11,R1
        LDRH     R0,[R11, #+0]
        MOV      R7,#+0
        CMP      R0,#+47
        ADDEQ    R11,R11,#+2
        MOV      R0,R11
        SWI      +343
        MOV      R5,R0
        LDR      R0,??DataTable12  ;; tabs
        LDR      R0,[R0, +R4, LSL #+2]
        LDR      R6,[R0, #+2068]
        LDR      R0,[R6, #+1040]
        CMP      R0,#+0
        BEQ      ??FillZipFiles_1
        LDR      R0,[R6, #+1044]
        MOV      R8,#+0
        CMP      R0,#+0
        BNE      ??FillZipFiles_2
??FillZipFiles_1:
        MOV      R0,R7
        ADD      SP,SP,#+512
        CFI CFA R13+36
        POP      {R4-R11,PC}      ;; return
        CFI CFA R13+548
??FillZipFiles_3:
        PUSH     {R0}
        CFI CFA R13+552
        LDR      R0,[R10, #+24]
        MOV      R2,R9
        PUSH     {R0}
        CFI CFA R13+556
        LDR      R0,[R10, #+16]
        ADD      R7,R7,#+1
        PUSH     {R0}
        CFI CFA R13+560
        PUSH     {R1}
        CFI CFA R13+564
        LDR      R3,[R10, #+28]
        MOV      R0,R4
        MOV      R1,R8
        _BLF     ??AddFile,??AddFile??rA
        ADD      SP,SP,#+16
        CFI CFA R13+548
??FillZipFiles_4:
        ADD      R8,R8,#+1
??FillZipFiles_2:
        LDR      R0,[R6, #+1044]
        CMP      R8,R0
        BCS      ??FillZipFiles_1
        LDR      R0,[R6, #+1028]
        MOV      R2,#+255
        LDR      R1,[R0, +R8, LSL #+2]
        MOV      R0,SP
        SWI      +339
        LDR      R0,[R6, #+1052]
        MOV      R9,SP
        LDR      R10,[R0, +R8, LSL #+2]
        CMP      R5,#+0
        ADREQ    R1,??FillZipFiles_5  ;; 0x2F, 0x00, 0x00, 0x00
        MOVEQ    R0,SP
        BEQ      ??FillZipFiles_6
        MOV      R0,SP
        ADD      R9,R0,R5, LSL #+1
        MOV      R2,R5
        MOV      R1,R11
        SWI      +666
        CMP      R0,#+0
        LDRHEQ   R0,[R9], #+2
        CMPEQ    R0,#+47
        BNE      ??FillZipFiles_4
        LDRH     R0,[R9, #+0]
        CMP      R0,#+0
        BEQ      ??FillZipFiles_4
        ADR      R1,??FillZipFiles_5  ;; 0x2F, 0x00, 0x00, 0x00
        MOV      R0,R9
??FillZipFiles_6:
        SWI      +670
        CMP      R0,#+0
        BEQ      ??FillZipFiles_7
        LDRH     R1,[R0, #+2]
        CMP      R1,#+0
        BNE      ??FillZipFiles_4
        STRH     R1,[R0, #+0]
??FillZipFiles_7:
        LDR      R0,[R10, #+52]
        TST      R0,#0x10
        MOVEQ    R0,#+2
        MOVEQ    R1,#+0
        MOVNE    R0,#+3
        MOVNE    R1,#+16384
        B        ??FillZipFiles_3
        DATA
??FillZipFiles_5:
        DC8      0x2F, 0x00, 0x00, 0x00
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??IsItZipFile??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE ??IsItZipFile

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function ??IsItZipFile
        ARM
??IsItZipFile:
        LDR      R1,??IsItZipFile_1  ;; CONFIG_ZIP_DETECT_BY
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+4
        CFI CFA R13+16
        LDR      R1,[R1, #+0]
        CMP      R1,#+0
        BNE      ??IsItZipFile_2
        MOV      R5,#+0
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+1
        SWI      +760
        MOVS     R4,R0
        BMI      ??IsItZipFile_3
        MOV      R2,#+4
        MOV      R1,SP
        SWI      +763
        CMP      R0,#+4
        BNE      ??IsItZipFile_4
        LDRB     R0,[SP, #+0]
        LDRB     R1,[SP, #+1]
        ADD      R0,R0,R1, LSL #+8
        LDRB     R1,[SP, #+2]
        ADD      R0,R0,R1, LSL #+16
        LDRB     R1,[SP, #+3]
        ADD      R5,R0,R1, LSL #+24
??IsItZipFile_4:
        MOV      R0,R4
        SWI      +765
        LDR      R0,??IsItZipFile_1+0x4  ;; 0x4034b50
        CMP      R5,R0
        BNE      ??IsItZipFile_3
        MOV      R0,#+1
        POP      {R1,R4,R5,PC}
??IsItZipFile_2:
        _BLF     ??GetFileExt,??GetFileExt??rA
        LDR      R1,??IsItZipFile_1+0x8  ;; zip_ext
        SWI      +671
        CMP      R0,#+0
        MOVEQ    R0,#+1
        POPEQ    {R1,R4,R5,PC}
??IsItZipFile_3:
        MOV      R0,#+0
        POP      {R1,R4,R5,PC}    ;; return
        DATA
??IsItZipFile_1:
        DC32     CONFIG_ZIP_DETECT_BY
        DC32     0x4034b50
        DC32     zip_ext
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??ExtractCurrentFile??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE ??ExtractCurrentFile

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function ??ExtractCurrentFile
        ARM
??ExtractCurrentFile:
        PUSH     {R0,R1,R3-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+48
        SUB      SP,SP,#+336
        CFI CFA R13+384
        LDR      R4,[R0, #+1040]
        MOV      R0,R1
        LDR      R1,[SP, #+336]
        MOV      R9,R2
        LDR      R1,[R1, #+1028]
        MOV      R5,#+0
        LDR      R10,[R1, +R0, LSL #+2]
        MOV      R0,#+512
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R6,R0
        MOV      R7,#+0
        CMP      R10,#+0
        BNE      ??ExtractCurrentFile_1
        MOV      R0,#+512
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R7,R0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+388
        PUSH     {R0}
        CFI CFA R13+392
        PUSH     {R0}
        CFI CFA R13+396
        PUSH     {R0}
        CFI CFA R13+400
        MOV      R3,#+256
        ADD      R2,SP,#+16
        ADD      R1,SP,#+272
        MOV      R0,R4
        _BLF     unzGetCurrentFileInfo,??unzGetCurrentFileInfo??rA
        ADD      R1,SP,#+16
        MOV      R0,R7
        _BLF     ??dos2utf16,??dos2utf16??rA
        MOV      R10,R7
        ADD      SP,SP,#+16
        CFI CFA R13+384
??ExtractCurrentFile_1:
        MOV      R0,#+2048
        SWI      +259
        MOVS     R8,R0
        BNE      ??ExtractCurrentFile_2
        LDR      R1,??ExtractCurrentFile_3  ;; `?<Constant "ExtractCurrentFile.ma...">`
        MOV      R0,#+1
        BL       ??ZipError
        MOV      R0,#+1
        ADD      SP,SP,#+348
        CFI CFA R13+36
        POP      {R4-R11,PC}
        CFI CFA R13+384
??ExtractCurrentFile_2:
        MOV      R0,R10
        _BLF     ??GetFileName,??GetFileName??rA
        MOV      R11,R0
        LDRH     R0,[R11, #+0]
        CMP      R0,#+0
        LDR      R0,[SP, #+344]
        BNE      ??ExtractCurrentFile_4
        CMP      R0,#+0
        BEQ      ??ExtractCurrentFile_5
        LDR      R2,??ExtractCurrentFile_3+0x4  ;; _ls_ls
        PUSH     {R10}
        CFI CFA R13+388
        MOV      R3,R9
        MOV      R1,#+255
        MOV      R0,R6
        SWI      +277
        MOV      R0,R6
        _BLF     ??mktree,??mktree??rA
        ADD      SP,SP,#+4
        CFI CFA R13+384
        B        ??ExtractCurrentFile_5
??ExtractCurrentFile_4:
        LDR      R2,??ExtractCurrentFile_3+0x4  ;; _ls_ls
        CMP      R0,#+0
        MOVNE    R0,R10
        MOVEQ    R0,R11
        PUSH     {R0}
        CFI CFA R13+388
        MOV      R3,R9
        MOV      R1,#+255
        MOV      R0,R6
        SWI      +277
        ADD      SP,SP,#+4
        CFI CFA R13+384
        MOV      R0,R6
        _BLF     ??fexists,??fexists??rA
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+74
        MOV      R0,R6
        SWI      +760
        MOVS     R9,R0
        BPL      ??ExtractCurrentFile_6
        LDR      R0,[SP, #+344]
        CMP      R0,#+0
        CMPNE    R11,R10
        BEQ      ??ExtractCurrentFile_6
        LDRH     R9,[R11, #-2]
        MOV      R0,#+0
        STRH     R0,[R11, #-2]
        MOV      R0,R10
        _BLF     ??mktree,??mktree??rA
        STRH     R9,[R11, #-2]
        MOV      R3,R5
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+74
        MOV      R0,R6
        SWI      +760
        MOV      R9,R0
??ExtractCurrentFile_6:
        CMN      R9,#+1
        BNE      ??ExtractCurrentFile_7
        LDR      R1,??ExtractCurrentFile_3+0x8  ;; `?<Constant "ExtractCurrentFile.ma...">` + 28
        MOV      R0,#+3
        BL       ??ZipError
        MOV      R5,#+3
??ExtractCurrentFile_8:
        MOV      R0,R4
        _BLF     unzCloseCurrentFile,??unzCloseCurrentFile??rA
??ExtractCurrentFile_5:
        MOV      R0,R8
        SWI      +260
        MOV      R0,R6
        _BLF     `??operator delete`,`??operator delete??rA`
        CMP      R7,#+0
        BEQ      ??ExtractCurrentFile_9
        MOV      R0,R7
        _BLF     `??operator delete`,`??operator delete??rA`
??ExtractCurrentFile_9:
        MOV      R0,R5
        ADD      SP,SP,#+348
        CFI CFA R13+36
        POP      {R4-R11,PC}      ;; return
        CFI CFA R13+384
??ExtractCurrentFile_7:
        LDR      R0,[SP, #+336]
        LDR      R1,[R0, #+1036]
        MOV      R0,R4
        _BLF     unzOpenCurrentFilePassword,??unzOpenCurrentFilePassword??rA
        CMP      R0,#+0
        BNE      ??ExtractCurrentFile_10
        LDR      R0,[SP, #+384]
        MOV      R10,#+0
        CMP      R0,#+0
        BEQ      ??ExtractCurrentFile_11
        LDR      R0,??ExtractCurrentFile_3+0xC  ;; progrsp_start
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BNE      ??ExtractCurrentFile_12
        LDR      R0,??DataTable10  ;; progr_start
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BNE      ??ExtractCurrentFile_13
        MOV      R0,#+90
        _BLF     ??initprogr,??initprogr??rA
        LDR      R0,??DataTable8  ;; progr_max
        MOV      R1,#+1
        STR      R1,[R0, #+0]
        MOV      R0,#+0
        _BLF     ??incprogr,??incprogr??rA
        MOV      R10,#+1
??ExtractCurrentFile_13:
        LDR      R0,??ExtractCurrentFile_3+0xC  ;; progrsp_start
        MOV      R1,#+1
        STR      R1,[R0, #+0]
        LDR      R2,[SP, #+336]
        LDR      R1,[SP, #+340]
        LDR      R2,[R2, #+1052]
        LDR      R0,??ExtractCurrentFile_3+0x10  ;; progrsp_max
        LDR      R1,[R2, +R1, LSL #+2]
        LDR      R1,[R1, #+28]
        STR      R1,[R0, #+0]
        MOV      R0,#+0
??ExtractCurrentFile_14:
        _BLF     ??incprogrsp,??incprogrsp??rA
        B        ??ExtractCurrentFile_12
??ExtractCurrentFile_11:
        LDR      R0,[SP, #+384]
        CMP      R0,#+0
        BEQ      ??ExtractCurrentFile_15
??ExtractCurrentFile_12:
        LDR      R0,??DataTable9  ;; progr_stop
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        MVNNE    R5,R5
        BNE      ??ExtractCurrentFile_16
??ExtractCurrentFile_15:
        MOV      R2,#+2048
        MOV      R1,R8
        MOV      R0,R4
        _BLF     unzReadCurrentFile,??unzReadCurrentFile??rA
        MOVS     R11,R0
        BPL      ??ExtractCurrentFile_17
        LDR      R1,??ExtractCurrentFile_3+0x14  ;; `?<Constant "ExtractCurrentFile.ma...">` + 56
        MOV      R5,#+5
        BL       ??ZipError
??ExtractCurrentFile_18:
        LDR      R0,[SP, #+384]
        CMP      R0,#+0
        BEQ      ??ExtractCurrentFile_19
??ExtractCurrentFile_16:
        LDR      R0,??ExtractCurrentFile_3+0xC  ;; progrsp_start
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??ExtractCurrentFile_19
        _BLF     ??endprogrsp,??endprogrsp??rA
        LDR      R0,??ExtractCurrentFile_3+0xC  ;; progrsp_start
        MOV      R1,#+0
        STR      R1,[R0, #+0]
        CMP      R10,#+0
        BEQ      ??ExtractCurrentFile_19
        _BLF     ??endprogr,??endprogr??rA
        LDR      R0,??DataTable10  ;; progr_start
        MOV      R1,#+0
        STR      R1,[R0, #+0]
??ExtractCurrentFile_19:
        CMP      R9,#+0
        BEQ      ??ExtractCurrentFile_20
        B        ??ExtractCurrentFile_21
??ExtractCurrentFile_17:
        CMP      R11,#+1
        BLT      ??ExtractCurrentFile_18
        MOV      R2,R11
        MOV      R1,R8
        MOV      R0,R9
        SWI      +762
        CMP      R0,R11
        BEQ      ??ExtractCurrentFile_22
        LDR      R1,??ExtractCurrentFile_3+0x18  ;; `?<Constant "ExtractCurrentFile.ma...">` + 96
        MOV      R0,#+6
        BL       ??ZipError
        MOV      R5,#+6
        B        ??ExtractCurrentFile_18
??ExtractCurrentFile_22:
        LDR      R0,[SP, #+384]
        CMP      R0,#+0
        BEQ      ??ExtractCurrentFile_11
        LDR      R0,??ExtractCurrentFile_3+0xC  ;; progrsp_start
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??ExtractCurrentFile_12
        MOV      R0,R11
        B        ??ExtractCurrentFile_14
??ExtractCurrentFile_10:
        LDR      R1,??ExtractCurrentFile_3+0x1C  ;; `?<Constant "ExtractCurrentFile.ma...">` + 124
        MOV      R0,#+7
        BL       ??ZipError
        MOV      R5,#+7
??ExtractCurrentFile_20:
        CMP      R9,#+0
        BEQ      ??ExtractCurrentFile_23
??ExtractCurrentFile_21:
        MOV      R0,R9
        SWI      +765
??ExtractCurrentFile_23:
        CMP      R5,#+0
        BNE      ??ExtractCurrentFile_8
        MOV      R0,R4
        _BLF     unzCloseCurrentFile,??unzCloseCurrentFile??rA
        CMP      R0,#+0
        BEQ      ??ExtractCurrentFile_5
        LDR      R1,??ExtractCurrentFile_3+0x20  ;; `?<Constant "ExtractCurrentFile.ma...">` + 164
        MOV      R0,#+8
        BL       ??ZipError
        MOV      R5,#+8
        B        ??ExtractCurrentFile_5
        DATA
??ExtractCurrentFile_3:
        DC32     `?<Constant "ExtractCurrentFile.ma...">`
        DC32     _ls_ls
        DC32     `?<Constant "ExtractCurrentFile.ma...">` + 28
        DC32     progrsp_start
        DC32     progrsp_max
        DC32     `?<Constant "ExtractCurrentFile.ma...">` + 56
        DC32     `?<Constant "ExtractCurrentFile.ma...">` + 96
        DC32     `?<Constant "ExtractCurrentFile.ma...">` + 124
        DC32     `?<Constant "ExtractCurrentFile.ma...">` + 164
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable8:
        DC32     progr_max

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable9:
        DC32     progr_stop

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable10:
        DC32     progr_start

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??SetCurrentFileInZip??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE ??SetCurrentFileInZip

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function ??SetCurrentFileInZip
        ARM
??SetCurrentFileInZip:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R4,R0
        LDR      R0,[R4, #+1040]
        MOV      R5,R1
        _BLF     unzGoToFirstFile,??unzGoToFirstFile??rA
        CMP      R0,#+0
        MOVNE    R0,#+1
        POPNE    {R4-R6,PC}
        MOV      R6,#+1
        B        ??SetCurrentFileInZip_1
??SetCurrentFileInZip_2:
        ADD      R6,R6,#+1
??SetCurrentFileInZip_1:
        CMP      R5,R6
        POPLT    {R4-R6,PC}
        LDR      R0,[R4, #+1040]
        _BLF     unzGoToNextFile,??unzGoToNextFile??rA
        CMP      R0,#+0
        BEQ      ??SetCurrentFileInZip_2
        ADD      R0,R6,#+1
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon0
        CFI NoFunction
        THUMB
??ExtractFileByID??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock22
        REQUIRE ??ExtractFileByID

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI Function ??ExtractFileByID
        ARM
??ExtractFileByID:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        MOV      R4,R0
        MOV      R5,R1
        LDR      R8,[SP, #+24]
        MOV      R6,R2
        MOV      R7,R3
        BL       ??SetCurrentFileInZip
        CMP      R0,#+0
        BNE      ??ExtractFileByID_1
        PUSH     {R8}
        CFI CFA R13+28
        MOV      R3,R7
        MOV      R2,R6
        MOV      R1,R5
        MOV      R0,R4
        BL       ??ExtractCurrentFile
        ADD      SP,SP,#+4
        CFI CFA R13+24
        POP      {R4-R8,PC}
??ExtractFileByID_1:
        MOV      R0,#+1
        POP      {R4-R8,PC}       ;; return
        CFI EndBlock cfiBlock23

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon0
        CFI NoFunction
        THUMB
??ExtractFile??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock24
        REQUIRE ??ExtractFile

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI Function ??ExtractFile
        ARM
??ExtractFile:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        SUB      SP,SP,#+516
        CFI CFA R13+544
        MOV      R4,R0
        MOV      R5,R2
        MOV      R6,R3
        ADD      R0,SP,#+2
        SWI      +338
        MOV      R1,#+47
        STRH     R1,[SP, #+0]
        LDRH     R0,[SP, #+2]
        MOV      R9,#+0
        CMP      R0,#+47
        ADDEQ    R7,SP,#+4
        ADDEQ    R8,SP,#+2
        ADDNE    R7,SP,#+2
        MOVNE    R8,SP
        B        ??ExtractFile_1
??ExtractFile_2:
        ADD      R9,R9,#+1
??ExtractFile_1:
        LDR      R0,[R4, #+1044]
        CMP      R9,R0
        BCS      ??ExtractFile_3
        LDR      R0,[R4, #+1028]
        LDR      R1,[R0, +R9, LSL #+2]
        MOV      R0,R7
        SWI      +671
        CMP      R0,#+0
        BEQ      ??ExtractFile_4
        LDR      R0,[R4, #+1028]
        LDR      R1,[R0, +R9, LSL #+2]
        MOV      R0,R8
        SWI      +671
        CMP      R0,#+0
        BNE      ??ExtractFile_2
??ExtractFile_4:
        MOV      R1,R9
        MOV      R0,R4
        BL       ??SetCurrentFileInZip
        CMP      R0,#+0
        BNE      ??ExtractFile_3
        PUSH     {R0}
        CFI CFA R13+548
        MOV      R3,R6
        MOV      R2,R5
        MOV      R1,R9
        MOV      R0,R4
        BL       ??ExtractCurrentFile
        ADD      SP,SP,#+4
        CFI CFA R13+544
        ADD      SP,SP,#+516
        CFI CFA R13+28
        POP      {R4-R9,PC}
        CFI CFA R13+544
??ExtractFile_3:
        MOV      R0,#+1
        ADD      SP,SP,#+516
        CFI CFA R13+28
        POP      {R4-R9,PC}       ;; return
        CFI EndBlock cfiBlock25

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock26 Using cfiCommon0
        CFI NoFunction
        THUMB
??ExtractDir??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock26
        REQUIRE ??ExtractDir

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock27 Using cfiCommon1
        CFI Function ??ExtractDir
        ARM
??ExtractDir:
        PUSH     {R4-R8,R10,R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R8 Frame(CFA, -16)
        CFI R7 Frame(CFA, -20)
        CFI R6 Frame(CFA, -24)
        CFI R5 Frame(CFA, -28)
        CFI R4 Frame(CFA, -32)
        CFI CFA R13+32
        MOV      R4,R0
        MOV      R7,R1
        MOV      R5,R2
        MOV      R0,#+2
        ORR      R0,R0,#0x200
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R6,R0
        MOV      R1,R7
        ADD      R0,R6,#+2
        SWI      +338
        MOV      R0,#+47
        STRH     R0,[R6, #+0]
        LDRH     R0,[R6, #+2]
        MOV      R11,#+0
        CMP      R0,#+47
        ADDEQ    R7,R6,#+4
        ADDNE    R7,R6,#+2
        ADDEQ    R8,R6,#+2
        MOVNE    R8,R6
        MOV      R0,R7
        SWI      +343
        MOV      R10,R0
        B        ??ExtractDir_1
??ExtractDir_2:
        LDR      R0,[R4, #+1028]
        MOV      R2,R10
        LDR      R1,[R0, +R11, LSL #+2]
        MOV      R0,R7
        SWI      +666
        CMP      R0,#+0
        BEQ      ??ExtractDir_3
        LDR      R0,[R4, #+1028]
        ADD      R2,R10,#+1
        LDR      R1,[R0, +R11, LSL #+2]
        MOV      R0,R8
        SWI      +666
        CMP      R0,#+0
        BNE      ??ExtractDir_4
??ExtractDir_3:
        PUSH     {R0}
        CFI CFA R13+36
        MOV      R3,#+1
        MOV      R2,R5
        MOV      R1,R11
        MOV      R0,R4
        BL       ??ExtractCurrentFile
        ADD      SP,SP,#+4
        CFI CFA R13+32
??ExtractDir_4:
        ADD      R11,R11,#+1
??ExtractDir_1:
        LDR      R0,[R4, #+1044]
        CMP      R11,R0
        BCS      ??ExtractDir_5
        LDR      R0,[R4, #+1040]
        CMP      R11,#+0
        BNE      ??ExtractDir_6
        _BLF     unzGoToFirstFile,??unzGoToFirstFile??rA
        B        ??ExtractDir_7
??ExtractDir_6:
        _BLF     unzGoToNextFile,??unzGoToNextFile??rA
??ExtractDir_7:
        CMP      R0,#+0
        BEQ      ??ExtractDir_2
        POP      {R4-R8,R10,R11,PC}
??ExtractDir_5:
        MOV      R0,R6
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,#+0
        POP      {R4-R8,R10,R11,PC}
        CFI EndBlock cfiBlock27

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock28 Using cfiCommon0
        CFI NoFunction
        THUMB
??ZipBufferExtract??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock28
        REQUIRE ??ZipBufferExtract

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock29 Using cfiCommon1
        CFI Function ??ZipBufferExtract
        ARM
??ZipBufferExtract:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOV      R4,R0
        MOV      R5,R1
        MOV      R6,R2
        CMP      R5,#+0
        BEQ      ??ZipBufferExtract_1
        LDR      R0,[R5, #+16]
        CMP      R0,#+0
        LDRNE    R0,[R5, #+8]
        CMPNE    R0,#+0
        POPEQ    {R4-R7,PC}
        MOV      R7,#+0
??ZipBufferExtract_2:
        MOV      R0,R7
        _BLF     ??IsArchiveOpened,??IsArchiveOpened??rA
        CMP      R0,#+1
        BNE      ??ZipBufferExtract_3
        LDR      R0,??DataTable12  ;; tabs
        LDR      R1,[R5, #+16]
        LDR      R0,[R0, +R7, LSL #+2]
        LDR      R0,[R0, #+2068]
        ADD      R0,R0,#+4
        SWI      +671
        CMP      R0,#+0
        BNE      ??ZipBufferExtract_3
        LDR      R0,??DataTable12  ;; tabs
        LDR      R0,[R0, +R7, LSL #+2]
        LDR      R4,[R0, #+2068]
??ZipBufferExtract_4:
        LDR      R0,[R5, #+0]
        CMP      R0,#+2
        BNE      ??ZipBufferExtract_5
        LDR      R1,[R5, #+8]
        MOV      R3,#+0
        MOV      R2,R6
        MOV      R0,R4
        BL       ??ExtractFile
        POP      {R4-R7,PC}
??ZipBufferExtract_3:
        ADD      R7,R7,#+1
        CMP      R7,#+2
        BLT      ??ZipBufferExtract_2
        LDR      R0,[R4, #+1040]
        CMP      R0,#+0
        BEQ      ??ZipBufferExtract_6
        LDR      R1,[R5, #+16]
        ADD      R0,R4,#+4
        SWI      +671
        CMP      R0,#+0
        BEQ      ??ZipBufferExtract_6
        MOV      R0,R4
        BL       ??CloseZip
??ZipBufferExtract_6:
        LDR      R0,[R4, #+1040]
        CMP      R0,#+0
        BNE      ??ZipBufferExtract_4
        LDR      R1,[R5, #+16]
        MOV      R0,R4
        BL       ??OpenZip
        CMP      R0,#+0
        BEQ      ??ZipBufferExtract_4
        MVN      R0,#+0
        POP      {R4-R7,PC}
??ZipBufferExtract_5:
        CMP      R0,#+3
        BNE      ??ZipBufferExtract_1
        LDR      R1,[R5, #+8]
        MOV      R3,#+1
        MOV      R2,R6
        MOV      R0,R4
        BL       ??ExtractDir
        POP      {R4-R7,PC}
??ZipBufferExtract_1:
        MOV      R0,#+0
        POP      {R4-R7,PC}       ;; return
        CFI EndBlock cfiBlock29

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable12:
        DC32     tabs

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock30 Using cfiCommon0
        CFI NoFunction
        THUMB
??ZipBufferExtractEnd??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock30
        REQUIRE ??ZipBufferExtractEnd

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock31 Using cfiCommon1
        CFI Function ??ZipBufferExtractEnd
        ARM
??ZipBufferExtractEnd:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R1,[R0, #+0]
        CMP      R1,#+1
        POPNE    {PC}
        BL       ??CloseZip
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock31

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock32 Using cfiCommon1
        CFI NoFunction
        ARM
??muitxt??rA:
        LDR      R12,??Subroutine16_0  ;; ??muitxt
        BX       R12
        DATA
??Subroutine16_0:
        DC32     ??muitxt
        CFI EndBlock cfiBlock32

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock33 Using cfiCommon1
        CFI NoFunction
        ARM
??MsgBoxError??rA:
        LDR      R12,??Subroutine17_0  ;; ??MsgBoxError
        BX       R12
        DATA
??Subroutine17_0:
        DC32     ??MsgBoxError
        CFI EndBlock cfiBlock33

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock34 Using cfiCommon1
        CFI NoFunction
        ARM
??unzClose??rA:
        LDR      R12,??Subroutine18_0  ;; unzClose
        BX       R12
        DATA
??Subroutine18_0:
        DC32     unzClose
        CFI EndBlock cfiBlock34

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock35 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine19_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine19_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock35

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock36 Using cfiCommon1
        CFI NoFunction
        ARM
??FreeArchInfo??rA:
        LDR      R12,??Subroutine20_0  ;; ??FreeArchInfo
        BX       R12
        DATA
??Subroutine20_0:
        DC32     ??FreeArchInfo
        CFI EndBlock cfiBlock36

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock37 Using cfiCommon1
        CFI NoFunction
        ARM
??unzGetGlobalInfo??rA:
        LDR      R12,??Subroutine21_0  ;; unzGetGlobalInfo
        BX       R12
        DATA
??Subroutine21_0:
        DC32     unzGetGlobalInfo
        CFI EndBlock cfiBlock37

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock38 Using cfiCommon1
        CFI NoFunction
        ARM
??initprogr??rA:
        LDR      R12,??Subroutine22_0  ;; ??initprogr
        BX       R12
        DATA
??Subroutine22_0:
        DC32     ??initprogr
        CFI EndBlock cfiBlock38

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock39 Using cfiCommon1
        CFI NoFunction
        ARM
??incprogr??rA:
        LDR      R12,??Subroutine23_0  ;; ??incprogr
        BX       R12
        DATA
??Subroutine23_0:
        DC32     ??incprogr
        CFI EndBlock cfiBlock39

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock40 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new[]??rA`:
        LDR      R12,??Subroutine24_0  ;; `??operator new[]`
        BX       R12
        DATA
??Subroutine24_0:
        DC32     `??operator new[]`
        CFI EndBlock cfiBlock40

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock41 Using cfiCommon1
        CFI NoFunction
        ARM
??unzGoToFirstFile??rA:
        LDR      R12,??Subroutine25_0  ;; unzGoToFirstFile
        BX       R12
        DATA
??Subroutine25_0:
        DC32     unzGoToFirstFile
        CFI EndBlock cfiBlock41

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock42 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new??rA`:
        LDR      R12,??Subroutine26_0  ;; `??operator new`
        BX       R12
        DATA
??Subroutine26_0:
        DC32     `??operator new`
        CFI EndBlock cfiBlock42

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock43 Using cfiCommon1
        CFI NoFunction
        ARM
??unzGetCurrentFileInfo??rA:
        LDR      R12,??Subroutine27_0  ;; unzGetCurrentFileInfo
        BX       R12
        DATA
??Subroutine27_0:
        DC32     unzGetCurrentFileInfo
        CFI EndBlock cfiBlock43

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock44 Using cfiCommon1
        CFI NoFunction
        ARM
??wstrreplace??rA:
        LDR      R12,??Subroutine28_0  ;; ??wstrreplace
        BX       R12
        DATA
??Subroutine28_0:
        DC32     ??wstrreplace
        CFI EndBlock cfiBlock44

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock45 Using cfiCommon1
        CFI NoFunction
        ARM
??dos2utf16??rA:
        LDR      R12,??Subroutine29_0  ;; ??dos2utf16
        BX       R12
        DATA
??Subroutine29_0:
        DC32     ??dos2utf16
        CFI EndBlock cfiBlock45

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock46 Using cfiCommon1
        CFI NoFunction
        ARM
??unzGoToNextFile??rA:
        LDR      R12,??Subroutine30_0  ;; unzGoToNextFile
        BX       R12
        DATA
??Subroutine30_0:
        DC32     unzGoToNextFile
        CFI EndBlock cfiBlock46

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock47 Using cfiCommon1
        CFI NoFunction
        ARM
??endprogr??rA:
        LDR      R12,??Subroutine31_0  ;; ??endprogr
        BX       R12
        DATA
??Subroutine31_0:
        DC32     ??endprogr
        CFI EndBlock cfiBlock47

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock48 Using cfiCommon1
        CFI NoFunction
        ARM
??unzOpen??rA:
        LDR      R12,??Subroutine32_0  ;; unzOpen
        BX       R12
        DATA
??Subroutine32_0:
        DC32     unzOpen
        CFI EndBlock cfiBlock48

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock49 Using cfiCommon1
        CFI NoFunction
        ARM
??IsArchiveOpened??rA:
        LDR      R12,??Subroutine33_0  ;; ??IsArchiveOpened
        BX       R12
        DATA
??Subroutine33_0:
        DC32     ??IsArchiveOpened
        CFI EndBlock cfiBlock49

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock50 Using cfiCommon1
        CFI NoFunction
        ARM
??AddFile??rA:
        LDR      R12,??Subroutine34_0  ;; ??AddFile
        BX       R12
        DATA
??Subroutine34_0:
        DC32     ??AddFile
        CFI EndBlock cfiBlock50

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock51 Using cfiCommon1
        CFI NoFunction
        ARM
??GetFileExt??rA:
        LDR      R12,??Subroutine35_0  ;; ??GetFileExt
        BX       R12
        DATA
??Subroutine35_0:
        DC32     ??GetFileExt
        CFI EndBlock cfiBlock51

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock52 Using cfiCommon1
        CFI NoFunction
        ARM
??GetFileName??rA:
        LDR      R12,??Subroutine36_0  ;; ??GetFileName
        BX       R12
        DATA
??Subroutine36_0:
        DC32     ??GetFileName
        CFI EndBlock cfiBlock52

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock53 Using cfiCommon1
        CFI NoFunction
        ARM
??mktree??rA:
        LDR      R12,??Subroutine37_0  ;; ??mktree
        BX       R12
        DATA
??Subroutine37_0:
        DC32     ??mktree
        CFI EndBlock cfiBlock53

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock54 Using cfiCommon1
        CFI NoFunction
        ARM
??fexists??rA:
        LDR      R12,??Subroutine38_0  ;; ??fexists
        BX       R12
        DATA
??Subroutine38_0:
        DC32     ??fexists
        CFI EndBlock cfiBlock54

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock55 Using cfiCommon1
        CFI NoFunction
        ARM
??unzCloseCurrentFile??rA:
        LDR      R12,??Subroutine39_0  ;; unzCloseCurrentFile
        BX       R12
        DATA
??Subroutine39_0:
        DC32     unzCloseCurrentFile
        CFI EndBlock cfiBlock55

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock56 Using cfiCommon1
        CFI NoFunction
        ARM
??unzOpenCurrentFilePassword??rA:
        LDR      R12,??Subroutine40_0  ;; unzOpenCurrentFilePassword
        BX       R12
        DATA
??Subroutine40_0:
        DC32     unzOpenCurrentFilePassword
        CFI EndBlock cfiBlock56

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock57 Using cfiCommon1
        CFI NoFunction
        ARM
??incprogrsp??rA:
        LDR      R12,??Subroutine41_0  ;; ??incprogrsp
        BX       R12
        DATA
??Subroutine41_0:
        DC32     ??incprogrsp
        CFI EndBlock cfiBlock57

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock58 Using cfiCommon1
        CFI NoFunction
        ARM
??unzReadCurrentFile??rA:
        LDR      R12,??Subroutine42_0  ;; unzReadCurrentFile
        BX       R12
        DATA
??Subroutine42_0:
        DC32     unzReadCurrentFile
        CFI EndBlock cfiBlock58

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock59 Using cfiCommon1
        CFI NoFunction
        ARM
??endprogrsp??rA:
        LDR      R12,??Subroutine43_0  ;; ??endprogrsp
        BX       R12
        DATA
??Subroutine43_0:
        DC32     ??endprogrsp
        CFI EndBlock cfiBlock59

        END
// 
// 3 864 bytes in segment CODE
//   332 bytes in segment DATA_C
// 
// 3 464 bytes of CODE  memory (+ 400 bytes shared)
//   332 bytes of CONST memory
//
//Errors: none
//Warnings: none
