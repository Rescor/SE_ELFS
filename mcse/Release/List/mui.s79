//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:47:57 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\mui.cpp  /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\mui.cpp  /
//                       -D NDEBUG -D USEZLIB -D OLDFUNCTIONS -lCN           /
//                       Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\ /
//                       List\ -la Z:\home\perk11\www\perk11.info\svn\SE\mcs /
//                       e\Release\List\ -o Z:\home\perk11\www\perk11.info\s /
//                       vn\SE\mcse\Release\Obj\ -s9 --no_unroll             /
//                       --no_code_motion --cpu_mode arm --endian little     /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --enable_multibytes --fpu None --eec++              /
//                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl /
//                       8n.h --preinclude Z:\home\perk11\www\perk11.info\sv /
//                       n\SE\mcse\..\deleaker\mem2.h -I                     /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\ /
//                       List\mui.s79                                        /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME mui

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable10 EQU 0
??DataTable11 EQU 0
??DataTable13 EQU 0
??DataTable14 EQU 0
??DataTable2 EQU 0
??DataTable3 EQU 0
??DataTable4 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
??DataTable9 EQU 0
        MULTWEAK ??EnumIni??rA
        PUBLIC ??FreeMUI
        FUNCTION ??FreeMUI,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??FreeMUI??rT
        PUBLIC ??LoadMUI
        FUNCTION ??LoadMUI,0203H
        LOCFRAME CSTACK, 68, STACK
        MULTWEAK ??LoadMUI??rT
        PUBLIC ??LoadMUIold
        FUNCTION ??LoadMUIold,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??LoadMUIold??rT
        PUBLIC ??MUIProc
        FUNCTION ??MUIProc,0603H
        LOCFRAME CSTACK, 24, STACK
        MULTWEAK ??MUIProc??rT
        PUBLIC ??SaveMUI
        FUNCTION ??SaveMUI,0203H
        LOCFRAME CSTACK, 48, STACK
        MULTWEAK ??SaveMUI??rT
        PUBLIC ??freeb
        FUNCTION ??freeb,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??freeb??rT
        PUBLIC ??getmuiind
        FUNCTION ??getmuiind,0203H
        MULTWEAK ??getmuiind??rT
        PUBLIC ??muitxt
        FUNCTION ??muitxt,0203H
        MULTWEAK ??muitxt??rT
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new[]??rA`
        MULTWEAK ??strtol??rA
        MULTWEAK ??utf8_to_utf16??rA
        MULTWEAK ??win12512unicode??rA
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC mclg_deffile
        PUBLIC mclg_ext
        PUBLIC mui_ld
        PUBLIC muibuff
        PUBLIC muibuffsz
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        





strtol              SYMBOL "strtol"
??EnumIni??rA       SYMBOL "??rA", ??EnumIni

??FreeMUI??rT       SYMBOL "??rT", ??FreeMUI

??LoadMUI??rT       SYMBOL "??rT", ??LoadMUI

??LoadMUIold??rT    SYMBOL "??rT", ??LoadMUIold

??MUIProc??rT       SYMBOL "??rT", ??MUIProc

??SaveMUI??rT       SYMBOL "??rT", ??SaveMUI

??freeb??rT         SYMBOL "??rT", ??freeb

??getmuiind??rT     SYMBOL "??rT", ??getmuiind

??muitxt??rT        SYMBOL "??rT", ??muitxt
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new[]??rA` SYMBOL "??rA", `??operator new[]`
??strtol??rA        SYMBOL "??rA", strtol
??utf8_to_utf16??rA SYMBOL "??rA", ??utf8_to_utf16
??win12512unicode??rA SYMBOL "??rA", ??win12512unicode

        EXTERN ??EnumIni
        FUNCTION ??EnumIni,0202H
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new[]`
        FUNCTION `??operator new[]`,0202H
        EXTERN ??utf8_to_utf16
        FUNCTION ??utf8_to_utf16,0202H
        EXTERN ??win12512unicode
        FUNCTION ??win12512unicode,0202H
        EXTERN mcpath
        EXTERN strtol
        FUNCTION strtol,0202H


        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x42f\\x437\\x44b\\x43a">`:
        DATA
        DC8 2FH, 4, 37H, 4, 4BH, 4, 3AH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x427\\x442\\x435\\x43d\\x438\\x435\\x2`:
        DATA
        DC8 27H, 4, 42H, 4, 35H, 4, 3DH, 4
        DC8 38H, 4, 35H, 4, 20H, 0, 30H, 4
        DC8 40H, 4, 45H, 4, 38H, 4, 32H, 4
        DC8 30H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4`:
        DATA
        DC8 1FH, 4, 3EH, 4, 3AH, 4, 30H, 4
        DC8 37H, 4, 4BH, 4, 32H, 4, 30H, 4
        DC8 42H, 4, 4CH, 4, 20H, 0, 41H, 4
        DC8 3AH, 4, 40H, 4, 4BH, 4, 42H, 4
        DC8 4BH, 4, 35H, 4, 20H, 0, 44H, 4
        DC8 30H, 4, 39H, 4, 3BH, 4, 4BH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4_1`:
        DATA
        DC8 1FH, 4, 3EH, 4, 3AH, 4, 30H, 4
        DC8 37H, 4, 4BH, 4, 32H, 4, 30H, 4
        DC8 42H, 4, 4CH, 4, 20H, 0, 41H, 4
        DC8 38H, 4, 41H, 4, 42H, 4, 35H, 4
        DC8 3CH, 4, 3DH, 4, 4BH, 4, 35H, 4
        DC8 20H, 0, 44H, 4, 30H, 4, 39H, 4
        DC8 3BH, 4, 4BH, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4_2`:
        DATA
        DC8 1FH, 4, 3EH, 4, 3AH, 4, 30H, 4
        DC8 37H, 4, 4BH, 4, 32H, 4, 30H, 4
        DC8 42H, 4, 4CH, 4, 20H, 0, 41H, 4
        DC8 3AH, 4, 40H, 4, 4BH, 4, 42H, 4
        DC8 4BH, 4, 35H, 4, 20H, 0, 38H, 4
        DC8 20H, 0, 41H, 4, 38H, 4, 41H, 4
        DC8 42H, 4, 35H, 4, 3CH, 4, 3DH, 4
        DC8 4BH, 4, 35H, 4, 20H, 0, 44H, 4
        DC8 30H, 4, 39H, 4, 3BH, 4, 4BH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4_3`:
        DATA
        DC8 1FH, 4, 3EH, 4, 3AH, 4, 30H, 4
        DC8 37H, 4, 4BH, 4, 32H, 4, 30H, 4
        DC8 42H, 4, 4CH, 4, 20H, 0, 41H, 4
        DC8 3AH, 4, 40H, 4, 4BH, 4, 42H, 4
        DC8 4BH, 4, 35H, 4, 20H, 0, 34H, 4
        DC8 38H, 4, 41H, 4, 3AH, 4, 38H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x442">`:
        DATA
        DC8 1DH, 4, 35H, 4, 42H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x414\\x430">`:
        DATA
        DC8 14H, 4, 30H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x431">`:
        DATA
        DC8 31H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41a\\x431">`:
        DATA
        DC8 1AH, 4, 31H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41c\\x431">`:
        DATA
        DC8 1CH, 4, 31H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41a\\x43e\\x43d\\x444\\x438\\x433\\x4`:
        DATA
        DC8 1AH, 4, 3EH, 4, 3DH, 4, 44H, 4
        DC8 38H, 4, 33H, 4, 43H, 4, 2DH, 0
        DC8 0AH, 0, 40H, 4, 30H, 4, 46H, 4
        DC8 38H, 4, 4FH, 4, 20H, 0, 3EH, 4
        DC8 31H, 4, 3DH, 4, 3EH, 4, 32H, 4
        DC8 3BH, 4, 35H, 4, 3DH, 4, 30H, 4
        DC8 21H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x44b\\x434\\x435\\x43b\\x438\\x4`:
        DATA
        DC8 12H, 4, 4BH, 4, 34H, 4, 35H, 4
        DC8 3BH, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 20H, 0, 32H, 4, 41H, 4, 35H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x420\\x443\\x441\\x441\\x43a\\x438\\x4`:
        DATA
        DC8 20H, 4, 43H, 4, 41H, 4, 41H, 4
        DC8 3AH, 4, 38H, 4, 39H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x421\\x43e\\x437\\x434\\x430\\x43d\\x4`:
        DATA
        DC8 21H, 4, 3EH, 4, 37H, 4, 34H, 4
        DC8 30H, 4, 3DH, 4, 38H, 4, 35H, 4
        DC8 20H, 0, 3FH, 4, 30H, 4, 3FH, 4
        DC8 3EH, 4, 3AH, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41a\\x43e\\x43f\\x438\\x440\\x43e\\x4`:
        DATA
        DC8 1AH, 4, 3EH, 4, 3FH, 4, 38H, 4
        DC8 40H, 4, 3EH, 4, 32H, 4, 30H, 4
        DC8 3DH, 4, 38H, 4, 35H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x435\\x440\\x435\\x43c\\x435\\x4`:
        DATA
        DC8 1FH, 4, 35H, 4, 40H, 4, 35H, 4
        DC8 3CH, 4, 35H, 4, 49H, 4, 35H, 4
        DC8 3DH, 4, 38H, 4, 35H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x423\\x434\\x430\\x43b\\x435\\x43d\\x4`:
        DATA
        DC8 23H, 4, 34H, 4, 30H, 4, 3BH, 4
        DC8 35H, 4, 3DH, 4, 38H, 4, 35H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41c\\x435\\x43d\\x44e\\x20\\x4d\\x43"`:
        DATA
        DC8 1CH, 4, 35H, 4, 3DH, 4, 4EH, 4
        DC8 20H, 0, 4DH, 0, 43H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x44b\\x431\\x43e\\x440">`:
        DATA
        DC8 12H, 4, 4BH, 4, 31H, 4, 3EH, 4
        DC8 40H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x430\\x437\\x430\\x434">`:
        DATA
        DC8 1DH, 4, 30H, 4, 37H, 4, 30H, 4
        DC8 34H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x442\\x43a\\x440\\x44b\\x442\\x4`:
        DATA
        DC8 1EH, 4, 42H, 4, 3AH, 4, 40H, 4
        DC8 4BH, 4, 42H, 4, 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x424\\x430\\x439\\x43b\\x2e\\x2e\\x2e"`:
        DATA
        DC8 24H, 4, 30H, 4, 39H, 4, 3BH, 4
        DC8 2EH, 0, 2EH, 0, 2EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x44b\\x434\\x435\\x43b\\x438\\x4_1`:
        DATA
        DC8 12H, 4, 4BH, 4, 34H, 4, 35H, 4
        DC8 3BH, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
mui:
        DATA
        DC32 1, `?<Constant L"\\x41d\\x435\\x442">`, 2
        DC32 `?<Constant L"\\x414\\x430">`, 10, `?<Constant L"\\x431">`, 11
        DC32 `?<Constant L"\\x41a\\x431">`, 12, `?<Constant L"\\x41c\\x431">`
        DC32 50, `?<Constant L"\\x41a\\x43e\\x43d\\x444\\x438\\x433\\x4`, 51
        DC32 `?<Constant L"\\x42f\\x437\\x44b\\x43a">`, 52
        DC32 `?<Constant L"\\x420\\x443\\x441\\x441\\x43a\\x438\\x4`, 100
        DC32 `?<Constant L"\\x421\\x43e\\x437\\x434\\x430\\x43d\\x4`, 101
        DC32 `?<Constant L"\\x41a\\x43e\\x43f\\x438\\x440\\x43e\\x4`, 102
        DC32 `?<Constant L"\\x41f\\x435\\x440\\x435\\x43c\\x435\\x4`, 103
        DC32 `?<Constant L"\\x423\\x434\\x430\\x43b\\x435\\x43d\\x4`, 1000
        DC32 `?<Constant L"\\x41c\\x435\\x43d\\x44e\\x20\\x4d\\x43"`, 1001
        DC32 `?<Constant L"\\x412\\x44b\\x431\\x43e\\x440">`, 1002
        DC32 `?<Constant L"\\x41d\\x430\\x437\\x430\\x434">`, 1010
        DC32 `?<Constant L"\\x41e\\x442\\x43a\\x440\\x44b\\x442\\x4`, 1020
        DC32 `?<Constant L"\\x424\\x430\\x439\\x43b\\x2e\\x2e\\x2e"`, 1021
        DC32 `?<Constant L"\\x412\\x44b\\x434\\x435\\x43b\\x438\\x4_1`, 1022
        DC32 `?<Constant L"\\x412\\x44b\\x434\\x435\\x43b\\x438\\x4`, 1024
        DC32 `?<Constant L"\\x418\\x43d\\x432\\x435\\x440\\x442\\x4`, 1023
        DC32 `?<Constant L"\\x421\\x431\\x440\\x43e\\x441\\x438\\x4`, 1030
        DC32 `?<Constant L"\\x41e\\x43f\\x435\\x440\\x430\\x446\\x4`, 1031
        DC32 `?<Constant L"\\x412\\x441\\x442\\x430\\x432\\x438\\x4`, 1037
        DC32 `?<Constant L"\\x41e\\x442\\x43c\\x435\\x43d\\x438\\x4`, 1032
        DC32 `?<Constant L"\\x41a\\x43e\\x43f\\x438\\x440\\x43e\\x4_1`, 1033
        DC32 `?<Constant L"\\x41f\\x435\\x440\\x435\\x43c\\x435\\x4_1`, 1034
        DC32 `?<Constant L"\\x423\\x434\\x430\\x43b\\x438\\x442\\x4`, 1035
        DC32 `?<Constant L"\\x41f\\x435\\x440\\x435\\x438\\x43c\\x4`, 1036
        DC32 `?<Constant L"\\x41d\\x43e\\x432\\x430\\x44f\\x20\\x43`, 1040
        DC32 `?<Constant L"\\x421\\x432\\x43e\\x439\\x441\\x442\\x4`, 1050
        DC32 `?<Constant L"\\x414\\x438\\x441\\x43a\\x438">`, 1090
        DC32 `?<Constant L"\\x412\\x438\\x434\\x2e\\x2e\\x2e">`, 1080
        DC32 `?<Constant L"\\x421\\x43e\\x440\\x442\\x438\\x440\\x4`, 1081
        DC32 `?<Constant L"\\x41f\\x43e\\x20\\x438\\x43c\\x435\\x43`, 1082
        DC32 `?<Constant L"\\x41f\\x43e\\x20\\x442\\x438\\x43f\\x44`, 1083
        DC32 `?<Constant L"\\x41f\\x43e\\x20\\x440\\x430\\x437\\x43`, 1084
        DC32 `?<Constant L"\\x41f\\x43e\\x20\\x434\\x430\\x442\\x43`, 1085
        DC32 `?<Constant L"\\x41e\\x431\\x440\\x430\\x442\\x43d\\x4`, 1092
        DC32 `?<Constant L"\\x424\\x438\\x43b\\x44c\\x442\\x440">`, 1091
        DC32 `?<Constant L"\\x41e\\x431\\x43d\\x43e\\x432\\x438\\x4`, 1038
        DC32 `?<Constant L"\\x41d\\x43e\\x432\\x44b\\x439\\x20\\x44`, 1060
        DC32 `?<Constant L"\\x417\\x430\\x43a\\x43b\\x430\\x434\\x4`, 1061
        DC32 `?<Constant L"\\x417\\x430\\x43a\\x43b\\x430\\x434\\x4_1`, 1062
        DC32 `?<Constant L"\\x414\\x43e\\x431\\x430\\x432\\x438\\x4`, 1063
        DC32 `?<Constant L"\\x421\\x43f\\x438\\x441\\x43e\\x43a">`, 1070
        DC32 `?<Constant L"\\x420\\x430\\x437\\x43d\\x43e\\x435\\x2`, 1071
        DC32 `?<Constant L"\\x41d\\x430\\x441\\x442\\x440\\x43e\\x4`, 1072
        DC32 `?<Constant L"\\x41e\\x431\\x20\\x44d\\x43b\\x44c\\x44`, 1100
        DC32 `?<Constant L"\\x412\\x44b\\x445\\x43e\\x434">`, 1200
        DC32 `?<Constant L"\\x41f\\x435\\x440\\x435\\x434\\x430\\x4`, 1500
        DC32 `?<Constant L"\\x418\\x43c\\x44f">`, 1501
        DC32 `?<Constant L"\\x41f\\x43e\\x43b\\x43d\\x43e\\x435\\x2`, 1502
        DC32 `?<Constant L"\\x420\\x430\\x437\\x43c\\x435\\x440">`, 1511
        DC32 `?<Constant L"\\x41e\\x431\\x449\\x438\\x439">`, 1512
        DC32 `?<Constant L"\\x41f\\x430\\x43f\\x43e\\x43a">`, 1513
        DC32 `?<Constant L"\\x424\\x430\\x439\\x43b\\x43e\\x432">`, 1503
        DC32 `?<Constant L"\\x414\\x430\\x442\\x430\\x20\\x441\\x43`, 1504
        DC32 `?<Constant L"\\x410\\x442\\x440\\x438\\x431\\x443\\x4`, 1505
        DC32 `?<Constant L"\\x422\\x43e\\x43b\\x44c\\x43a\\x43e\\x2`, 1506
        DC32 `?<Constant L"\\x421\\x43a\\x440\\x44b\\x442\\x44b\\x4`, 1507
        DC32 `?<Constant L"\\x421\\x438\\x441\\x442\\x435\\x43c\\x4`, 1508
        DC32 `?<Constant L"\\x410\\x440\\x445\\x438\\x432\\x43d\\x4`, 1509
        DC32 `?<Constant L"\\x41e\\x431\\x440\\x430\\x431\\x430\\x4`, 1514
        DC32 `?<Constant L"\\x41d\\x435\\x441\\x436\\x430\\x442\\x4`, 1515
        DC32 `?<Constant L"\\x421\\x436\\x430\\x442\\x44b\\x439">`, 1516
        DC32 `?<Constant L"\\x41e\\x431\\x449\\x438\\x439\\x20\\x44`, 3000
        DC32 `?<Constant L"\\x423\\x434\\x430\\x43b\\x438\\x442\\x4_1`, 3001
        DC32 `?<Constant L"\\x41a\\x43e\\x43f\\x438\\x440\\x43e\\x4_2`, 3002
        DC32 `?<Constant L"\\x41f\\x435\\x440\\x435\\x43c\\x435\\x2`, 3003
        DC32 `?<Constant L"\\x41f\\x440\\x435\\x440\\x432\\x430\\x4`, 3008
        DC32 `?<Constant L"\\x41e\\x447\\x438\\x441\\x442\\x438\\x4`, 3004
        DC32 `?<Constant L"\\x424\\x430\\x439\\x43b\\x20\\x441\\x44`, 3005
        DC32 `?<Constant L"\\x412\\x44b\\x439\\x442\\x438\\x20\\x43`, 3006
        DC32 `?<Constant L"\\x41f\\x440\\x438\\x43c\\x435\\x43d\\x4`, 3007
        DC32 `?<Constant L"\\x41f\\x440\\x438\\x43c\\x435\\x43d\\x4_1`, 3009
        DC32 `?<Constant L"\\x424\\x430\\x439\\x43b\\x20\\x25\\x73\\`, 4001
        DC32 `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43`, 4002
        DC32 `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_1`, 4003
        DC32 `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_2`, 4004
        DC32 `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_3`, 4005
        DC32 `?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4`, 4006
        DC32 `?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4_1`, 4007
        DC32 `?<Constant L"\\x412\\x44b\\x43f\\x43e\\x43b\\x43d\\x4`, 4008
        DC32 `?<Constant L"\\x41d\\x435\\x442\\x20\\x444\\x430\\x43`, 4009
        DC32 `?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4_2`, 4010
        DC32 `?<Constant L"\\x41e\\x448\\x438\\x431\\x43a\\x430\\x2`, 4011
        DC32 `?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4_3`, 4012
        DC32 `?<Constant L"\\x41d\\x435\\x20\\x445\\x432\\x430\\x44`, 4013
        DC32 `?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_4`, 4014
        DC32 `?<Constant L"\\x41e\\x448\\x438\\x431\\x43a\\x430\\x2_1`, 5000
        DC32 `?<Constant L"\\x427\\x442\\x435\\x43d\\x438\\x435\\x2`, 5001
        DC32 `?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4`, 5002
        DC32 `?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4_1`, 5003
        DC32 `?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4_2`, 5004
        DC32 `?<Constant L"\\x41f\\x43e\\x43a\\x430\\x437\\x44b\\x4_3`
        DC8 "mclg"
        DC8 0, 0, 0
mclg_deffile:
        DC8 64H, 0, 65H, 0, 66H, 0, 61H, 0
        DC8 75H, 0, 6CH, 0, 74H, 0, 2EH, 0
        DC8 6DH, 0, 63H, 0, 6CH, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x418\\x43d\\x432\\x435\\x440\\x442\\x4`:
        DATA
        DC8 18H, 4, 3DH, 4, 32H, 4, 35H, 4
        DC8 40H, 4, 42H, 4, 38H, 4, 40H, 4
        DC8 3EH, 4, 32H, 4, 30H, 4, 42H, 4
        DC8 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x421\\x431\\x440\\x43e\\x441\\x438\\x4`:
        DATA
        DC8 21H, 4, 31H, 4, 40H, 4, 3EH, 4
        DC8 41H, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 20H, 0, 32H, 4, 41H, 4, 35H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x43f\\x435\\x440\\x430\\x446\\x4`:
        DATA
        DC8 1EH, 4, 3FH, 4, 35H, 4, 40H, 4
        DC8 30H, 4, 46H, 4, 38H, 4, 38H, 4
        DC8 2EH, 0, 2EH, 0, 2EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x441\\x442\\x430\\x432\\x438\\x4`:
        DATA
        DC8 12H, 4, 41H, 4, 42H, 4, 30H, 4
        DC8 32H, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x442\\x43c\\x435\\x43d\\x438\\x4`:
        DATA
        DC8 1EH, 4, 42H, 4, 3CH, 4, 35H, 4
        DC8 3DH, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41a\\x43e\\x43f\\x438\\x440\\x43e\\x4_1`:
        DATA
        DC8 1AH, 4, 3EH, 4, 3FH, 4, 38H, 4
        DC8 40H, 4, 3EH, 4, 32H, 4, 30H, 4
        DC8 42H, 4, 4CH, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x435\\x440\\x435\\x43c\\x435\\x4_1`:
        DATA
        DC8 1FH, 4, 35H, 4, 40H, 4, 35H, 4
        DC8 3CH, 4, 35H, 4, 41H, 4, 42H, 4
        DC8 38H, 4, 42H, 4, 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x423\\x434\\x430\\x43b\\x438\\x442\\x4`:
        DATA
        DC8 23H, 4, 34H, 4, 30H, 4, 3BH, 4
        DC8 38H, 4, 42H, 4, 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x435\\x440\\x435\\x438\\x43c\\x4`:
        DATA
        DC8 1FH, 4, 35H, 4, 40H, 4, 35H, 4
        DC8 38H, 4, 3CH, 4, 35H, 4, 3DH, 4
        DC8 3EH, 4, 32H, 4, 30H, 4, 42H, 4
        DC8 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x43e\\x432\\x430\\x44f\\x20\\x43`:
        DATA
        DC8 1DH, 4, 3EH, 4, 32H, 4, 30H, 4
        DC8 4FH, 4, 20H, 0, 3FH, 4, 30H, 4
        DC8 3FH, 4, 3AH, 4, 30H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x421\\x432\\x43e\\x439\\x441\\x442\\x4`:
        DATA
        DC8 21H, 4, 32H, 4, 3EH, 4, 39H, 4
        DC8 41H, 4, 42H, 4, 32H, 4, 30H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x414\\x438\\x441\\x43a\\x438">`:
        DATA
        DC8 14H, 4, 38H, 4, 41H, 4, 3AH, 4
        DC8 38H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x438\\x434\\x2e\\x2e\\x2e">`:
        DATA
        DC8 12H, 4, 38H, 4, 34H, 4, 2EH, 0
        DC8 2EH, 0, 2EH, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x421\\x43e\\x440\\x442\\x438\\x440\\x4`:
        DATA
        DC8 21H, 4, 3EH, 4, 40H, 4, 42H, 4
        DC8 38H, 4, 40H, 4, 3EH, 4, 32H, 4
        DC8 3AH, 4, 30H, 4, 2EH, 0, 2EH, 0
        DC8 2EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x43e\\x20\\x438\\x43c\\x435\\x43`:
        DATA
        DC8 1FH, 4, 3EH, 4, 20H, 0, 38H, 4
        DC8 3CH, 4, 35H, 4, 3DH, 4, 38H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x43e\\x20\\x442\\x438\\x43f\\x44`:
        DATA
        DC8 1FH, 4, 3EH, 4, 20H, 0, 42H, 4
        DC8 38H, 4, 3FH, 4, 43H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x43e\\x20\\x440\\x430\\x437\\x43`:
        DATA
        DC8 1FH, 4, 3EH, 4, 20H, 0, 40H, 4
        DC8 30H, 4, 37H, 4, 3CH, 4, 35H, 4
        DC8 40H, 4, 43H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x43e\\x20\\x434\\x430\\x442\\x43`:
        DATA
        DC8 1FH, 4, 3EH, 4, 20H, 0, 34H, 4
        DC8 30H, 4, 42H, 4, 35H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x431\\x440\\x430\\x442\\x43d\\x4`:
        DATA
        DC8 1EH, 4, 31H, 4, 40H, 4, 30H, 4
        DC8 42H, 4, 3DH, 4, 30H, 4, 4FH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x424\\x438\\x43b\\x44c\\x442\\x440">`:
        DATA
        DC8 24H, 4, 38H, 4, 3BH, 4, 4CH, 4
        DC8 42H, 4, 40H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x431\\x43d\\x43e\\x432\\x438\\x4`:
        DATA
        DC8 1EH, 4, 31H, 4, 3DH, 4, 3EH, 4
        DC8 32H, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x43e\\x432\\x44b\\x439\\x20\\x44`:
        DATA
        DC8 1DH, 4, 3EH, 4, 32H, 4, 4BH, 4
        DC8 39H, 4, 20H, 0, 44H, 4, 30H, 4
        DC8 39H, 4, 3BH, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x430\\x43a\\x43b\\x430\\x434\\x4`:
        DATA
        DC8 17H, 4, 30H, 4, 3AH, 4, 3BH, 4
        DC8 30H, 4, 34H, 4, 3AH, 4, 38H, 4
        DC8 2EH, 0, 2EH, 0, 2EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x430\\x43a\\x43b\\x430\\x434\\x4_1`:
        DATA
        DC8 17H, 4, 30H, 4, 3AH, 4, 3BH, 4
        DC8 30H, 4, 34H, 4, 3AH, 4, 30H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x414\\x43e\\x431\\x430\\x432\\x438\\x4`:
        DATA
        DC8 14H, 4, 3EH, 4, 31H, 4, 30H, 4
        DC8 32H, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x421\\x43f\\x438\\x441\\x43e\\x43a">`:
        DATA
        DC8 21H, 4, 3FH, 4, 38H, 4, 41H, 4
        DC8 3EH, 4, 3AH, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x420\\x430\\x437\\x43d\\x43e\\x435\\x2`:
        DATA
        DC8 20H, 4, 30H, 4, 37H, 4, 3DH, 4
        DC8 3EH, 4, 35H, 4, 2EH, 0, 2EH, 0
        DC8 2EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x430\\x441\\x442\\x440\\x43e\\x4`:
        DATA
        DC8 1DH, 4, 30H, 4, 41H, 4, 42H, 4
        DC8 40H, 4, 3EH, 4, 39H, 4, 3AH, 4
        DC8 38H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x431\\x20\\x44d\\x43b\\x44c\\x44`:
        DATA
        DC8 1EH, 4, 31H, 4, 20H, 0, 4DH, 4
        DC8 3BH, 4, 4CH, 4, 44H, 4, 35H, 4
        DC8 2EH, 0, 2EH, 0, 2EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x44b\\x445\\x43e\\x434">`:
        DATA
        DC8 12H, 4, 4BH, 4, 45H, 4, 3EH, 4
        DC8 34H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x435\\x440\\x435\\x434\\x430\\x4`:
        DATA
        DC8 1FH, 4, 35H, 4, 40H, 4, 35H, 4
        DC8 34H, 4, 30H, 4, 42H, 4, 4CH, 4
        DC8 20H, 0, 47H, 4, 35H, 4, 40H, 4
        DC8 35H, 4, 37H, 4, 20H, 0, 42H, 0
        DC8 54H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x418\\x43c\\x44f">`:
        DATA
        DC8 18H, 4, 3CH, 4, 4FH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x43e\\x43b\\x43d\\x43e\\x435\\x2`:
        DATA
        DC8 1FH, 4, 3EH, 4, 3BH, 4, 3DH, 4
        DC8 3EH, 4, 35H, 4, 20H, 0, 38H, 4
        DC8 3CH, 4, 4FH, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x420\\x430\\x437\\x43c\\x435\\x440">`:
        DATA
        DC8 20H, 4, 30H, 4, 37H, 4, 3CH, 4
        DC8 35H, 4, 40H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x431\\x449\\x438\\x439">`:
        DATA
        DC8 1EH, 4, 31H, 4, 49H, 4, 38H, 4
        DC8 39H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x430\\x43f\\x43e\\x43a">`:
        DATA
        DC8 1FH, 4, 30H, 4, 3FH, 4, 3EH, 4
        DC8 3AH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x424\\x430\\x439\\x43b\\x43e\\x432">`:
        DATA
        DC8 24H, 4, 30H, 4, 39H, 4, 3BH, 4
        DC8 3EH, 4, 32H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x414\\x430\\x442\\x430\\x20\\x441\\x43`:
        DATA
        DC8 14H, 4, 30H, 4, 42H, 4, 30H, 4
        DC8 20H, 0, 41H, 4, 3EH, 4, 37H, 4
        DC8 34H, 4, 30H, 4, 3DH, 4, 38H, 4
        DC8 4FH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x410\\x442\\x440\\x438\\x431\\x443\\x4`:
        DATA
        DC8 10H, 4, 42H, 4, 40H, 4, 38H, 4
        DC8 31H, 4, 43H, 4, 42H, 4, 4BH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x422\\x43e\\x43b\\x44c\\x43a\\x43e\\x2`:
        DATA
        DC8 22H, 4, 3EH, 4, 3BH, 4, 4CH, 4
        DC8 3AH, 4, 3EH, 4, 20H, 0, 47H, 4
        DC8 42H, 4, 35H, 4, 3DH, 4, 38H, 4
        DC8 35H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x421\\x43a\\x440\\x44b\\x442\\x44b\\x4`:
        DATA
        DC8 21H, 4, 3AH, 4, 40H, 4, 4BH, 4
        DC8 42H, 4, 4BH, 4, 39H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x421\\x438\\x441\\x442\\x435\\x43c\\x4`:
        DATA
        DC8 21H, 4, 38H, 4, 41H, 4, 42H, 4
        DC8 35H, 4, 3CH, 4, 3DH, 4, 4BH, 4
        DC8 39H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x410\\x440\\x445\\x438\\x432\\x43d\\x4`:
        DATA
        DC8 10H, 4, 40H, 4, 45H, 4, 38H, 4
        DC8 32H, 4, 3DH, 4, 4BH, 4, 39H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x431\\x440\\x430\\x431\\x430\\x4`:
        DATA
        DC8 1EH, 4, 31H, 4, 40H, 4, 30H, 4
        DC8 31H, 4, 30H, 4, 42H, 4, 4BH, 4
        DC8 32H, 4, 30H, 4, 42H, 4, 4CH, 4
        DC8 20H, 0, 3FH, 4, 3EH, 4, 34H, 4
        DC8 3AH, 4, 30H, 4, 42H, 4, 30H, 4
        DC8 3BH, 4, 3EH, 4, 33H, 4, 38H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x441\\x436\\x430\\x442\\x4`:
        DATA
        DC8 1DH, 4, 35H, 4, 41H, 4, 36H, 4
        DC8 30H, 4, 42H, 4, 4BH, 4, 39H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x421\\x436\\x430\\x442\\x44b\\x439">`:
        DATA
        DC8 21H, 4, 36H, 4, 30H, 4, 42H, 4
        DC8 4BH, 4, 39H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x431\\x449\\x438\\x439\\x20\\x44`:
        DATA
        DC8 1EH, 4, 31H, 4, 49H, 4, 38H, 4
        DC8 39H, 4, 20H, 0, 41H, 4, 36H, 4
        DC8 30H, 4, 42H, 4, 4BH, 4, 39H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x423\\x434\\x430\\x43b\\x438\\x442\\x4_1`:
        DATA
        DC8 23H, 4, 34H, 4, 30H, 4, 3BH, 4
        DC8 38H, 4, 42H, 4, 4CH, 4, 3FH, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41a\\x43e\\x43f\\x438\\x440\\x43e\\x4_2`:
        DATA
        DC8 1AH, 4, 3EH, 4, 3FH, 4, 38H, 4
        DC8 40H, 4, 3EH, 4, 32H, 4, 30H, 4
        DC8 42H, 4, 4CH, 4, 3FH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x435\\x440\\x435\\x43c\\x435\\x2`:
        DATA
        DC8 1FH, 4, 35H, 4, 40H, 4, 35H, 4
        DC8 3CH, 4, 35H, 4, 2DH, 0, 0AH, 0
        DC8 41H, 4, 42H, 4, 38H, 4, 42H, 4
        DC8 4CH, 4, 3FH, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x440\\x435\\x440\\x432\\x430\\x4`:
        DATA
        DC8 1FH, 4, 40H, 4, 35H, 4, 40H, 4
        DC8 32H, 4, 30H, 4, 42H, 4, 4CH, 4
        DC8 3FH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x447\\x438\\x441\\x442\\x438\\x4`:
        DATA
        DC8 1EH, 4, 47H, 4, 38H, 4, 41H, 4
        DC8 42H, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 20H, 0, 31H, 4, 43H, 4, 44H, 4
        DC8 35H, 4, 40H, 4, 3FH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x424\\x430\\x439\\x43b\\x20\\x441\\x44`:
        DATA
        DC8 24H, 4, 30H, 4, 39H, 4, 3BH, 4
        DC8 20H, 0, 41H, 4, 43H, 4, 49H, 4
        DC8 35H, 4, 41H, 4, 42H, 4, 32H, 4
        DC8 43H, 4, 35H, 4, 42H, 4, 2EH, 0
        DC8 20H, 0, 17H, 4, 30H, 4, 3CH, 4
        DC8 35H, 4, 3DH, 4, 38H, 4, 42H, 4
        DC8 4CH, 4, 3FH, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x44b\\x439\\x442\\x438\\x20\\x43`:
        DATA
        DC8 12H, 4, 4BH, 4, 39H, 4, 42H, 4
        DC8 38H, 4, 20H, 0, 38H, 4, 37H, 4
        DC8 20H, 0, 4DH, 0, 43H, 0, 3FH, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x440\\x438\\x43c\\x435\\x43d\\x4`:
        DATA
        DC8 1FH, 4, 40H, 4, 38H, 4, 3CH, 4
        DC8 35H, 4, 3DH, 4, 38H, 4, 42H, 4
        DC8 4CH, 4, 20H, 0, 46H, 4, 32H, 4
        DC8 35H, 4, 42H, 4, 3EH, 4, 32H, 4
        DC8 43H, 4, 4EH, 4, 20H, 0, 41H, 4
        DC8 45H, 4, 35H, 4, 3CH, 4, 43H, 4
        DC8 3FH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x440\\x438\\x43c\\x435\\x43d\\x4_1`:
        DATA
        DC8 1FH, 4, 40H, 4, 38H, 4, 3CH, 4
        DC8 35H, 4, 3DH, 4, 38H, 4, 42H, 4
        DC8 4CH, 4, 20H, 0, 4FH, 4, 37H, 4
        DC8 4BH, 4, 3AH, 4, 3FH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x424\\x430\\x439\\x43b\\x20\\x25\\x73\\`:
        DATA
        DC8 24H, 4, 30H, 4, 39H, 4, 3BH, 4
        DC8 20H, 0, 25H, 0, 73H, 0, 20H, 0
        DC8 42H, 4, 3EH, 4, 3BH, 4, 4CH, 4
        DC8 3AH, 4, 3EH, 4, 20H, 0, 34H, 4
        DC8 3BH, 4, 4FH, 4, 20H, 0, 47H, 4
        DC8 42H, 4, 35H, 4, 3DH, 4, 38H, 4
        DC8 4FH, 4, 2EH, 0, 0AH, 0, 23H, 4
        DC8 34H, 4, 30H, 4, 3BH, 4, 38H, 4
        DC8 42H, 4, 4CH, 4, 3FH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43`:
        DATA
        DC8 1DH, 4, 35H, 4, 20H, 0, 43H, 4
        DC8 34H, 4, 30H, 4, 3BH, 4, 3EH, 4
        DC8 41H, 4, 4CH, 4, 20H, 0, 37H, 4
        DC8 30H, 4, 34H, 4, 30H, 4, 42H, 4
        DC8 4CH, 4, 20H, 0, 30H, 4, 42H, 4
        DC8 40H, 4, 38H, 4, 31H, 4, 43H, 4
        DC8 42H, 4, 4BH, 4, 21H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_1`:
        DATA
        DC8 1DH, 4, 35H, 4, 20H, 0, 43H, 4
        DC8 34H, 4, 30H, 4, 3BH, 4, 3EH, 4
        DC8 41H, 4, 4CH, 4, 20H, 0, 41H, 4
        DC8 3EH, 4, 37H, 4, 34H, 4, 30H, 4
        DC8 42H, 4, 4CH, 4, 20H, 0, 3FH, 4
        DC8 30H, 4, 3FH, 4, 3AH, 4, 43H, 4
        DC8 21H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_2`:
        DATA
        DC8 1DH, 4, 35H, 4, 20H, 0, 43H, 4
        DC8 34H, 4, 30H, 4, 3BH, 4, 3EH, 4
        DC8 41H, 4, 4CH, 4, 20H, 0, 3FH, 4
        DC8 35H, 4, 40H, 4, 35H, 4, 38H, 4
        DC8 3CH, 4, 35H, 4, 2DH, 0, 0AH, 0
        DC8 3DH, 4, 3EH, 4, 32H, 4, 30H, 4
        DC8 42H, 4, 4CH, 4, 21H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_3`:
        DATA
        DC8 1DH, 4, 35H, 4, 20H, 0, 43H, 4
        DC8 34H, 4, 30H, 4, 3BH, 4, 3EH, 4
        DC8 41H, 4, 4CH, 4, 20H, 0, 43H, 4
        DC8 34H, 4, 30H, 4, 3BH, 4, 38H, 4
        DC8 42H, 4, 4CH, 4, 21H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4`:
        DATA
        DC8 1DH, 4, 35H, 4, 32H, 4, 35H, 4
        DC8 40H, 4, 3DH, 4, 3EH, 4, 35H, 4
        DC8 20H, 0, 38H, 4, 3CH, 4, 4FH, 4
        DC8 3AH, 0, 20H, 0, 25H, 0, 6CH, 0
        DC8 73H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4_1`:
        DATA
        DC8 1DH, 4, 35H, 4, 32H, 4, 35H, 4
        DC8 40H, 4, 3DH, 4, 4BH, 4, 39H, 4
        DC8 20H, 0, 34H, 4, 38H, 4, 41H, 4
        DC8 3AH, 4, 21H, 0, 20H, 0, 25H, 0
        DC8 74H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x44b\\x43f\\x43e\\x43b\\x43d\\x4`:
        DATA
        DC8 12H, 4, 4BH, 4, 3FH, 4, 3EH, 4
        DC8 3BH, 4, 3DH, 4, 35H, 4, 3DH, 4
        DC8 3EH, 4, 20H, 0, 41H, 4, 20H, 0
        DC8 3EH, 4, 48H, 4, 38H, 4, 31H, 4
        DC8 3AH, 4, 30H, 4, 3CH, 4, 38H, 4
        DC8 21H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x442\\x20\\x444\\x430\\x43`:
        DATA
        DC8 1DH, 4, 35H, 4, 42H, 4, 20H, 0
        DC8 44H, 4, 30H, 4, 39H, 4, 3BH, 4
        DC8 3EH, 4, 32H, 4, 21H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4_2`:
        DATA
        DC8 1DH, 4, 35H, 4, 32H, 4, 35H, 4
        DC8 40H, 4, 3DH, 4, 3EH, 4, 35H, 4
        DC8 20H, 0, 38H, 4, 3CH, 4, 4FH, 4
        DC8 21H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x448\\x438\\x431\\x43a\\x430\\x2`:
        DATA
        DC8 1EH, 4, 48H, 4, 38H, 4, 31H, 4
        DC8 3AH, 4, 30H, 4, 20H, 0, 3AH, 4
        DC8 3EH, 4, 3DH, 4, 44H, 4, 38H, 4
        DC8 33H, 4, 43H, 4, 40H, 4, 30H, 4
        DC8 46H, 4, 38H, 4, 38H, 4, 20H, 0
        DC8 3AH, 4, 3DH, 4, 3EH, 4, 3FH, 4
        DC8 3EH, 4, 3AH, 4, 21H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x432\\x435\\x440\\x43d\\x4_3`:
        DATA
        DC8 1DH, 4, 35H, 4, 32H, 4, 35H, 4
        DC8 40H, 4, 3DH, 4, 4BH, 4, 39H, 4
        DC8 20H, 0, 44H, 4, 3EH, 4, 40H, 4
        DC8 3CH, 4, 30H, 4, 42H, 4, 20H, 0
        DC8 38H, 4, 3BH, 4, 38H, 4, 20H, 0
        DC8 44H, 4, 30H, 4, 39H, 4, 3BH, 4
        DC8 20H, 0, 3FH, 4, 3EH, 4, 32H, 4
        DC8 40H, 4, 35H, 4, 36H, 4, 34H, 4
        DC8 35H, 4, 3DH, 4, 21H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x20\\x445\\x432\\x430\\x44`:
        DATA
        DC8 1DH, 4, 35H, 4, 20H, 0, 45H, 4
        DC8 32H, 4, 30H, 4, 42H, 4, 30H, 4
        DC8 35H, 4, 42H, 4, 20H, 0, 3FH, 4
        DC8 30H, 4, 3CH, 4, 4FH, 4, 42H, 4
        DC8 38H, 4, 21H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x435\\x20\\x443\\x434\\x430\\x43_4`:
        DATA
        DC8 1DH, 4, 35H, 4, 20H, 0, 43H, 4
        DC8 34H, 4, 30H, 4, 3BH, 4, 3EH, 4
        DC8 41H, 4, 4CH, 4, 20H, 0, 41H, 4
        DC8 3EH, 4, 37H, 4, 34H, 4, 30H, 4
        DC8 42H, 4, 4CH, 4, 20H, 0, 3DH, 4
        DC8 3EH, 4, 32H, 4, 4BH, 4, 39H, 4
        DC8 20H, 0, 44H, 4, 30H, 4, 39H, 4
        DC8 3BH, 4, 21H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x448\\x438\\x431\\x43a\\x430\\x2_1`:
        DATA
        DC8 1EH, 4, 48H, 4, 38H, 4, 31H, 4
        DC8 3AH, 4, 30H, 4, 20H, 0, 5AH, 0
        DC8 69H, 0, 70H, 0, 3AH, 0, 20H, 0
        DC8 25H, 0, 64H, 0, 20H, 0, 32H, 4
        DC8 20H, 0, 25H, 0, 74H, 0, 21H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
mclg_ext:
        DATA
        DC8 6DH, 0, 63H, 0, 6CH, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??getmuiind??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??getmuiind

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??getmuiind
        ARM
??getmuiind:
        MOV      R1,#+0
        B        ??getmuiind_1
??getmuiind_2:
        ADD      R1,R1,#+1
??getmuiind_1:
        CMP      R1,#+95
        BCS      ??getmuiind_3
        LDR      R2,??DataTable5  ;; mui
        LDR      R2,[R2, +R1, LSL #+3]
        CMP      R2,R0
        BNE      ??getmuiind_2
        MOV      R0,R1
        BX       LR
??getmuiind_3:
        MVN      R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??muitxt??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??muitxt

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??muitxt
        ARM
??muitxt:
        CMP      R0,#+0
        BMI      ??muitxt_1
        CMP      R0,#+95
        BCC      ??muitxt_2
??muitxt_1:
        MOV      R0,#+0
        BX       LR
??muitxt_2:
        LDR      R1,??DataTable15  ;; mui_ld
        LDR      R1,[R1, +R0, LSL #+2]
        CMP      R1,#+0
        LDRNE    R1,??DataTable15  ;; mui_ld
        LDRNE    R0,[R1, +R0, LSL #+2]
        BXNE     LR
        LDR      R1,??DataTable5  ;; mui
        ADD      R0,R1,R0, LSL #+3
        LDR      R0,[R0, #+4]
        BX       LR               ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??SaveMUI??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??SaveMUI

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
mui_ld:
        DS8 380
muibuff:
        DS8 4
muibuffsz:
        DS8 4

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??SaveMUI
        ARM
??SaveMUI:
        PUSH     {R4-R10,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R10 Frame(CFA, -8)
        CFI R9 Frame(CFA, -12)
        CFI R8 Frame(CFA, -16)
        CFI R7 Frame(CFA, -20)
        CFI R6 Frame(CFA, -24)
        CFI R5 Frame(CFA, -28)
        CFI R4 Frame(CFA, -32)
        CFI CFA R13+32
        SUB      SP,SP,#+16
        CFI CFA R13+48
        CMP      R0,#+0
        MOVNE    R4,R0
        BNE      ??SaveMUI_1
        LDR      R0,??DataTable6  ;; mcpath
        SWI      +759
        CMP      R0,#+0
        LDREQ    R4,??SaveMUI_2   ;; mui + 768
        CMP      R4,#+0
        POPEQ    {R0-R10,PC}
??SaveMUI_1:
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+75
        MOV      R0,R4
        SWI      +760
        MOVS     R5,R0
        POPMI    {R0-R10,PC}
        LDR      R1,??SaveMUI_2+0x4  ;; mui + 760
        MOV      R4,#+0
        LDR      R1,[R1, #+0]
        MOV      R6,#+0
        STR      R1,[SP, #+0]
        MOV      R1,#+3
        STR      R1,[SP, #+4]
        MOV      R1,#+16
        STR      R1,[SP, #+12]
        B        ??SaveMUI_3
??SaveMUI_4:
        MOV      R0,R6
        BL       ??muitxt
        SWI      +343
        ADD      R0,R0,#+1
        ADD      R4,R0,R4
        ADD      R6,R6,#+1
??SaveMUI_3:
        CMP      R6,#+95
        BCC      ??SaveMUI_4
        LSL      R0,R4,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R6,R0
        MOV      R7,R6
        MOV      R1,#+95
        ORR      R1,R1,R4, LSL #+16
        STR      R1,[SP, #+8]
        MOV      R0,#+380
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R8,R0
        MOV      R9,R8
        MOV      R10,#+0
        B        ??SaveMUI_5
??SaveMUI_6:
        LDR      R0,??DataTable5  ;; mui
        LDR      R0,[R0, +R10, LSL #+3]
        STRH     R0,[R9], #+2
        LSR      R0,R7,#+1
        SUB      R0,R0,R6, LSR #+1
        STRH     R0,[R9], #+2
        MOV      R0,R10
        BL       ??muitxt
        MOV      R1,R0
        MOV      R0,R7
        SWI      +338
        MOV      R0,R10
        BL       ??muitxt
        SWI      +343
        ADD      R0,R7,R0, LSL #+1
        ADD      R7,R0,#+2
        ADD      R10,R10,#+1
??SaveMUI_5:
        CMP      R10,#+95
        BCC      ??SaveMUI_6
        MOV      R2,#+16
        MOV      R1,SP
        MOV      R0,R5
        SWI      +762
        MOV      R2,#+380
        MOV      R1,R8
        MOV      R0,R5
        SWI      +762
        LSL      R2,R4,#+1
        MOV      R1,R6
        MOV      R0,R5
        SWI      +762
        MOV      R0,R8
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,R6
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,R5
        SWI      +765
        POP      {R0-R10,PC}      ;; return
        DATA
??SaveMUI_2:
        DC32     mui + 768
        DC32     mui + 760
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable5:
        DC32     mui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??LoadMUI??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??LoadMUI

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??LoadMUI
        ARM
??LoadMUI:
        PUSH     {R0,R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+40
        SUB      SP,SP,#+28
        CFI CFA R13+68
        MOV      R4,#+0
        MOV      R1,#+0
        STR      R1,[SP, #+8]
        CMP      R0,#+0
        MOVNE    R5,R0
        BNE      ??LoadMUI_1
        LDR      R0,??DataTable6  ;; mcpath
        SWI      +759
        CMP      R0,#+0
        LDREQ    R5,??DataTable16  ;; mui + 768
        CMP      R5,#+0
        BEQ      ??LoadMUI_2
??LoadMUI_1:
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+1
        MOV      R0,R5
        SWI      +760
        STR      R0,[SP, #+0]
        CMP      R0,#+0
        BMI      ??LoadMUI_2
        MOV      R2,#+16
        ADD      R1,SP,#+12
        SWI      +763
        CMP      R0,#+16
        BNE      ??LoadMUI_3
        LDR      R1,??LoadMUI_4   ;; mui + 760
        LDR      R0,[SP, #+12]
        LDR      R1,[R1, #+0]
        CMP      R0,R1
        BNE      ??LoadMUI_5
        LDR      R1,[SP, #+24]
        LDR      R0,[SP, #+0]
        LDR      R8,??DataTable15  ;; mui_ld
        MOV      R2,#+2
        SWI      +764
        LDR      R0,[SP, #+20]
        LSL      R1,R0,#+16
        LSR      R6,R1,#+16
        ASR      R11,R0,#+16
        BL       ??FreeMUI
        LSL      R0,R11,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        STR      R0,[R8, #+380]
        LSL      R0,R11,#+1
        STR      R0,[R8, #+384]
        LSL      R0,R6,#+2
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R5,R0
        LDR      R0,[SP, #+16]
        LSL      R10,R6,#+2
        MOV      R7,R5
        CMP      R0,#+3
        BNE      ??LoadMUI_6
        LDR      R0,[SP, #+0]
        MOV      R2,R10
        MOV      R1,R5
        SWI      +763
        CMP      R0,R10
        BNE      ??LoadMUI_7
        LDR      R0,??DataTable12  ;; mui_ld + 380
        LSL      R2,R11,#+1
        LDR      R1,[R0, #+0]
        LDR      R0,[SP, #+0]
        SWI      +763
        CMP      R0,R11, LSL #+1
        BNE      ??LoadMUI_7
        MOV      R4,#+1
        MOV      R9,#+0
        CMP      R6,#+1
        BLT      ??LoadMUI_8
??LoadMUI_9:
        CMP      R9,R6
        BGE      ??LoadMUI_8
        LDRH     R0,[R7], #+2
        ADD      R9,R9,#+1
        BL       ??getmuiind
        LDRH     R1,[R7], #+2
        LDR      R2,[R8, #+380]
        ADD      R1,R2,R1, LSL #+1
        STR      R1,[R8, +R0, LSL #+2]
        B        ??LoadMUI_9
??LoadMUI_7:
        LDR      R0,[R8, #+380]
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,#+0
        STR      R0,[R8, #+380]
        B        ??LoadMUI_8
??LoadMUI_6:
        CMP      R0,#+2
        BNE      ??LoadMUI_8
        MOV      R0,R11
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R9,R0
        LDR      R0,[SP, #+0]
        MOV      R2,R10
        MOV      R1,R5
        SWI      +763
        CMP      R0,R10
        BNE      ??LoadMUI_10
        LDR      R0,[SP, #+0]
        MOV      R2,R11
        MOV      R1,R9
        SWI      +763
        CMP      R0,R11
        BNE      ??LoadMUI_10
        MOV      R4,#+1
        MOV      R10,#+0
        CMP      R6,#+1
        BLT      ??LoadMUI_11
??LoadMUI_12:
        CMP      R10,R6
        BGE      ??LoadMUI_11
        LDRH     R0,[R7], #+2
        ADD      R10,R10,#+1
        BL       ??getmuiind
        LDR      R2,[R8, #+380]
        MOV      R11,R0
        LDRH     R0,[R7, #+0]
        ADD      R2,R2,R0, LSL #+1
        STR      R2,[SP, #+4]
        ADD      R0,R0,R9
        SWI      +346
        MOV      R2,R0
        LDRH     R0,[R7], #+2
        ADD      R1,R0,R9
        LDR      R0,[SP, #+4]
        _BLF     ??win12512unicode,??win12512unicode??rA
        LDR      R0,[SP, #+4]
        STR      R0,[R8, +R11, LSL #+2]
        B        ??LoadMUI_12
??LoadMUI_10:
        LDR      R0,[R8, #+380]
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,#+0
        STR      R0,[R8, #+380]
??LoadMUI_11:
        MOV      R0,R9
        _BLF     `??operator delete`,`??operator delete??rA`
??LoadMUI_8:
        MOV      R0,R5
        _BLF     `??operator delete`,`??operator delete??rA`
        B        ??LoadMUI_3
??LoadMUI_5:
        MOV      R1,#+1
        STR      R1,[SP, #+8]
??LoadMUI_3:
        LDR      R0,[SP, #+0]
        SWI      +765
        LDR      R0,[SP, #+8]
        CMP      R0,#+0
        BEQ      ??LoadMUI_2
        LDR      R0,[SP, #+28]
        BL       ??LoadMUIold
        MOV      R4,R0
??LoadMUI_2:
        MOV      R0,R4
        ADD      SP,SP,#+32
        CFI CFA R13+36
        POP      {R4-R11,PC}      ;; return
        DATA
??LoadMUI_4:
        DC32     mui + 760
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable6:
        DC32     mcpath

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??freeb??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??freeb

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??freeb
        ARM
??freeb:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        CMP      R0,#+0
        POPEQ    {PC}
        LDR      R1,??freeb_1     ;; mui_ld + 380
        LDR      R1,[R1, #+0]
        CMP      R0,R1
        BLT      ??freeb_2
        LDR      R1,??freeb_1+0x4  ;; mui_ld
        LDR      R2,[R1, #+380]
        LDR      R1,[R1, #+384]
        ADD      R1,R1,R2
        CMP      R0,R1
        POPLT    {PC}
??freeb_2:
        _BLF     `??operator delete`,`??operator delete??rA`
        POP      {PC}             ;; return
        DATA
??freeb_1:
        DC32     mui_ld + 380
        DC32     mui_ld
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??FreeMUI??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??FreeMUI

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??FreeMUI
        ARM
??FreeMUI:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        LDR      R5,??DataTable15  ;; mui_ld
        MOV      R4,#+0
        B        ??FreeMUI_1
??FreeMUI_2:
        LDR      R0,??DataTable15  ;; mui_ld
        LDR      R0,[R0, +R4, LSL #+2]
        CMP      R0,#+0
        BEQ      ??FreeMUI_3
        BL       ??freeb
        MOV      R0,#+0
        STR      R0,[R5, +R4, LSL #+2]
??FreeMUI_3:
        ADD      R4,R4,#+1
??FreeMUI_1:
        CMP      R4,#+95
        BCC      ??FreeMUI_2
        LDR      R0,??DataTable12  ;; mui_ld + 380
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        POPEQ    {R4,R5,PC}
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,#+0
        STR      R0,[R5, #+380]
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable12:
        DC32     mui_ld + 380

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??MUIProc??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??MUIProc

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??MUIProc
        ARM
??MUIProc:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        MOV      R4,R1
        MOV      R7,R2
        MOV      R2,#+10
        MOV      R1,#+0
        _BLF     strtol,??strtol??rA
        BL       ??getmuiind
        MOVS     R5,R0
        POPMI    {R4-R8,PC}
        LDR      R0,??DataTable15  ;; mui_ld
        MOV      R6,#+0
        LDR      R0,[R0, +R5, LSL #+2]
        BL       ??freeb
        MOV      R0,R4
        SWI      +346
        MOV      R8,R0
        CMP      R7,#+0
        BNE      ??MUIProc_1
        ADD      R0,R8,#+1
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R6,R0
        MOV      R2,R8
        MOV      R1,R4
        _BLF     ??win12512unicode,??win12512unicode??rA
        B        ??MUIProc_2
??MUIProc_1:
        MOV      R2,#+0
        MOV      R1,R8
        MOV      R0,R4
        _BLF     ??utf8_to_utf16,??utf8_to_utf16??rA
        CMN      R0,#+1
        BEQ      ??MUIProc_2
        ADD      R0,R0,#+1
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R6,R0
        MOV      R2,R6
        MOV      R1,R8
        MOV      R0,R4
        _BLF     ??utf8_to_utf16,??utf8_to_utf16??rA
        CMN      R0,#+1
        BEQ      ??MUIProc_3
        ADD      R0,R6,R0, LSL #+1
        MOV      R1,#+0
        STRH     R1,[R0, #+0]
        B        ??MUIProc_2
??MUIProc_3:
        MOV      R0,#+0
        STRH     R0,[R6, #+0]
??MUIProc_2:
        LDRH     R1,[R6, #+0]
        MOV      R0,#+0
        MOV      R2,#+10
        CMP      R1,#+0
        BNE      ??MUIProc_4
        LDR      R0,??DataTable15  ;; mui_ld
        STR      R6,[R0, +R5, LSL #+2]
        POP      {R4-R8,PC}
??MUIProc_5:
        ADD      R1,R6,R0, LSL #+1
        LDRH     R1,[R1, #+0]
        CMP      R1,#+94
        ADDEQ    R1,R6,R0, LSL #+1
        STRHEQ   R2,[R1, #+0]
        ADD      R0,R0,#+1
??MUIProc_4:
        ADD      R1,R6,R0, LSL #+1
        LDRH     R1,[R1, #+0]
        CMP      R1,#+0
        BNE      ??MUIProc_5
        LDR      R0,??DataTable15  ;; mui_ld
        STR      R6,[R0, +R5, LSL #+2]
        POP      {R4-R8,PC}       ;; return
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable15:
        DC32     mui_ld

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??LoadMUIold??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??LoadMUIold

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??LoadMUIold
        ARM
??LoadMUIold:
        LDR      R2,??LoadMUIold_1  ;; ??MUIProc
        CMP      R0,#+0
        LDREQ    R0,??DataTable16  ;; mui + 768
        MOVNE    R3,#+0
        MOVEQ    R3,#+1
        MOV      R1,R0
        MOV      R0,R3
        _BF      ??EnumIni,??EnumIni??rA  ;; tailcall
        DATA
??LoadMUIold_1:
        DC32     ??MUIProc
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable16:
        DC32     mui + 768

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new[]??rA`:
        LDR      R12,??Subroutine8_0  ;; `??operator new[]`
        BX       R12
        DATA
??Subroutine8_0:
        DC32     `??operator new[]`
        CFI EndBlock cfiBlock16

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine9_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine9_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon1
        CFI NoFunction
        ARM
??win12512unicode??rA:
        LDR      R12,??Subroutine10_0  ;; ??win12512unicode
        BX       R12
        DATA
??Subroutine10_0:
        DC32     ??win12512unicode
        CFI EndBlock cfiBlock18

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI NoFunction
        ARM
??strtol??rA:
        LDR      R12,??Subroutine11_0  ;; strtol
        BX       R12
        DATA
??Subroutine11_0:
        DC32     strtol
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon1
        CFI NoFunction
        ARM
??utf8_to_utf16??rA:
        LDR      R12,??Subroutine12_0  ;; ??utf8_to_utf16
        BX       R12
        DATA
??Subroutine12_0:
        DC32     ??utf8_to_utf16
        CFI EndBlock cfiBlock20

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI NoFunction
        ARM
??EnumIni??rA:
        LDR      R12,??Subroutine13_0  ;; ??EnumIni
        BX       R12
        DATA
??Subroutine13_0:
        DC32     ??EnumIni
        CFI EndBlock cfiBlock21

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        END
// 
// 1 676 bytes in segment CODE
// 3 420 bytes in segment DATA_C
//   388 bytes in segment DATA_Z
//    12 bytes in segment INITTAB
// 
// 1 572 bytes of CODE  memory (+ 116 bytes shared)
// 3 420 bytes of CONST memory
//   388 bytes of DATA  memory
//
//Errors: none
//Warnings: none
