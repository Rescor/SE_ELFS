##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  22:46:53 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\exts.cpp  #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\exts.cpp  #
#                       -D NDEBUG -D USEZLIB -D OLDFUNCTIONS -lCN            #
#                       Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\L #
#                       ist\ -la Z:\home\perk11\www\perk11.info\svn\SE\mcse\ #
#                       Release\List\ -o Z:\home\perk11\www\perk11.info\svn\ #
#                       SE\mcse\Release\Obj\ -s9 --no_unroll                 #
#                       --no_code_motion --cpu_mode arm --endian little      #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --enable_multibytes --fpu None --eec++               #
#                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8 #
#                       n.h --preinclude Z:\home\perk11\www\perk11.info\svn\ #
#                       SE\mcse\..\deleaker\mem2.h -I                        #
#                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2    #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\L #
#                       ist\exts.lst                                         #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\O #
#                       bj\exts.r79                                          #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\mcse\exts.cpp
      1          #include "inc\exts.h"
      2          #include "inc\mc.h"
      3          

   \                                 In segment CODE, align 4, keep-with-next
      4          wchar_t GetIcon(wchar_t *name, int fattr)
      5          {
   \                     ??GetIcon:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
      6            wchar_t icon;
      7            unsigned short d;
      8            if (fattr&FA_DIRECTORY) return STD_ICONS[ICN_FOLDER];
   \   00000004   400C11E3           TST      R1,#0x4000
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   60009F15           LDRNE    R0,??GetIcon_1   ;; STD_ICONS
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   B000D011           LDRHNE   R0,[R0, #+0]
   \   00000018   3280BD18           POPNE    {R1,R4,R5,PC}
      9            SUB_EXECUTE *data;
     10            FILEITEM *fi=FILEITEM_Create();
   \   0000001C   B30200EF           SWI      +691
   \   00000020   0050A0E1           MOV      R5,R0
     11            FILEITEM_SetFname(fi,name);
   \   00000024   0410A0E1           MOV      R1,R4
   \   00000028   D00200EF           SWI      +720
     12            data=DataBrowser_CreateSubExecute(-1, fi);
   \   0000002C   0510A0E1           MOV      R1,R5
   \   00000030   0000E0E3           MVN      R0,#+0
   \   00000034   CE0200EF           SWI      +718
   \   00000038   0040A0E1           MOV      R4,R0
     13            DataBrowser_ExecuteSubroutine(data,DB_CMD_SETSMALLICON,&d);
   \   0000003C   34009FE5           LDR      R0,??GetIcon_1+0x4  ;; DB_CMD_SETSMALLICON
   \   00000040   0D20A0E1           MOV      R2,SP
   \   00000044   001090E5           LDR      R1,[R0, #+0]
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   CF0200EF           SWI      +719
     14            DataBrowser_ExecuteSubroutine(data,DB_CMD_DESTROY_SUBROUTINE,0);
   \   00000050   24009FE5           LDR      R0,??GetIcon_1+0x8  ;; DB_CMD_DESTROY_SUBROUTINE
   \   00000054   0020A0E3           MOV      R2,#+0
   \   00000058   001090E5           LDR      R1,[R0, #+0]
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   CF0200EF           SWI      +719
     15            FILEITEM_Destroy(fi);
   \   00000064   0500A0E1           MOV      R0,R5
   \   00000068   B40200EF           SWI      +692
     16            icon=d;
     17            return icon;
   \   0000006C   B000DDE1           LDRH     R0,[SP, #+0]
   \   00000070   3280BDE8           POP      {R1,R4,R5,PC}    ;; return
   \                     ??GetIcon_1:
   \   00000074   ........           DC32     STD_ICONS
   \   00000078   ........           DC32     DB_CMD_SETSMALLICON
   \   0000007C   ........           DC32     DB_CMD_DESTROY_SUBROUTINE
     18          }
     19          

   Maximum stack usage in bytes:

     Function                CSTACK
     --------                ------
     GetIcon(wchar_t *, int)    16


   Segment part sizes:

     Function/Label          Bytes
     --------------          -----
     GetIcon(wchar_t *, int)  128
      Others                    4

 
 132 bytes in segment CODE
 
 128 bytes of CODE memory (+ 4 bytes shared)

Errors: none
Warnings: none
