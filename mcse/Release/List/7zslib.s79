//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:45:48 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\7zslib.c /
//                       pp                                                  /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\7zslib.c /
//                       pp -D NDEBUG -D USEZLIB -D OLDFUNCTIONS -lCN        /
//                       Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\ /
//                       List\ -la Z:\home\perk11\www\perk11.info\svn\SE\mcs /
//                       e\Release\List\ -o Z:\home\perk11\www\perk11.info\s /
//                       vn\SE\mcse\Release\Obj\ -s9 --no_unroll             /
//                       --no_code_motion --cpu_mode arm --endian little     /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --enable_multibytes --fpu None --eec++              /
//                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl /
//                       8n.h --preinclude Z:\home\perk11\www\perk11.info\sv /
//                       n\SE\mcse\..\deleaker\mem2.h -I                     /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\ /
//                       List\7zslib.s79                                     /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME `7zslib`

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        MULTWEAK ??AddFile??rA
        PUBLIC ??Close7Z
        FUNCTION ??Close7Z,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??Close7Z??rT
        PUBLIC ??CloseTab7Z
        FUNCTION ??CloseTab7Z,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??CloseTab7Z??rT
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable2 EQU 0
??DataTable3 EQU 0
??DataTable4 EQU 0
??DataTable5 EQU 0
        PUBLIC ??ExtractDir7Z
        FUNCTION ??ExtractDir7Z,0203H
        LOCFRAME CSTACK, 36, STACK
        MULTWEAK ??ExtractDir7Z??rT
        PUBLIC ??ExtractFile7Z
        FUNCTION ??ExtractFile7Z,0203H
        LOCFRAME CSTACK, 548, STACK
        MULTWEAK ??ExtractFile7Z??rT
        PUBLIC ??ExtractFileByID7Z
        FUNCTION ??ExtractFileByID7Z,0203H
        LOCFRAME CSTACK, 100, STACK
        MULTWEAK ??ExtractFileByID7Z??rT
        PUBLIC ??Fill7ZFiles
        FUNCTION ??Fill7ZFiles,0203H
        LOCFRAME CSTACK, 564, STACK
        MULTWEAK ??Fill7ZFiles??rT
        MULTWEAK ??FreeArchInfo??rA
        MULTWEAK ??GetFileExt??rA
        MULTWEAK ??GetFileName??rA
        MULTWEAK ??InitCrcTable??rA
        MULTWEAK ??IsArchiveOpened??rA
        PUBLIC ??IsIt7ZipFile
        FUNCTION ??IsIt7ZipFile,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??IsIt7ZipFile??rT
        PUBLIC ??Open7ZFile
        FUNCTION ??Open7ZFile,0203H
        LOCFRAME CSTACK, 32, STACK
        MULTWEAK ??Open7ZFile??rT
        PUBLIC ??OpenTab7Z
        FUNCTION ??OpenTab7Z,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??OpenTab7Z??rT
        MULTWEAK ??SzArDbExFree??rA
        MULTWEAK ??SzArDbExInit??rA
        MULTWEAK ??SzArchiveOpen??rA
        MULTWEAK ??SzExtract??rA
        PUBLIC ??SzFileReadImp
        FUNCTION ??SzFileReadImp,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??SzFileReadImp??rT
        PUBLIC ??SzFileSeekImp
        FUNCTION ??SzFileSeekImp,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??SzFileSeekImp??rT
        MULTWEAK ??endprogr??rA
        MULTWEAK ??incprogr??rA
        MULTWEAK ??initprogr??rA
        MULTWEAK ??mktree??rA
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new[]??rA`
        MULTWEAK ??utf8_to_utf16??rA
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        












InitCrcTable        SYMBOL "InitCrcTable"
SzArDbExFree        SYMBOL "SzArDbExFree"
SzArDbExInit        SYMBOL "SzArDbExInit"
SzArchiveOpen       SYMBOL "SzArchiveOpen"
SzExtract           SYMBOL "SzExtract"
??AddFile??rA       SYMBOL "??rA", ??AddFile

??Close7Z??rT       SYMBOL "??rT", ??Close7Z

??CloseTab7Z??rT    SYMBOL "??rT", ??CloseTab7Z

??ExtractDir7Z??rT  SYMBOL "??rT", ??ExtractDir7Z

??ExtractFile7Z??rT SYMBOL "??rT", ??ExtractFile7Z

??ExtractFileByID7Z??rT SYMBOL "??rT", ??ExtractFileByID7Z

??Fill7ZFiles??rT   SYMBOL "??rT", ??Fill7ZFiles
??FreeArchInfo??rA  SYMBOL "??rA", ??FreeArchInfo
??GetFileExt??rA    SYMBOL "??rA", ??GetFileExt
??GetFileName??rA   SYMBOL "??rA", ??GetFileName
??InitCrcTable??rA  SYMBOL "??rA", InitCrcTable
??IsArchiveOpened??rA SYMBOL "??rA", ??IsArchiveOpened

??IsIt7ZipFile??rT  SYMBOL "??rT", ??IsIt7ZipFile

??Open7ZFile??rT    SYMBOL "??rT", ??Open7ZFile

??OpenTab7Z??rT     SYMBOL "??rT", ??OpenTab7Z
??SzArDbExFree??rA  SYMBOL "??rA", SzArDbExFree
??SzArDbExInit??rA  SYMBOL "??rA", SzArDbExInit
??SzArchiveOpen??rA SYMBOL "??rA", SzArchiveOpen
??SzExtract??rA     SYMBOL "??rA", SzExtract

??SzFileReadImp??rT SYMBOL "??rT", ??SzFileReadImp

??SzFileSeekImp??rT SYMBOL "??rT", ??SzFileSeekImp
??endprogr??rA      SYMBOL "??rA", ??endprogr
??incprogr??rA      SYMBOL "??rA", ??incprogr
??initprogr??rA     SYMBOL "??rA", ??initprogr
??mktree??rA        SYMBOL "??rA", ??mktree
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new[]??rA` SYMBOL "??rA", `??operator new[]`
??utf8_to_utf16??rA SYMBOL "??rA", ??utf8_to_utf16

        EXTERN ??AddFile
        FUNCTION ??AddFile,0202H
        EXTERN ??FreeArchInfo
        FUNCTION ??FreeArchInfo,0202H
        EXTERN ??GetFileExt
        FUNCTION ??GetFileExt,0202H
        EXTERN ??GetFileName
        FUNCTION ??GetFileName,0202H
        EXTERN ??IsArchiveOpened
        FUNCTION ??IsArchiveOpened,0202H
        EXTERN ??endprogr
        FUNCTION ??endprogr,0202H
        EXTERN ??incprogr
        FUNCTION ??incprogr,0202H
        EXTERN ??initprogr
        FUNCTION ??initprogr,0202H
        EXTERN ??mktree
        FUNCTION ??mktree,0202H
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new[]`
        FUNCTION `??operator new[]`,0202H
        EXTERN ??utf8_to_utf16
        FUNCTION ??utf8_to_utf16,0202H
        EXTERN Busy
        EXTERN CONFIG_7Z_DETECT_BY
        EXTERN InitCrcTable
        FUNCTION InitCrcTable,0202H
        EXTERN SzAlloc
        FUNCTION SzAlloc,0602H
        EXTERN SzAllocTemp
        FUNCTION SzAllocTemp,0602H
        EXTERN SzArDbExFree
        FUNCTION SzArDbExFree,0202H
        EXTERN SzArDbExInit
        FUNCTION SzArDbExInit,0202H
        EXTERN SzArchiveOpen
        FUNCTION SzArchiveOpen,0202H
        EXTERN SzExtract
        FUNCTION SzExtract,0202H
        EXTERN SzFree
        FUNCTION SzFree,0602H
        EXTERN SzFreeTemp
        FUNCTION SzFreeTemp,0602H
        EXTERN _ls_ls
        EXTERN k7zSignature
        EXTERN progr_max
        EXTERN progr_start
        EXTERN tabs


        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 2FH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
_7z_ext:
        DATA
        DC8 37H, 0, 7AH, 0, 0, 0
        DC8 0, 0

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??IsIt7ZipFile??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??IsIt7ZipFile

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??IsIt7ZipFile
        ARM
??IsIt7ZipFile:
        LDR      R1,??IsIt7ZipFile_1  ;; CONFIG_7Z_DETECT_BY
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+8
        CFI CFA R13+16
        LDR      R1,[R1, #+0]
        CMP      R1,#+0
        BEQ      ??IsIt7ZipFile_2
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+1
        SWI      +760
        MOVS     R4,R0
        BMI      ??IsIt7ZipFile_3
        MOV      R2,#+6
        MOV      R1,SP
        SWI      +763
        CMP      R0,#+6
        BNE      ??IsIt7ZipFile_3
        MOV      R0,R4
        SWI      +765
??IsIt7ZipFile_3:
        LDR      R1,??IsIt7ZipFile_1+0x4  ;; k7zSignature
        MOV      R2,#+6
        MOV      R0,SP
        SWI      +637
        CMP      R0,#+0
        BNE      ??IsIt7ZipFile_4
        MOV      R0,#+1
        POP      {R1,R2,R4,PC}
??IsIt7ZipFile_2:
        _BLF     ??GetFileExt,??GetFileExt??rA
        LDR      R1,??IsIt7ZipFile_1+0x8  ;; _7z_ext
        SWI      +671
        CMP      R0,#+0
        MOVEQ    R0,#+1
        POPEQ    {R1,R2,R4,PC}
??IsIt7ZipFile_4:
        MOV      R0,#+0
        POP      {R1,R2,R4,PC}    ;; return
        DATA
??IsIt7ZipFile_1:
        DC32     CONFIG_7Z_DETECT_BY
        DC32     k7zSignature
        DC32     _7z_ext
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??SzFileReadImp??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??SzFileReadImp

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??SzFileReadImp
        ARM
??SzFileReadImp:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        LDR      R0,[R0, #+8]
        MOV      R4,R3
        SWI      +763
        CMP      R4,#+0
        STRNE    R0,[R4, #+0]
        MOV      R0,#+0
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??SzFileSeekImp??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??SzFileSeekImp

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??SzFileSeekImp
        ARM
??SzFileSeekImp:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R0,[R0, #+8]
        MOV      R2,#+2
        SWI      +764
        MOV      R0,#+0
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??Open7ZFile??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??Open7ZFile

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??Open7ZFile
        ARM
??Open7ZFile:
        PUSH     {R4-R10,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R10 Frame(CFA, -8)
        CFI R9 Frame(CFA, -12)
        CFI R8 Frame(CFA, -16)
        CFI R7 Frame(CFA, -20)
        CFI R6 Frame(CFA, -24)
        CFI R5 Frame(CFA, -28)
        CFI R4 Frame(CFA, -32)
        CFI CFA R13+32
        MOV      R4,R0
        MOV      R7,R1
        ADD      R5,R4,#+1040
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+1
        MOV      R0,R7
        SWI      +760
        STR      R0,[R5, #+8]
        ADD      R0,R4,#+516
        MOV      R1,#+0
        STR      R1,[R0, #+516]
        LDR      R0,[R5, #+8]
        CMP      R0,#+0
        MOVMI    R0,#+1
        POPMI    {R4-R10,PC}
        LDR      R0,??Open7ZFile_1  ;; ??SzFileReadImp
        STR      R0,[R5, #+0]
        LDR      R0,??Open7ZFile_1+0x4  ;; ??SzFileSeekImp
        STR      R0,[R5, #+4]
        LDR      R0,??DataTable7  ;; SzAlloc
        STR      R0,[R5, #+12]
        LDR      R0,??DataTable8  ;; SzFree
        STR      R0,[R5, #+16]
        LDR      R0,??DataTable9  ;; SzAllocTemp
        STR      R0,[R5, #+20]
        LDR      R0,??DataTable10  ;; SzFreeTemp
        STR      R0,[R5, #+24]
        _BLF     InitCrcTable,??InitCrcTable??rA
        ADD      R0,R5,#+28
        _BLF     SzArDbExInit,??SzArDbExInit??rA
        ADD      R3,R5,#+20
        ADD      R2,R5,#+12
        ADD      R1,R5,#+28
        MOV      R0,R5
        _BLF     SzArchiveOpen,??SzArchiveOpen??rA
        MOVS     R6,R0
        BNE      ??Open7ZFile_2
        MOV      R0,#+2
        STR      R0,[R4, #+0]
        ADD      R0,R4,#+516
        MOV      R1,#+0
        STRH     R1,[R0, #+0]
        MOV      R1,R7
        ADD      R0,R4,#+4
        SWI      +338
        LDR      R0,[R5, #+52]
        CMP      R0,#+0
        BEQ      ??Open7ZFile_3
        LDR      R1,[R5, #+52]
        ADD      R0,R4,#+516
        STR      R1,[R0, #+516]
        LDR      R0,??Open7ZFile_1+0x8  ;; progr_start
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BNE      ??Open7ZFile_4
        LDR      R0,??Open7ZFile_1+0xC  ;; Busy
        MOV      R1,#+1
        STR      R1,[R0, #+0]
        MOV      R0,#+90
        _BLF     ??initprogr,??initprogr??rA
        LDR      R0,??Open7ZFile_1+0x10  ;; progr_max
        ADD      R1,R4,#+516
        LDR      R1,[R1, #+516]
        MOV      R7,#+1
        STR      R1,[R0, #+0]
        MOV      R0,#+0
        _BLF     ??incprogr,??incprogr??rA
        B        ??Open7ZFile_5
??Open7ZFile_4:
        MOV      R7,#+0
??Open7ZFile_5:
        MOV      R1,#+516
        ADD      R10,R1,R4
        LDR      R0,[R10, #+516]
        LSL      R0,R0,#+2
        _BLF     `??operator new[]`,`??operator new[]??rA`
        STR      R0,[R10, #+512]
        CMP      R0,#+0
        BEQ      ??Open7ZFile_6
        LDR      R0,[R10, #+516]
        MOV      R1,#+0
        LSL      R2,R0,#+2
        LDR      R0,[R10, #+512]
        SWI      +274
??Open7ZFile_6:
        ADD      R0,R4,#+516
        LDR      R0,[R0, #+516]
        MOV      R8,#+0
        CMP      R0,#+1
        BGE      ??Open7ZFile_7
        B        ??Open7ZFile_8
??Open7ZFile_9:
        LDR      R0,[R5, #+56]
        ADD      R9,R0,R8, LSL #+4
        LDR      R0,[R9, #+8]
        SWI      +346
        ADD      R0,R0,#+1
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        LDR      R1,[R10, #+512]
        STR      R0,[R1, +R8, LSL #+2]
        LDR      R0,[R9, #+8]
        SWI      +346
        MOV      R1,R0
        LDR      R0,[R10, #+512]
        LDR      R2,[R0, +R8, LSL #+2]
        LDR      R0,[R9, #+8]
        _BLF     ??utf8_to_utf16,??utf8_to_utf16??rA
        LDR      R1,[R10, #+512]
        CMP      R7,#+0
        LDR      R1,[R1, +R8, LSL #+2]
        ADD      R0,R1,R0, LSL #+1
        MOV      R1,#+0
        STRH     R1,[R0, #+0]
        BEQ      ??Open7ZFile_10
        MOV      R0,#+1
        _BLF     ??incprogr,??incprogr??rA
??Open7ZFile_10:
        ADD      R8,R8,#+1
??Open7ZFile_7:
        ADD      R0,R4,#+516
        LDR      R0,[R0, #+516]
        CMP      R8,R0
        BLT      ??Open7ZFile_9
??Open7ZFile_8:
        CMP      R7,#+0
        BEQ      ??Open7ZFile_3
        _BLF     ??endprogr,??endprogr??rA
        LDR      R0,??Open7ZFile_1+0xC  ;; Busy
        MOV      R1,#+0
        STR      R1,[R0, #+0]
        MOV      R0,R6
        POP      {R4-R10,PC}
??Open7ZFile_2:
        MOV      R0,R4
        BL       ??Close7Z
??Open7ZFile_3:
        MOV      R0,R6
        POP      {R4-R10,PC}      ;; return
        DATA
??Open7ZFile_1:
        DC32     ??SzFileReadImp
        DC32     ??SzFileSeekImp
        DC32     progr_start
        DC32     Busy
        DC32     progr_max
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??Close7Z??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??Close7Z

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??Close7Z
        ARM
??Close7Z:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
        LDR      R0,[R4, #+0]
        CMP      R0,#+2
        POPNE    {R4,R5,PC}
        ADD      R5,R4,#+1040
        LDR      R1,[R5, #+16]
        ADD      R0,R5,#+28
        _BLF     SzArDbExFree,??SzArDbExFree??rA
        LDR      R0,[R5, #+8]
        SWI      +765
        MOV      R0,R4
        _BLF     ??FreeArchInfo,??FreeArchInfo??rA
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??CloseTab7Z??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??CloseTab7Z

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??CloseTab7Z
        ARM
??CloseTab7Z:
        LDR      R1,??DataTable6  ;; tabs
        LDR      R0,[R1, +R0, LSL #+2]
        LDR      R0,[R0, #+2068]
        B        ??Close7Z        ;; tailcall
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??OpenTab7Z??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??OpenTab7Z

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??OpenTab7Z
        ARM
??OpenTab7Z:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R4,R0
        MOV      R5,R1
        MVN      R6,#+0
        _BLF     ??IsArchiveOpened,??IsArchiveOpened??rA
        CMP      R0,#+0
        BNE      ??OpenTab7Z_1
        LDR      R0,??DataTable6  ;; tabs
        MOV      R1,R5
        LDR      R0,[R0, +R4, LSL #+2]
        LDR      R0,[R0, #+2068]
        BL       ??Open7ZFile
        MOV      R6,R0
??OpenTab7Z_1:
        MOV      R0,R6
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??Fill7ZFiles??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??Fill7ZFiles

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??Fill7ZFiles
        ARM
??Fill7ZFiles:
        PUSH     {R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+36
        SUB      SP,SP,#+512
        CFI CFA R13+548
        MOV      R5,R0
        LDRH     R0,[R1, #+0]
        MOV      R9,#+0
        CMP      R0,#+47
        ADDEQ    R4,R1,#+2
        MOVNE    R4,R1
        MOV      R0,R4
        SWI      +343
        MOV      R6,R0
        LDR      R0,??DataTable6  ;; tabs
        LDR      R0,[R0, +R5, LSL #+2]
        LDR      R7,[R0, #+2068]
        LDR      R0,[R7, #+0]
        CMP      R0,#+2
        BNE      ??Fill7ZFiles_1
        ADD      R8,R7,#+1040
        LDR      R0,[R8, #+52]
        MOV      R10,#+0
        CMP      R0,#+0
        BNE      ??Fill7ZFiles_2
??Fill7ZFiles_1:
        MOV      R0,R9
        ADD      SP,SP,#+512
        CFI CFA R13+36
        POP      {R4-R11,PC}      ;; return
        CFI CFA R13+548
??Fill7ZFiles_3:
        PUSH     {R0}
        CFI CFA R13+552
        ADD      R9,R9,#+1
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+556
        PUSH     {R0}
        CFI CFA R13+560
        PUSH     {R1}
        CFI CFA R13+564
        LDR      R3,[R2, #+0]
        MOV      R2,R11
        MOV      R0,R5
        MOV      R1,R10
        _BLF     ??AddFile,??AddFile??rA
        ADD      SP,SP,#+16
        CFI CFA R13+548
??Fill7ZFiles_4:
        ADD      R10,R10,#+1
??Fill7ZFiles_2:
        LDR      R0,[R8, #+52]
        CMP      R10,R0
        BCS      ??Fill7ZFiles_1
        LDR      R0,[R7, #+1028]
        MOV      R2,#+255
        LDR      R1,[R0, +R10, LSL #+2]
        MOV      R0,SP
        SWI      +339
        MOV      R11,SP
        CMP      R6,#+0
        ADREQ    R1,??Fill7ZFiles_5  ;; 0x2F, 0x00, 0x00, 0x00
        MOVEQ    R0,SP
        BEQ      ??Fill7ZFiles_6
        MOV      R0,SP
        ADD      R11,R0,R6, LSL #+1
        MOV      R2,R6
        MOV      R1,R4
        SWI      +666
        CMP      R0,#+0
        LDRHEQ   R0,[R11], #+2
        CMPEQ    R0,#+47
        BNE      ??Fill7ZFiles_4
        LDRH     R0,[R11, #+0]
        CMP      R0,#+0
        BEQ      ??Fill7ZFiles_4
        ADR      R1,??Fill7ZFiles_5  ;; 0x2F, 0x00, 0x00, 0x00
        MOV      R0,R11
??Fill7ZFiles_6:
        SWI      +670
        CMP      R0,#+0
        BEQ      ??Fill7ZFiles_7
        LDRH     R1,[R0, #+2]
        CMP      R1,#+0
        BNE      ??Fill7ZFiles_4
        STRH     R1,[R0, #+0]
??Fill7ZFiles_7:
        LDR      R0,[R8, #+56]
        ADD      R2,R0,R10, LSL #+4
        LDRB     R0,[R2, #+14]
        CMP      R0,#+0
        MOVEQ    R0,#+4
        MOVEQ    R1,#+0
        MOVNE    R0,#+5
        MOVNE    R1,#+16384
        B        ??Fill7ZFiles_3
        DATA
??Fill7ZFiles_5:
        DC8      0x2F, 0x00, 0x00, 0x00
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable6:
        DC32     tabs

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??ExtractFileByID7Z??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE ??ExtractFileByID7Z

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function ??ExtractFileByID7Z
        ARM
??ExtractFileByID7Z:
        PUSH     {R3-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+40
        SUB      SP,SP,#+36
        CFI CFA R13+76
        MOV      R6,R0
        LDR      R0,[R6, #+1028]
        MOV      R7,R1
        LDR      R11,[R0, +R7, LSL #+2]
        MOV      R10,R2
        MOV      R0,#+512
        _BLF     `??operator new[]`,`??operator new[]??rA`
        LDR      R1,[R6, #+1096]
        MOV      R9,#+0
        MOV      R4,R0
        MOV      R5,#+0
        ADD      R1,R1,R7, LSL #+4
        STR      R1,[SP, #+0]
        CMP      R11,#+0
        BNE      ??ExtractFileByID7Z_1
        MOV      R0,#+512
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R5,R0
        LDR      R0,[SP, #+0]
        MOV      R2,R5
        LDR      R0,[R0, #+8]
        MOV      R1,#+255
        _BLF     ??utf8_to_utf16,??utf8_to_utf16??rA
        ADD      R0,R5,R0, LSL #+1
        MOV      R1,#+0
        STRH     R1,[R0, #+0]
        MOV      R11,R5
??ExtractFileByID7Z_1:
        MOV      R0,R11
        _BLF     ??GetFileName,??GetFileName??rA
        MOV      R8,R0
        LDR      R0,[SP, #+0]
        LDRB     R0,[R0, #+14]
        CMP      R0,#+0
        LDR      R0,[SP, #+36]
        BEQ      ??ExtractFileByID7Z_2
        CMP      R0,#+0
        BEQ      ??ExtractFileByID7Z_3
        LDR      R2,??ExtractFileByID7Z_4  ;; _ls_ls
        PUSH     {R11}
        CFI CFA R13+80
        MOV      R3,R10
        MOV      R1,#+255
        MOV      R0,R4
        SWI      +277
        MOV      R0,R4
        _BLF     ??mktree,??mktree??rA
        ADD      SP,SP,#+4
        CFI CFA R13+76
        B        ??ExtractFileByID7Z_3
??ExtractFileByID7Z_2:
        CMP      R0,#+0
        BEQ      ??ExtractFileByID7Z_5
        PUSH     {R11}
        CFI CFA R13+80
        B        ??ExtractFileByID7Z_6
        CFI CFA R13+76
??ExtractFileByID7Z_5:
        PUSH     {R8}
        CFI CFA R13+80
??ExtractFileByID7Z_6:
        LDR      R2,??ExtractFileByID7Z_4  ;; _ls_ls
        MOV      R3,R10
        MOV      R1,#+255
        MOV      R0,R4
        SWI      +277
        ADD      SP,SP,#+4
        CFI CFA R13+76
        MOV      R0,R4
        _BLF     ??GetFileName,??GetFileName??rA
        MOV      R8,R0
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+74
        MOV      R0,R4
        SWI      +760
        MOVS     R10,R0
        BPL      ??ExtractFileByID7Z_7
        LDR      R0,[SP, #+36]
        CMP      R0,#+0
        CMPNE    R8,R4
        BEQ      ??ExtractFileByID7Z_8
        LDRH     R9,[R8, #-2]
        MOV      R0,#+0
        STRH     R0,[R8, #-2]
        MOV      R0,R4
        _BLF     ??mktree,??mktree??rA
        STRH     R9,[R8, #-2]
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+74
        MOV      R0,R4
        SWI      +760
        MOV      R10,R0
??ExtractFileByID7Z_7:
        CMP      R10,#+0
        BPL      ??ExtractFileByID7Z_9
??ExtractFileByID7Z_8:
        MOV      R9,#+3
        B        ??ExtractFileByID7Z_3
??ExtractFileByID7Z_9:
        MVN      R1,#+0
        STR      R1,[SP, #+28]
        LDR      R1,??DataTable7  ;; SzAlloc
        MOV      R0,#+0
        STR      R0,[SP, #+4]
        STR      R0,[SP, #+32]
        STR      R1,[SP, #+12]
        LDR      R1,??DataTable8  ;; SzFree
        ADD      R0,SP,#+20
        STR      R1,[SP, #+16]
        LDR      R1,??DataTable9  ;; SzAllocTemp
        MOV      R2,R7
        STR      R1,[SP, #+20]
        LDR      R1,??DataTable10  ;; SzFreeTemp
        STR      R1,[SP, #+24]
        PUSH     {R0}
        CFI CFA R13+80
        ADD      R0,SP,#+16
        PUSH     {R0}
        CFI CFA R13+84
        ADD      R0,SP,#+16
        PUSH     {R0}
        CFI CFA R13+88
        ADD      R0,SP,#+12
        PUSH     {R0}
        CFI CFA R13+92
        ADD      R0,SP,#+48
        PUSH     {R0}
        CFI CFA R13+96
        ADD      R0,SP,#+24
        PUSH     {R0}
        CFI CFA R13+100
        ADD      R3,SP,#+52
        MOV      R0,#+44
        ORR      R0,R0,#0x400
        ADD      R1,R0,R6
        ADD      R0,R6,#+1040
        _BLF     SzExtract,??SzExtract??rA
        LDR      R1,[SP, #+28]
        LDR      R2,[SP, #+32]
        MOV      R9,R0
        LDR      R0,[SP, #+24]
        ADD      R1,R0,R1
        MOV      R0,R10
        SWI      +762
        MOV      R0,R10
        SWI      +765
        LDR      R0,[SP, #+28]
        LDR      R1,[SP, #+40]
        BLX      R1
        ADD      SP,SP,#+24
        CFI CFA R13+76
??ExtractFileByID7Z_3:
        CMP      R5,#+0
        BEQ      ??ExtractFileByID7Z_10
        MOV      R0,R5
        _BLF     `??operator delete`,`??operator delete??rA`
??ExtractFileByID7Z_10:
        MOV      R0,R4
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,R9
        ADD      SP,SP,#+40
        CFI CFA R13+36
        POP      {R4-R11,PC}      ;; return
        DATA
??ExtractFileByID7Z_4:
        DC32     _ls_ls
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable7:
        DC32     SzAlloc

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable8:
        DC32     SzFree

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable9:
        DC32     SzAllocTemp

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable10:
        DC32     SzFreeTemp

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??ExtractFile7Z??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE ??ExtractFile7Z

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function ??ExtractFile7Z
        ARM
??ExtractFile7Z:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        SUB      SP,SP,#+516
        CFI CFA R13+544
        MOV      R4,R0
        MOV      R5,R2
        MOV      R6,R3
        ADD      R0,SP,#+2
        SWI      +338
        MOV      R1,#+47
        STRH     R1,[SP, #+0]
        LDRH     R0,[SP, #+2]
        MOV      R9,#+0
        CMP      R0,#+47
        ADDEQ    R7,SP,#+4
        ADDEQ    R8,SP,#+2
        ADDNE    R7,SP,#+2
        MOVNE    R8,SP
        B        ??ExtractFile7Z_1
??ExtractFile7Z_2:
        ADD      R9,R9,#+1
??ExtractFile7Z_1:
        LDR      R0,[R4, #+1032]
        CMP      R9,R0
        BGE      ??ExtractFile7Z_3
        LDR      R0,[R4, #+1028]
        LDR      R1,[R0, +R9, LSL #+2]
        MOV      R0,R7
        SWI      +671
        CMP      R0,#+0
        BEQ      ??ExtractFile7Z_4
        LDR      R0,[R4, #+1028]
        LDR      R1,[R0, +R9, LSL #+2]
        MOV      R0,R8
        SWI      +671
        CMP      R0,#+0
        BNE      ??ExtractFile7Z_2
??ExtractFile7Z_4:
        PUSH     {R0}
        CFI CFA R13+548
        MOV      R3,R6
        MOV      R2,R5
        MOV      R1,R9
        MOV      R0,R4
        BL       ??ExtractFileByID7Z
        ADD      SP,SP,#+4
        CFI CFA R13+544
        ADD      SP,SP,#+516
        CFI CFA R13+28
        POP      {R4-R9,PC}
        CFI CFA R13+544
??ExtractFile7Z_3:
        MOV      R0,#+1
        ADD      SP,SP,#+516
        CFI CFA R13+28
        POP      {R4-R9,PC}       ;; return
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??ExtractDir7Z??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE ??ExtractDir7Z

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function ??ExtractDir7Z
        ARM
??ExtractDir7Z:
        PUSH     {R4-R10,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R10 Frame(CFA, -8)
        CFI R9 Frame(CFA, -12)
        CFI R8 Frame(CFA, -16)
        CFI R7 Frame(CFA, -20)
        CFI R6 Frame(CFA, -24)
        CFI R5 Frame(CFA, -28)
        CFI R4 Frame(CFA, -32)
        CFI CFA R13+32
        MOV      R4,R0
        MOV      R7,R1
        MOV      R5,R2
        MOV      R0,#+2
        ORR      R0,R0,#0x200
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R6,R0
        MOV      R1,R7
        ADD      R0,R6,#+2
        SWI      +338
        MOV      R0,#+47
        STRH     R0,[R6, #+0]
        LDRH     R0,[R6, #+2]
        MOV      R10,#+0
        CMP      R0,#+47
        ADDEQ    R7,R6,#+4
        ADDNE    R7,R6,#+2
        MOV      R0,R7
        SWI      +343
        MOV      R9,R0
        LDR      R0,[R4, #+1032]
        SUB      R8,R7,#+2
        CMP      R0,#+1
        BGE      ??ExtractDir7Z_1
        B        ??ExtractDir7Z_2
??ExtractDir7Z_3:
        LDR      R0,[R4, #+1028]
        MOV      R2,R9
        LDR      R1,[R0, +R10, LSL #+2]
        MOV      R0,R7
        SWI      +666
        CMP      R0,#+0
        BEQ      ??ExtractDir7Z_4
        LDR      R0,[R4, #+1028]
        ADD      R2,R9,#+1
        LDR      R1,[R0, +R10, LSL #+2]
        MOV      R0,R8
        SWI      +666
        CMP      R0,#+0
        BNE      ??ExtractDir7Z_5
??ExtractDir7Z_4:
        PUSH     {R0}
        CFI CFA R13+36
        MOV      R3,#+1
        MOV      R2,R5
        MOV      R1,R10
        MOV      R0,R4
        BL       ??ExtractFileByID7Z
        ADD      SP,SP,#+4
        CFI CFA R13+32
??ExtractDir7Z_5:
        ADD      R10,R10,#+1
??ExtractDir7Z_1:
        LDR      R0,[R4, #+1032]
        CMP      R10,R0
        BLT      ??ExtractDir7Z_3
??ExtractDir7Z_2:
        MOV      R0,R6
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,#+0
        POP      {R4-R10,PC}      ;; return
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon1
        CFI NoFunction
        ARM
??GetFileExt??rA:
        LDR      R12,??Subroutine11_0  ;; ??GetFileExt
        BX       R12
        DATA
??Subroutine11_0:
        DC32     ??GetFileExt
        CFI EndBlock cfiBlock22

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI NoFunction
        ARM
??InitCrcTable??rA:
        LDR      R12,??Subroutine12_0  ;; InitCrcTable
        BX       R12
        DATA
??Subroutine12_0:
        DC32     InitCrcTable
        CFI EndBlock cfiBlock23

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon1
        CFI NoFunction
        ARM
??SzArDbExInit??rA:
        LDR      R12,??Subroutine13_0  ;; SzArDbExInit
        BX       R12
        DATA
??Subroutine13_0:
        DC32     SzArDbExInit
        CFI EndBlock cfiBlock24

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI NoFunction
        ARM
??SzArchiveOpen??rA:
        LDR      R12,??Subroutine14_0  ;; SzArchiveOpen
        BX       R12
        DATA
??Subroutine14_0:
        DC32     SzArchiveOpen
        CFI EndBlock cfiBlock25

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock26 Using cfiCommon1
        CFI NoFunction
        ARM
??initprogr??rA:
        LDR      R12,??Subroutine15_0  ;; ??initprogr
        BX       R12
        DATA
??Subroutine15_0:
        DC32     ??initprogr
        CFI EndBlock cfiBlock26

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock27 Using cfiCommon1
        CFI NoFunction
        ARM
??incprogr??rA:
        LDR      R12,??Subroutine16_0  ;; ??incprogr
        BX       R12
        DATA
??Subroutine16_0:
        DC32     ??incprogr
        CFI EndBlock cfiBlock27

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock28 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new[]??rA`:
        LDR      R12,??Subroutine17_0  ;; `??operator new[]`
        BX       R12
        DATA
??Subroutine17_0:
        DC32     `??operator new[]`
        CFI EndBlock cfiBlock28

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock29 Using cfiCommon1
        CFI NoFunction
        ARM
??utf8_to_utf16??rA:
        LDR      R12,??Subroutine18_0  ;; ??utf8_to_utf16
        BX       R12
        DATA
??Subroutine18_0:
        DC32     ??utf8_to_utf16
        CFI EndBlock cfiBlock29

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock30 Using cfiCommon1
        CFI NoFunction
        ARM
??endprogr??rA:
        LDR      R12,??Subroutine19_0  ;; ??endprogr
        BX       R12
        DATA
??Subroutine19_0:
        DC32     ??endprogr
        CFI EndBlock cfiBlock30

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock31 Using cfiCommon1
        CFI NoFunction
        ARM
??SzArDbExFree??rA:
        LDR      R12,??Subroutine20_0  ;; SzArDbExFree
        BX       R12
        DATA
??Subroutine20_0:
        DC32     SzArDbExFree
        CFI EndBlock cfiBlock31

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock32 Using cfiCommon1
        CFI NoFunction
        ARM
??FreeArchInfo??rA:
        LDR      R12,??Subroutine21_0  ;; ??FreeArchInfo
        BX       R12
        DATA
??Subroutine21_0:
        DC32     ??FreeArchInfo
        CFI EndBlock cfiBlock32

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock33 Using cfiCommon1
        CFI NoFunction
        ARM
??IsArchiveOpened??rA:
        LDR      R12,??Subroutine22_0  ;; ??IsArchiveOpened
        BX       R12
        DATA
??Subroutine22_0:
        DC32     ??IsArchiveOpened
        CFI EndBlock cfiBlock33

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock34 Using cfiCommon1
        CFI NoFunction
        ARM
??AddFile??rA:
        LDR      R12,??Subroutine23_0  ;; ??AddFile
        BX       R12
        DATA
??Subroutine23_0:
        DC32     ??AddFile
        CFI EndBlock cfiBlock34

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock35 Using cfiCommon1
        CFI NoFunction
        ARM
??GetFileName??rA:
        LDR      R12,??Subroutine24_0  ;; ??GetFileName
        BX       R12
        DATA
??Subroutine24_0:
        DC32     ??GetFileName
        CFI EndBlock cfiBlock35

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock36 Using cfiCommon1
        CFI NoFunction
        ARM
??mktree??rA:
        LDR      R12,??Subroutine25_0  ;; ??mktree
        BX       R12
        DATA
??Subroutine25_0:
        DC32     ??mktree
        CFI EndBlock cfiBlock36

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock37 Using cfiCommon1
        CFI NoFunction
        ARM
??SzExtract??rA:
        LDR      R12,??Subroutine26_0  ;; SzExtract
        BX       R12
        DATA
??Subroutine26_0:
        DC32     SzExtract
        CFI EndBlock cfiBlock37

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock38 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine27_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine27_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock38

        END
// 
// 2 480 bytes in segment CODE
//    12 bytes in segment DATA_C
// 
// 2 232 bytes of CODE  memory (+ 248 bytes shared)
//    12 bytes of CONST memory
//
//Errors: none
//Warnings: none
