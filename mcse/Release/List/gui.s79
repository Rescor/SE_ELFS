//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:47:13 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\gui.cpp  /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\gui.cpp  /
//                       -D NDEBUG -D USEZLIB -D OLDFUNCTIONS -lCN           /
//                       Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\ /
//                       List\ -la Z:\home\perk11\www\perk11.info\svn\SE\mcs /
//                       e\Release\List\ -o Z:\home\perk11\www\perk11.info\s /
//                       vn\SE\mcse\Release\Obj\ -s9 --no_unroll             /
//                       --no_code_motion --cpu_mode arm --endian little     /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --enable_multibytes --fpu None --eec++              /
//                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl /
//                       8n.h --preinclude Z:\home\perk11\www\perk11.info\sv /
//                       n\SE\mcse\..\deleaker\mem2.h -I                     /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\mcse\Release\ /
//                       List\gui.s79                                        /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME gui

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ??div32_a

??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable10 EQU 0
??DataTable11 EQU 0
??DataTable12 EQU 0
??DataTable13 EQU 0
??DataTable14 EQU 0
??DataTable15 EQU 0
??DataTable16 EQU 0
??DataTable17 EQU 0
??DataTable18 EQU 0
??DataTable2 EQU 0
??DataTable20 EQU 0
??DataTable21 EQU 0
??DataTable22 EQU 0
??DataTable23 EQU 0
??DataTable24 EQU 0
??DataTable25 EQU 0
??DataTable26 EQU 0
??DataTable28 EQU 0
??DataTable29 EQU 0
??DataTable3 EQU 0
??DataTable30 EQU 0
??DataTable31 EQU 0
??DataTable32 EQU 0
??DataTable34 EQU 0
??DataTable35 EQU 0
??DataTable36 EQU 0
??DataTable37 EQU 0
??DataTable38 EQU 0
??DataTable39 EQU 0
??DataTable4 EQU 0
??DataTable41 EQU 0
??DataTable42 EQU 0
??DataTable43 EQU 0
??DataTable44 EQU 0
??DataTable45 EQU 0
??DataTable46 EQU 0
??DataTable47 EQU 0
??DataTable48 EQU 0
??DataTable49 EQU 0
??DataTable5 EQU 0
??DataTable50 EQU 0
??DataTable54 EQU 0
??DataTable55 EQU 0
??DataTable56 EQU 0
??DataTable59 EQU 0
??DataTable6 EQU 0
??DataTable63 EQU 0
??DataTable64 EQU 0
??DataTable65 EQU 0
??DataTable66 EQU 0
??DataTable67 EQU 0
??DataTable68 EQU 0
??DataTable69 EQU 0
??DataTable7 EQU 0
??DataTable70 EQU 0
??DataTable72 EQU 0
??DataTable73 EQU 0
??DataTable74 EQU 0
??DataTable75 EQU 0
??DataTable76 EQU 0
??DataTable77 EQU 0
??DataTable8 EQU 0
??DataTable9 EQU 0
        PUBLIC ??DisableScroll
        FUNCTION ??DisableScroll,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??DisableScroll??rT
        PUBLIC ??DrwCurTab
        FUNCTION ??DrwCurTab,0203H
        LOCFRAME CSTACK, 44, STACK
        MULTWEAK ??DrwCurTab??rT
        PUBLIC ??DrwDrvAc
        FUNCTION ??DrwDrvAc,0203H
        LOCFRAME CSTACK, 56, STACK
        MULTWEAK ??DrwDrvAc??rT
        PUBLIC ??DrwDrvBg
        FUNCTION ??DrwDrvBg,0203H
        LOCFRAME CSTACK, 28, STACK
        MULTWEAK ??DrwDrvBg??rT
        PUBLIC ??DrwFile
        FUNCTION ??DrwFile,0203H
        LOCFRAME CSTACK, 76, STACK
        MULTWEAK ??DrwFile??rT
        PUBLIC ??DrwIndex
        FUNCTION ??DrwIndex,0203H
        LOCFRAME CSTACK, 36, STACK
        MULTWEAK ??DrwIndex??rT
        PUBLIC ??DrwSB
        FUNCTION ??DrwSB,0203H
        LOCFRAME CSTACK, 36, STACK
        MULTWEAK ??DrwSB??rT
        PUBLIC ??DrwSort
        FUNCTION ??DrwSort,0203H
        LOCFRAME CSTACK, 36, STACK
        MULTWEAK ??DrwSort??rT
        MULTWEAK ??EnumChk??rA
        MULTWEAK ??FillFileInfo??rA
        PUBLIC ??GetSBY
        FUNCTION ??GetSBY,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??GetSBY??rT
        PUBLIC ??InitScr
        FUNCTION ??InitScr,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??InitScr??rT
        MULTWEAK ??IsInArchive??rA
        PUBLIC ??ScrollTimerProc
        FUNCTION ??ScrollTimerProc,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??ScrollTimerProc??rT
        PUBLIC ??ShowFiles
        FUNCTION ??ShowFiles,0203H
        LOCFRAME CSTACK, 32, STACK
        MULTWEAK ??ShowFiles??rT
        PUBLIC ??ShowProgr
        FUNCTION ??ShowProgr,0203H
        LOCFRAME CSTACK, 64, STACK
        MULTWEAK ??ShowProgr??rT
        MULTWEAK ??muitxt??rA
        MULTWEAK ??rA??div32_a
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC attr_h
        PUBLIC gui_buf
        PUBLIC head_h
        PUBLIC ico_h
        PUBLIC ico_w
        PUBLIC itm_ch
        PUBLIC itms_bs
        PUBLIC itms_max
        PUBLIC max_scroll_disp
        PUBLIC scr_h
        PUBLIC scr_w
        PUBLIC scroll_disp
        PUBLIC sctm
        PUBLIC txt_h
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        





??DisableScroll??rT SYMBOL "??rT", ??DisableScroll

??DrwCurTab??rT     SYMBOL "??rT", ??DrwCurTab

??DrwDrvAc??rT      SYMBOL "??rT", ??DrwDrvAc

??DrwDrvBg??rT      SYMBOL "??rT", ??DrwDrvBg

??DrwFile??rT       SYMBOL "??rT", ??DrwFile

??DrwIndex??rT      SYMBOL "??rT", ??DrwIndex

??DrwSB??rT         SYMBOL "??rT", ??DrwSB

??DrwSort??rT       SYMBOL "??rT", ??DrwSort
??EnumChk??rA       SYMBOL "??rA", ??EnumChk
??FillFileInfo??rA  SYMBOL "??rA", ??FillFileInfo

??GetSBY??rT        SYMBOL "??rT", ??GetSBY

??InitScr??rT       SYMBOL "??rT", ??InitScr
??IsInArchive??rA   SYMBOL "??rA", ??IsInArchive

??ScrollTimerProc??rT SYMBOL "??rT", ??ScrollTimerProc

??ShowFiles??rT     SYMBOL "??rT", ??ShowFiles

??ShowProgr??rT     SYMBOL "??rT", ??ShowProgr
??muitxt??rA        SYMBOL "??rA", ??muitxt

        EXTERN ??EnumChk
        FUNCTION ??EnumChk,0202H
        EXTERN ??FillFileInfo
        FUNCTION ??FillFileInfo,0202H
        EXTERN ??IsInArchive
        FUNCTION ??IsInArchive,0202H
        EXTERN ??muitxt
        FUNCTION ??muitxt,0202H
        EXTERN CONFIG_FONT_ATTR
        EXTERN CONFIG_FONT_FILES
        EXTERN CONFIG_FONT_HEADER
        EXTERN CONFIG_SCROLL_TEXT_SPEED
        EXTERN CONFIG_SCROLL_TEXT_WAIT
        EXTERN Colors
        EXTERN Drives
        EXTERN FileListBase
        EXTERN RedrawGUI
        EXTERN STD_ICONS
        EXTERN curtab
        EXTERN is_db2010
        EXTERN progr_act
        EXTERN progr_cur
        EXTERN progr_max
        EXTERN progr_start
        EXTERN progrsp_cur
        EXTERN progrsp_max
        EXTERN progrsp_start
        EXTERN tabs


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??InitScr??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??InitScr

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??InitScr
        ARM
??InitScr:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        LDR      R4,??DataTable62  ;; scr_w
        LDR      R6,??InitScr_1   ;; STD_ICONS
        MOV      R0,#+0
        SWI      +601
        STR      R0,[R4, #+0]
        MOV      R0,#+0
        SWI      +600
        STR      R0,[R4, #+4]
        LDR      R0,??DataTable57  ;; CONFIG_FONT_FILES
        LDR      R0,[R0, #+0]
        SWI      +497
        MOV      R5,R0
        MOV      R0,#+65
        SWI      +660
        STR      R0,[R4, #+8]
        LDR      R0,??DataTable33  ;; CONFIG_FONT_HEADER
        LDR      R0,[R0, #+0]
        SWI      +497
        MOV      R0,#+65
        SWI      +660
        STR      R0,[R4, #+12]
        LDR      R0,??DataTable53  ;; CONFIG_FONT_ATTR
        LDR      R0,[R0, #+0]
        SWI      +497
        MOV      R0,#+65
        SWI      +660
        STR      R0,[R4, #+16]
        LDRH     R0,[R6, #+0]
        SWI      +660
        STR      R0,[R4, #+20]
        LDRH     R0,[R6, #+0]
        SWI      +659
        LDR      R1,[R4, #+8]
        STR      R0,[R4, #+24]
        LDR      R0,[R4, #+20]
        SUB      R0,R0,#+2
        CMP      R1,R0
        MOVGE    R0,R1
        STR      R0,[R4, #+28]
        MOV      R0,R5
        SWI      +497
        LDR      R0,[R4, #+28]
        LDR      R1,[R4, #+16]
        ADD      R0,R1,R0
        ADD      R0,R0,#+6
        MOV      R1,#+1
        B        ??InitScr_2
??InitScr_3:
        LDR      R1,[R4, #+28]
        ADD      R1,R1,#+3
        ADD      R0,R1,R0
        LDR      R1,[R4, #+32]
        ADD      R1,R1,#+1
??InitScr_2:
        LDR      R2,[R4, #+4]
        LDR      R3,[R4, #+12]
        STR      R1,[R4, #+32]
        LDR      R1,[R4, #+28]
        SUB      R2,R2,#+1
        ADD      R1,R1,R0
        ADD      R1,R1,#+3
        SUB      R2,R2,R3
        SUB      R2,R2,#+9
        CMP      R1,R2
        BLT      ??InitScr_3
        LDR      R2,[R4, #+32]
        LDR      R1,[R4, #+4]
        MOV      R0,R3
        LDR      R3,[R4, #+28]
        SUB      R1,R1,#+1
        ADD      R3,R3,#+3
        MUL      R2,R3,R2
        SUB      R1,R1,R0
        SUB      R1,R1,#+9
        SUB      R1,R1,R2
        LDR      R2,[R4, #+16]
        SUB      R1,R1,R2
        SUB      R1,R1,#+3
        ADD      R1,R1,R1, LSR #+31
        ADD      R0,R0,R1, ASR #+1
        ADD      R0,R0,#+7
        STR      R0,[R4, #+36]
        POP      {R4-R6,PC}       ;; return
        DATA
??InitScr_1:
        DC32     STD_ICONS
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrwCurTab??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??DrwCurTab

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??DrwCurTab
        ARM
??DrwCurTab:
        LDR      R1,??DataTable62  ;; scr_w
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+8
        CFI CFA R13+20
        MOV      R4,R0
        LDR      R0,[R1, #+12]
        LDR      R1,[R1, #+0]
        MOV      R5,#+252
        SUB      R3,R1,R0
        ORR      R5,R5,#0xFF00
        ADD      R3,R5,R3
        STRH     R3,[SP, #+0]
        MOV      R3,#+2
        STRH     R3,[SP, #+4]
        ORR      R3,R5,#0x1
        LDR      R5,??DataTable51  ;; Colors
        ADD      R1,R3,R1
        STRH     R1,[SP, #+2]
        LDR      R1,[R5, #+72]
        ADD      R0,R0,#+5
        STRH     R0,[SP, #+6]
        MOV      R0,R4
        SWI      +608
        LDR      R1,[R5, #+68]
        MOV      R0,R4
        SWI      +702
        LDR      R0,??DataTable52  ;; is_db2010
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??DrwCurTab_1
        MOV      R0,R4
        SWI      +701
        MOV      R5,R0
        MOV      R0,R4
        SWI      +607
        PUSH     {R5}
        CFI CFA R13+24
        PUSH     {R0}
        CFI CFA R13+28
        LDRH     R3,[SP, #+14]
        LDRH     R2,[SP, #+10]
        LDRH     R1,[SP, #+12]
        LDRH     R0,[SP, #+8]
        SWI      +492
        B        ??DrwCurTab_2
        CFI CFA R13+20
??DrwCurTab_1:
        MOV      R0,#+1
        PUSH     {R0}
        CFI CFA R13+24
        PUSH     {R0}
        CFI CFA R13+28
        MOV      R3,#+4
        MOV      R2,#+4
        ADD      R1,SP,#+8
        MOV      R0,R4
        SWI      +703
??DrwCurTab_2:
        LDR      R0,??DataTable33  ;; CONFIG_FONT_HEADER
        ADD      SP,SP,#+8
        CFI CFA R13+20
        LDR      R0,[R0, #+0]
        MOV      R4,#+49
        SWI      +497
        LDR      R1,??DataTable62  ;; scr_w
        MOV      R2,#+0
        LDR      R0,[R1, #+12]
        LDR      R1,[R1, #+0]
        PUSH     {R2}
        CFI CFA R13+24
        LDR      R2,??DataTable40  ;; Colors + 60
        SUB      R1,R1,#+2
        LDR      R2,[R2, #+0]
        SUB      R1,R1,R0
        PUSH     {R2}
        CFI CFA R13+28
        MOV      R3,#+4
        ORR      R4,R4,#0x78000000
        MOV      R2,#+0
        PUSH     {R2}
        CFI CFA R13+32
        PUSH     {R2}
        CFI CFA R13+36
        ADD      R2,R0,#+7
        PUSH     {R2}
        CFI CFA R13+40
        ADD      R0,R0,R1
        SUB      R0,R0,#+2
        PUSH     {R0}
        CFI CFA R13+44
        LDR      R0,??DataTable58  ;; curtab
        SUB      R2,R1,#+2
        LDR      R0,[R0, #+0]
        MOV      R1,#+2
        ADD      R0,R4,R0
        SWI      +493
        ADD      SP,SP,#+32
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrwDrvBg??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??DrwDrvBg

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??DrwDrvBg
        ARM
??DrwDrvBg:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        LDR      R5,??DataTable51  ;; Colors
        MOV      R4,R1
        MOV      R1,#+2
        ADD      R0,R1,R0, LSL #+1
        LDR      R1,??DataTable19  ;; scr_w + 12
        SUB      SP,SP,#+8
        CFI CFA R13+20
        LDR      R1,[R1, #+0]
        STRH     R0,[SP, #+0]
        MOV      R2,#+2
        STRH     R2,[SP, #+4]
        RSB      R2,R1,R1, LSL #+3
        ADD      R2,R2,R2, LSR #+31
        ASR      R2,R2,#+1
        ADD      R0,R2,R0
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        ADD      R0,R2,R0
        STRH     R0,[SP, #+2]
        ADD      R1,R1,#+5
        STRH     R1,[SP, #+6]
        LDR      R1,[R5, #+80]
        MOV      R0,R4
        SWI      +608
        LDR      R1,[R5, #+76]
        MOV      R0,R4
        SWI      +702
        LDR      R0,??DataTable52  ;; is_db2010
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??DrwDrvBg_1
        MOV      R0,R4
        SWI      +701
        MOV      R5,R0
        MOV      R0,R4
        SWI      +607
        PUSH     {R5}
        CFI CFA R13+24
        PUSH     {R0}
        CFI CFA R13+28
        LDRH     R3,[SP, #+14]
        LDRH     R2,[SP, #+10]
        LDRH     R1,[SP, #+12]
        LDRH     R0,[SP, #+8]
        SWI      +492
        ADD      SP,SP,#+8
        CFI CFA R13+20
        POP      {R0,R1,R4,R5,PC}
??DrwDrvBg_1:
        MOV      R0,#+1
        PUSH     {R0}
        CFI CFA R13+24
        PUSH     {R0}
        CFI CFA R13+28
        MOV      R3,#+4
        MOV      R2,#+4
        ADD      R1,SP,#+8
        MOV      R0,R4
        SWI      +703
        ADD      SP,SP,#+8
        CFI CFA R13+20
        POP      {R0,R1,R4,R5,PC}  ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrwSort??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??DrwSort

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x25\\x64\\x28\\x25\\x64\\x29">`:
        DATA
        DC8 25H, 0, 64H, 0, 28H, 0, 25H, 0
        DC8 64H, 0, 29H, 0, 0, 0
        DC8 0, 0
        DC8 25H, 0, 64H, 0, 2FH, 0, 25H, 0
        DC8 64H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x5a\\x49\\x50">`:
        DATA
        DC8 5AH, 0, 49H, 0, 50H, 0, 0, 0
        DC8 37H, 0, 5AH, 0, 0, 0
        DC8 0, 0
        DC8 4DH, 0, 43H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x25\\x6c\\x73\\x3a\\x20">`:
        DATA
        DC8 25H, 0, 6CH, 0, 73H, 0, 3AH, 0
        DC8 20H, 0, 0, 0
        DC8 25H, 0, 64H, 0, 25H, 0, 25H, 0
        DC8 20H, 0, 25H, 0, 64H, 0, 2FH, 0
        DC8 25H, 0, 64H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
stn:
        DATA
        DC8 110, 101, 115, 100, 63, 0, 0, 0

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??DrwSort
        ARM
??DrwSort:
        LDR      R0,??DataTable58  ;; curtab
        LDR      R1,??DataTable78  ;; tabs
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        LDR      R0,[R0, #+0]
        LDR      R0,[R1, +R0, LSL #+2]
        LDR      R1,??DrwSort_1   ;; stn
        LDRSH    R0,[R0, #+2]
        AND      R0,R0,#0xF
        CMP      R0,#+4
        MOVGE    R0,#+4
        LDRB     R4,[R0, +R1]
        LDR      R0,??DataTable58  ;; curtab
        LDR      R1,??DataTable78  ;; tabs
        LDR      R0,[R0, #+0]
        LDR      R0,[R1, +R0, LSL #+2]
        LDRH     R0,[R0, #+2]
        TST      R0,#0x100
        LDR      R0,??DataTable33  ;; CONFIG_FONT_HEADER
        ADDNE    R4,R4,#+224
        LDR      R0,[R0, #+0]
        ANDNE    R4,R4,#0xFF
        SWI      +497
        LDR      R0,??DataTable19  ;; scr_w + 12
        MOV      R2,#+0
        LDR      R0,[R0, #+0]
        PUSH     {R2}
        CFI CFA R13+16
        LDR      R2,??DataTable27  ;; Colors + 52
        RSB      R5,R0,R0, LSL #+3
        LDR      R2,[R2, #+0]
        ADD      R1,R5,R5, LSR #+31
        PUSH     {R2}
        CFI CFA R13+20
        ASR      R1,R1,#+1
        MOV      R3,#+4
        MOV      R2,#+0
        PUSH     {R2}
        CFI CFA R13+24
        PUSH     {R2}
        CFI CFA R13+28
        ADD      R2,R0,#+7
        PUSH     {R2}
        CFI CFA R13+32
        ADD      R0,R0,R1
        ADD      R0,R0,#+10
        PUSH     {R0}
        CFI CFA R13+36
        ADD      R2,R1,#+8
        MOV      R1,#+0
        ADD      R0,R4,#+2013265920
        SWI      +493
        ADD      SP,SP,#+24
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        DATA
??DrwSort_1:
        DC32     stn
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable19:
        DC32     scr_w + 12

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrwIndex??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??DrwIndex

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??DrwIndex
        ARM
??DrwIndex:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R1,#+0
        MOV      R0,#+0
        _BLF     ??EnumChk,??EnumChk??rA
        CMP      R0,#+0
        BEQ      ??DrwIndex_1
        LDR      R1,??DataTable58  ;; curtab
        LDR      R2,??DataTable78  ;; tabs
        LDR      R1,[R1, #+0]
        MOV      R3,R0
        LDR      R1,[R2, +R1, LSL #+2]
        LDR      R2,??DrwIndex_2  ;; `?<Constant L"\\x25\\x64\\x28\\x25\\x64\\x29">`
        LDRSH    R1,[R1, #+0]
        PUSH     {R1}
        CFI CFA R13+16
        B        ??DrwIndex_3
        CFI CFA R13+12
??DrwIndex_1:
        LDR      R0,??DataTable58  ;; curtab
        LDR      R1,??DataTable78  ;; tabs
        LDR      R0,[R0, #+0]
        LDR      R2,??DrwIndex_2+0x4  ;; `?<Constant L"\\x25\\x64\\x28\\x25\\x64\\x29">` + 16
        LDR      R0,[R1, +R0, LSL #+2]
        LDRSH    R1,[R0, #+0]
        PUSH     {R1}
        CFI CFA R13+16
        LDRSH    R1,[R0, #+4]
        ADD      R0,R0,R1, LSL #+1
        LDRSH    R0,[R0, #+6]
        ADD      R3,R0,#+1
??DrwIndex_3:
        LDR      R0,??DrwIndex_2+0x8  ;; scr_w + 52
        LDR      R4,??DataTable62  ;; scr_w
        MOV      R1,#+255
        ORR      R1,R1,#0x100
        SWI      +277
        ADD      SP,SP,#+4
        CFI CFA R13+12
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,R4,#+52
        SWI      +349
        MOV      R5,R0
        LDR      R0,??DataTable33  ;; CONFIG_FONT_HEADER
        LDR      R0,[R0, #+0]
        SWI      +497
        LDR      R0,[R4, #+12]
        MOV      R2,#+0
        PUSH     {R2}
        CFI CFA R13+16
        LDR      R2,??DataTable27  ;; Colors + 52
        RSB      R1,R0,R0, LSL #+3
        LDR      R2,[R2, #+0]
        MOV      R3,#+4
        PUSH     {R2}
        CFI CFA R13+20
        ADD      R1,R1,R1, LSR #+31
        MOV      R2,#+0
        PUSH     {R2}
        CFI CFA R13+24
        PUSH     {R2}
        CFI CFA R13+28
        ADD      R2,R0,#+7
        PUSH     {R2}
        CFI CFA R13+32
        LDR      R2,[R4, #+0]
        SUB      R2,R2,#+2
        SUB      R2,R2,R0
        SUB      R2,R2,#+5
        PUSH     {R2}
        CFI CFA R13+36
        ADD      R0,R0,R1, ASR #+1
        MOV      R1,#+2
        ADD      R2,R0,#+10
        MOV      R0,R5
        SWI      +493
        MOV      R0,R5
        SWI      +353
        ADD      SP,SP,#+24
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        DATA
??DrwIndex_2:
        DC32     `?<Constant L"\\x25\\x64\\x28\\x25\\x64\\x29">`
        DC32     `?<Constant L"\\x25\\x64\\x28\\x25\\x64\\x29">` + 16
        DC32     scr_w + 52
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable27:
        DC32     Colors + 52

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??GetSBY??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??GetSBY

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??GetSBY
        ARM
??GetSBY:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        CMP      R2,#+2
        MOVLT    R0,#+0
        POPLT    {PC}
        LDR      R0,??DataTable71  ;; scr_w
        LDR      R3,[R0, #+4]
        LDR      R0,[R0, #+12]
        SUB      R3,R3,#+1
        SUB      R0,R3,R0
        SUB      R3,R0,#+9
        SUB      R0,R0,#+7
        SUB      R0,R3,R0, ASR #+4
        ADD      R0,R0,#+1
        MUL      R0,R1,R0
        SUB      R1,R2,#+1
        _BLF     ??div32_a,??rA??div32_a
        MOV      R0,R1
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrwSB??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??DrwSB

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??DrwSB
        ARM
??DrwSB:
        LDR      R2,??DataTable78  ;; tabs
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        LDR      R5,??DataTable62  ;; scr_w
        LDR      R7,??DataTable51  ;; Colors
        MOV      R8,R0
        MOV      R0,R1
        LDR      R1,??DataTable58  ;; curtab
        LDR      R1,[R1, #+0]
        LDR      R1,[R2, +R1, LSL #+2]
        LDRSH    R2,[R1, #+0]
        LDRSH    R3,[R1, #+4]
        ADD      R1,R1,R3, LSL #+1
        LDRSH    R1,[R1, #+6]
        BL       ??GetSBY
        LDR      R1,[R5, #+12]
        ADD      R0,R0,R1
        LDR      R1,[R7, #+116]
        ADD      R6,R0,#+8
        MOV      R0,R8
        SWI      +608
        LDR      R0,[R5, #+0]
        LDR      R2,[R5, #+4]
        ADD      R1,R0,R0, LSL #+1
        ASR      R4,R1,#+7
        SUB      R0,R0,#+2
        SUB      R0,R0,R4
        ADD      R1,R4,R4, LSR #+31
        ADD      R1,R0,R1, ASR #+1
        LDR      R0,[R5, #+12]
        MOV      R3,R1
        ADD      R2,R2,R0
        ADD      R2,R2,#+6
        SUB      R2,R2,R0
        SUB      R2,R2,#+10
        PUSH     {R2}
        CFI CFA R13+28
        ADD      R2,R0,#+9
        MOV      R0,R8
        SWI      +610
        LDR      R2,[R7, #+116]
        LDR      R0,[R5, #+0]
        MOV      R3,R2
        PUSH     {R3}
        CFI CFA R13+32
        PUSH     {R2}
        CFI CFA R13+36
        LDR      R2,[R5, #+4]
        LDR      R3,[R5, #+12]
        ADD      R1,R0,R0, LSL #+1
        ASR      R1,R1,#+7
        SUB      R0,R0,#+2
        SUB      R0,R0,R1
        SUB      R2,R2,#+1
        SUB      R2,R2,R3
        SUB      R2,R2,#+7
        ADD      R2,R6,R2, ASR #+4
        SUB      R3,R2,#+1
        ADD      R1,R1,R0
        SUB      R2,R1,#+1
        MOV      R1,R6
        SWI      +492
        POP      {R0-R2,R4-R8,PC}  ;; return
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrwDrvAc??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??DrwDrvAc

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??DrwDrvAc
        ARM
??DrwDrvAc:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        MOV      R5,R0
        LDR      R0,??DataTable33  ;; CONFIG_FONT_HEADER
        SUB      SP,SP,#+8
        CFI CFA R13+32
        LDR      R0,[R0, #+0]
        MOV      R4,R1
        MOV      R7,R2
        SWI      +497
        LDR      R0,??DataTable58  ;; curtab
        LDR      R0,[R0, #+0]
        CMP      R0,#+2
        BGE      ??DrwDrvAc_1
        MOV      R0,#+2
        ADD      R8,R0,R5, LSL #+1
        _BLF     ??IsInArchive,??IsInArchive??rA
        CMP      R0,#+1
        LDREQ    R6,??DrwDrvAc_2  ;; `?<Constant L"\\x5a\\x49\\x50">`
        BEQ      ??DrwDrvAc_3
        _BLF     ??IsInArchive,??IsInArchive??rA
        CMP      R0,#+2
        LDREQ    R6,??DrwDrvAc_2+0x4  ;; `?<Constant L"\\x5a\\x49\\x50">` + 8
        BEQ      ??DrwDrvAc_3
        LDR      R1,??DrwDrvAc_2+0x8  ;; Drives
        MOV      R0,#+24
        MLA      R1,R0,R5,R1
        ADD      R6,R1,#+4
        B        ??DrwDrvAc_3
??DrwDrvAc_1:
        LDR      R0,??DataTable58  ;; curtab
        LDR      R0,[R0, #+0]
        CMP      R0,#+2
        LDREQ    R6,??DrwDrvAc_2+0xC  ;; `?<Constant L"\\x5a\\x49\\x50">` + 16
        MOVEQ    R8,#+2
??DrwDrvAc_3:
        MOV      R5,#+255
        ORR      R5,R5,#0xFF00
        MOV      R2,R5
        MOV      R1,#+0
        MOV      R0,R6
        SWI      +349
        MOV      R6,R0
        LDRH     R0,[R7, #+0]
        MOV      R1,#+2
        ADD      R7,R0,R8
        LDR      R0,??DataTable71  ;; scr_w
        STRH     R7,[SP, #+0]
        STRH     R1,[SP, #+4]
        LDR      R0,[R0, #+12]
        RSB      R1,R0,R0, LSL #+3
        ADD      R1,R1,R1, LSR #+31
        ASR      R1,R1,#+1
        ADD      R1,R1,R7
        ADD      R1,R5,R1
        LDR      R5,??DataTable51  ;; Colors
        STRH     R1,[SP, #+2]
        ADD      R0,R0,#+5
        STRH     R0,[SP, #+6]
        LDR      R1,[R5, #+72]
        MOV      R0,R4
        SWI      +608
        LDR      R1,[R5, #+68]
        MOV      R0,R4
        SWI      +702
        LDR      R0,??DataTable52  ;; is_db2010
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??DrwDrvAc_4
        MOV      R0,R4
        SWI      +701
        MOV      R5,R0
        MOV      R0,R4
        SWI      +607
        PUSH     {R5}
        CFI CFA R13+36
        PUSH     {R0}
        CFI CFA R13+40
        LDRH     R3,[SP, #+14]
        LDRH     R2,[SP, #+10]
        LDRH     R1,[SP, #+12]
        LDRH     R0,[SP, #+8]
        SWI      +492
        B        ??DrwDrvAc_5
        CFI CFA R13+32
??DrwDrvAc_4:
        MOV      R0,#+1
        PUSH     {R0}
        CFI CFA R13+36
        PUSH     {R0}
        CFI CFA R13+40
        MOV      R3,#+4
        MOV      R2,#+4
        ADD      R1,SP,#+8
        MOV      R0,R4
        SWI      +703
??DrwDrvAc_5:
        LDR      R0,??DataTable71  ;; scr_w
        ADD      SP,SP,#+8
        CFI CFA R13+32
        LDR      R0,[R0, #+12]
        MOV      R2,#+0
        PUSH     {R2}
        CFI CFA R13+36
        LDR      R2,??DataTable40  ;; Colors + 60
        RSB      R1,R0,R0, LSL #+3
        LDR      R2,[R2, #+0]
        ADD      R0,R0,#+7
        PUSH     {R2}
        CFI CFA R13+40
        MOV      R3,#+4
        MOV      R2,#+0
        PUSH     {R2}
        CFI CFA R13+44
        PUSH     {R2}
        CFI CFA R13+48
        PUSH     {R0}
        CFI CFA R13+52
        ADD      R0,R1,R1, LSR #+31
        ADD      R2,R7,#+1
        MOV      R1,#+2
        ADD      R0,R7,R0, ASR #+1
        SUB      R0,R0,#+2
        PUSH     {R0}
        CFI CFA R13+56
        MOV      R0,R6
        SWI      +493
        MOV      R0,R6
        SWI      +353
        ADD      SP,SP,#+32
        CFI CFA R13+24
        POP      {R4-R8,PC}       ;; return
        DATA
??DrwDrvAc_2:
        DC32     `?<Constant L"\\x5a\\x49\\x50">`
        DC32     `?<Constant L"\\x5a\\x49\\x50">` + 8
        DC32     Drives
        DC32     `?<Constant L"\\x5a\\x49\\x50">` + 16
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable33:
        DC32     CONFIG_FONT_HEADER

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable40:
        DC32     Colors + 60

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??ScrollTimerProc??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE ??ScrollTimerProc

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
scr_w:
        DS8 4
scr_h:
        DS8 4
txt_h:
        DS8 4
head_h:
        DS8 4
attr_h:
        DS8 4
ico_h:
        DS8 4
ico_w:
        DS8 4
itm_ch:
        DS8 4
itms_max:
        DS8 4
itms_bs:
        DS8 4
max_scroll_disp:
        DS8 4
scroll_disp:
        DS8 4
sctm:
        DS8 2
        DS8 2
gui_buf:
        DS8 1024

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function ??ScrollTimerProc
        ARM
??ScrollTimerProc:
        LDR      R0,??DataTable60  ;; CONFIG_SCROLL_TEXT_SPEED
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R1,[R0, #+0]
        LDR      R0,??DataTable71  ;; scr_w
        LDR      R2,[R0, #+40]
        LDR      R3,[R0, #+44]
        CMP      R2,#+0
        BEQ      ??ScrollTimerProc_1
        CMP      R3,R2
        MOVGE    R3,#+0
        BGE      ??ScrollTimerProc_1
        ADD      R3,R3,#+1
        CMP      R3,R2
        LDREQ    R0,??ScrollTimerProc_2  ;; CONFIG_SCROLL_TEXT_WAIT
        LDREQ    R1,[R0, #+0]
??ScrollTimerProc_1:
        LDR      R0,??DataTable71  ;; scr_w
        LDR      R2,??ScrollTimerProc_2+0x4  ;; RedrawGUI
        STR      R3,[R0, #+44]
        MOV      R3,#+1
        STR      R3,[R2, #+0]
        LDR      R2,??DataTable61  ;; ??ScrollTimerProc
        MOV      R3,#+0
        ADD      R0,R0,#+48
        SWI      +296
        POP      {PC}             ;; return
        DATA
??ScrollTimerProc_2:
        DC32     CONFIG_SCROLL_TEXT_WAIT
        DC32     RedrawGUI
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??DisableScroll??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE ??DisableScroll

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function ??DisableScroll
        ARM
??DisableScroll:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        LDR      R4,??DataTable71  ;; scr_w
        ADD      R0,R4,#+48
        SWI      +298
        MOV      R0,#+0
        STR      R0,[R4, #+40]
        STR      R0,[R4, #+44]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrwFile??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE ??DrwFile

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function ??DrwFile
        ARM
??DrwFile:
        LDR      R1,??DataTable78  ;; tabs
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        MOV      R4,R0
        LDR      R0,??DataTable58  ;; curtab
        SUB      SP,SP,#+24
        CFI CFA R13+52
        LDR      R0,[R0, #+0]
        MOV      R8,R2
        ADD      R0,R1,R0, LSL #+2
        LDR      R0,[R0, #+0]
        LDRSH    R1,[R0, #+4]
        LDRSH    R2,[R0, #+4]
        MOV      R7,R3
        ADD      R1,R0,R1, LSL #+1
        LDRSH    R1,[R1, #+6]
        ADD      R0,R0,R2, LSL #+1
        LDRSH    R0,[R0, #+12]
        SUB      R0,R1,R0
        CMP      R0,R8
        BGE      ??DrwFile_1
        LDR      R0,??DrwFile_2   ;; scr_w + 16
        LDR      R0,[R0, #+0]
        ADD      R0,R0,#+3
        B        ??DrwFile_3
??DrwFile_1:
        MOV      R0,#+0
??DrwFile_3:
        LDR      R6,??DataTable62  ;; scr_w
        LDR      R1,[R6, #+36]
        LDR      R2,[R6, #+28]
        ADD      R2,R2,#+3
        MLA      R1,R2,R8,R1
        ADD      R5,R0,R1
        LDR      R0,??DataTable58  ;; curtab
        LDR      R1,??DataTable78  ;; tabs
        LDR      R0,[R0, #+0]
        ADD      R0,R1,R0, LSL #+2
        LDR      R0,[R0, #+0]
        LDRSH    R1,[R0, #+4]
        LDRSH    R2,[R0, #+4]
        ADD      R1,R0,R1, LSL #+1
        LDRSH    R1,[R1, #+6]
        ADD      R0,R0,R2, LSL #+1
        LDRSH    R0,[R0, #+12]
        SUB      R0,R1,R0
        CMP      R8,R0
        BNE      ??DrwFile_4
        LDR      R0,[R6, #+0]
        MOV      R1,#+2
        SUB      R2,R0,#+2
        ADD      R0,R0,R0, LSL #+1
        SUB      R0,R2,R0, ASR #+7
        LDR      R2,[R6, #+28]
        STRH     R1,[SP, #+0]
        ADD      R1,R2,R5
        LDR      R2,[R6, #+16]
        LDR      R6,??DataTable51  ;; Colors
        STRH     R5,[SP, #+4]
        STRH     R0,[SP, #+2]
        ADD      R1,R2,R1
        ADD      R1,R1,#+5
        STRH     R1,[SP, #+6]
        LDR      R1,[R6, #+20]
        MOV      R0,R4
        SWI      +608
        LDR      R1,[R6, #+16]
        MOV      R0,R4
        SWI      +702
        LDR      R0,??DataTable52  ;; is_db2010
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??DrwFile_5
        MOV      R0,R4
        SWI      +701
        MOV      R6,R0
        MOV      R0,R4
        SWI      +607
        PUSH     {R6}
        CFI CFA R13+56
        PUSH     {R0}
        CFI CFA R13+60
        LDRH     R3,[SP, #+14]
        LDRH     R2,[SP, #+10]
        LDRH     R1,[SP, #+12]
        LDRH     R0,[SP, #+8]
        SWI      +492
        B        ??DrwFile_6
        CFI CFA R13+52
??DrwFile_5:
        MOV      R0,#+1
        PUSH     {R0}
        CFI CFA R13+56
        PUSH     {R0}
        CFI CFA R13+60
        MOV      R3,#+4
        MOV      R2,#+4
        ADD      R1,SP,#+8
        MOV      R0,R4
        SWI      +703
??DrwFile_6:
        LDR      R0,??DataTable53  ;; CONFIG_FONT_ATTR
        LDR      R6,??DataTable62  ;; scr_w
        ADD      SP,SP,#+8
        CFI CFA R13+52
        LDR      R0,[R0, #+0]
        SWI      +497
        LDR      R2,[R6, #+28]
        LDR      R0,[R6, #+36]
        ADD      R1,R8,#+1
        ADD      R2,R2,#+3
        MLA      R9,R2,R1,R0
        LDRH     R0,[R7, #+8]
        TST      R0,#0x4000
        BNE      ??DrwFile_7
        LDR      R0,[R7, #+48]
        MVN      R1,#-1879048192
        CMP      R0,R1
        BEQ      ??DrwFile_8
        LDR      R0,[R6, #+0]
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+56
        LDR      R1,??DrwFile_2+0x4  ;; Colors + 48
        ADD      R3,R9,#+2
        LDR      R1,[R1, #+0]
        PUSH     {R1}
        CFI CFA R13+60
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+64
        PUSH     {R1}
        CFI CFA R13+68
        LDR      R1,[R6, #+8]
        ADD      R1,R1,R9
        ADD      R1,R1,#+1
        PUSH     {R1}
        CFI CFA R13+72
        SUB      R1,R0,#+2
        ADD      R0,R0,R0, LSL #+1
        SUB      R0,R1,R0, ASR #+7
        SUB      R0,R0,#+3
        PUSH     {R0}
        CFI CFA R13+76
        LDR      R0,[R6, #+20]
        MOV      R1,#+0
        ADD      R2,R0,#+3
        LDR      R0,[R7, #+48]
        SWI      +493
        ADD      SP,SP,#+24
        CFI CFA R13+52
??DrwFile_8:
        LDR      R0,[R7, #+4]
        CMP      R0,#+2
        BNE      ??DrwFile_7
        LDR      R0,[R7, #+56]
        MVN      R1,#-1879048192
        CMP      R0,R1
        BEQ      ??DrwFile_7
        LDR      R0,[R6, #+0]
        MOV      R3,#+0
        SUB      R1,R0,#+2
        ADD      R0,R0,R0, LSL #+1
        SUB      R0,R1,R0, ASR #+7
        SUB      R1,R0,#+3
        LDR      R0,[R6, #+20]
        LDR      R6,[R6, #+8]
        PUSH     {R3}
        CFI CFA R13+56
        LDR      R3,??DrwFile_2+0x4  ;; Colors + 48
        SUB      R2,R1,R0
        LDR      R3,[R3, #+0]
        SUB      R2,R2,#+3
        PUSH     {R3}
        CFI CFA R13+60
        MOV      R3,#+0
        PUSH     {R3}
        CFI CFA R13+64
        PUSH     {R3}
        CFI CFA R13+68
        ADD      R3,R6,R9
        ADD      R3,R3,#+1
        PUSH     {R3}
        CFI CFA R13+72
        PUSH     {R1}
        CFI CFA R13+76
        ADD      R3,R9,#+2
        ADD      R1,R2,R2, LSR #+31
        ADD      R0,R0,R1, ASR #+1
        ADD      R1,R6,R6, LSR #+31
        ADD      R0,R0,R1, ASR #+1
        ADD      R2,R0,#+3
        LDR      R0,[R7, #+56]
        MOV      R1,#+0
        SWI      +493
        ADD      SP,SP,#+24
        CFI CFA R13+52
??DrwFile_7:
        LDR      R0,[R7, #+44]
        MVN      R1,#-1879048192
        CMP      R0,R1
        BEQ      ??DrwFile_4
        LDR      R6,??DataTable62  ;; scr_w
        MOV      R1,#+0
        LDR      R0,[R6, #+0]
        PUSH     {R1}
        CFI CFA R13+56
        LDR      R1,??DrwFile_2+0x4  ;; Colors + 48
        ADD      R3,R9,#+2
        LDR      R1,[R1, #+0]
        PUSH     {R1}
        CFI CFA R13+60
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+64
        PUSH     {R1}
        CFI CFA R13+68
        LDR      R1,[R6, #+8]
        ADD      R1,R1,R9
        ADD      R1,R1,#+1
        PUSH     {R1}
        CFI CFA R13+72
        SUB      R1,R0,#+2
        ADD      R0,R0,R0, LSL #+1
        SUB      R0,R1,R0, ASR #+7
        SUB      R0,R0,#+3
        PUSH     {R0}
        CFI CFA R13+76
        LDR      R0,[R6, #+20]
        MOV      R1,#+1
        ADD      R2,R0,#+3
        LDR      R0,[R7, #+44]
        SWI      +493
        ADD      SP,SP,#+24
        CFI CFA R13+52
??DrwFile_4:
        LDRH     R0,[R7, #+8]
        LDR      R6,??DataTable62  ;; scr_w
        TST      R0,#0x1000
        LDRNE    R0,??DrwFile_2+0x8  ;; STD_ICONS + 2
        LDR      R1,[R6, #+20]
        LDRHNE   R0,[R0, #+0]
        LDR      R2,[R6, #+28]
        LDRHEQ   R0,[R7, #+40]
        ADD      R2,R2,#+2
        SUB      R2,R2,R1
        PUSH     {R0}
        CFI CFA R13+56
        PUSH     {R1}
        CFI CFA R13+60
        LDR      R3,[R6, #+24]
        ADD      R0,R2,R2, LSR #+31
        ADD      R2,R5,R0, ASR #+1
        MOV      R1,#+3
        MOV      R0,R4
        SWI      +320
        LDR      R0,??DataTable57  ;; CONFIG_FONT_FILES
        LDR      R0,[R0, #+0]
        SWI      +497
        ADD      R1,SP,#+24
        MOV      R0,R4
        SWI      +487
        LDR      R1,[R6, #+20]
        MOV      R3,#+254
        ADD      R1,R1,#+3
        STRH     R1,[SP, #+16]
        LDR      R0,[R6, #+0]
        ORR      R3,R3,#0xFF00
        ADD      R2,R3,R0
        ADD      R0,R0,R0, LSL #+1
        ASR      R0,R0,#+7
        SUB      R0,R2,R0
        SUB      R2,R3,#+1
        ADD      R0,R2,R0
        STRH     R0,[SP, #+18]
        LDRH     R1,[SP, #+28]
        MOV      R0,R4
        STRH     R1,[SP, #+20]
        LDRH     R1,[SP, #+30]
        STRH     R1,[SP, #+22]
        ADD      R1,SP,#+16
        SWI      +490
        LDR      R0,??DataTable58  ;; curtab
        LDR      R1,??DataTable78  ;; tabs
        LDR      R0,[R0, #+0]
        LDR      R0,[R1, +R0, LSL #+2]
        LDRSH    R1,[R0, #+4]
        LDRSH    R2,[R0, #+4]
        ADD      R1,R0,R1, LSL #+1
        LDRSH    R1,[R1, #+6]
        ADD      R0,R0,R2, LSL #+1
        LDRSH    R0,[R0, #+12]
        ADD      SP,SP,#+8
        CFI CFA R13+52
        SUB      R0,R1,R0
        CMP      R8,R0
        BNE      ??DrwFile_9
        LDR      R0,[R7, #+64]
        SWI      +352
        MOV      R1,R0
        LDR      R0,[R7, #+64]
        SWI      +768
        LDR      R1,[R6, #+0]
        SUB      R0,R0,R1
        ADD      R1,R1,R1, LSL #+1
        ADD      R0,R0,R1, ASR #+7
        LDR      R1,[R6, #+20]
        ADD      R0,R1,R0
        ADDS     R6,R0,#+8
        BPL      ??DrwFile_10
        BL       ??DisableScroll
        B        ??DrwFile_11
??DrwFile_10:
        LDR      R0,??DrwFile_2+0xC  ;; scr_w + 40
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BNE      ??DrwFile_12
        LDR      R0,??DataTable60  ;; CONFIG_SCROLL_TEXT_SPEED
        LDR      R1,??DataTable61  ;; ??ScrollTimerProc
        LDR      R0,[R0, #+0]
        MOV      R2,#+0
        SWI      +297
??DrwFile_12:
        LDR      R0,??DrwFile_2+0xC  ;; scr_w + 40
        STR      R6,[R0, #+0]
??DrwFile_11:
        LDR      R6,??DataTable62  ;; scr_w
        MOV      R1,#+0
        LDR      R0,[R6, #+0]
        PUSH     {R1}
        CFI CFA R13+56
        LDR      R1,??DrwFile_2+0x10  ;; Colors + 28
        ADD      R3,R5,#+2
        LDR      R1,[R1, #+0]
        PUSH     {R1}
        CFI CFA R13+60
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+64
        PUSH     {R1}
        CFI CFA R13+68
        LDR      R1,[R6, #+8]
        ADD      R1,R1,R5
        ADD      R1,R1,#+1
        PUSH     {R1}
        CFI CFA R13+72
        SUB      R1,R0,#+2
        ADD      R0,R0,R0, LSL #+1
        SUB      R0,R1,R0, ASR #+7
        SUB      R0,R0,#+3
        PUSH     {R0}
        CFI CFA R13+76
        LDR      R1,[R6, #+44]
        LDR      R0,[R6, #+20]
        ADD      R0,R0,#+3
        SUB      R2,R0,R1
        LDR      R0,[R7, #+64]
        B        ??DrwFile_13
        CFI CFA R13+52
??DrwFile_9:
        LDR      R0,[R7, #+24]
        LDR      R1,[R6, #+0]
        CMP      R0,#+0
        LDRNE    R0,[R7, #+60]
        MOV      R2,#+0
        LDREQ    R0,[R7, #+64]
        PUSH     {R2}
        CFI CFA R13+56
        LDR      R2,??DrwFile_2+0x14  ;; Colors + 24
        ADD      R3,R5,#+2
        LDR      R2,[R2, #+0]
        PUSH     {R2}
        CFI CFA R13+60
        MOV      R2,#+0
        PUSH     {R2}
        CFI CFA R13+64
        PUSH     {R2}
        CFI CFA R13+68
        LDR      R2,[R6, #+8]
        ADD      R2,R2,R5
        ADD      R2,R2,#+1
        PUSH     {R2}
        CFI CFA R13+72
        SUB      R2,R1,#+2
        ADD      R1,R1,R1, LSL #+1
        SUB      R1,R2,R1, ASR #+7
        SUB      R1,R1,#+3
        PUSH     {R1}
        CFI CFA R13+76
        LDR      R1,[R6, #+20]
        ADD      R2,R1,#+3
??DrwFile_13:
        MOV      R1,#+0
        SWI      +493
        ADD      SP,SP,#+24
        CFI CFA R13+52
        ADD      R1,SP,#+16
        MOV      R0,R4
        SWI      +490
        ADD      SP,SP,#+24
        CFI CFA R13+28
        POP      {R4-R9,PC}       ;; return
        DATA
??DrwFile_2:
        DC32     scr_w + 16
        DC32     Colors + 48
        DC32     STD_ICONS + 2
        DC32     scr_w + 40
        DC32     Colors + 28
        DC32     Colors + 24
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable51:
        DC32     Colors

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable52:
        DC32     is_db2010

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable53:
        DC32     CONFIG_FONT_ATTR

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable57:
        DC32     CONFIG_FONT_FILES

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable58:
        DC32     curtab

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable60:
        DC32     CONFIG_SCROLL_TEXT_SPEED

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable61:
        DC32     ??ScrollTimerProc

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable62:
        DC32     scr_w

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon0
        CFI NoFunction
        THUMB
??ShowFiles??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock22
        REQUIRE ??ShowFiles

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI Function ??ShowFiles
        ARM
??ShowFiles:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        MOV      R6,R1
        LDR      R1,??DataTable80  ;; Colors
        MOV      R5,R0
        LDR      R0,[R1, #+4]
        PUSH     {R0}
        CFI CFA R13+28
        LDR      R0,[R1, #+0]
        PUSH     {R0}
        CFI CFA R13+32
        LDRH     R3,[R6, #+6]
        LDRH     R2,[R6, #+2]
        LDRH     R1,[R6, #+4]
        LDRH     R0,[R6, #+0]
        SWI      +492
        LDR      R0,??DataTable79  ;; curtab
        LDR      R0,[R0, #+0]
        ADD      SP,SP,#+8
        CFI CFA R13+24
        CMP      R0,#+2
        BGE      ??ShowFiles_1
        MOV      R1,R6
        MOV      R0,R5
        BL       ??DrwCurTab
??ShowFiles_1:
        LDR      R0,??DataTable79  ;; curtab
        LDR      R1,??DataTable78  ;; tabs
        LDR      R0,[R0, #+0]
        MOV      R4,#+0
        LDR      R0,[R1, +R0, LSL #+2]
        LDRSH    R0,[R0, #+4]
        CMP      R0,#+1
        BGE      ??ShowFiles_2
        B        ??ShowFiles_3
??ShowFiles_4:
        MOV      R2,R6
        MOV      R1,R5
        MOV      R0,R4
        BL       ??DrwDrvBg
        ADD      R4,R4,#+1
??ShowFiles_2:
        LDR      R0,??DataTable79  ;; curtab
        LDR      R1,??DataTable78  ;; tabs
        LDR      R0,[R0, #+0]
        LDR      R0,[R1, +R0, LSL #+2]
        LDRSH    R0,[R0, #+4]
        CMP      R4,R0
        BLT      ??ShowFiles_4
??ShowFiles_3:
        LDR      R7,??DataTable79  ;; curtab
        LDR      R8,??DataTable78  ;; tabs
        LDR      R0,[R7, #+0]
        LDR      R4,??DataTable71  ;; scr_w
        LDR      R0,[R8, +R0, LSL #+2]
        MOV      R2,R6
        LDRSH    R0,[R0, #+4]
        MOV      R1,R5
        BL       ??DrwDrvAc
        LDR      R1,??DataTable80  ;; Colors
        LDR      R0,[R4, #+12]
        LDR      R2,[R1, #+8]
        PUSH     {R2}
        CFI CFA R13+28
        LDR      R1,[R1, #+12]
        PUSH     {R1}
        CFI CFA R13+32
        LDR      R1,[R4, #+4]
        ADD      R1,R1,R0
        ADD      R1,R1,#+6
        SUB      R1,R1,R0
        SUB      R3,R1,#+8
        LDRH     R1,[R6, #+2]
        SUB      R2,R1,#+2
        ADD      R1,R0,#+7
        LDRH     R0,[R6, #+0]
        ADD      R0,R0,#+1
        SWI      +492
        LDR      R1,[R7, #+0]
        LDR      R0,[R4, #+32]
        LDR      R1,[R8, +R1, LSL #+2]
        LDRSH    R1,[R1, #+0]
        ADD      SP,SP,#+8
        CFI CFA R13+24
        CMP      R0,R1
        BLT      ??ShowFiles_5
        LDR      R0,??DataTable79  ;; curtab
        LDR      R1,??DataTable78  ;; tabs
        LDR      R0,[R0, #+0]
        LDR      R0,[R1, +R0, LSL #+2]
        LDRSH    R4,[R0, #+0]
??ShowFiles_6:
        MOV      R0,#+0
        B        ??ShowFiles_7
??ShowFiles_5:
        LDR      R3,[R7, #+0]
        MOV      R4,R0
        ADD      R1,R8,R3, LSL #+2
        LDR      R1,[R1, #+0]
        LDRSH    R0,[R1, #+4]
        LDRSH    R2,[R1, #+4]
        ADD      R0,R1,R0, LSL #+1
        LDRSH    R0,[R0, #+12]
        ADD      R2,R1,R2, LSL #+1
        LDRSH    R2,[R2, #+6]
        SUB      R1,R4,#+1
        SUB      R2,R2,R0
        CMP      R2,R1
        BLT      ??ShowFiles_8
        ADD      R0,R2,R0
        SUB      R0,R0,R4
        ADD      R0,R0,#+2
        B        ??ShowFiles_9
??ShowFiles_8:
        LDR      R3,[R7, #+0]
        ADD      R1,R8,R3, LSL #+2
        LDR      R1,[R1, #+0]
        LDRSH    R7,[R1, #+4]
        ADD      R1,R1,R7, LSL #+1
        LDRSH    R1,[R1, #+6]
        CMP      R0,R1
        SUBGE    R1,R2,#+1
        ADDGE    R0,R1,R0
??ShowFiles_9:
        CMP      R0,#+0
        BMI      ??ShowFiles_6
        LDR      R1,??DataTable79  ;; curtab
        LDR      R2,??DataTable78  ;; tabs
        LDR      R1,[R1, #+0]
        LDR      R1,[R2, +R1, LSL #+2]
        LDRSH    R1,[R1, #+0]
        SUB      R1,R1,R4
        CMP      R1,R0
        BGE      ??ShowFiles_7
        LDR      R0,??DataTable79  ;; curtab
        LDR      R1,??DataTable78  ;; tabs
        LDR      R0,[R0, #+0]
        LDR      R0,[R1, +R0, LSL #+2]
        LDRSH    R0,[R0, #+0]
        SUB      R0,R0,R4
??ShowFiles_7:
        LDR      R7,??DataTable79  ;; curtab
        CMP      R0,#+1
        LDR      R3,[R7, #+0]
        ADD      R1,R8,R3, LSL #+2
        LDR      R1,[R1, #+0]
        LDRSH    R2,[R1, #+4]
        ADD      R1,R1,R2, LSL #+1
        STRH     R0,[R1, #+12]
        LDR      R1,??ShowFiles_10  ;; FileListBase
        LDR      R7,[R1, +R3, LSL #+2]
        MOV      R1,#+0
        BGE      ??ShowFiles_11
        B        ??ShowFiles_12
??ShowFiles_13:
        LDR      R7,[R7, #+68]
        ADD      R1,R1,#+1
??ShowFiles_11:
        CMP      R1,R0
        BLT      ??ShowFiles_13
??ShowFiles_12:
        MOV      R8,#+0
        CMP      R4,#+1
        BGE      ??ShowFiles_14
        B        ??ShowFiles_15
??ShowFiles_16:
        LDR      R7,[R7, #+68]
        MOV      R0,R7
        _BLF     ??FillFileInfo,??FillFileInfo??rA
        MOV      R3,R7
        MOV      R2,R8
        MOV      R1,R6
        MOV      R0,R5
        BL       ??DrwFile
        ADD      R8,R8,#+1
??ShowFiles_14:
        CMP      R8,R4
        BLT      ??ShowFiles_16
??ShowFiles_15:
        MOV      R1,R6
        MOV      R0,R5
        BL       ??DrwSB
        MOV      R1,R6
        MOV      R0,R5
        BL       ??DrwSort
        MOV      R1,R6
        MOV      R0,R5
        BL       ??DrwIndex
        LDR      R0,??ShowFiles_10+0x4  ;; progr_start
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        POPEQ    {R4-R8,PC}
        MOV      R1,R6
        MOV      R0,R5
        BL       ??ShowProgr
        POP      {R4-R8,PC}       ;; return
        DATA
??ShowFiles_10:
        DC32     FileListBase
        DC32     progr_start
        CFI EndBlock cfiBlock23

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable71:
        DC32     scr_w

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable78:
        DC32     tabs

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable79:
        DC32     curtab

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon0
        CFI NoFunction
        THUMB
??ShowProgr??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock24
        REQUIRE ??ShowProgr

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI Function ??ShowProgr
        ARM
??ShowProgr:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        LDR      R5,??DataTable80  ;; Colors
        LDR      R4,??DataTable81  ;; scr_w
        LDR      R0,[R5, #+92]
        MOV      R1,#+71
        PUSH     {R0}
        CFI CFA R13+28
        LDR      R0,[R5, #+96]
        PUSH     {R0}
        CFI CFA R13+32
        LDR      R0,[R4, #+8]
        ADD      R3,R1,R0, LSL #+1
        LDR      R0,[R4, #+0]
        MOV      R1,#+50
        SUB      R2,R0,#+6
        MOV      R0,#+5
        SWI      +492
        LDR      R0,??ShowProgr_1  ;; progr_cur
        MOV      R1,#+100
        LDR      R0,[R0, #+0]
        MUL      R0,R1,R0
        LDR      R1,??ShowProgr_1+0x4  ;; progr_max
        LDR      R1,[R1, #+0]
        _BLF     ??div32_a,??rA??div32_a
        LDR      R0,??ShowProgr_1+0x8  ;; progr_act
        MOV      R6,R1
        LDR      R0,[R0, #+0]
        ADD      SP,SP,#+8
        CFI CFA R13+24
        CMP      R0,#+0
        BEQ      ??ShowProgr_2
        LDR      R0,??ShowProgr_1+0x8  ;; progr_act
        LDR      R0,[R0, #+0]
        _BLF     ??muitxt,??muitxt??rA
        LDR      R2,??ShowProgr_1+0xC  ;; `?<Constant L"\\x25\\x6c\\x73\\x3a\\x20">`
        MOV      R3,R0
        MOV      R1,#+255
        ORR      R1,R1,#0x100
        ADD      R0,R4,#+52
        SWI      +277
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,R4,#+52
        SWI      +349
        MOV      R7,R0
        LDR      R0,[R5, #+88]
        MOV      R3,#+52
        PUSH     {R0}
        CFI CFA R13+28
        LDR      R0,[R5, #+84]
        MOV      R2,#+7
        PUSH     {R0}
        CFI CFA R13+32
        MOV      R1,#+2
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+36
        PUSH     {R0}
        CFI CFA R13+40
        LDR      R0,[R4, #+8]
        ADD      R0,R0,#+52
        PUSH     {R0}
        CFI CFA R13+44
        LDR      R0,[R4, #+0]
        SUB      R0,R0,#+8
        PUSH     {R0}
        CFI CFA R13+48
        MOV      R0,R7
        SWI      +493
        MOV      R0,R7
        SWI      +353
        ADD      SP,SP,#+24
        CFI CFA R13+24
??ShowProgr_2:
        LDR      R7,??ShowProgr_1+0x4  ;; progr_max
        LDR      R8,??ShowProgr_1  ;; progr_cur
        LDR      R0,[R7, #+0]
        LDR      R2,??ShowProgr_1+0x10  ;; `?<Constant L"\\x25\\x6c\\x73\\x3a\\x20">` + 12
        PUSH     {R0}
        CFI CFA R13+28
        LDR      R0,[R8, #+0]
        MOV      R3,R6
        PUSH     {R0}
        CFI CFA R13+32
        MOV      R1,#+255
        ORR      R1,R1,#0x100
        ADD      R0,R4,#+52
        SWI      +277
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,R4,#+52
        SWI      +349
        LDR      R1,[R5, #+88]
        MOV      R6,R0
        LDR      R0,[R4, #+8]
        PUSH     {R1}
        CFI CFA R13+36
        LDR      R1,[R5, #+84]
        ADD      R3,R0,#+54
        PUSH     {R1}
        CFI CFA R13+40
        MOV      R2,#+7
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+44
        PUSH     {R1}
        CFI CFA R13+48
        MOV      R1,#+54
        ADD      R1,R1,R0, LSL #+1
        PUSH     {R1}
        CFI CFA R13+52
        LDR      R1,[R4, #+0]
        MOV      R0,R6
        SUB      R1,R1,#+8
        PUSH     {R1}
        CFI CFA R13+56
        MOV      R1,#+2
        SWI      +493
        MOV      R0,R6
        SWI      +353
        LDR      R2,[R4, #+0]
        LDR      R0,[R8, #+0]
        SUB      R1,R2,#+21
        MUL      R0,R1,R0
        LDR      R1,[R7, #+0]
        SUB      R2,R2,#+10
        _BLF     ??div32_a,??rA??div32_a
        LDR      R0,[R4, #+8]
        MOV      R6,R1
        LDR      R1,[R5, #+100]
        LSL      R0,R0,#+1
        PUSH     {R1}
        CFI CFA R13+60
        LDR      R1,[R5, #+104]
        ADD      R3,R0,#+61
        PUSH     {R1}
        CFI CFA R13+64
        ADD      R1,R0,#+56
        MOV      R0,#+9
        SWI      +492
        ADD      SP,SP,#+40
        CFI CFA R13+24
        LDR      R1,[R5, #+108]
        LDR      R0,[R4, #+8]
        MOV      R2,R1
        PUSH     {R2}
        CFI CFA R13+28
        PUSH     {R1}
        CFI CFA R13+32
        LSL      R0,R0,#+1
        ADD      R3,R0,#+60
        ADD      R2,R6,#+10
        ADD      R1,R0,#+57
        MOV      R0,#+10
        SWI      +492
        LDR      R0,??ShowProgr_1+0x14  ;; progrsp_start
        LDR      R0,[R0, #+0]
        ADD      SP,SP,#+8
        CFI CFA R13+24
        CMP      R0,#+0
        POPEQ    {R4-R8,PC}
        LDR      R0,[R4, #+8]
        LDR      R1,[R5, #+100]
        LSL      R0,R0,#+1
        PUSH     {R1}
        CFI CFA R13+28
        LDR      R1,[R5, #+104]
        ADD      R3,R0,#+68
        PUSH     {R1}
        CFI CFA R13+32
        LDR      R1,[R4, #+0]
        SUB      R2,R1,#+10
        ADD      R1,R0,#+63
        MOV      R0,#+9
        SWI      +492
        LDR      R0,??ShowProgr_1+0x18  ;; progrsp_max
        LDR      R0,[R0, #+0]
        ADD      SP,SP,#+8
        CFI CFA R13+24
        CMP      R0,#+0
        POPEQ    {R4-R8,PC}
        LDR      R0,[R4, #+8]
        LSL      R6,R0,#+1
        LDR      R0,[R5, #+108]
        ADD      R3,R6,#+67
        MOV      R1,R0
        PUSH     {R1}
        CFI CFA R13+28
        PUSH     {R0}
        CFI CFA R13+32
        LDR      R0,??ShowProgr_1+0x1C  ;; progrsp_cur
        LDR      R1,[R4, #+0]
        LDR      R0,[R0, #+0]
        SUB      R1,R1,#+21
        MUL      R0,R1,R0
        LDR      R1,??ShowProgr_1+0x18  ;; progrsp_max
        LDR      R1,[R1, #+0]
        _BLF     ??div32_a,??rA??div32_a
        ADD      R2,R1,#+10
        ADD      R1,R6,#+64
        MOV      R0,#+10
        SWI      +492
        ADD      SP,SP,#+8
        CFI CFA R13+24
        POP      {R4-R8,PC}       ;; return
        DATA
??ShowProgr_1:
        DC32     progr_cur
        DC32     progr_max
        DC32     progr_act
        DC32     `?<Constant L"\\x25\\x6c\\x73\\x3a\\x20">`
        DC32     `?<Constant L"\\x25\\x6c\\x73\\x3a\\x20">` + 12
        DC32     progrsp_start
        DC32     progrsp_max
        DC32     progrsp_cur
        CFI EndBlock cfiBlock25

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable80:
        DC32     Colors

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable81:
        DC32     scr_w

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock26 Using cfiCommon1
        CFI NoFunction
        ARM
??EnumChk??rA:
        LDR      R12,??Subroutine13_0  ;; ??EnumChk
        BX       R12
        DATA
??Subroutine13_0:
        DC32     ??EnumChk
        CFI EndBlock cfiBlock26

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock27 Using cfiCommon1
        CFI NoFunction
        ARM
??rA??div32_a:
        LDR      R12,??Subroutine14_0  ;; ??div32_a
        MOV      PC,R12
        DATA
??Subroutine14_0:
        DC32     ??div32_a
        CFI EndBlock cfiBlock27

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock28 Using cfiCommon1
        CFI NoFunction
        ARM
??IsInArchive??rA:
        LDR      R12,??Subroutine15_0  ;; ??IsInArchive
        BX       R12
        DATA
??Subroutine15_0:
        DC32     ??IsInArchive
        CFI EndBlock cfiBlock28

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock29 Using cfiCommon1
        CFI NoFunction
        ARM
??FillFileInfo??rA:
        LDR      R12,??Subroutine16_0  ;; ??FillFileInfo
        BX       R12
        DATA
??Subroutine16_0:
        DC32     ??FillFileInfo
        CFI EndBlock cfiBlock29

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock30 Using cfiCommon1
        CFI NoFunction
        ARM
??muitxt??rA:
        LDR      R12,??Subroutine17_0  ;; ??muitxt
        BX       R12
        DATA
??Subroutine17_0:
        DC32     ??muitxt
        CFI EndBlock cfiBlock30

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        END
// 
// 5 296 bytes in segment CODE
//    96 bytes in segment DATA_C
// 1 076 bytes in segment DATA_Z
//    12 bytes in segment INITTAB
// 
// 5 184 bytes of CODE  memory (+ 124 bytes shared)
//    96 bytes of CONST memory
// 1 076 bytes of DATA  memory
//
//Errors: none
//Warnings: none
