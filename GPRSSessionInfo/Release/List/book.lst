##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  22:43:59 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\GPRSSessionInf #
#                       o\book.c                                             #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\GPRSSessionInf #
#                       o\book.c -D NDEBUG -lC Z:\home\perk11\www\perk11.inf #
#                       o\svn\SE\GPRSSessionInfo\Release\List\ -lA           #
#                       Z:\home\perk11\www\perk11.info\svn\SE\GPRSSessionInf #
#                       o\Release\List\ -o Z:\home\perk11\www\perk11.info\sv #
#                       n\SE\GPRSSessionInfo\Release\Obj\ -s9 --cpu_mode     #
#                       arm --endian little --cpu ARM926EJ-S --stack_align   #
#                       4 --interwork -e --fpu None --eec++ --dlib_config    #
#                       Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.h -I         #
#                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2    #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\GPRSSessionInf #
#                       o\Release\List\book.lst                              #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\GPRSSessionInf #
#                       o\Release\Obj\book.r79                               #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\GPRSSessionInfo\book.c
      1          #include "..\\include\Lib_Clara.h"
      2          #include "..\\include\Dir.h"
      3          #include "structs.h"
      4          #include "conf_loader.h"
      5          #include "..\\include\cfg_items.h"
      6          
      7          void mbox_Create(BOOK *bk, int type);
      8          int isRealGSIBook(BOOK * struc);
      9          
     10          

   \                                 In segment CODE, align 4, keep-with-next
     11          int isGSIBook(BOOK *bk)
     12          {
   \                     ??isGSIBook:
   \   00000000   00402DE9           PUSH     {LR}
     13            if (!strcmp(bk->xbook->name,"GSI")) return 1; 
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   061F8FE2           ADR      R1,??isGSIBook_1  ;; "GSI"
   \   0000000C   040090E5           LDR      R0,[R0, #+4]
   \   00000010   590100EF           SWI      +345
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   0080BD08           POPEQ    {PC}
     14            return 0; 
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   0080BDE8           POP      {PC}             ;; return
   \                     ??isGSIBook_1:
   \   00000028   47534900           DC8      "GSI"
     15          };
     16          

   \                                 In segment CODE, align 4, keep-with-next
     17          static int TerminateElf(void *mess ,BOOK *bk)
     18          {
   \                     ??TerminateElf:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0100A0E1           MOV      R0,R1
     19            FreeBook(bk);
   \   00000008   2F0100EF           SWI      +303
     20            return(1);
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   0080BDE8           POP      {PC}             ;; return
     21          }
     22          

   \                                 In segment CODE, align 4, keep-with-next
     23          static int ShowAuthorInfo(void *mess ,BOOK *bk)
     24          {
     25            MyBOOK *mbk=(MyBOOK*)FindBook(isRealGSIBook);
   \                     ??ShowAuthorInfo:
   \   00000000   30009FE5           LDR      R0,??ShowAuthorInfo_1  ;; ??isRealGSIBook
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   300100EF           SWI      +304
   \   0000000C   0040A0E1           MOV      R4,R0
     26            mbk->stat=0;
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   200084E5           STR      R0,[R4, #+32]
     27            mbox_Create(&mbk->book, 0);
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           _BLF     ??mbox_Create,??mbox_Create??rA
     28            BookObj_SetFocus(&mbk->book,0);
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   320100EF           SWI      +306
     29            return(1);
   \   00000030   0100A0E3           MOV      R0,#+1
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??ShowAuthorInfo_1:
   \   00000038   ........           DC32     ??isRealGSIBook
     30          }
     31          

   \                                 In segment CODE, align 4, keep-with-next
     32          int GPRS_Terminated(void *mess ,BOOK *bk)
     33          {
   \                     ??GPRS_Terminated:
   \   00000000   10402DE9           PUSH     {R4,LR}
     34            MyBOOK *mbk=(MyBOOK*)bk;
     35            mbk->stat=1;
   \   00000004   0100A0E3           MOV      R0,#+1
   \   00000008   0140A0E1           MOV      R4,R1
     36            BookObj_GotoPage(bk,&bk_main);
   \   0000000C   24109FE5           LDR      R1,??GPRS_Terminated_1  ;; bk_main
   \   00000010   200084E5           STR      R0,[R4, #+32]
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   2D0100EF           SWI      +301
     37            mbk->stat=0;
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   200084E5           STR      R0,[R4, #+32]
     38            BookObj_SetFocus(bk,0);
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   320100EF           SWI      +306
     39            return 0;
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??GPRS_Terminated_1:
   \   00000038   ........           DC32     bk_main
     40          }
     41          

   \                                 In segment CODE, align 4, keep-with-next
     42          static int onReconfigEvent(void *mess ,BOOK *book)
     43          {
   \                     ??onReconfigEvent:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     44            RECONFIG_EVENT_DATA *reconf=(RECONFIG_EVENT_DATA *)mess;
     45            int result=0;
     46            if (wstrcmpi(reconf->path,successed_config_path)==0 && wstrcmpi(reconf->name,successed_config_name)==0)
   \   00000008   3C009FE5           LDR      R0,??onReconfigEvent_1  ;; successed_config_path
   \   0000000C   0050A0E3           MOV      R5,#+0
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   9F0200EF           SWI      +671
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0700001A           BNE      ??onReconfigEvent_2
   \   00000024   24009FE5           LDR      R0,??onReconfigEvent_1+0x4  ;; successed_config_name
   \   00000028   001090E5           LDR      R1,[R0, #+0]
   \   0000002C   800084E2           ADD      R0,R4,#+128
   \   00000030   9F0200EF           SWI      +671
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0100001A           BNE      ??onReconfigEvent_2
     47            {
     48              InitConfig();
   \   0000003C   ........           _BLF     ??InitConfig,??InitConfig??rA
     49              result=1;
   \   00000040   0150A0E3           MOV      R5,#+1
     50            }
     51            return(result);
   \                     ??onReconfigEvent_2:
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??onReconfigEvent_1:
   \   0000004C   ........           DC32     successed_config_path
   \   00000050   ........           DC32     successed_config_name
     52          };
     53          

   \                                 In segment DYN_PAGE, align 4, align-sorted
     54          const PAGE_MSG bk_msglst_base[] @ "DYN_PAGE"  =
   \                     bk_msglst_base:
   \   00000000   E5030000....       DC32 997, ??TerminateElf, 998, ??ShowAuthorInfo, 996, ??onReconfigEvent
   \              ....E6030000
   \              ........E403
   \              0000........
   \   00000018   D1010000....       DC32 465, ??GPRS_Terminated, 64, 0H
   \              ....40000000
   \              00000000    
     55          {
     56            ELF_TERMINATE_EVENT,                              TerminateElf,
     57            ELF_SHOW_INFO_EVENT,                              ShowAuthorInfo,
     58            ELF_RECONFIG_EVENT,                               onReconfigEvent,
     59            UI_CONNECTIONMANAGER_SESSION_TERMINATED_EVENT_TAG,GPRS_Terminated,
     60            NIL_EVENT_TAG,           NULL
     61          };
     62          

   \                                 In segment DATA_C, align 4, align-sorted
     63          const PAGE_DESC bk_base = {"GSI_Base_Page",0,bk_msglst_base};
   \                     bk_base:
   \   00000000   ........0000       DC32 `?<Constant "GSI_Base_Page">`, 0H, bk_msglst_base
   \              0000........

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "GSI_Base_Page">`:
   \   00000000   4753495F4261       DC8 "GSI_Base_Page"
   \              73655F506167
   \              6500        
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \   00000000   47534900           DC8 "GSI"
     64          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     GPRS_Terminated(void *, BOOK *)
                                        8
     ShowAuthorInfo(void *, BOOK *)     8
     TerminateElf(void *, BOOK *)       4
     isGSIBook(BOOK *)                  4
     onReconfigEvent(void *, BOOK *)
                                       12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     isGSIBook(BOOK *)                44
     TerminateElf(void *, BOOK *)     20
     ShowAuthorInfo(void *, BOOK *)   60
     GPRS_Terminated(void *, BOOK *)
                                      60
     onReconfigEvent(void *, BOOK *)
                                      84
     bk_msglst_base                   40
     bk_base                          12
     ?<Constant "GSI_Base_Page">      16
     ?<Constant "GSI">                 4
      Others                          44

 
 312 bytes in segment CODE
  32 bytes in segment DATA_C
  40 bytes in segment DYN_PAGE
 
 268 bytes of CODE  memory (+ 44 bytes shared)
  72 bytes of CONST memory

Errors: none
Warnings: none
