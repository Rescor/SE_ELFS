//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:41:27 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\main.c /
//                       pp                                                  /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\main.c /
//                       pp -D NDEBUG -D OLDFUNCTIONS -lCN                   /
//                       Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Releas /
//                       e\List\ -la Z:\home\perk11\www\perk11.info\svn\SE\G /
//                       psMAP\Release\List\ -o Z:\home\perk11\www\perk11.in /
//                       fo\svn\SE\GpsMAP\Release\Obj\ -s9 --no_unroll       /
//                       --no_code_motion --cpu_mode arm --endian little     /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --fpu None --eec++ --dlib_config                    /
//                       Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.h -I        /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Releas /
//                       e\List\main.s79                                     /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME main

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)
        RSEG ELFBEGIN:DATA:REORDER:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??CloseMyBook
        FUNCTION ??CloseMyBook,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??CloseMyBook??rT
        MULTWEAK ??CreateMapGUI??rA
??DataTable0 EQU 0
        FUNCTION ??MainPageOnCreate,0603H
        LOCFRAME CSTACK, 12, STACK
        PUBLIC ??elf_exit
        FUNCTION ??elf_exit,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??elf_exit??rT
        MULTWEAK ??kill_data??rA
        MULTWEAK ??main??rT
        FUNCTION ??onMyBookClose,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new??rA`
        PUBLIC main
        FUNCTION main,0a03H
        LOCFRAME CSTACK, 16, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        



kill_data           SYMBOL "kill_data"

??CloseMyBook??rT   SYMBOL "??rT", ??CloseMyBook
??CreateMapGUI??rA  SYMBOL "??rA", ??CreateMapGUI

??elf_exit??rT      SYMBOL "??rT", ??elf_exit
??kill_data??rA     SYMBOL "??rA", kill_data
main                SYMBOL "main"
??main??rT          SYMBOL "??rT", main
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new??rA` SYMBOL "??rA", `??operator new`

        EXTERN ??CreateMapGUI
        FUNCTION ??CreateMapGUI,0202H
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new`
        FUNCTION `??operator new`,0202H
        EXTERN ACTION_BACK
        EXTERN kill_data
        FUNCTION kill_data,0202H


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??elf_exit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??elf_exit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??elf_exit
        ARM
??elf_exit:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +33028
        MOV      R1,R0
        LDR      R0,??elf_exit_1  ;; SFB(ELFBEGIN)
        POP      {LR}             ;; Pop
        CFI ?RET R14
        CFI CFA R13+0
        _BF      kill_data,??kill_data??rA  ;; tailcall
        DATA
??elf_exit_1:
        DC32     SFB(ELFBEGIN)
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??CloseMyBook??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??CloseMyBook

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??CloseMyBook
        ARM
??CloseMyBook:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +303
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??MainPageOnCreate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??MainPageOnCreate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??MainPageOnCreate
        ARM
??MainPageOnCreate:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R1
        MOV      R0,R4
        _BLF     ??CreateMapGUI,??CreateMapGUI??rA
        LDR      R2,??MainPageOnCreate_1  ;; ??CloseMyBook
        MOV      R5,R0
        LDR      R0,??MainPageOnCreate_1+0x4  ;; ACTION_BACK
        LDR      R1,[R0, #+0]
        MOV      R0,R5
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        MOV      R1,#+1
        MOV      R0,R5
        SWI      +641
        MOV      R0,R5
        SWI      +308
        STR      R5,[R4, #+24]
        MOV      R0,#+1
        POP      {R4,R5,PC}       ;; return
        DATA
??MainPageOnCreate_1:
        DC32     ??CloseMyBook
        DC32     ACTION_BACK
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??onMyBookClose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??onMyBookClose

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
bk_msglst_base:
        DATA
        DC32 64, 0H

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
bk_msglst_main:
        DATA
        DC32 66, ??MainPageOnCreate, 64, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "GpsMAP_Base_Page">`:
        DATA
        DC8 "GpsMAP_Base_Page"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "GpsMAP_Main_Page">`:
        DATA
        DC8 "GpsMAP_Main_Page"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "GpsMAP">`:
        DATA
        DC8 "GpsMAP"
        DC8 0
        DC32 `?<Constant "GpsMAP_Base_Page">`, 0H, bk_msglst_base
        DC32 `?<Constant "GpsMAP_Main_Page">`, 0H, bk_msglst_main

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??onMyBookClose
        ARM
??onMyBookClose:
        LDR      R0,??DataTable1  ;; ??elf_exit
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +264
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??main??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE main

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function main
        ARM
main:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R0,#+28
        _BLF     `??operator new`,`??operator new??rA`
        MOV      R4,R0
        MOV      R2,#+28
        MOV      R1,#+0
        SWI      +274
        LDR      R0,??main_0      ;; `?<Constant "GpsMAP">`
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+12
        MOV      R3,R0
        ADD      R2,R0,#+8
        MOV      R0,R4
        MVN      R1,R1
        PUSH     {R1}
        CFI CFA R13+16
        LDR      R1,??main_0+0x4  ;; ??onMyBookClose
        SWI      +299
        CMP      R0,#+0
        ADD      SP,SP,#+8
        CFI CFA R13+8
        BNE      ??main_1
        MOV      R0,R4
        _BLF     `??operator delete`,`??operator delete??rA`
        LDR      R0,??DataTable1  ;; ??elf_exit
        SWI      +264
        MOV      R0,#+0
        POP      {R4,PC}
??main_1:
        LDR      R1,??main_0+0x8  ;; `?<Constant "GpsMAP">` + 20
        MOV      R0,R4
        SWI      +301
        MOV      R0,#+0
        POP      {R4,PC}          ;; return
        DATA
??main_0:
        DC32     `?<Constant "GpsMAP">`
        DC32     ??onMyBookClose
        DC32     `?<Constant "GpsMAP">` + 20
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable1:
        DC32     ??elf_exit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon1
        CFI NoFunction
        ARM
??kill_data??rA:
        LDR      R12,??Subroutine5_0  ;; kill_data
        BX       R12
        DATA
??Subroutine5_0:
        DC32     kill_data
        CFI EndBlock cfiBlock10

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI NoFunction
        ARM
??CreateMapGUI??rA:
        LDR      R12,??Subroutine6_0  ;; ??CreateMapGUI
        BX       R12
        DATA
??Subroutine6_0:
        DC32     ??CreateMapGUI
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new??rA`:
        LDR      R12,??Subroutine7_0  ;; `??operator new`
        BX       R12
        DATA
??Subroutine7_0:
        DC32     `??operator new`
        CFI EndBlock cfiBlock12

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine8_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine8_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock13

        RSEG ELFBEGIN:DATA:REORDER:NOROOT(0)

        END
// 
// 352 bytes in segment CODE
//  72 bytes in segment DATA_C
//  24 bytes in segment DYN_PAGE
// 
// 284 bytes of CODE  memory (+ 68 bytes shared)
//  96 bytes of CONST memory
//
//Errors: none
//Warnings: none
