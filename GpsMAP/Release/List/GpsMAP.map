################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  10/Jun/2013  22:41:51                             #
#           Target CPU    =  ARM                                               #
#           List file     =  Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Rele #
#                            ase\List\GpsMAP.map                               #
#           Output file 1 =  Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Rele #
#                            ase\Exe\GpsMAP.elf                                #
#                            Format: elf, variant: -ynpra                      #
#           Command line  =  Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Rele #
#                            ase\Obj\_cpp2.r79                                 #
#                            Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Rele #
#                            ase\Obj\draw.r79                                  #
#                            Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Rele #
#                            ase\Obj\func.r79                                  #
#                            Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Rele #
#                            ase\Obj\main.r79                                  #
#                            Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Rele #
#                            ase\Obj\map_object.r79                            #
#                            Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Rele #
#                            ase\Obj\pngread.r79                               #
#                            Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Rele #
#                            ase\Obj\read_csv.r79                              #
#                            Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Rele #
#                            ase\Obj\read_ini.r79                              #
#                            -o                                                #
#                            Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Rele #
#                            ase\Exe\GpsMAP.elf                                #
#                            -Felf -l                                          #
#                            Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Rele #
#                            ase\List\GpsMAP.map                               #
#                            -xms -IZ:\home\perk11\IAR2\arm\LIB\ -f            #
#                            Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\..\i #
#                            nclude\1.xcl                                      #
#                            (-carm -ynpra -V(CODE)CODE_AREA,12                #
#                            -V(DATA)DATA_AREA,12                              #
#                            -Z(CODE_AREA)ELFBEGIN,DATA_ID,START,CODE,DATA_C,I #
#                            NITTAB,DATA_Z,DATA_N,CONFIG_C,DYN_CONST,DYN_CONST #
#                            _DESC,DYN_PAGE,DYN_PAGE_DESC=0-FFFFFFFF           #
#                            -Z(DATA_AREA)DATA_I=0-FFFFFFFF) -n                #
#                            Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.r79 -s    #
#                            main                                              #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE_AREA 000000D8  Relocatable, from module : main




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  ARMv4M                     = USED
  ARMv4T                     = USED
  ARMv5T                     = USED
  StackAlign4                = USED
  StackAlign8                = USED
  __cpu_mode                 = __pcs__interwork
  __data_model               = absolute
  __dlib_file_descriptor     = 1
  __dlib_full_locale_support = 0
  __endian                   = little
  __rt_version               = 6
  __thumb_aware              = enabled



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Release\Obj\_cpp2.r79
  PROGRAM MODULE, NAME : _cpp2

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 0000000C - 00000017 (0xc bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(size_t)    0000000C        CreateMapGUI(BOOK *) (map_object)
                                                   InitPng(LIST *, int, int) (pngread)
                                                   ReadCsvFile(TOWN *) (read_csv)
                                                   ReadMainIni(MAIN_INI *) (read_ini)
                                                   end_callback(png_structp, png_infop) (pngread)
                                                   main (main)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000018 - 00000023 (0xc bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new[](size_t)
                                   00000018        InitDirPng(TOWN *) (map_object)
                                                   MapGuiOnCreate(DISP_OBJ_MAP *) (map_object)
                                                   ReadCsvFile(TOWN *) (read_csv)
                                                   ReadMainIni(MAIN_INI *) (read_ini)
                                                   ReadPngFile(LIST *, char *, int, int) (map_object)
                                                   info_callback(png_structp, png_infop) (pngread)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000024 - 0000002F (0xc bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   00000024        CreateMapGUI(BOOK *) (map_object)
                                                   DeInitDirPng(TOWN *) (map_object)
                                                   Destr_Png(PNG_CONVERT *) (pngread)
                                                   DestroyCsvList(TOWN *) (read_csv)
                                                   InitPng(LIST *, int, int) (pngread)
                                                   MainIniDeInit(MAIN_INI *) (read_ini)
                                                   ReadCsvFile(TOWN *) (read_csv)
                                                   ReadMainIni(MAIN_INI *) (read_ini)
                                                   ReadPngFile(LIST *, char *, int, int) (map_object)
                                                   RemovePngListElement(PNG_LIST *) (pngread)
                                                   end_callback(png_structp, png_infop) (pngread)
                                                   main (main)
               stack 1 = 00000000 ( 00000004 )

    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Release\Obj\draw.r79
    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Release\Obj\func.r79
  PROGRAM MODULE, NAME : func

  SEGMENTS IN THE MODULE
  ======================
ELFBEGIN
  Relative segment, address: CODE_AREA 00000000, align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ELF_BEGIN               00000000 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000030 - 00000047 (0x18 bytes), align: 2
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           kill_data               00000030        elf_exit() (main)
           seqkill                 00000034 
           ASYNC                   00000044 
           SYNC                    00000040 
    -------------------------------------------------------------------------
DYN_CONST
  Relative segment, address: CODE_AREA 00004C9C - 00004C9F (0x4 bytes), align: 2
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KEY_UP                  00004C9C        MapGuiOnKey(DISP_OBJ_MAP *, int, int, int, int) (map_object)
    -------------------------------------------------------------------------
DYN_CONST
  Relative segment, address: CODE_AREA 00004CA0 - 00004CA3 (0x4 bytes), align: 2
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KEY_DOWN                00004CA0        MapGuiOnKey(DISP_OBJ_MAP *, int, int, int, int) (map_object)
    -------------------------------------------------------------------------
DYN_CONST
  Relative segment, address: CODE_AREA 00004CA4 - 00004CA7 (0x4 bytes), align: 2
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KEY_LEFT                00004CA4        MapGuiOnKey(DISP_OBJ_MAP *, int, int, int, int) (map_object)
    -------------------------------------------------------------------------
DYN_CONST
  Relative segment, address: CODE_AREA 00004CA8 - 00004CAB (0x4 bytes), align: 2
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KEY_RIGHT               00004CA8        MapGuiOnKey(DISP_OBJ_MAP *, int, int, int, int) (map_object)
    -------------------------------------------------------------------------
DYN_CONST
  Relative segment, address: CODE_AREA 00004CAC - 00004CAF (0x4 bytes), align: 2
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KBD_SHORT_RELEASE       00004CAC        MapGuiOnKey(DISP_OBJ_MAP *, int, int, int, int) (map_object)
    -------------------------------------------------------------------------
DYN_CONST
  Relative segment, address: CODE_AREA 00004CB0 - 00004CB3 (0x4 bytes), align: 2
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KBD_REPEAT              00004CB0        MapGuiOnKey(DISP_OBJ_MAP *, int, int, int, int) (map_object)
    -------------------------------------------------------------------------
DYN_CONST
  Relative segment, address: CODE_AREA 00004CB4 - 00004CB7 (0x4 bytes), align: 2
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FONT_E_20R              00004CB4        MapGuiOnRedraw(DISP_OBJ_MAP *, int, int, int) (map_object)
    -------------------------------------------------------------------------
DYN_CONST
  Relative segment, address: CODE_AREA 00004CB8 - 00004CBB (0x4 bytes), align: 2
  Segment part 327.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ACTION_BACK             00004CB8        MainPageOnCreate(void *, BOOK *) (main)
    -------------------------------------------------------------------------
DYN_CONST
  Relative segment, address: CODE_AREA 00004CBC - 00004CBF (0x4 bytes), align: 2
  Segment part 341.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KEY_DIGITAL_0           00004CBC        MapGuiOnKey(DISP_OBJ_MAP *, int, int, int, int) (map_object)
    -------------------------------------------------------------------------
DYN_CONST_DESC
  Relative segment, address: CODE_AREA 00004CC0 - 00004CC3 (0x4 bytes), align: 2
  Segment part 681. ROOT.
    -------------------------------------------------------------------------
DYN_PAGE
  Relative segment, address: CODE_AREA 00004CC4, align: 2
  Segment part 682.
    -------------------------------------------------------------------------
DYN_PAGE_DESC
  Relative segment, address: CODE_AREA 00004CDC - 00004CDF (0x4 bytes), align: 2
  Segment part 683. ROOT.

    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Release\Obj\main.r79
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00000048 - 00000063 (0x1c bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 17
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           elf_exit()              00000048 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000064 - 0000006F (0xc bytes), align: 2
  Segment part 10.            Intra module refs:   MainPageOnCreate(void *, BOOK *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CloseMyBook(BOOK *, GUI *)
                                   00000064 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000070 - 000000C7 (0x58 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
DYN_PAGE
  Relative segment, address: CODE_AREA 00004CC4 - 00004CCB (0x8 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
DYN_PAGE
  Relative segment, address: CODE_AREA 00004CCC - 00004CDB (0x10 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004A38 - 00004A4B (0x14 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004A4C - 00004A5F (0x14 bytes), align: 2
  Segment part 3.             Intra module refs:   Segment part 4
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004A60 - 00004A7F (0x20 bytes), align: 2
  Segment part 4.             Intra module refs:   main
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000000C8 - 000000D7 (0x10 bytes), align: 2
  Segment part 14.            Intra module refs:   main
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000000D8 - 0000015F (0x88 bytes), align: 2
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    000000D8        Absolute parts (?ABS_ENTRY_MOD)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000160 - 00000163 (0x4 bytes), align: 2
  Segment part 17.            Intra module refs:   main
                                                   onMyBookClose(BOOK *)

    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Release\Obj\map_object.r79
  PROGRAM MODULE, NAME : map_object

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000000 - 00000007 (0x8 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 23
                                                   Segment part 24
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CurNetData              00000004 
           NetData                 00000000 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000164 - 00000193 (0x30 bytes), align: 2
  Segment part 18.            Intra module refs:   RecalkPos(DISP_OBJ_MAP *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetRxLev_ByCh(int)      00000164 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000194 - 000001CF (0x3c bytes), align: 2
  Segment part 20.            Intra module refs:   MapGuiOnCreate(DISP_OBJ_MAP *)
                                                   RecalkPos(DISP_OBJ_MAP *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetCid_ByCh(int)        00000194 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000001D0 - 0000020B (0x3c bytes), align: 2
  Segment part 22.            Intra module refs:   MapGuiOnCreate(DISP_OBJ_MAP *)
                                                   RecalkPos(DISP_OBJ_MAP *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetLac_ByCh(int)        000001D0 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000020C - 0000020F (0x4 bytes), align: 2
  Segment part 23.            Intra module refs:   GetCid_ByCh(int)
                                                   GetLac_ByCh(int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000210 - 00000213 (0x4 bytes), align: 2
  Segment part 24.            Intra module refs:   GetCid_ByCh(int)
                                                   GetLac_ByCh(int)
                                                   GetRxLev_ByCh(int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000214 - 0000032B (0x118 bytes), align: 2
  Segment part 26.            Intra module refs:   FillScreenBuffer(DISP_OBJ_MAP *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ReadPngFile(LIST *, char *, int, int)
                                   00000214 
               stack 1 = 00000000 ( 00000144 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000032C - 00000507 (0x1dc bytes), align: 2
  Segment part 28.            Intra module refs:   MapGuiOnCreate(DISP_OBJ_MAP *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitDirPng(TOWN *)      0000032C 
               stack 1 = 00000000 ( 00000144 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000508 - 0000050B (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   InitDirPng(TOWN *)
                                                   ReadPngFile(LIST *, char *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000050C - 00000527 (0x1c bytes), align: 2
  Segment part 31.            Intra module refs:   MapGuiOnClose(DISP_OBJ_MAP *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DeInitDirPng(TOWN *)    0000050C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000528 - 00000553 (0x2c bytes), align: 2
  Segment part 33.            Intra module refs:   FillScreenBuffer(DISP_OBJ_MAP *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PngCmpProc(void *, void *)
                                   00000528 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000554 - 00000703 (0x1b0 bytes), align: 2
  Segment part 35.            Intra module refs:   MapGuiOnKey(DISP_OBJ_MAP *, int, int, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RecalkPos(DISP_OBJ_MAP *)
                                   00000554 
               stack 1 = 00000000 ( 00000028 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000704 - 00000BDF (0x4dc bytes), align: 2
  Segment part 37.            Intra module refs:   MapGuiOnKey(DISP_OBJ_MAP *, int, int, int, int)
                                                   MapGuiOnRedraw(DISP_OBJ_MAP *, int, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FillScreenBuffer(DISP_OBJ_MAP *)
                                   00000704 
               stack 1 = 00000000 ( 00000058 )
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004A80 - 00004AFF (0x80 bytes), align: 2
  Segment part 2.             Intra module refs:   InitDirPng(TOWN *)
                                                   Segment part 29
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004B00 - 00004B0B (0xc bytes), align: 2
  Segment part 3.             Intra module refs:   MapGuiOnRedraw(DISP_OBJ_MAP *, int, int, int)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004B0C - 00004B17 (0xc bytes), align: 2
  Segment part 14.            Intra module refs:   MapGui_constr(DISP_DESC *)
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000008 - 0000000B (0x4 bytes), align: 2
  Segment part 15.            Intra module refs:   MapGuiOnRedraw(DISP_OBJ_MAP *, int, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           str_id                  00000008 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000BE0 - 00000C8B (0xac bytes), align: 2
  Segment part 39.            Intra module refs:   MapGui_constr(DISP_DESC *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MapGuiOnCreate(DISP_OBJ_MAP *)
                                   00000BE0 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000C8C - 00000CE7 (0x5c bytes), align: 2
  Segment part 41.            Intra module refs:   MapGui_constr(DISP_DESC *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MapGuiOnClose(DISP_OBJ_MAP *)
                                   00000C8C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000CE8 - 00000EBF (0x1d8 bytes), align: 2
  Segment part 43.            Intra module refs:   MapGui_constr(DISP_DESC *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MapGuiOnRedraw(DISP_OBJ_MAP *, int, int, int)
                                   00000CE8 
               stack 1 = 00000000 ( 000000B4 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000EC0 - 00001057 (0x198 bytes), align: 2
  Segment part 45.            Intra module refs:   MapGui_constr(DISP_DESC *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MapGuiOnKey(DISP_OBJ_MAP *, int, int, int, int)
                                   00000EC0 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001058 - 000010BB (0x64 bytes), align: 2
  Segment part 47.            Intra module refs:   CreateMapGUI(BOOK *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MapGui_constr(DISP_DESC *)
                                   00001058 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000010BC - 000010BF (0x4 bytes), align: 2
  Segment part 49.            Intra module refs:   CreateMapGUI(BOOK *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MapGui_destr(GUI *)     000010BC 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000010C0 - 00001143 (0x84 bytes), align: 2
  Segment part 51.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMapGUI(BOOK *)    000010C0        MainPageOnCreate(void *, BOOK *) (main)
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000000 - 00000007 (0x8 bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000008 - 0000000B (0x4 bytes), align: 2
  Segment part 16.            Intra module refs:   str_id
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 00004C78 - 00004C83 (0xc bytes), align: 2
  Segment part 72. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        00004C78 

    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Release\Obj\pngread.r79
  PROGRAM MODULE, NAME : pngread

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00001144 - 00001153 (0x10 bytes), align: 2
  Segment part 5.             Intra module refs:   InitPng(LIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xmalloc(int, int)       00001144 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001154 - 00001163 (0x10 bytes), align: 2
  Segment part 7.             Intra module refs:   InitPng(LIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           xmfree(int, void *)     00001154 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001164 - 00001293 (0x130 bytes), align: 2
  Segment part 9.             Intra module refs:   InitPng(LIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           info_callback(png_structp, png_infop)
                                   00001164 
               stack 1 = 00000000 ( 0000002C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001294 - 0000133B (0xa8 bytes), align: 2
  Segment part 11.            Intra module refs:   InitPng(LIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           row_callback(png_structp, png_bytep, png_uint_32, int)
                                   00001294 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000133C - 0000139B (0x60 bytes), align: 2
  Segment part 13.            Intra module refs:   InitPng(LIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           end_callback(png_structp, png_infop)
                                   0000133C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000139C - 0000147F (0xe4 bytes), align: 2
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitPng(LIST *, int, int)
                                   0000139C        ReadPngFile(LIST *, char *, int, int) (map_object)
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001480 - 0000149B (0x1c bytes), align: 2
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           RemovePngListElement(PNG_LIST *)
                                   00001480        FillScreenBuffer(DISP_OBJ_MAP *) (map_object)
                                                   MapGuiOnClose(DISP_OBJ_MAP *) (map_object)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000149C - 000014CF (0x34 bytes), align: 2
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Destr_Png(PNG_CONVERT *)
                                   0000149C        ReadPngFile(LIST *, char *, int, int) (map_object)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000014D0 - 000014EB (0x1c bytes), align: 2
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           process_data(PNG_CONVERT *, char *, unsigned int)
                                   000014D0        ReadPngFile(LIST *, char *, int, int) (map_object)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000014EC - 0000150F (0x24 bytes), align: 2
  Segment part 23.            Intra module refs:   get_png_info(wchar_t const *, wchar_t const *, int *, int *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_uint(unsigned char const *)
                                   000014EC 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001510 - 00001643 (0x134 bytes), align: 2
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_png_info(wchar_t const *, wchar_t const *, int *, int *)
                                   00001510        InitDirPng(TOWN *) (map_object)
               stack 1 = 00000000 ( 000000A4 )
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004B18 - 00004B1F (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   InitPng(LIST *, int, int)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004B20 - 00004B27 (0x8 bytes), align: 2
  Segment part 3.             Intra module refs:   get_png_info(wchar_t const *, wchar_t const *, int *, int *)

    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Release\Obj\read_csv.r79
  PROGRAM MODULE, NAME : read_csv

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00001644 - 0000182F (0x1ec bytes), align: 2
  Segment part 4.             Intra module refs:   FindTownByCiLac(MAIN_INI *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ReadCsvFile(TOWN *)     00001644 
               stack 1 = 00000000 ( 0000010C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001830 - 0000186B (0x3c bytes), align: 2
  Segment part 6.             Intra module refs:   FindTownByCiLac(MAIN_INI *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DestroyCsvList(TOWN *)
                                   00001830        MainIniDeInit(MAIN_INI *) (read_ini)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000186C - 000018AF (0x44 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FindBSByCiLac(void *, void *)
                                   0000186C        RecalkPos(DISP_OBJ_MAP *) (map_object)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000018B0 - 000019AF (0x100 bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FindTownByCiLac(MAIN_INI *, int, int)
                                   000018B0        MapGuiOnCreate(DISP_OBJ_MAP *) (map_object)
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000019B0 - 000019B3 (0x4 bytes), align: 2
  Segment part 13.            Intra module refs:   FindBSByCiLac(void *, void *)
                                                   FindTownByCiLac(MAIN_INI *, int, int)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004B28 - 00004B5B (0x34 bytes), align: 2
  Segment part 2.             Intra module refs:   ReadCsvFile(TOWN *)

    *************************************************************************

  FILE NAME : Z:\home\perk11\www\perk11.info\svn\SE\GpsMAP\Release\Obj\read_ini.r79
  PROGRAM MODULE, NAME : read_ini

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 000019B4 - 000019D7 (0x24 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainIniInit(MAIN_INI *)
                                   000019B4        MapGuiOnCreate(DISP_OBJ_MAP *) (map_object)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000019D8 - 00001A2F (0x58 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainIniDeInit(MAIN_INI *)
                                   000019D8        MapGuiOnClose(DISP_OBJ_MAP *) (map_object)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001A30 - 00001A4B (0x1c bytes), align: 2
  Segment part 8.             Intra module refs:   ReadMainIni(MAIN_INI *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           find_eol(char *)        00001A30 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001A4C - 00001BB7 (0x16c bytes), align: 2
  Segment part 10.            Intra module refs:   ReadMainIni(MAIN_INI *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           str_tof(char *, char * *)
                                   00001A4C        ReadCsvFile(TOWN *) (read_csv)
               stack 1 = 00000000 ( 0000004C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001BB8 - 00001BD7 (0x20 bytes), align: 2
  Segment part 12.            Intra module refs:   ReadMainIni(MAIN_INI *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           skip_probel(char *)     00001BB8 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001BD8 - 00001F27 (0x350 bytes), align: 2
  Segment part 14.            Intra module refs:   MainIniInit(MAIN_INI *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ReadMainIni(MAIN_INI *)
                                   00001BD8 
               stack 1 = 00000000 ( 00000060 )
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004B5C - 00004BAB (0x50 bytes), align: 2
  Segment part 2.             Intra module refs:   ReadMainIni(MAIN_INI *)

    *************************************************************************

  FILE NAME : Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.r79
  LIBRARY MODULE, NAME : ?fpStatus

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: CODE_AREA 00004C90 - 00004C93 (0x4 bytes), align: 2
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __FloatingPointFlags    00004C90        Segment part 0 (?SetInvalidFlag)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?errno

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: CODE_AREA 00004C94 - 00004C9B (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   _Geterrno
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Errno                  00004C98 
           _Tls_setup__Errno       00004C94 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001F28 - 00001F4B (0x24 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Geterrno               00001F28        _FDtento (?xfdtento)
                                                   _FLog (?xflog)
                                                   _Stoul (?xstoul)
                                                   powf (?powf)
                                                   strtol (?strtol)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 00004C84 - 00004C8F (0xc bytes), align: 2
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        00004C84 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memchr

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00001F4C - 00001F7B (0x30 bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Memchr                 00001F4C        _Stoul (?xstoul)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?powf

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00001F7C - 0000250F (0x594 bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           powf                    00001F7C        RecalkPos(DISP_OBJ_MAP *) (map_object)
               stack 1 = 00000000 ( 00000030 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strtof

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00002510 - 00002523 (0x14 bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strtof                  00002510        str_tof(char *, char * *) (read_ini)
               stack 1 = 00000000 ( 00000008 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?strtol

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00002524 - 000025E7 (0xc4 bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strtol                  00002524        ReadCsvFile(TOWN *) (read_csv)
                                                   ReadMainIni(MAIN_INI *) (read_ini)
               stack 1 = 00000000 ( 00000018 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xfdint

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 00004BAC - 00004BD3 (0x28 bytes), align: 2
  Segment part 2.             Intra module refs:   _FDint
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000025E8 - 000026DB (0xf4 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FDint                  000025E8        powf (?powf)
               stack 1 = 00000000 ( 00000008 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xfdnorm

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 000026DC - 000027B3 (0xd8 bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FDnorm                 000026DC        _FDscale (?xfdscale)
                                                   _FDtento (?xfdtento)
                                                   _FLog (?xflog)
                                                   powf (?powf)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xfdscale

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 000027B4 - 0000291F (0x16c bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FDscale                000027B4        _FDtento (?xfdtento)
                                                   _FExp (?xfexp)
               stack 1 = 00000000 ( 00000010 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xfdtento

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 00004BD4 - 00004BEB (0x18 bytes), align: 2
  Segment part 2.             Intra module refs:   _FDtento
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002920 - 00002C1B (0x2fc bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FDtento                00002920        _Stof (?xstof)
               stack 1 = 00000000 ( 00000028 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xfexp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00002C1C - 00002E4B (0x230 bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FExp                   00002C1C        powf (?powf)
               stack 1 = 00000000 ( 00000030 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xflog

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00002E4C - 0000310B (0x2c0 bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FLog                   00002E4C        powf (?powf)
               stack 1 = 00000000 ( 00000020 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xfvalues

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 00004BEC - 00004BF3 (0x8 bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FEps                   00004BEC        _FExp (?xfexp)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004BF4 - 00004BFB (0x8 bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FInf                   00004BF4        _FDscale (?xfdscale)
                                                   _FExp (?xfexp)
                                                   _FLog (?xflog)
                                                   _Stof (?xstof)
                                                   powf (?powf)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004BFC - 00004C03 (0x8 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FNan                   00004BFC        _FLog (?xflog)
                                                   _Stof (?xstof)
                                                   powf (?powf)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 00004C04 - 00004C07 (0x4 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _FZero                  00004C04        powf (?powf)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xstof

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 0000310C - 000031BB (0xb0 bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Stof                   0000310C        strtof (?strtof)
               stack 1 = 00000000 ( 00000028 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xstoflt

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 00004C08 - 00004C27 (0x20 bytes), align: 2
  Segment part 2.             Intra module refs:   _Stoflt
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000031BC - 0000345B (0x2a0 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Stoflt                 000031BC        _Stof (?xstof)
               stack 1 = 00000000 ( 0000001C )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xstopfx

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 0000345C - 0000348B (0x30 bytes), align: 2
  Segment part 2.             Intra module refs:   isalnum
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _LocaleC_isalpha        0000345C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000348C - 000034BB (0x30 bytes), align: 2
  Segment part 3.             Intra module refs:   _Stopfx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           isalnum                 0000348C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000034BC - 0000361F (0x164 bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Stopfx                 000034BC        _Stof (?xstof)
               stack 1 = 00000000 ( 00000010 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xstoul

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 00004C28 - 00004C77 (0x50 bytes), align: 2
  Segment part 2.             Intra module refs:   _Stoul
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003620 - 000037CF (0x1b0 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Stoul                  00003620        strtol (?strtol)
               stack 1 = 00000000 ( 00000030 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?div_module

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 000037D0 - 000037DB (0xc bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ??divu32_a              000037D0        _Stoul (?xstoul)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000037DC - 000038B3 (0xd8 bytes), align: 2
  Segment part 12.            Intra module refs:   ??divu32_a

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?GetDenormal

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 000038B4 - 00003913 (0x60 bytes), align: 2
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?GetDenormalX           000038B4        Segment part 1 (?D_DivDouble)
                                                   Segment part 1 (?D_MulFloat)
           ?GetDenormalY           000038E4        Segment part 1 (?D_DivDouble)
                                                   Segment part 1 (?D_MulFloat)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?D_DOUBLE2FLOAT

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00003914 - 000039CF (0xbc bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_d2f             00003914 
           __doubleToFloat         00003914        _FExp (?xfexp)
           __doubleToFloat::??rA   00003914 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLOATEDOUBLE

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 000039D0 - 00003A33 (0x64 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_f2d             000039D0 
           __floatToDouble         000039D0        MapGuiOnRedraw(DISP_OBJ_MAP *, int, int, int) (map_object)
                                                   _FExp (?xfexp)
           __floatToDouble::??rA   000039D0 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SetInvalidFlag

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00003A34 - 00003A4F (0x1c bytes), align: 2
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SetInvalidFlag         00003A38        __aeabi_cfcmple (?FLT_LT)
           ?SetInvalidFlagClr      00003A34        __aeabi_cfrcmple (?FLT_GE)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?D_MulFloat

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00003A50 - 00003C87 (0x238 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __dMul                  00003A50        _FExp (?xfexp)
           __dMul::??rA            00003A50 
           __aeabi_dmul            00003A50 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?D_DivDouble

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00003C88 - 00003FBB (0x334 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_ddiv            00003C88 
           __dDiv                  00003C88        _FExp (?xfexp)
           __dDiv::??rA            00003C88 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?D_SubDouble

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00003FBC - 000041B3 (0x1f8 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_dsub            00003FBC 
           __dSub                  00003FBC        _FExp (?xfexp)
           __dSub::??rA            00003FBC 
           __DoSub                 00003FCC        Segment part 1 (?D_AddDouble)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?D_AddDouble

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 000041B4 - 000042F7 (0x144 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_dadd            000041B4 
           __dAdd                  000041B4        _FExp (?xfexp)
           __dAdd::??rA            000041B4 
           __DoAdd                 000041C4        Segment part 1 (?D_SubDouble)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?F_LONG2FLOAT

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 000042F8 - 0000435F (0x68 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_i2f             000042F8 
           __longToFloat           000042F8        RecalkPos(DISP_OBJ_MAP *) (map_object)
                                                   _FExp (?xfexp)
                                                   _FLog (?xflog)
                                                   _Stof (?xstof)
                                                   powf (?powf)
           __longToFloat::??rA     000042F8 
           __longToFloatStart      0000430C 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?F_FLOAT2LONG

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00004360 - 000043B7 (0x58 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_f2iz            00004360 
           __floatToLong           00004360        RecalkPos(DISP_OBJ_MAP *) (map_object)
                                                   _FExp (?xfexp)
                                                   powf (?powf)
           __floatToLong::??rA     00004360 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_EQ

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 000043B8 - 000043DF (0x28 bytes), align: 2
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_cfcmpeq         000043B8        Segment part 1 (?F_CmpFloat)
                                                   __fNotEqual (?F_CmpFloat1)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?F_CmpFloat

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 000043E0 - 000043F7 (0x18 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_fcmpeq          000043E0 
           __fEqual                000043E0        _FDtento (?xfdtento)
                                                   _FExp (?xfexp)
                                                   powf (?powf)
           __fEqual::??rA          000043E0 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?F_CmpFloat1

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 000043F8 - 0000440F (0x18 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __fNotEqual             000043F8        powf (?powf)
           __fNotEqual::??rA       000043F8 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_GE

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00004410 - 00004447 (0x38 bytes), align: 2
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_cfrcmple        00004410        Segment part 1 (?F_CmpFloat5)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?F_CmpFloat5

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00004448 - 0000445F (0x18 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_fcmpge          00004448 
           __fGreaterEqual         00004448        FindTownByCiLac(MAIN_INI *, int, int) (read_csv)
                                                   _FExp (?xfexp)
                                                   powf (?powf)
           __fGreaterEqual::??rA   00004448 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLT_LT

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00004460 - 00004497 (0x38 bytes), align: 2
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_cfcmple         00004460        Segment part 1 (?F_CmpFloat4)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?F_CmpFloat4

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00004498 - 000044AF (0x18 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_fcmplt          00004498 
           __fLess                 00004498        _FExp (?xfexp)
                                                   _FLog (?xflog)
                                                   powf (?powf)
           __fLess::??rA           00004498 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?F_MulFloat

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 000044B0 - 0000463F (0x190 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __fMul                  000044B0        RecalkPos(DISP_OBJ_MAP *) (map_object)
                                                   _FDtento (?xfdtento)
                                                   _FExp (?xfexp)
                                                   _FLog (?xflog)
                                                   powf (?powf)
           __fMul::??rA            000044B0 
           __aeabi_fmul            000044B0 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?F_DivFloat

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00004640 - 00004827 (0x1e8 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_fdiv            00004640 
           __fDiv                  00004640        RecalkPos(DISP_OBJ_MAP *) (map_object)
                                                   _FDtento (?xfdtento)
                                                   _FLog (?xflog)
                                                   powf (?powf)
                                                   str_tof(char *, char * *) (read_ini)
           __fDiv::??rA            00004640 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?floatSoftLib

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00004828 - 00004967 (0x140 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_fsub            00004828 
           __fSub                  00004828        RecalkPos(DISP_OBJ_MAP *) (map_object)
                                                   _FExp (?xfexp)
                                                   _FLog (?xflog)
                                                   powf (?powf)
           __fSub::??rA            00004828 
           __fDoSub                00004834        Segment part 1 (?F_AddDouble)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?F_AddDouble

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00004968 - 00004A37 (0xd0 bytes), align: 2
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __aeabi_fadd            00004968 
           __fAdd                  00004968        RecalkPos(DISP_OBJ_MAP *) (map_object)
                                                   _FExp (?xfexp)
                                                   _FLog (?xflog)
                                                   powf (?powf)
                                                   str_tof(char *, char * *) (read_ini)
           __fAdd::??rA            00004968 
           __fDoAdd                00004974        Segment part 1 (?floatSoftLib)




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
ELFBEGIN             CODE_AREA           00000000                     rel    0
DATA_ID              CODE_AREA      00000000 - 0000000B           C   rel    2
START                CODE_AREA           0000000C                     dse    0
CODE                 CODE_AREA      0000000C - 00004A37        4A2C   rel    2
DATA_C               CODE_AREA      00004A38 - 00004C77         240   rel    2
INITTAB              CODE_AREA      00004C78 - 00004C8F          18   rel    2
DATA_Z               CODE_AREA      00004C90 - 00004C9B           C   rel    2
DATA_N               CODE_AREA           00004C9C                     dse    0
CONFIG_C             CODE_AREA           00004C9C                     dse    0
DYN_CONST            CODE_AREA      00004C9C - 00004CBF          24   rel    2
DYN_CONST_DESC       CODE_AREA      00004CC0 - 00004CC3           4   rel    2
DYN_PAGE             CODE_AREA      00004CC4 - 00004CDB          18   rel    2
DYN_PAGE_DESC        CODE_AREA      00004CDC - 00004CDF           4   rel    2
DATA_I               DATA_AREA      00000000 - 0000000B           C   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 19 680 bytes of CODE memory
     12 bytes of DATA memory

Errors: none
Warnings: none

