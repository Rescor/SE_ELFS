//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:58:05 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\Error /
//                       IAR.c                                               /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\Error /
//                       IAR.c -D NDEBUG -D OLDFUNCTIONS -lC                 /
//                       Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\Relea /
//                       se\List\ -lA Z:\home\perk11\www\perk11.info\svn\SE\ /
//                       Gono4ki\Release\List\ -o                            /
//                       Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\Relea /
//                       se\Obj\ -s9 --no_unroll --no_inline --cpu_mode arm  /
//                       --endian little --cpu ARM926EJ-S --stack_align 4    /
//                       --interwork -e --enable_multibytes --fpu None       /
//                       --eec++ --dlib_config Z:\home\perk11\IAR2\arm\LIB\d /
//                       l5tpainl8n.h -I Z:\home\perk11\IAR2\arm\INC\        /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\Relea /
//                       se\List\ErrorIAR.s79                                /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME ErrorIAR

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??GetNamesOfIMN
        FUNCTION ??GetNamesOfIMN,0203H
        MULTWEAK ??GetNamesOfIMN??rT
        PUBLIC ??ShowInfo
        FUNCTION ??ShowInfo,0203H
        LOCFRAME CSTACK, 64, STACK
        MULTWEAK ??ShowInfo??rT
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        

??GetNamesOfIMN??rT SYMBOL "??rT", ??GetNamesOfIMN

??ShowInfo??rT      SYMBOL "??rT", ??ShowInfo


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??GetNamesOfIMN??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??GetNamesOfIMN
// Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\ErrorIAR.c
//    1 #include "..\\include\Lib_Clara.h"
//    2 #include "..\\include\Dir.h"
//    3 #include "..\\include\var_arg.h"
//    4 #include "..\\include\cfg_items.h"
//    5 #include "StructBook.h"
//    6 #include "Menu.h"
//    7 #include "MyFUNC.h"
//    8 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??GetNamesOfIMN
        ARM
//    9 wchar_t*GetNamesOfIMN(int x, int)
//   10 {
//   11   switch(x)
??GetNamesOfIMN:
        LDR      R1,??GetNamesOfIMN_1+0x4  ;; `?<Constant L"\\x424\\x43e\\x43d">`
        CMP      R0,#+0
        BEQ      ??GetNamesOfIMN_2
        SUBS     R0,R0,#+1
        BEQ      ??GetNamesOfIMN_3
        SUBS     R0,R0,#+1
        BEQ      ??GetNamesOfIMN_4
        ADR      R0,??GetNamesOfIMN_1  ;; 0x20, 0x00, 0x00, 0x00
        BX       LR
//   12   {
//   13   case 0:
//   14     return L"Фон";
??GetNamesOfIMN_2:
        MOV      R0,R1
        BX       LR
//   15   case 1:
//   16     return L"Игровой фон";
??GetNamesOfIMN_3:
        ADD      R0,R1,#+8
        BX       LR
//   17   case 2:
//   18     return L"Кубик";
??GetNamesOfIMN_4:
        ADD      R0,R1,#+32
        BX       LR
        DATA
??GetNamesOfIMN_1:
        DC8      0x20, 0x00, 0x00, 0x00
        DC32     `?<Constant L"\\x424\\x43e\\x43d">`
        CFI EndBlock cfiBlock1
//   19   }
//   20   return L" ";
//   21 }

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??ShowInfo??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??ShowInfo

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??ShowInfo
        ARM
//   22 void ShowInfo()
//   23 {
??ShowInfo:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
//   24   int met[10];
//   25   met[0]=STR("Название: Gono4ki v0.2fix\n");
        LDR      R4,??ShowInfo_1  ;; `?<Constant L"\\x41d\\x430\\x437\\x432\\x430\\x43d\\x4`
        SUB      SP,SP,#+40
        CFI CFA R13+56
        MOV      R5,#+255
        ORR      R5,R5,#0xFF00
        MOV      R2,R5
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +349
        STR      R0,[SP, #+0]
//   26   met[1]=STR("(c) DoCent aka MoneyMasteR\n\n");
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,R4,#+56
        SWI      +349
        STR      R0,[SP, #+4]
//   27   met[2]=STR("Управление:\n\n");
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,R4,#+116
        SWI      +349
        STR      R0,[SP, #+8]
//   28   met[3]=STR("Дж.вправо, 6 - перемещение машинки вправо\n\n");
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,R4,#+144
        SWI      +349
        STR      R0,[SP, #+12]
//   29   met[4]=STR("Дж.влево, 4 - перемещение машинки влево\n\n");
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,R4,#+232
        SWI      +349
        STR      R0,[SP, #+16]
//   30   met[5]=STR("Дж.центр, 5 - ускорение 3х\n\n");  
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,R4,#+316
        SWI      +349
        STR      R0,[SP, #+20]
//   31   met[6]=STR("Короткое Назад - пауза\n\n");
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,R4,#+376
        SWI      +349
        STR      R0,[SP, #+24]
//   32   met[7]=STR("Долгое Назад - выход\n\n");
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,R4,#+428
        SWI      +349
        STR      R0,[SP, #+28]
//   33   met[8]=STR("# - вкл./откл. звук\n\n");
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,R4,#+476
        SWI      +349
        STR      R0,[SP, #+32]
//   34   met[9]=STR("* - свернуть\n");
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,R4,#+520
        SWI      +349
        STR      R0,[SP, #+36]
//   35   MessageBox(STR("Инфо"), TextID_Create(met, ENC_TEXTID, 10), NOIMAGE, 2, 0, 0);
        MOV      R2,#+10
        MOV      R1,#+5
        MOV      R0,SP
        SWI      +349
        MOV      R6,R0
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,R4,#+548
        SWI      +349
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+60
        PUSH     {R1}
        CFI CFA R13+64
        MOV      R3,#+2
        MOV      R2,R5
        MOV      R1,R6
        SWI      +599
//   36 }
        ADD      SP,SP,#+48
        CFI CFA R13+16
        POP      {R4-R6,PC}       ;; return
        DATA
??ShowInfo_1:
        DC32     `?<Constant L"\\x41d\\x430\\x437\\x432\\x430\\x43d\\x4`
        CFI EndBlock cfiBlock3

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x424\\x43e\\x43d">`:
        DATA
        DC8 24H, 4, 3EH, 4, 3DH, 4, 0, 0
        DC8 18H, 4, 33H, 4, 40H, 4, 3EH, 4
        DC8 32H, 4, 3EH, 4, 39H, 4, 20H, 0
        DC8 44H, 4, 3EH, 4, 3DH, 4, 0, 0
        DC8 1AH, 4, 43H, 4, 31H, 4, 38H, 4
        DC8 3AH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 20H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41d\\x430\\x437\\x432\\x430\\x43d\\x4`:
        DATA
        DC8 1DH, 4, 30H, 4, 37H, 4, 32H, 4
        DC8 30H, 4, 3DH, 4, 38H, 4, 35H, 4
        DC8 3AH, 0, 20H, 0, 47H, 0, 6FH, 0
        DC8 6EH, 0, 6FH, 0, 34H, 0, 6BH, 0
        DC8 69H, 0, 20H, 0, 76H, 0, 30H, 0
        DC8 2EH, 0, 32H, 0, 66H, 0, 69H, 0
        DC8 78H, 0, 0AH, 0, 0, 0
        DC8 0, 0
        DC8 28H, 0, 63H, 0, 29H, 0, 20H, 0
        DC8 44H, 0, 6FH, 0, 43H, 0, 65H, 0
        DC8 6EH, 0, 74H, 0, 20H, 0, 61H, 0
        DC8 6BH, 0, 61H, 0, 20H, 0, 4DH, 0
        DC8 6FH, 0, 6EH, 0, 65H, 0, 79H, 0
        DC8 4DH, 0, 61H, 0, 73H, 0, 74H, 0
        DC8 65H, 0, 52H, 0, 0AH, 0, 0AH, 0
        DC8 0, 0
        DC8 0, 0
        DC8 23H, 4, 3FH, 4, 40H, 4, 30H, 4
        DC8 32H, 4, 3BH, 4, 35H, 4, 3DH, 4
        DC8 38H, 4, 35H, 4, 3AH, 0, 0AH, 0
        DC8 0AH, 0, 0, 0
        DC8 14H, 4, 36H, 4, 2EH, 0, 32H, 4
        DC8 3FH, 4, 40H, 4, 30H, 4, 32H, 4
        DC8 3EH, 4, 2CH, 0, 20H, 0, 36H, 0
        DC8 20H, 0, 2DH, 0, 20H, 0, 3FH, 4
        DC8 35H, 4, 40H, 4, 35H, 4, 3CH, 4
        DC8 35H, 4, 49H, 4, 35H, 4, 3DH, 4
        DC8 38H, 4, 35H, 4, 20H, 0, 3CH, 4
        DC8 30H, 4, 48H, 4, 38H, 4, 3DH, 4
        DC8 3AH, 4, 38H, 4, 20H, 0, 32H, 4
        DC8 3FH, 4, 40H, 4, 30H, 4, 32H, 4
        DC8 3EH, 4, 0AH, 0, 0AH, 0, 0, 0
        DC8 14H, 4, 36H, 4, 2EH, 0, 32H, 4
        DC8 3BH, 4, 35H, 4, 32H, 4, 3EH, 4
        DC8 2CH, 0, 20H, 0, 34H, 0, 20H, 0
        DC8 2DH, 0, 20H, 0, 3FH, 4, 35H, 4
        DC8 40H, 4, 35H, 4, 3CH, 4, 35H, 4
        DC8 49H, 4, 35H, 4, 3DH, 4, 38H, 4
        DC8 35H, 4, 20H, 0, 3CH, 4, 30H, 4
        DC8 48H, 4, 38H, 4, 3DH, 4, 3AH, 4
        DC8 38H, 4, 20H, 0, 32H, 4, 3BH, 4
        DC8 35H, 4, 32H, 4, 3EH, 4, 0AH, 0
        DC8 0AH, 0, 0, 0
        DC8 14H, 4, 36H, 4, 2EH, 0, 46H, 4
        DC8 35H, 4, 3DH, 4, 42H, 4, 40H, 4
        DC8 2CH, 0, 20H, 0, 35H, 0, 20H, 0
        DC8 2DH, 0, 20H, 0, 43H, 4, 41H, 4
        DC8 3AH, 4, 3EH, 4, 40H, 4, 35H, 4
        DC8 3DH, 4, 38H, 4, 35H, 4, 20H, 0
        DC8 33H, 0, 45H, 4, 0AH, 0, 0AH, 0
        DC8 0, 0
        DC8 0, 0
        DC8 1AH, 4, 3EH, 4, 40H, 4, 3EH, 4
        DC8 42H, 4, 3AH, 4, 3EH, 4, 35H, 4
        DC8 20H, 0, 1DH, 4, 30H, 4, 37H, 4
        DC8 30H, 4, 34H, 4, 20H, 0, 2DH, 0
        DC8 20H, 0, 3FH, 4, 30H, 4, 43H, 4
        DC8 37H, 4, 30H, 4, 0AH, 0, 0AH, 0
        DC8 0, 0
        DC8 0, 0
        DC8 14H, 4, 3EH, 4, 3BH, 4, 33H, 4
        DC8 3EH, 4, 35H, 4, 20H, 0, 1DH, 4
        DC8 30H, 4, 37H, 4, 30H, 4, 34H, 4
        DC8 20H, 0, 2DH, 0, 20H, 0, 32H, 4
        DC8 4BH, 4, 45H, 4, 3EH, 4, 34H, 4
        DC8 0AH, 0, 0AH, 0, 0, 0
        DC8 0, 0
        DC8 23H, 0, 20H, 0, 2DH, 0, 20H, 0
        DC8 32H, 4, 3AH, 4, 3BH, 4, 2EH, 0
        DC8 2FH, 0, 3EH, 4, 42H, 4, 3AH, 4
        DC8 3BH, 4, 2EH, 0, 20H, 0, 37H, 4
        DC8 32H, 4, 43H, 4, 3AH, 4, 0AH, 0
        DC8 0AH, 0, 0, 0
        DC8 2AH, 0, 20H, 0, 2DH, 0, 20H, 0
        DC8 41H, 4, 32H, 4, 35H, 4, 40H, 4
        DC8 3DH, 4, 43H, 4, 42H, 4, 4CH, 4
        DC8 0AH, 0, 0, 0
        DC8 18H, 4, 3DH, 4, 44H, 4, 3EH, 4
        DC8 0, 0
        DC8 0, 0

        END
// 
// 372 bytes in segment CODE
// 608 bytes in segment DATA_C
// 
// 364 bytes of CODE  memory (+ 8 bytes shared)
// 608 bytes of CONST memory
//
//Errors: none
//Warnings: none
