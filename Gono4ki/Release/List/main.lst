##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  22:59:05 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\main.c #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\main.c #
#                        -D NDEBUG -D OLDFUNCTIONS -lC                       #
#                       Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\Releas #
#                       e\List\ -lA Z:\home\perk11\www\perk11.info\svn\SE\Go #
#                       no4ki\Release\List\ -o Z:\home\perk11\www\perk11.inf #
#                       o\svn\SE\Gono4ki\Release\Obj\ -s9 --no_unroll        #
#                       --no_inline --cpu_mode arm --endian little --cpu     #
#                       ARM926EJ-S --stack_align 4 --interwork -e            #
#                       --enable_multibytes --fpu None --eec++               #
#                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8 #
#                       n.h -I Z:\home\perk11\IAR2\arm\INC\                  #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\Releas #
#                       e\List\main.lst                                      #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\Releas #
#                       e\Obj\main.r79                                       #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\main.c
      1          #include "..\\include\Lib_Clara.h"
      2          #include "..\\include\Dir.h"
      3          #include "..\\include\var_arg.h"
      4          #include "..\\include\cfg_items.h"
      5          #include "Menu.h"
      6          #include "StructBook.h"
      7          #include "Rec_Check.h"
      8          #include "OpenNastroiki.h"
      9          #include "Menu.h"
     10          #include "ErrorIAR.h"
     11          #include "MyFUNC.h"
     12          #define del(a) if(a) delete a;
     13          

   \                                 In segment DATA_Z, align 4, align-sorted
     14          MyBook*Game;
   \                     Game:
   \   00000000                      DS8 4
     15          

   \                                 In segment CODE, align 4, keep-with-next
     16          MyBook * GetBookID()
     17          {
     18            return Game;
   \                     ??GetBookID:
   \   00000000   ........           LDR      R0,??DataTable3  ;; Game
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
     19          }
     20          

   \                                 In segment CODE, align 4, keep-with-next
     21          int FreeElf(void*, BOOK*bk)
     22          {
   \                     ??FreeElf:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0100A0E1           MOV      R0,R1
     23            FreeBook(bk);
   \   00000008   2F0100EF           SWI      +303
     24            return 0;
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   0080BDE8           POP      {PC}             ;; return
     25          }
     26          

   \                                 In segment DYN_PAGE, align 4, align-sorted
     27          const PAGE_MSG bk_msglst_gm[] @ "DYN_PAGE"  = 
   \                     bk_msglst_gm:
   \   00000000   42000000....       DC32 66, ??CreateGM, 64, 0H
   \              ....40000000
   \              00000000    
     28          {
     29            PAGE_ENTER_EVENT_TAG,    CreateGM,
     30            NIL_EVENT_TAG,           NULL
     31          };
     32          
     33          const PAGE_DESC bk_gm = {"Game_GuiMenu_Page",0,bk_msglst_gm};
     34          

   \                                 In segment DYN_PAGE, align 4, align-sorted
     35          const PAGE_MSG bk_msglst_base[] @ "DYN_PAGE"  = 
   \                     bk_msglst_base:
   \   00000000   E5030000....       DC32 997, ??FreeElf, 64, 0H
   \              ....40000000
   \              00000000    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x74\\x61\\x72\\x74\\x2e\\x6d\\x70\\`:
   \   00000000   730074006100       DC8 73H, 0, 74H, 0, 61H, 0, 72H, 0
   \              7200        
   \   00000008   74002E006D00       DC8 74H, 0, 2EH, 0, 6DH, 0, 70H, 0
   \              7000        
   \   00000010   33000000           DC8 33H, 0, 0, 0
   \   00000014   4F004B002E00       DC8 4FH, 0, 4BH, 0, 2EH, 0, 6DH, 0
   \              6D00        
   \   0000001C   700033000000       DC8 70H, 0, 33H, 0, 0, 0
   \   00000022   0000               DC8 0, 0
   \   00000024   670061006D00       DC8 67H, 0, 61H, 0, 6DH, 0, 65H, 0
   \              6500        
   \   0000002C   6F0076006500       DC8 6FH, 0, 76H, 0, 65H, 0, 72H, 0
   \              7200        
   \   00000034   2E006D007000       DC8 2EH, 0, 6DH, 0, 70H, 0, 33H, 0
   \              3300        
   \   0000003C   0000               DC8 0, 0
   \   0000003E   0000               DC8 0, 0
   \   00000040   6E0065007700       DC8 6EH, 0, 65H, 0, 77H, 0, 72H, 0
   \              7200        
   \   00000048   650063006F00       DC8 65H, 0, 63H, 0, 6FH, 0, 72H, 0
   \              7200        
   \   00000050   64002E006D00       DC8 64H, 0, 2EH, 0, 6DH, 0, 70H, 0
   \              7000        
   \   00000058   33000000           DC8 33H, 0, 0, 0
   \   0000005C   700061007500       DC8 70H, 0, 61H, 0, 75H, 0, 73H, 0
   \              7300        
   \   00000064   65002E006D00       DC8 65H, 0, 2EH, 0, 6DH, 0, 70H, 0
   \              7000        
   \   0000006C   33000000           DC8 33H, 0, 0, 0
   \   00000070   680069006400       DC8 68H, 0, 69H, 0, 64H, 0, 65H, 0
   \              6500        
   \   00000078   2E006D007000       DC8 2EH, 0, 6DH, 0, 70H, 0, 33H, 0
   \              3300        
   \   00000080   0000               DC8 0, 0
   \   00000082   0000               DC8 0, 0
   \   00000084   66006F006E00       DC8 66H, 0, 6FH, 0, 6EH, 0, 2EH, 0
   \              2E00        
   \   0000008C   70006E006700       DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0
   \              0000        
   \   00000094   66006F006E00       DC8 66H, 0, 6FH, 0, 6EH, 0, 67H, 0
   \              6700        
   \   0000009C   61006D006500       DC8 61H, 0, 6DH, 0, 65H, 0, 2EH, 0
   \              2E00        
   \   000000A4   70006E006700       DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0
   \              0000        
   \   000000AC   630075006200       DC8 63H, 0, 75H, 0, 62H, 0, 2EH, 0
   \              2E00        
   \   000000B4   70006E006700       DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0
   \              0000        
   \   000000BC   55006E006B00       DC8 55H, 0, 6EH, 0, 6BH, 0, 6EH, 0
   \              6E00        
   \   000000C4   6F0077000000       DC8 6FH, 0, 77H, 0, 0, 0
   \   000000CA   0000               DC8 0, 0
   \   000000CC   476F6E6F346B       DC8 "Gono4ki"
   \              6900        
   \   000000D4   ........0000       DC32 `?<Constant "Game_GuiMenu_Page">`, 0H, bk_msglst_gm
   \              0000........
   \   000000E0   ........0000       DC32 `?<Constant "Game_Base_Page">`, 0H, bk_msglst_base
   \              0000........
     36          {
     37            ELF_TERMINATE_EVENT,     FreeElf,
     38            NIL_EVENT_TAG,           NULL
     39          };
     40          
     41          const PAGE_DESC bk_base = {"Game_Base_Page",0,bk_msglst_base};
     42          
     43          #pragma segment="ELFBEGIN"

   \                                 In segment CODE, align 4, keep-with-next
     44          void elf_exit(void){
   \                     ??elf_exit:
   \   00000000   00402DE9           PUSH     {LR}
     45            kill_data(__segment_begin("ELFBEGIN"), (void(*)(void*))mfree_adr());
   \   00000004   048100EF           SWI      +33028
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??elf_exit_1  ;; SFB(ELFBEGIN)
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??elf_exit_1:
   \   00000018   ........           DC32     SFB(ELFBEGIN)
     46          }
     47          

   \                                 In segment CODE, align 4, keep-with-next
     48          static void onMyBookClose(BOOK * bk)
     49          {
   \                     ??onMyBookClose:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     50            SaveSettings(((MyBook*)bk)->nast->sound, ((MyBook*)bk)->nast->im, ((MyBook*)bk)->nast->rez);
   \   00000008   340394E5           LDR      R0,[R4, #+820]
   \   0000000C   082090E5           LDR      R2,[R0, #+8]
   \   00000010   041090E5           LDR      R1,[R0, #+4]
   \   00000014   000090E5           LDR      R0,[R0, #+0]
   \   00000018   ........           _BLF     ??SaveSettings,??SaveSettings??rA
     51            ImagesDel(bk);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           _BLF     ??ImagesDel,??ImagesDel??rA
     52            SUBPROC(elf_exit);
   \   00000024   ........           LDR      R0,??DataTable2  ;; ??elf_exit
   \   00000028   080100EF           SWI      +264
     53          }
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
     54          

   \                                 In segment CODE, align 4, keep-with-next
     55          int main()
     56          {
   \                     main:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
     57            if((BOOK*)MyBK())
   \   00000004   ........           _BLF     ??MyBK,??MyBK??rA
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0600000A           BEQ      ??main_0
     58            {
     59              BookObj_SetFocus((BOOK*)MyBK(),0);    
   \   00000010   ........           _BLF     ??MyBK,??MyBK??rA
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   320100EF           SWI      +306
     60              SUBPROC(elf_exit);
   \   0000001C   ........           LDR      R0,??DataTable2  ;; ??elf_exit
   \   00000020   080100EF           SWI      +264
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   F081BDE8           POP      {R4-R8,PC}
     61            }
     62            else
     63            {
     64            int j, i;
     65            Game=new MyBook;
   \                     ??main_0:
   \   0000002C   ........           LDR      R4,??DataTable3  ;; Game
     66            memset(Game,0,sizeof(MyBook));
     67            CreateBook((BOOK*)Game,onMyBookClose,&bk_base,NameMyElf,-1,0);
   \   00000030   40559FE5           LDR      R5,??main_1      ;; `?<Constant L"\\x73\\x74\\x61\\x72\\x74\\x2e\\x6d\\x70\\`
   \   00000034   D80FA0E3           MOV      R0,#+864
   \   00000038   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000003C   000084E5           STR      R0,[R4, #+0]
   \   00000040   D82FA0E3           MOV      R2,#+864
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   120100EF           SWI      +274
   \   0000004C   28159FE5           LDR      R1,??main_1+0x4  ;; ??onMyBookClose
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   01002DE9           PUSH     {R0}
   \   00000058   CC3085E2           ADD      R3,R5,#+204
   \   0000005C   E02085E2           ADD      R2,R5,#+224
     68            Game->guido=0;
   \   00000060   0060A0E3           MOV      R6,#+0
   \   00000064   0000E0E1           MVN      R0,R0
   \   00000068   01002DE9           PUSH     {R0}
   \   0000006C   000094E5           LDR      R0,[R4, #+0]
   \   00000070   2B0100EF           SWI      +299
   \   00000074   000094E5           LDR      R0,[R4, #+0]
   \   00000078   846180E5           STR      R6,[R0, #+388]
     69            Game->gui=0;
   \   0000007C   000094E5           LDR      R0,[R4, #+0]
   \   00000080   8C6180E5           STR      R6,[R0, #+396]
     70            for(i=0; i<10; i++)
   \   00000084   0000A0E3           MOV      R0,#+0
   \   00000088   08D08DE2           ADD      SP,SP,#+8
     71            {
     72              for(j=0; j<10; j++)
   \                     ??main_2:
   \   0000008C   0010A0E3           MOV      R1,#+0
     73              {
     74                Game->cub[i][j]=0;
   \                     ??main_3:
   \   00000090   003094E5           LDR      R3,[R4, #+0]
   \   00000094   2820A0E3           MOV      R2,#+40
   \   00000098   923023E0           MLA      R3,R2,R0,R3
   \   0000009C   012183E0           ADD      R2,R3,R1, LSL #+2
   \   000000A0   906182E5           STR      R6,[R2, #+400]
     75              }
   \   000000A4   011081E2           ADD      R1,R1,#+1
   \   000000A8   0A0051E3           CMP      R1,#+10
   \   000000AC   F7FFFFBA           BLT      ??main_3
     76            }
   \   000000B0   010080E2           ADD      R0,R0,#+1
   \   000000B4   0A0050E3           CMP      R0,#+10
   \   000000B8   F3FFFFBA           BLT      ??main_2
     77            Game->tank=new COORDINAT;
   \   000000BC   0800A0E3           MOV      R0,#+8
   \   000000C0   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000C4   001094E5           LDR      R1,[R4, #+0]
     78            Game->tank->x=0;
     79            Game->tank->y=0;
     80            Game->image=new IMAGES;
     81            for(i=0; i<3; i++)
   \   000000C8   0070A0E3           MOV      R7,#+0
   \   000000CC   200381E5           STR      R0,[R1, #+800]
   \   000000D0   000094E5           LDR      R0,[R4, #+0]
   \   000000D4   200390E5           LDR      R0,[R0, #+800]
   \   000000D8   006080E5           STR      R6,[R0, #+0]
   \   000000DC   000094E5           LDR      R0,[R4, #+0]
   \   000000E0   200390E5           LDR      R0,[R0, #+800]
   \   000000E4   046080E5           STR      R6,[R0, #+4]
   \   000000E8   1800A0E3           MOV      R0,#+24
   \   000000EC   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000F0   001094E5           LDR      R1,[R4, #+0]
   \   000000F4   240381E5           STR      R0,[R1, #+804]
     82            {
     83              Game->image->im[i]=new IMG;
   \                     ??main_4:
   \   000000F8   1800A0E3           MOV      R0,#+24
   \   000000FC   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000100   001094E5           LDR      R1,[R4, #+0]
   \   00000104   241391E5           LDR      R1,[R1, #+804]
   \   00000108   070181E7           STR      R0,[R1, +R7, LSL #+2]
     84              Game->image->fi[i]=0;
   \   0000010C   000094E5           LDR      R0,[R4, #+0]
   \   00000110   240390E5           LDR      R0,[R0, #+804]
   \   00000114   070180E0           ADD      R0,R0,R7, LSL #+2
   \   00000118   0C6080E5           STR      R6,[R0, #+12]
     85            }
   \   0000011C   017087E2           ADD      R7,R7,#+1
   \   00000120   030057E3           CMP      R7,#+3
   \   00000124   F3FFFFBA           BLT      ??main_4
     86            Game->lvl=0;
   \   00000128   000094E5           LDR      R0,[R4, #+0]
     87            Game->speed=0;
     88            Game->point=0;
     89            Game->nast=new NASTROIKI;
     90            Game->nast->im=new IMGN;
     91            Game->nast->sound=new SOUND;
     92            Game->nast->rez=new TAB;
     93            for(i=0; i<6; i++)
   \   0000012C   0170A0E3           MOV      R7,#+1
   \   00000130   286380E5           STR      R6,[R0, #+808]
   \   00000134   000094E5           LDR      R0,[R4, #+0]
   \   00000138   2C6380E5           STR      R6,[R0, #+812]
   \   0000013C   000094E5           LDR      R0,[R4, #+0]
   \   00000140   306380E5           STR      R6,[R0, #+816]
   \   00000144   0C00A0E3           MOV      R0,#+12
   \   00000148   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000014C   001094E5           LDR      R1,[R4, #+0]
   \   00000150   340381E5           STR      R0,[R1, #+820]
   \   00000154   C10FA0E3           MOV      R0,#+772
   \   00000158   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000015C   001094E5           LDR      R1,[R4, #+0]
   \   00000160   341391E5           LDR      R1,[R1, #+820]
   \   00000164   040081E5           STR      R0,[R1, #+4]
   \   00000168   1C00A0E3           MOV      R0,#+28
   \   0000016C   C00E80E3           ORR      R0,R0,#0xC00
   \   00000170   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000174   001094E5           LDR      R1,[R4, #+0]
   \   00000178   341391E5           LDR      R1,[R1, #+820]
   \   0000017C   000081E5           STR      R0,[R1, #+0]
   \   00000180   0C00A0E3           MOV      R0,#+12
   \   00000184   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000188   001094E5           LDR      R1,[R4, #+0]
   \   0000018C   341391E5           LDR      R1,[R1, #+820]
   \   00000190   080081E5           STR      R0,[R1, #+8]
   \   00000194   0000A0E3           MOV      R0,#+0
     94            {
     95              Game->nast->sound->status[i]=1;
   \                     ??main_5:
   \   00000198   001094E5           LDR      R1,[R4, #+0]
   \   0000019C   341391E5           LDR      R1,[R1, #+820]
   \   000001A0   001091E5           LDR      R1,[R1, #+0]
   \   000001A4   001181E0           ADD      R1,R1,R0, LSL #+2
   \   000001A8   007C81E5           STR      R7,[R1, #+3072]
     96            }
   \   000001AC   010080E2           ADD      R0,R0,#+1
   \   000001B0   060050E3           CMP      R0,#+6
   \   000001B4   F7FFFFBA           BLT      ??main_5
     97            Game->nast->sound->sound=1;
   \   000001B8   000094E5           LDR      R0,[R4, #+0]
     98            wstrcpy(Game->nast->sound->names[0], L"start.mp3");
   \   000001BC   0510A0E1           MOV      R1,R5
   \   000001C0   340390E5           LDR      R0,[R0, #+820]
     99            wstrcpy(Game->nast->sound->names[1], L"OK.mp3");
   \   000001C4   808FA0E3           MOV      R8,#+512
   \   000001C8   000090E5           LDR      R0,[R0, #+0]
   \   000001CC   187C80E5           STR      R7,[R0, #+3096]
   \   000001D0   000094E5           LDR      R0,[R4, #+0]
   \   000001D4   340390E5           LDR      R0,[R0, #+820]
   \   000001D8   000090E5           LDR      R0,[R0, #+0]
   \   000001DC   520100EF           SWI      +338
   \   000001E0   000094E5           LDR      R0,[R4, #+0]
   \   000001E4   141085E2           ADD      R1,R5,#+20
   \   000001E8   340390E5           LDR      R0,[R0, #+820]
   \   000001EC   000090E5           LDR      R0,[R0, #+0]
   \   000001F0   000088E0           ADD      R0,R8,R0
   \   000001F4   520100EF           SWI      +338
    100            wstrcpy(Game->nast->sound->names[2], L"gameover.mp3");
   \   000001F8   000094E5           LDR      R0,[R4, #+0]
   \   000001FC   241085E2           ADD      R1,R5,#+36
   \   00000200   340390E5           LDR      R0,[R0, #+820]
   \   00000204   000090E5           LDR      R0,[R0, #+0]
   \   00000208   400E80E2           ADD      R0,R0,#+1024
   \   0000020C   520100EF           SWI      +338
    101            wstrcpy(Game->nast->sound->names[3], L"newrecord.mp3");
   \   00000210   000094E5           LDR      R0,[R4, #+0]
   \   00000214   401085E2           ADD      R1,R5,#+64
   \   00000218   340390E5           LDR      R0,[R0, #+820]
   \   0000021C   000090E5           LDR      R0,[R0, #+0]
   \   00000220   600E80E2           ADD      R0,R0,#+1536
   \   00000224   520100EF           SWI      +338
    102            wstrcpy(Game->nast->sound->names[4], L"pause.mp3");
   \   00000228   000094E5           LDR      R0,[R4, #+0]
   \   0000022C   5C1085E2           ADD      R1,R5,#+92
   \   00000230   340390E5           LDR      R0,[R0, #+820]
   \   00000234   000090E5           LDR      R0,[R0, #+0]
   \   00000238   800E80E2           ADD      R0,R0,#+2048
   \   0000023C   520100EF           SWI      +338
    103            wstrcpy(Game->nast->sound->names[5], L"hide.mp3");
   \   00000240   000094E5           LDR      R0,[R4, #+0]
   \   00000244   701085E2           ADD      R1,R5,#+112
   \   00000248   340390E5           LDR      R0,[R0, #+820]
   \   0000024C   000090E5           LDR      R0,[R0, #+0]
   \   00000250   A00E80E2           ADD      R0,R0,#+2560
   \   00000254   520100EF           SWI      +338
    104            wstrcpy(Game->nast->im->names[0], L"fon.png");
   \   00000258   000094E5           LDR      R0,[R4, #+0]
   \   0000025C   841085E2           ADD      R1,R5,#+132
   \   00000260   340390E5           LDR      R0,[R0, #+820]
   \   00000264   040090E5           LDR      R0,[R0, #+4]
   \   00000268   520100EF           SWI      +338
    105            wstrcpy(Game->nast->im->names[1], L"fongame.png");
   \   0000026C   000094E5           LDR      R0,[R4, #+0]
   \   00000270   941085E2           ADD      R1,R5,#+148
   \   00000274   340390E5           LDR      R0,[R0, #+820]
   \   00000278   040090E5           LDR      R0,[R0, #+4]
   \   0000027C   400F80E2           ADD      R0,R0,#+256
   \   00000280   520100EF           SWI      +338
    106            wstrcpy(Game->nast->im->names[2], L"cub.png");
   \   00000284   000094E5           LDR      R0,[R4, #+0]
   \   00000288   AC1085E2           ADD      R1,R5,#+172
   \   0000028C   340390E5           LDR      R0,[R0, #+820]
   \   00000290   040090E5           LDR      R0,[R0, #+4]
   \   00000294   000088E0           ADD      R0,R8,R0
   \   00000298   520100EF           SWI      +338
    107            Game->nast->rez->te=new TABL;
   \   0000029C   C800A0E3           MOV      R0,#+200
   \   000002A0   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000002A4   001094E5           LDR      R1,[R4, #+0]
    108            Game->megaspeed=1;
    109            Game->nast->im->on=0;
    110            Game->nast->rez->tn=new TABL;
    111            Game->nast->rez->th=new TABL;
    112            for(i=0; i<10; i++)
   \   000002A8   0080A0E3           MOV      R8,#+0
   \   000002AC   341391E5           LDR      R1,[R1, #+820]
   \   000002B0   081091E5           LDR      R1,[R1, #+8]
   \   000002B4   000081E5           STR      R0,[R1, #+0]
   \   000002B8   000094E5           LDR      R0,[R4, #+0]
   \   000002BC   587380E5           STR      R7,[R0, #+856]
   \   000002C0   000094E5           LDR      R0,[R4, #+0]
   \   000002C4   340390E5           LDR      R0,[R0, #+820]
   \   000002C8   040090E5           LDR      R0,[R0, #+4]
   \   000002CC   006380E5           STR      R6,[R0, #+768]
   \   000002D0   C800A0E3           MOV      R0,#+200
   \   000002D4   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000002D8   001094E5           LDR      R1,[R4, #+0]
   \   000002DC   341391E5           LDR      R1,[R1, #+820]
   \   000002E0   081091E5           LDR      R1,[R1, #+8]
   \   000002E4   040081E5           STR      R0,[R1, #+4]
   \   000002E8   C800A0E3           MOV      R0,#+200
   \   000002EC   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000002F0   001094E5           LDR      R1,[R4, #+0]
   \   000002F4   341391E5           LDR      R1,[R1, #+820]
   \   000002F8   081091E5           LDR      R1,[R1, #+8]
   \   000002FC   080081E5           STR      R0,[R1, #+8]
    113            {
    114              Game->nast->rez->te->rezultat[i]=0;
   \                     ??main_6:
   \   00000300   000094E5           LDR      R0,[R4, #+0]
    115              Game->nast->rez->tn->rezultat[i]=0;
    116              Game->nast->rez->th->rezultat[i]=0;
    117              wstrcpy(Game->nast->rez->te->name[i], L"Unknow");
   \   00000304   BC1085E2           ADD      R1,R5,#+188
   \   00000308   340390E5           LDR      R0,[R0, #+820]
   \   0000030C   080090E5           LDR      R0,[R0, #+8]
   \   00000310   000090E5           LDR      R0,[R0, #+0]
   \   00000314   080180E0           ADD      R0,R0,R8, LSL #+2
   \   00000318   A06080E5           STR      R6,[R0, #+160]
   \   0000031C   000094E5           LDR      R0,[R4, #+0]
   \   00000320   340390E5           LDR      R0,[R0, #+820]
   \   00000324   080090E5           LDR      R0,[R0, #+8]
   \   00000328   040090E5           LDR      R0,[R0, #+4]
   \   0000032C   080180E0           ADD      R0,R0,R8, LSL #+2
   \   00000330   A06080E5           STR      R6,[R0, #+160]
   \   00000334   000094E5           LDR      R0,[R4, #+0]
   \   00000338   340390E5           LDR      R0,[R0, #+820]
   \   0000033C   080090E5           LDR      R0,[R0, #+8]
   \   00000340   080090E5           LDR      R0,[R0, #+8]
   \   00000344   080180E0           ADD      R0,R0,R8, LSL #+2
   \   00000348   A06080E5           STR      R6,[R0, #+160]
   \   0000034C   000094E5           LDR      R0,[R4, #+0]
   \   00000350   340390E5           LDR      R0,[R0, #+820]
   \   00000354   080090E5           LDR      R0,[R0, #+8]
   \   00000358   000090E5           LDR      R0,[R0, #+0]
   \   0000035C   080280E0           ADD      R0,R0,R8, LSL #+4
   \   00000360   520100EF           SWI      +338
    118              wstrcpy(Game->nast->rez->tn->name[i], L"Unknow");
   \   00000364   000094E5           LDR      R0,[R4, #+0]
   \   00000368   BC1085E2           ADD      R1,R5,#+188
   \   0000036C   340390E5           LDR      R0,[R0, #+820]
   \   00000370   080090E5           LDR      R0,[R0, #+8]
   \   00000374   040090E5           LDR      R0,[R0, #+4]
   \   00000378   080280E0           ADD      R0,R0,R8, LSL #+4
   \   0000037C   520100EF           SWI      +338
    119              wstrcpy(Game->nast->rez->th->name[i], L"Unknow");
   \   00000380   000094E5           LDR      R0,[R4, #+0]
   \   00000384   BC1085E2           ADD      R1,R5,#+188
   \   00000388   340390E5           LDR      R0,[R0, #+820]
   \   0000038C   080090E5           LDR      R0,[R0, #+8]
   \   00000390   080090E5           LDR      R0,[R0, #+8]
   \   00000394   080280E0           ADD      R0,R0,R8, LSL #+4
   \   00000398   520100EF           SWI      +338
    120            }
   \   0000039C   018088E2           ADD      R8,R8,#+1
   \   000003A0   0A0058E3           CMP      R8,#+10
   \   000003A4   D5FFFFBA           BLT      ??main_6
    121            Game->dis[0]=new DISPLAY;
   \   000003A8   1400A0E3           MOV      R0,#+20
   \   000003AC   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000003B0   002094E5           LDR      R2,[R4, #+0]
   \   000003B4   CF1FA0E3           MOV      R1,#+828
   \   000003B8   020081E7           STR      R0,[R1, +R2]
    122            Game->dis[0]->x=176;
   \   000003BC   000094E5           LDR      R0,[R4, #+0]
   \   000003C0   B020A0E3           MOV      R2,#+176
   \   000003C4   000091E7           LDR      R0,[R1, +R0]
   \   000003C8   002080E5           STR      R2,[R0, #+0]
    123            Game->dis[0]->y=220;
   \   000003CC   000094E5           LDR      R0,[R4, #+0]
   \   000003D0   DC20A0E3           MOV      R2,#+220
   \   000003D4   000091E7           LDR      R0,[R1, +R0]
   \   000003D8   042080E5           STR      R2,[R0, #+4]
    124            Game->dis[0]->cub=10;
   \   000003DC   000094E5           LDR      R0,[R4, #+0]
   \   000003E0   0A20A0E3           MOV      R2,#+10
   \   000003E4   000091E7           LDR      R0,[R1, +R0]
   \   000003E8   082080E5           STR      R2,[R0, #+8]
    125            Game->dis[0]->FP=FONT_E_30R;
   \   000003EC   000094E5           LDR      R0,[R4, #+0]
   \   000003F0   88219FE5           LDR      R2,??main_1+0x8  ;; FONT_E_30R
   \   000003F4   000091E7           LDR      R0,[R1, +R0]
   \   000003F8   002092E5           LDR      R2,[R2, #+0]
   \   000003FC   0C2080E5           STR      R2,[R0, #+12]
    126            Game->dis[0]->FS=FONT_E_12R;
   \   00000400   000094E5           LDR      R0,[R4, #+0]
   \   00000404   000091E7           LDR      R0,[R1, +R0]
   \   00000408   74119FE5           LDR      R1,??main_1+0xC  ;; FONT_E_12R
   \   0000040C   001091E5           LDR      R1,[R1, #+0]
   \   00000410   101080E5           STR      R1,[R0, #+16]
    127            Game->dis[1]=new DISPLAY;
   \   00000414   1400A0E3           MOV      R0,#+20
   \   00000418   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000041C   002094E5           LDR      R2,[R4, #+0]
   \   00000420   D01FA0E3           MOV      R1,#+832
   \   00000424   020081E7           STR      R0,[R1, +R2]
    128            Game->dis[1]->x=240;
   \   00000428   000094E5           LDR      R0,[R4, #+0]
   \   0000042C   F020A0E3           MOV      R2,#+240
   \   00000430   000091E7           LDR      R0,[R1, +R0]
   \   00000434   002080E5           STR      R2,[R0, #+0]
    129            Game->dis[1]->y=320;
   \   00000438   000094E5           LDR      R0,[R4, #+0]
   \   0000043C   502FA0E3           MOV      R2,#+320
   \   00000440   000091E7           LDR      R0,[R1, +R0]
   \   00000444   042080E5           STR      R2,[R0, #+4]
    130            Game->dis[1]->cub=14;
   \   00000448   000094E5           LDR      R0,[R4, #+0]
   \   0000044C   0E20A0E3           MOV      R2,#+14
   \   00000450   000091E7           LDR      R0,[R1, +R0]
   \   00000454   082080E5           STR      R2,[R0, #+8]
    131            Game->dis[1]->FP=FONT_E_40R;
   \   00000458   000094E5           LDR      R0,[R4, #+0]
   \   0000045C   24219FE5           LDR      R2,??main_1+0x10  ;; FONT_E_40R
   \   00000460   000091E7           LDR      R0,[R1, +R0]
   \   00000464   002092E5           LDR      R2,[R2, #+0]
   \   00000468   0C2080E5           STR      R2,[R0, #+12]
    132            Game->dis[1]->FS=FONT_E_14R;
   \   0000046C   000094E5           LDR      R0,[R4, #+0]
   \   00000470   000091E7           LDR      R0,[R1, +R0]
   \   00000474   10119FE5           LDR      R1,??main_1+0x14  ;; FONT_E_14R
   \   00000478   001091E5           LDR      R1,[R1, #+0]
   \   0000047C   101080E5           STR      R1,[R0, #+16]
    133            Game->dis[2]=new DISPLAY;
   \   00000480   1400A0E3           MOV      R0,#+20
   \   00000484   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000488   002094E5           LDR      R2,[R4, #+0]
   \   0000048C   D11FA0E3           MOV      R1,#+836
   \   00000490   020081E7           STR      R0,[R1, +R2]
    134            Game->dis[2]->x=128;
   \   00000494   000094E5           LDR      R0,[R4, #+0]
   \   00000498   8020A0E3           MOV      R2,#+128
   \   0000049C   000091E7           LDR      R0,[R1, +R0]
   \   000004A0   002080E5           STR      R2,[R0, #+0]
    135            Game->dis[2]->y=168;
   \   000004A4   000094E5           LDR      R0,[R4, #+0]
   \   000004A8   A820A0E3           MOV      R2,#+168
   \   000004AC   000091E7           LDR      R0,[R1, +R0]
   \   000004B0   042080E5           STR      R2,[R0, #+4]
    136            Game->dis[2]->cub=7;
   \   000004B4   000094E5           LDR      R0,[R4, #+0]
   \   000004B8   0720A0E3           MOV      R2,#+7
   \   000004BC   000091E7           LDR      R0,[R1, +R0]
   \   000004C0   082080E5           STR      R2,[R0, #+8]
    137            Game->dis[2]->FP=FONT_E_18R;
   \   000004C4   000094E5           LDR      R0,[R4, #+0]
   \   000004C8   C0209FE5           LDR      R2,??main_1+0x18  ;; FONT_E_18R
   \   000004CC   000091E7           LDR      R0,[R1, +R0]
   \   000004D0   002092E5           LDR      R2,[R2, #+0]
   \   000004D4   0C2080E5           STR      R2,[R0, #+12]
    138            Game->dis[2]->FS=FONT_D_7R;
   \   000004D8   000094E5           LDR      R0,[R4, #+0]
   \   000004DC   000091E7           LDR      R0,[R1, +R0]
   \   000004E0   AC109FE5           LDR      R1,??main_1+0x1C  ;; FONT_D_7R
   \   000004E4   001091E5           LDR      R1,[R1, #+0]
   \   000004E8   101080E5           STR      R1,[R0, #+16]
    139            Game->pause=0;
   \   000004EC   000094E5           LDR      R0,[R4, #+0]
   \   000004F0   386380E5           STR      R6,[R0, #+824]
    140            Game->p[0]=new PREGRADA;
   \   000004F4   1400A0E3           MOV      R0,#+20
   \   000004F8   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000004FC   001094E5           LDR      R1,[R4, #+0]
   \   00000500   500381E5           STR      R0,[R1, #+848]
    141            Game->p[1]=new PREGRADA;
   \   00000504   1400A0E3           MOV      R0,#+20
   \   00000508   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000050C   001094E5           LDR      R1,[R4, #+0]
   \   00000510   540381E5           STR      R0,[R1, #+852]
    142            for(i=0; i<2; i++)
   \   00000514   0000A0E3           MOV      R0,#+0
    143            {
    144              Game->p[i]->y=0;
   \                     ??main_7:
   \   00000518   001094E5           LDR      R1,[R4, #+0]
   \   0000051C   001181E0           ADD      R1,R1,R0, LSL #+2
   \   00000520   501391E5           LDR      R1,[R1, #+848]
   \   00000524   106081E5           STR      R6,[R1, #+16]
    145              for(j=0; j<4; j++)
   \   00000528   0010A0E3           MOV      R1,#+0
    146              {
    147                Game->p[i]->x[j]=1;
   \                     ??main_8:
   \   0000052C   002094E5           LDR      R2,[R4, #+0]
   \   00000530   002182E0           ADD      R2,R2,R0, LSL #+2
   \   00000534   502392E5           LDR      R2,[R2, #+848]
   \   00000538   017182E7           STR      R7,[R2, +R1, LSL #+2]
    148              }
   \   0000053C   011081E2           ADD      R1,R1,#+1
   \   00000540   040051E3           CMP      R1,#+4
   \   00000544   F8FFFFBA           BLT      ??main_8
    149            }
   \   00000548   010080E2           ADD      R0,R0,#+1
   \   0000054C   020050E3           CMP      R0,#+2
   \   00000550   F0FFFFBA           BLT      ??main_7
    150            OpenSettings(Game);
   \   00000554   000094E5           LDR      R0,[R4, #+0]
   \   00000558   ........           _BLF     ??OpenSettings,??OpenSettings??rA
    151            CheckResurs(Game);
   \   0000055C   000094E5           LDR      R0,[R4, #+0]
   \   00000560   ........           _BLF     ??CheckResurs,??CheckResurs??rA
    152            BookObj_GotoPage((BOOK *)Game,&bk_gm);
   \   00000564   000094E5           LDR      R0,[R4, #+0]
   \   00000568   D41085E2           ADD      R1,R5,#+212
   \   0000056C   2D0100EF           SWI      +301
    153            }
    154            return 0;
   \   00000570   0000A0E3           MOV      R0,#+0
   \   00000574   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??main_1:
   \   00000578   ........           DC32     `?<Constant L"\\x73\\x74\\x61\\x72\\x74\\x2e\\x6d\\x70\\`
   \   0000057C   ........           DC32     ??onMyBookClose
   \   00000580   ........           DC32     FONT_E_30R
   \   00000584   ........           DC32     FONT_E_12R
   \   00000588   ........           DC32     FONT_E_40R
   \   0000058C   ........           DC32     FONT_E_14R
   \   00000590   ........           DC32     FONT_E_18R
   \   00000594   ........           DC32     FONT_D_7R
    155          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     ??elf_exit

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     Game

   \                                 In segment ELFBEGIN, align 1

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Game_GuiMenu_Page">`:
   \   00000000   47616D655F47       DC8 "Game_GuiMenu_Page"
   \              75694D656E75
   \              5F5061676500
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Game_Base_Page">`:
   \   00000000   47616D655F42       DC8 "Game_Base_Page"
   \              6173655F5061
   \              676500      
   \   0000000F   00                 DC8 0

   Maximum stack usage in bytes:

     Function                CSTACK
     --------                ------
     FreeElf(void *, BOOK *)     4
     GetBookID()                 0
     elf_exit()                  4
     main()                     32
     onMyBookClose(BOOK *)       8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     Game                              4
     GetBookID()                      12
     FreeElf(void *, BOOK *)          20
     bk_msglst_gm                     16
     bk_msglst_base                   16
     ?<Constant L"\x73\x74\x61\x72\x74\x2e\x6d\x70\
                                     236
     elf_exit()                       28
     onMyBookClose(BOOK *)            48
     main()                         1432
     ??DataTable2                      4
     ??DataTable3                      4
     ?<Constant "Game_GuiMenu_Page">
                                      20
     ?<Constant "Game_Base_Page">     16
      Others                         116

 
 1 652 bytes in segment CODE
   272 bytes in segment DATA_C
     4 bytes in segment DATA_Z
    32 bytes in segment DYN_PAGE
    12 bytes in segment INITTAB
 
 1 548 bytes of CODE  memory (+ 116 bytes shared)
   304 bytes of CONST memory
     4 bytes of DATA  memory

Errors: none
Warnings: none
