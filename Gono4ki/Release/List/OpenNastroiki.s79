//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:58:50 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\OpenN /
//                       astroiki.c                                          /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\OpenN /
//                       astroiki.c -D NDEBUG -D OLDFUNCTIONS -lC            /
//                       Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\Relea /
//                       se\List\ -lA Z:\home\perk11\www\perk11.info\svn\SE\ /
//                       Gono4ki\Release\List\ -o                            /
//                       Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\Relea /
//                       se\Obj\ -s9 --no_unroll --no_inline --cpu_mode arm  /
//                       --endian little --cpu ARM926EJ-S --stack_align 4    /
//                       --interwork -e --enable_multibytes --fpu None       /
//                       --eec++ --dlib_config Z:\home\perk11\IAR2\arm\LIB\d /
//                       l5tpainl8n.h -I Z:\home\perk11\IAR2\arm\INC\        /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\Relea /
//                       se\List\OpenNastroiki.s79                           /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME OpenNastroiki

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

??DataTable0 EQU 0
        MULTWEAK ??FindFile??rA
        MULTWEAK ??GetConfigPath??rA
        PUBLIC ??OpenSettings
        FUNCTION ??OpenSettings,0203H
        LOCFRAME CSTACK, 24, STACK
        MULTWEAK ??OpenSettings??rT
        PUBLIC ??SaveSettings
        FUNCTION ??SaveSettings,0203H
        LOCFRAME CSTACK, 32, STACK
        MULTWEAK ??SaveSettings??rT
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        


??FindFile??rA      SYMBOL "??rA", ??FindFile
??GetConfigPath??rA SYMBOL "??rA", ??GetConfigPath

??OpenSettings??rT  SYMBOL "??rT", ??OpenSettings

??SaveSettings??rT  SYMBOL "??rT", ??SaveSettings

        EXTERN ??FindFile
        FUNCTION ??FindFile,0202H
        EXTERN ??GetConfigPath
        FUNCTION ??GetConfigPath,0202H


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??SaveSettings??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??SaveSettings
// Z:\home\perk11\www\perk11.info\svn\SE\Gono4ki\OpenNastroiki.c
//    1 #include "..\\include\Lib_Clara.h"
//    2 #include "..\\include\Dir.h"
//    3 #include "..\\include\var_arg.h"
//    4 #include "..\\include\cfg_items.h"
//    5 #include "MyFUNC.h"
//    6 #include "StructBook.h"
//    7 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??SaveSettings
        ARM
//    8 void SaveSettings(SOUND*s, IMGN*i, TAB*t)
//    9 {
??SaveSettings:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        MOV      R5,R0
        MOV      R6,R1
//   10   int f=_fopen(GetConfigPath(), L"Settings.gms",FSX_O_WRONLY,FSX_S_IREAD|FSX_S_IWRITE,0);
        LDR      R7,??DataTable1  ;; `?<Constant L"\\x53\\x65\\x74\\x74\\x69\\x6e\\x67\\x73\\`
        MOV      R4,R2
        _BLF     ??GetConfigPath,??GetConfigPath??rA
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+28
        MOV      R3,#+384
        MOV      R2,#+2
        MOV      R1,R7
        SWI      +278
        MOV      R8,R0
//   11   fwrite(f, s, sizeof(SOUND));
        MOV      R2,#+28
        ORR      R2,R2,#0xC00
        MOV      R1,R5
        SWI      +281
//   12   fwrite(f, i, sizeof(IMGN));
        MOV      R2,#+772
        MOV      R1,R6
        MOV      R0,R8
        SWI      +281
//   13   fclose(f);
        MOV      R0,R8
        SWI      +279
//   14   f=_fopen(GetConfigPath(), L"Resultats.tab",FSX_O_WRONLY,FSX_S_IREAD|FSX_S_IWRITE,0);
        _BLF     ??GetConfigPath,??GetConfigPath??rA
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+32
        MOV      R3,#+384
        MOV      R2,#+2
        ADD      R1,R7,#+28
        SWI      +278
//   15   fwrite(f, t->te, sizeof(TABL));
        LDR      R1,[R4, #+0]
        MOV      R5,R0
        MOV      R2,#+200
        SWI      +281
//   16   fwrite(f, t->tn, sizeof(TABL));
        LDR      R1,[R4, #+4]
        MOV      R2,#+200
        MOV      R0,R5
        SWI      +281
//   17   fwrite(f, t->th, sizeof(TABL));
        LDR      R1,[R4, #+8]
        MOV      R2,#+200
        MOV      R0,R5
        SWI      +281
//   18   fclose(f);
        MOV      R0,R5
        SWI      +279
//   19 }
        POP      {R0,R1,R4-R8,PC}  ;; return
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??OpenSettings??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??OpenSettings
//   20 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??OpenSettings
        ARM
//   21 void OpenSettings(MyBook*bk)
//   22 {
??OpenSettings:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
//   23   int f;
//   24   if(!FindFile(GetConfigPath(), L"Settings.gms"))
        LDR      R5,??DataTable1  ;; `?<Constant L"\\x53\\x65\\x74\\x74\\x69\\x6e\\x67\\x73\\`
        MOV      R4,R0
        MOV      R6,#+28
        _BLF     ??GetConfigPath,??GetConfigPath??rA
        ORR      R6,R6,#0xC00
        MOV      R1,R5
        _BLF     ??FindFile,??FindFile??rA
        CMP      R0,#+0
        BNE      ??OpenSettings_1
//   25   {
//   26     f=_fopen(GetConfigPath(), L"Settings.gms",FSX_O_RDONLY,FSX_S_IREAD|FSX_S_IWRITE,0);
        _BLF     ??GetConfigPath,??GetConfigPath??rA
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+24
        MOV      R3,#+384
        MOV      R2,#+1
        MOV      R1,R5
        SWI      +278
        MOV      R7,R0
//   27     fread(f, bk->nast->sound, sizeof(SOUND));
        LDR      R0,[R4, #+820]
        MOV      R2,R6
        LDR      R1,[R0, #+0]
        MOV      R0,R7
        SWI      +280
//   28     fread(f, bk->nast->im, sizeof(IMGN));
        LDR      R0,[R4, #+820]
        MOV      R2,#+772
        LDR      R1,[R0, #+4]
        MOV      R0,R7
        SWI      +280
//   29     fclose(f);
        B        ??OpenSettings_2
        CFI CFA R13+20
//   30   }
//   31   else
//   32   {    
//   33     f=_fopen(GetConfigPath(), L"Settings.gms",FSX_O_WRONLY,FSX_S_IREAD|FSX_S_IWRITE,0);
??OpenSettings_1:
        _BLF     ??GetConfigPath,??GetConfigPath??rA
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+24
        MOV      R3,#+384
        MOV      R2,#+2
        MOV      R1,R5
        SWI      +278
        MOV      R7,R0
//   34     fwrite(f, bk->nast->sound, sizeof(SOUND));
        LDR      R0,[R4, #+820]
        MOV      R2,R6
        LDR      R1,[R0, #+0]
        MOV      R0,R7
        SWI      +281
//   35     fwrite(f, bk->nast->im, sizeof(IMGN));
        LDR      R0,[R4, #+820]
        MOV      R2,#+772
        LDR      R1,[R0, #+4]
        MOV      R0,R7
        SWI      +281
//   36     fclose(f);
??OpenSettings_2:
        MOV      R0,R7
        SWI      +279
        ADD      SP,SP,#+4
        CFI CFA R13+20
//   37   }
//   38   if(!FindFile(GetConfigPath(), L"Resultats.tab"))
        _BLF     ??GetConfigPath,??GetConfigPath??rA
        ADD      R1,R5,#+28
        _BLF     ??FindFile,??FindFile??rA
        CMP      R0,#+0
        BNE      ??OpenSettings_3
//   39   {
//   40     f=_fopen(GetConfigPath(), L"Resultats.tab",FSX_O_RDONLY,FSX_S_IREAD|FSX_S_IWRITE,0);
        _BLF     ??GetConfigPath,??GetConfigPath??rA
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+24
        MOV      R3,#+384
        MOV      R2,#+1
        ADD      R1,R5,#+28
        SWI      +278
        MOV      R5,R0
//   41     fread(f, bk->nast->rez->te, sizeof(TABL));
        LDR      R0,[R4, #+820]
        MOV      R2,#+200
        LDR      R0,[R0, #+8]
        LDR      R1,[R0, #+0]
        MOV      R0,R5
        SWI      +280
//   42     fread(f, bk->nast->rez->tn, sizeof(TABL));
        LDR      R0,[R4, #+820]
        MOV      R2,#+200
        LDR      R0,[R0, #+8]
        LDR      R1,[R0, #+4]
        MOV      R0,R5
        SWI      +280
//   43     fread(f, bk->nast->rez->th, sizeof(TABL));
        LDR      R0,[R4, #+820]
        MOV      R2,#+200
        LDR      R0,[R0, #+8]
        LDR      R1,[R0, #+8]
        MOV      R0,R5
        SWI      +280
//   44     fclose(f);    
        B        ??OpenSettings_4
        CFI CFA R13+20
//   45   }else{
//   46     f=_fopen(GetConfigPath(), L"Resultats.tab",FSX_O_WRONLY,FSX_S_IREAD|FSX_S_IWRITE,0);
??OpenSettings_3:
        _BLF     ??GetConfigPath,??GetConfigPath??rA
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+24
        MOV      R3,#+384
        MOV      R2,#+2
        ADD      R1,R5,#+28
        SWI      +278
        MOV      R5,R0
//   47     fwrite(f, bk->nast->rez->te, sizeof(TABL));
        LDR      R0,[R4, #+820]
        MOV      R2,#+200
        LDR      R0,[R0, #+8]
        LDR      R1,[R0, #+0]
        MOV      R0,R5
        SWI      +281
//   48     fwrite(f, bk->nast->rez->tn, sizeof(TABL));
        LDR      R0,[R4, #+820]
        MOV      R2,#+200
        LDR      R0,[R0, #+8]
        LDR      R1,[R0, #+4]
        MOV      R0,R5
        SWI      +281
//   49     fwrite(f, bk->nast->rez->th, sizeof(TABL));
        LDR      R0,[R4, #+820]
        MOV      R2,#+200
        LDR      R0,[R0, #+8]
        LDR      R1,[R0, #+8]
        MOV      R0,R5
        SWI      +281
//   50     fclose(f);
??OpenSettings_4:
        MOV      R0,R5
        SWI      +279
        ADD      SP,SP,#+4
        CFI CFA R13+20
//   51   }
//   52 }
        POP      {R4-R7,PC}       ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable1:
        DC32     `?<Constant L"\\x53\\x65\\x74\\x74\\x69\\x6e\\x67\\x73\\`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon1
        CFI NoFunction
        ARM
??GetConfigPath??rA:
        LDR      R12,??Subroutine2_0  ;; ??GetConfigPath
        BX       R12
        DATA
??Subroutine2_0:
        DC32     ??GetConfigPath
        CFI EndBlock cfiBlock4

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI NoFunction
        ARM
??FindFile??rA:
        LDR      R12,??Subroutine3_0  ;; ??FindFile
        BX       R12
        DATA
??Subroutine3_0:
        DC32     ??FindFile
        CFI EndBlock cfiBlock5

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x53\\x65\\x74\\x74\\x69\\x6e\\x67\\x73\\`:
        DATA
        DC8 53H, 0, 65H, 0, 74H, 0, 74H, 0
        DC8 69H, 0, 6EH, 0, 67H, 0, 73H, 0
        DC8 2EH, 0, 67H, 0, 6DH, 0, 73H, 0
        DC8 0, 0
        DC8 0, 0
        DC8 52H, 0, 65H, 0, 73H, 0, 75H, 0
        DC8 6CH, 0, 74H, 0, 61H, 0, 74H, 0
        DC8 73H, 0, 2EH, 0, 74H, 0, 61H, 0
        DC8 62H, 0, 0, 0

        END
// 
// 664 bytes in segment CODE
//  56 bytes in segment DATA_C
// 
// 632 bytes of CODE  memory (+ 32 bytes shared)
//  56 bytes of CONST memory
//
//Errors: none
//Warnings: none
