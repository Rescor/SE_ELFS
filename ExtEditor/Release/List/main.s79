//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:59:40 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\ExtEditor\mai /
//                       n.cpp                                               /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\ExtEditor\mai /
//                       n.cpp -D NDEBUG -D OLDFUNCTIONS -lCN                /
//                       Z:\home\perk11\www\perk11.info\svn\SE\ExtEditor\Rel /
//                       ease\List\ -la Z:\home\perk11\www\perk11.info\svn\S /
//                       E\ExtEditor\Release\List\ -o                        /
//                       Z:\home\perk11\www\perk11.info\svn\SE\ExtEditor\Rel /
//                       ease\Obj\ -s9 --no_unroll --no_code_motion          /
//                       --cpu_mode arm --endian little --cpu ARM926EJ-S     /
//                       --stack_align 4 --interwork -e --enable_multibytes  /
//                       --fpu None --eec++ --dlib_config                    /
//                       Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.h -I        /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\ExtEditor\Rel /
//                       ease\List\main.s79                                  /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME main

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)
        RSEG ELFBEGIN:DATA:REORDER:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??CreateEditExtList
        FUNCTION ??CreateEditExtList,0203H
        LOCFRAME CSTACK, 84, STACK
        MULTWEAK ??CreateEditExtList??rT
        PUBLIC ??CreateEditGui
        FUNCTION ??CreateEditGui,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??CreateEditGui??rT
        PUBLIC ??CreateGuiList
        FUNCTION ??CreateGuiList,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??CreateGuiList??rT
        PUBLIC ??CreateSI_EditExt
        FUNCTION ??CreateSI_EditExt,0203H
        LOCFRAME CSTACK, 200, STACK
        MULTWEAK ??CreateSI_EditExt??rT
??DataTable0 EQU 0
??DataTable12 EQU 0
??DataTable13 EQU 0
??DataTable2 EQU 0
??DataTable4 EQU 0
??DataTable5 EQU 0
??DataTable8 EQU 0
??DataTable9 EQU 0
        PUBLIC ??DestroyStringList
        FUNCTION ??DestroyStringList,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??DestroyStringList??rT
        PUBLIC ??GetExtInfo
        FUNCTION ??GetExtInfo,0203H
        LOCFRAME CSTACK, 32, STACK
        MULTWEAK ??GetExtInfo??rT
        PUBLIC ??IsStringValid
        FUNCTION ??IsStringValid,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??IsStringValid??rT
        FUNCTION ??MainPageOnEnter,0603H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION ??MainPageOnExit,0603H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC ??MsgBoxYesNo
        FUNCTION ??MsgBoxYesNo,0203H
        LOCFRAME CSTACK, 44, STACK
        MULTWEAK ??MsgBoxYesNo??rT
        PUBLIC ??OnBackEditExtList
        FUNCTION ??OnBackEditExtList,0603H
        LOCFRAME CSTACK, 304, STACK
        MULTWEAK ??OnBackEditExtList??rT
        PUBLIC ??OnBackGuiList
        FUNCTION ??OnBackGuiList,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??OnBackGuiList??rT
        PUBLIC ??OnBackSI_EditExt
        FUNCTION ??OnBackSI_EditExt,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnBackSI_EditExt??rT
        PUBLIC ??OnDeleteGuiList
        FUNCTION ??OnDeleteGuiList,0603H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??OnDeleteGuiList??rT
        PUBLIC ??OnOkSI_EditExt
        FUNCTION ??OnOkSI_EditExt,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnOkSI_EditExt??rT
        PUBLIC ??OnSelect1EditExtList
        FUNCTION ??OnSelect1EditExtList,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnSelect1EditExtList??rT
        PUBLIC ??OnSelect1GuiList
        FUNCTION ??OnSelect1GuiList,0603H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??OnSelect1GuiList??rT
        PUBLIC ??ReadIni
        FUNCTION ??ReadIni,0203H
        LOCFRAME CSTACK, 272, STACK
        MULTWEAK ??ReadIni??rT
        PUBLIC ??SafeFreeString
        FUNCTION ??SafeFreeString,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??SafeFreeString??rT
        PUBLIC ??SaveIni
        FUNCTION ??SaveIni,0203H
        LOCFRAME CSTACK, 284, STACK
        MULTWEAK ??SaveIni??rT
        PUBLIC ??SelFileFilterElf
        FUNCTION ??SelFileFilterElf,0603H
        LOCFRAME CSTACK, 40, STACK
        MULTWEAK ??SelFileFilterElf??rT
        FUNCTION ??SelFilePageOnAccept,0603H
        LOCFRAME CSTACK, 24, STACK
        FUNCTION ??SelFilePageOnCancel,0603H
        LOCFRAME CSTACK, 4, STACK
        FUNCTION ??SelFilePageOnCreate,0603H
        LOCFRAME CSTACK, 720, STACK
        FUNCTION ??ShowAuthorInfo,0603H
        LOCFRAME CSTACK, 144, STACK
        FUNCTION ??TerminateElf,0603H
        LOCFRAME CSTACK, 4, STACK
        FUNCTION ??YSNo,0603H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION ??YSPrev,0603H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION ??YSYes,0603H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC ??YesNoOnBackExt
        FUNCTION ??YesNoOnBackExt,0603H
        LOCFRAME CSTACK, 276, STACK
        MULTWEAK ??YesNoOnBackExt??rT
        PUBLIC ??YesNoOnBackGuiList
        FUNCTION ??YesNoOnBackGuiList,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??YesNoOnBackGuiList??rT
        PUBLIC ??elf_exit
        FUNCTION ??elf_exit,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??elf_exit??rT
        PUBLIC ??find_eol
        FUNCTION ??find_eol,0203H
        MULTWEAK ??find_eol??rT
        PUBLIC ??isExtEditorBook
        FUNCTION ??isExtEditorBook,0203H
        MULTWEAK ??isExtEditorBook??rT
        MULTWEAK ??kill_data??rA
        MULTWEAK ??main??rT
        PUBLIC ??onLBMessage
        FUNCTION ??onLBMessage,0603H
        LOCFRAME CSTACK, 196, STACK
        MULTWEAK ??onLBMessage??rT
        PUBLIC ??onLBMessageEditExtList
        FUNCTION ??onLBMessageEditExtList,0603H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??onLBMessageEditExtList??rT
        FUNCTION ??onMyBookClose,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new??rA`
        MULTWEAK `??operator new[]??rA`
        PUBLIC ??strchr
        FUNCTION ??strchr,0203H
        MULTWEAK ??strchr??rT
        PUBLIC ??strcmp_nocase
        FUNCTION ??strcmp_nocase,0203H
        MULTWEAK ??strcmp_nocase??rT
        PUBLIC ??unicode2win1251
        FUNCTION ??unicode2win1251,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??unicode2win1251??rT
        PUBLIC ??win12512unicode
        FUNCTION ??win12512unicode,0203H
        MULTWEAK ??win12512unicode??rT
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC main
        FUNCTION main,0a03H
        LOCFRAME CSTACK, 16, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        



kill_data           SYMBOL "kill_data"

??CreateEditExtList??rT SYMBOL "??rT", ??CreateEditExtList

??CreateEditGui??rT SYMBOL "??rT", ??CreateEditGui

??CreateGuiList??rT SYMBOL "??rT", ??CreateGuiList

??CreateSI_EditExt??rT SYMBOL "??rT", ??CreateSI_EditExt

??DestroyStringList??rT SYMBOL "??rT", ??DestroyStringList

??GetExtInfo??rT    SYMBOL "??rT", ??GetExtInfo

??IsStringValid??rT SYMBOL "??rT", ??IsStringValid

??MsgBoxYesNo??rT   SYMBOL "??rT", ??MsgBoxYesNo

??OnBackEditExtList??rT SYMBOL "??rT", ??OnBackEditExtList

??OnBackGuiList??rT SYMBOL "??rT", ??OnBackGuiList

??OnBackSI_EditExt??rT SYMBOL "??rT", ??OnBackSI_EditExt

??OnDeleteGuiList??rT SYMBOL "??rT", ??OnDeleteGuiList

??OnOkSI_EditExt??rT SYMBOL "??rT", ??OnOkSI_EditExt

??OnSelect1EditExtList??rT SYMBOL "??rT", ??OnSelect1EditExtList

??OnSelect1GuiList??rT SYMBOL "??rT", ??OnSelect1GuiList

??ReadIni??rT       SYMBOL "??rT", ??ReadIni

??SafeFreeString??rT SYMBOL "??rT", ??SafeFreeString

??SaveIni??rT       SYMBOL "??rT", ??SaveIni

??SelFileFilterElf??rT SYMBOL "??rT", ??SelFileFilterElf

??YesNoOnBackExt??rT SYMBOL "??rT", ??YesNoOnBackExt

??YesNoOnBackGuiList??rT SYMBOL "??rT", ??YesNoOnBackGuiList

??elf_exit??rT      SYMBOL "??rT", ??elf_exit

??find_eol??rT      SYMBOL "??rT", ??find_eol

??isExtEditorBook??rT SYMBOL "??rT", ??isExtEditorBook
??kill_data??rA     SYMBOL "??rA", kill_data
main                SYMBOL "main"
??main??rT          SYMBOL "??rT", main

??onLBMessage??rT   SYMBOL "??rT", ??onLBMessage

??onLBMessageEditExtList??rT SYMBOL "??rT", ??onLBMessageEditExtList
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new??rA` SYMBOL "??rA", `??operator new`
`??operator new[]??rA` SYMBOL "??rA", `??operator new[]`

??strchr??rT        SYMBOL "??rT", ??strchr

??strcmp_nocase??rT SYMBOL "??rT", ??strcmp_nocase

??unicode2win1251??rT SYMBOL "??rT", ??unicode2win1251

??win12512unicode??rT SYMBOL "??rT", ??win12512unicode

        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new`
        FUNCTION `??operator new`,0202H
        EXTERN `??operator new[]`
        FUNCTION `??operator new[]`,0202H
        EXTERN ACTION_BACK
        EXTERN ACTION_DELETE
        EXTERN ACTION_SELECT1
        EXTERN PREVIOUS_EVENT
        EXTERN VAR_ARG_BOOK
        EXTERN VAR_ARG_CALL_BACK_OK
        EXTERN VAR_ARG_CALL_BACK_PREV_ACT
        EXTERN VAR_ARG_HTEXT
        EXTERN VAR_ARG_STRINP_MAX_LEN
        EXTERN VAR_ARG_STRINP_MIN_LEN
        EXTERN VAR_ARG_STRINP_MODE
        EXTERN VAR_ARG_STRINP_TEXT
        EXTERN VAR_ARG_YESNO_NO_ACTION
        EXTERN VAR_ARG_YESNO_QUESTION
        EXTERN VAR_ARG_YESNO_YES_ACTION
        EXTERN kill_data
        FUNCTION kill_data,0202H


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??elf_exit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??elf_exit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??elf_exit
        ARM
??elf_exit:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +33028
        MOV      R1,R0
        LDR      R0,??elf_exit_1  ;; SFB(ELFBEGIN)
        POP      {LR}             ;; Pop
        CFI ?RET R14
        CFI CFA R13+0
        _BF      kill_data,??kill_data??rA  ;; tailcall
        DATA
??elf_exit_1:
        DC32     SFB(ELFBEGIN)
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??win12512unicode??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??win12512unicode

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??win12512unicode
        ARM
??win12512unicode:
        B        ??win12512unicode_1
??win12512unicode_2:
        CMP      R3,#+192
        BLT      ??win12512unicode_3
        CMP      R3,#+256
        ADDLT    R3,R3,#+848
??win12512unicode_3:
        STRH     R3,[R0], #+2
??win12512unicode_1:
        LDRB     R3,[R1], #+1
        CMP      R3,#+0
        BEQ      ??win12512unicode_4
        MOV      R12,R2
        SUB      R2,R12,#+1
        CMP      R12,#+1
        BLT      ??win12512unicode_4
        CMP      R3,#+168
        BNE      ??win12512unicode_5
        MOV      R3,#+1
??win12512unicode_6:
        ORR      R3,R3,#0x400
        B        ??win12512unicode_3
??win12512unicode_5:
        CMP      R3,#+170
        MOVEQ    R3,#+4
        BEQ      ??win12512unicode_6
        CMP      R3,#+175
        BNE      ??win12512unicode_7
        MOV      R3,#+7
??win12512unicode_8:
        B        ??win12512unicode_6
??win12512unicode_7:
        CMP      R3,#+184
        MOVEQ    R3,#+81
        BEQ      ??win12512unicode_6
        CMP      R3,#+186
        MOVEQ    R3,#+84
        BEQ      ??win12512unicode_6
        CMP      R3,#+191
        BNE      ??win12512unicode_2
        MOV      R3,#+87
        B        ??win12512unicode_6
??win12512unicode_4:
        MOV      R1,#+0
        STRH     R1,[R0, #+0]
        BX       LR               ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??unicode2win1251??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??unicode2win1251

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??unicode2win1251
        ARM
??unicode2win1251:
        PUSH     {R4}
        CFI R4 Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R3,R0
        B        ??unicode2win1251_1
??unicode2win1251_2:
        CMP      R12,#+1040
        BLT      ??unicode2win1251_3
        CMP      R12,#+1104
        MVNLT    R4,#+79
        BICLT    R4,R4,#0x300
        ADDLT    R12,R4,R12
??unicode2win1251_3:
        STRB     R12,[R0], #+1
??unicode2win1251_1:
        LDRH     R12,[R1], #+2
        CMP      R12,#+0
        BEQ      ??unicode2win1251_4
        MOV      R4,R2
        SUB      R2,R4,#+1
        CMP      R4,#+1
        BLT      ??unicode2win1251_4
        MOV      R4,#+1
        ORR      R4,R4,#0x400
        CMP      R12,R4
        MOVEQ    R12,#+168
        BEQ      ??unicode2win1251_3
        ADD      R4,R4,#+3
        CMP      R12,R4
        MOVEQ    R12,#+170
        BEQ      ??unicode2win1251_3
        ORR      R4,R4,#0x3
        CMP      R12,R4
        MOVEQ    R12,#+175
        BEQ      ??unicode2win1251_3
        ADD      R4,R4,#+74
        CMP      R12,R4
        MOVEQ    R12,#+184
        BEQ      ??unicode2win1251_3
        ADD      R4,R4,#+3
        CMP      R12,R4
        MOVEQ    R12,#+186
        BEQ      ??unicode2win1251_3
        ORR      R4,R4,#0x3
        CMP      R12,R4
        BNE      ??unicode2win1251_2
        MOV      R12,#+191
        B        ??unicode2win1251_3
??unicode2win1251_4:
        MOV      R1,#+0
        STRB     R1,[R0, #+0]
        POP      {R4}
        CFI R4 SameValue
        CFI CFA R13+0
        MOV      R0,R3
        BX       LR               ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??strcmp_nocase??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??strcmp_nocase

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??strcmp_nocase
        ARM
??strcmp_nocase:
??strcmp_nocase_1:
        LDRB     R2,[R0], #+1
        LDRB     R3,[R1], #+1
        TST      R2,#0x40
        ANDNE    R2,R2,#0xDF
        TST      R3,#0x40
        ANDNE    R3,R3,#0xDF
        SUBS     R2,R2,R3
        BNE      ??strcmp_nocase_2
        CMP      R3,#+0
        BNE      ??strcmp_nocase_1
??strcmp_nocase_2:
        MOV      R0,R2
        BX       LR               ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??TerminateElf??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??TerminateElf

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??TerminateElf
        ARM
??TerminateElf:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R0,R1
        SWI      +303
        MOV      R0,#+1
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??ShowAuthorInfo??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??ShowAuthorInfo

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??ShowAuthorInfo
        ARM
??ShowAuthorInfo:
        LDR      R2,??ShowAuthorInfo_1  ;; `?<Constant L"\\xa\\x45\\x78\\x74\\x45\\x64\\x69\\x74\\x`
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+128
        CFI CFA R13+136
        MOV      R3,#+85
        MOV      R4,R0
        ORR      R3,R3,#0xE00
        MOV      R1,#+63
        MOV      R0,SP
        SWI      +277
        MOV      R2,#+63
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        LDR      R1,[R4, #+0]
        MOV      R3,#+1
        PUSH     {R1}
        CFI CFA R13+140
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+136
        ORR      R1,R1,#0x1300
        PUSH     {R1}
        CFI CFA R13+144
        MOV      R1,R0
        MVN      R0,#-1879048192
        SWI      +599
        MOV      R0,#+1
        ADD      SP,SP,#+136
        CFI CFA R13+8
        POP      {R4,PC}          ;; return
        DATA
??ShowAuthorInfo_1:
        DC32     `?<Constant L"\\xa\\x45\\x78\\x74\\x45\\x64\\x69\\x74\\x`
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??SafeFreeString??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??SafeFreeString

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
bk_msglst_base:
        DATA
        DC32 997, ??TerminateElf, 998, ??ShowAuthorInfo, 64, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??SafeFreeString
        ARM
??SafeFreeString:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R2,[R0, #+28]
        CMP      R1,R2
        BCC      ??SafeFreeString_1
        LDR      R2,[R0, #+32]
        LDR      R0,[R0, #+28]
        ADD      R0,R2,R0
        ADD      R0,R0,#+1
        CMP      R1,R0
        POPCC    {PC}
??SafeFreeString_1:
        MOV      R0,R1
        _BLF     `??operator delete`,`??operator delete??rA`
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??DestroyStringList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??DestroyStringList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??DestroyStringList
        ARM
??DestroyStringList:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+36]
        LDRH     R0,[R0, #+2]
        CMP      R0,#+0
        POPEQ    {R4,PC}
??DestroyStringList_1:
        LDR      R0,[R4, #+36]
        MOV      R1,#+0
        SWI      +377
        MOV      R1,R0
        MOV      R0,R4
        BL       ??SafeFreeString
        LDR      R0,[R4, #+36]
        LDRH     R0,[R0, #+2]
        CMP      R0,#+0
        BNE      ??DestroyStringList_1
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??find_eol??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE ??find_eol

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function ??find_eol
        ARM
??find_eol:
        MOV      R2,#+0
        B        ??find_eol_1
??find_eol_2:
        ADD      R0,R0,#+1
??find_eol_1:
        LDRB     R3,[R0, #+0]
        CMP      R3,#+0
        BEQ      ??find_eol_3
        CMP      R3,#+13
        BNE      ??find_eol_4
        LDRB     R2,[R0, #+1]
        CMP      R2,#+10
        BEQ      ??find_eol_5
??find_eol_6:
        MOV      R2,R0
        MOV      R0,#+1
??find_eol_7:
        STR      R0,[R1, #+0]
??find_eol_3:
        MOV      R0,R2
        BX       LR               ;; return
??find_eol_4:
        CMP      R3,#+10
        BNE      ??find_eol_2
        LDRB     R2,[R0, #+1]
        CMP      R2,#+13
        BNE      ??find_eol_6
??find_eol_5:
        MOV      R2,R0
        MOV      R0,#+2
        B        ??find_eol_7
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??strchr??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE ??strchr

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function ??strchr
        ARM
??strchr:
        CMP      R0,#+0
        BNE      ??strchr_1
??strchr_2:
        MOV      R0,#+0
        BX       LR               ;; return
??strchr_3:
        ADD      R0,R0,#+1
??strchr_1:
        LDRB     R2,[R0, #+0]
        CMP      R2,#+0
        BEQ      ??strchr_2
        CMP      R2,R1
        BNE      ??strchr_3
        BX       LR
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??GetExtInfo??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE ??GetExtInfo

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function ??GetExtInfo
        ARM
??GetExtInfo:
        PUSH     {R4-R10,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R10 Frame(CFA, -8)
        CFI R9 Frame(CFA, -12)
        CFI R8 Frame(CFA, -16)
        CFI R7 Frame(CFA, -20)
        CFI R6 Frame(CFA, -24)
        CFI R5 Frame(CFA, -28)
        CFI R4 Frame(CFA, -32)
        CFI CFA R13+32
        LDR      R8,[SP, #+32]
        MOV      R4,R0
        LDRB     R0,[R4, #+0]
        MOV      R5,R1
        MOV      R6,R2
        MOV      R7,R3
        MVN      R9,#+0
        CMP      R0,#+32
        BNE      ??GetExtInfo_1
??GetExtInfo_2:
        LDRB     R0,[R4, #+1]!
        CMP      R0,#+32
        BEQ      ??GetExtInfo_2
??GetExtInfo_1:
        LDRB     R0,[R4, #+0]
        CMP      R0,#+91
        LDRBEQ   R0,[R4, #+1]
        CMPEQ    R0,#+69
        LDRBEQ   R0,[R4, #+2]
        CMPEQ    R0,#+88
        LDRBEQ   R0,[R4, #+3]
        CMPEQ    R0,#+84
        BNE      ??GetExtInfo_3
        LDRB     R0,[R4, #+4]
        CMP      R0,#+48
        BLT      ??GetExtInfo_3
        CMP      R0,#+58
        BGE      ??GetExtInfo_3
        LDRB     R0,[R4, #+5]
        CMP      R0,#+48
        BLT      ??GetExtInfo_3
        CMP      R0,#+58
        BGE      ??GetExtInfo_3
        LDRB     R0,[R4, #+6]
        CMP      R0,#+93
        BNE      ??GetExtInfo_3
        LDRB     R0,[R4, #+4]
        LDRB     R2,[R4, #+5]
        MOV      R1,#+10
        MLA      R0,R1,R0,R2
        MVN      R1,#+15
        BIC      R1,R1,#0x200
        ADD      R10,R1,R0
        MOV      R1,#+58
        ADD      R0,R4,#+7
        BL       ??strchr
        MOVS     R4,R0
        BEQ      ??GetExtInfo_3
??GetExtInfo_4:
        LDRB     R0,[R4, #+1]!
        CMP      R0,#+32
        BEQ      ??GetExtInfo_4
        MOV      R1,#+44
        MOV      R0,R4
        BL       ??strchr
        CMP      R0,#+0
        BEQ      ??GetExtInfo_3
        SUB      R1,R0,#+1
        LDRB     R2,[R1, #+0]
        CMP      R2,#+32
        BNE      ??GetExtInfo_5
??GetExtInfo_6:
        LDRB     R2,[R1, #-1]!
        CMP      R2,#+32
        BEQ      ??GetExtInfo_6
??GetExtInfo_5:
        CMP      R5,#+0
        BEQ      ??GetExtInfo_7
        B        ??GetExtInfo_8
??GetExtInfo_9:
        LDRB     R2,[R4], #+1
        STRB     R2,[R5], #+1
??GetExtInfo_8:
        CMP      R1,R4
        BCS      ??GetExtInfo_9
        MOV      R1,#+0
        STRB     R1,[R5, #+0]
??GetExtInfo_7:
        ADD      R4,R0,#+1
        LDRB     R0,[R4, #+0]
        CMP      R0,#+32
        BNE      ??GetExtInfo_10
??GetExtInfo_11:
        LDRB     R0,[R4, #+1]!
        CMP      R0,#+32
        BEQ      ??GetExtInfo_11
??GetExtInfo_10:
        MOV      R1,#+44
        MOV      R0,R4
        BL       ??strchr
        CMP      R0,#+0
        BEQ      ??GetExtInfo_3
        SUB      R1,R0,#+1
        LDRB     R2,[R1, #+0]
        CMP      R2,#+32
        BNE      ??GetExtInfo_12
??GetExtInfo_13:
        LDRB     R2,[R1, #-1]!
        CMP      R2,#+32
        BEQ      ??GetExtInfo_13
??GetExtInfo_12:
        CMP      R8,#+0
        BEQ      ??GetExtInfo_14
        B        ??GetExtInfo_15
??GetExtInfo_16:
        LDRB     R2,[R4], #+1
        STRB     R2,[R8], #+1
??GetExtInfo_15:
        CMP      R1,R4
        BCS      ??GetExtInfo_16
        MOV      R1,#+0
        STRB     R1,[R8, #+0]
??GetExtInfo_14:
        ADD      R4,R0,#+1
        LDRB     R0,[R4, #+0]
        CMP      R0,#+32
        BNE      ??GetExtInfo_17
??GetExtInfo_18:
        LDRB     R0,[R4, #+1]!
        CMP      R0,#+32
        BEQ      ??GetExtInfo_18
??GetExtInfo_17:
        MOV      R1,#+44
        MOV      R0,R4
        BL       ??strchr
        CMP      R0,#+0
        BEQ      ??GetExtInfo_3
        SUB      R1,R0,#+1
        LDRB     R2,[R1, #+0]
        CMP      R2,#+32
        BNE      ??GetExtInfo_19
??GetExtInfo_20:
        LDRB     R2,[R1, #-1]!
        CMP      R2,#+32
        BEQ      ??GetExtInfo_20
??GetExtInfo_19:
        CMP      R7,#+0
        BEQ      ??GetExtInfo_21
        B        ??GetExtInfo_22
??GetExtInfo_23:
        LDRB     R2,[R4], #+1
        STRB     R2,[R7], #+1
??GetExtInfo_22:
        CMP      R1,R4
        BCS      ??GetExtInfo_23
        MOV      R1,#+0
        STRB     R1,[R7, #+0]
??GetExtInfo_21:
        ADD      R4,R0,#+1
        LDRB     R0,[R4, #+0]
        CMP      R0,#+32
        BNE      ??GetExtInfo_24
??GetExtInfo_25:
        LDRB     R0,[R4, #+1]!
        CMP      R0,#+32
        BEQ      ??GetExtInfo_25
??GetExtInfo_24:
        MOV      R0,R4
        SWI      +346
        ADD      R0,R0,R4
        SUB      R1,R0,#+1
        LDRB     R0,[R1, #+0]
        CMP      R0,#+32
        BNE      ??GetExtInfo_26
??GetExtInfo_27:
        LDRB     R0,[R1, #-1]!
        CMP      R0,#+32
        BEQ      ??GetExtInfo_27
??GetExtInfo_26:
        CMP      R6,#+0
        BEQ      ??GetExtInfo_28
        B        ??GetExtInfo_29
??GetExtInfo_30:
        LDRB     R0,[R4], #+1
        STRB     R0,[R6], #+1
??GetExtInfo_29:
        CMP      R1,R4
        BCS      ??GetExtInfo_30
        MOV      R0,#+0
        STRB     R0,[R6, #+0]
??GetExtInfo_28:
        MOV      R9,R10
??GetExtInfo_3:
        MOV      R0,R9
        POP      {R4-R10,PC}      ;; return
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon0
        CFI NoFunction
        THUMB
??IsStringValid??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock22
        REQUIRE ??IsStringValid

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI Function ??IsStringValid
        ARM
??IsStringValid:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+8
        MOV      R3,#+0
        MOV      R2,R1
        BL       ??GetExtInfo
        CMN      R0,#+1
        ADD      SP,SP,#+4
        CFI CFA R13+4
        MOVNE    R0,#+1
        POPNE    {PC}
        MOV      R0,#+0
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock23

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon0
        CFI NoFunction
        THUMB
??SaveIni??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock24
        REQUIRE ??SaveIni

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI Function ??SaveIni
        ARM
??SaveIni:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        SUB      SP,SP,#+256
        CFI CFA R13+284
        MOV      R4,R0
        MOV      R0,#+21
        SWI      +261
        MOV      R1,R0
        MOV      R0,SP
        SWI      +338
        LDR      R1,??DataTable1  ;; `?<Constant L"\\x2f\\x45\\x78\\x74\\x65\\x6e\\x73\\x69\\_1`
        MOV      R0,SP
        SWI      +340
        MOV      R5,#+48
        MOV      R6,#+48
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+74
        MOV      R0,SP
        SWI      +760
        MOVS     R9,R0
        BMI      ??SaveIni_1
        LDR      R0,[R4, #+36]
        MOV      R7,#+0
        LDRH     R0,[R0, #+2]
        CMP      R0,#+0
        BNE      ??SaveIni_2
        B        ??SaveIni_3
??SaveIni_4:
        LDR      R0,[R4, #+36]
        MOV      R1,R7
        SWI      +429
        LDRB     R1,[R0, #+0]
        MOV      R8,R0
        CMP      R1,#+32
        BNE      ??SaveIni_5
??SaveIni_6:
        LDRB     R1,[R0, #+1]!
        CMP      R1,#+32
        BEQ      ??SaveIni_6
??SaveIni_5:
        LDRB     R1,[R0, #+0]
        CMP      R1,#+91
        LDRBEQ   R1,[R0, #+1]
        CMPEQ    R1,#+69
        LDRBEQ   R1,[R0, #+2]
        CMPEQ    R1,#+88
        LDRBEQ   R1,[R0, #+3]
        CMPEQ    R1,#+84
        BNE      ??SaveIni_7
        LDRB     R1,[R0, #+4]
        CMP      R1,#+48
        BLT      ??SaveIni_7
        CMP      R1,#+58
        BGE      ??SaveIni_7
        LDRB     R1,[R0, #+5]
        CMP      R1,#+48
        BLT      ??SaveIni_7
        CMP      R1,#+58
        BGE      ??SaveIni_7
        LDRB     R1,[R0, #+6]
        CMP      R1,#+93
        BNE      ??SaveIni_7
        STRB     R5,[R0, #+4]
        STRB     R6,[R0, #+5]
        ADD      R6,R6,#+1
        CMP      R6,#+58
        ADDGE    R5,R5,#+1
        MOVGE    R6,#+48
??SaveIni_7:
        MOV      R0,R8
        SWI      +346
        MOV      R2,R0
        MOV      R1,R8
        MOV      R0,R9
        SWI      +762
        MOV      R2,#+2
        ADR      R1,??SaveIni_8   ;; "\r\n"
        MOV      R0,R9
        SWI      +762
        ADD      R7,R7,#+1
??SaveIni_2:
        LDR      R0,[R4, #+36]
        LDRH     R0,[R0, #+2]
        CMP      R7,R0
        BLT      ??SaveIni_4
??SaveIni_3:
        MOV      R0,R9
        SWI      +765
??SaveIni_1:
        ADD      SP,SP,#+256      ;; stack cleaning
        CFI CFA R13+28
        POP      {R4-R9,PC}       ;; return
        DATA
??SaveIni_8:
        DC8      "\r\n",+0
        CFI EndBlock cfiBlock25

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock26 Using cfiCommon0
        CFI NoFunction
        THUMB
??ReadIni??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock26
        REQUIRE ??ReadIni

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock27 Using cfiCommon1
        CFI Function ??ReadIni
        ARM
??ReadIni:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+260
        CFI CFA R13+272
        MOV      R4,R0
        MOV      R0,#+21
        SWI      +261
        MOV      R1,R0
        ADD      R0,SP,#+4
        SWI      +338
        LDR      R1,??DataTable1  ;; `?<Constant L"\\x2f\\x45\\x78\\x74\\x65\\x6e\\x73\\x69\\_1`
        ADD      R0,SP,#+4
        SWI      +340
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+1
        ADD      R0,SP,#+4
        SWI      +760
        MOVS     R5,R0
        BMI      ??ReadIni_1
        MOV      R2,#+1
        MOV      R1,#+0
        SWI      +764
        STR      R0,[R4, #+32]
        CMP      R0,#+1
        BLT      ??ReadIni_2
        MOV      R2,#+2
        MOV      R1,#+0
        MOV      R0,R5
        SWI      +764
        LDR      R0,[R4, #+28]
        CMP      R0,#+0
        BEQ      ??ReadIni_3
        _BLF     `??operator delete`,`??operator delete??rA`
??ReadIni_3:
        LDR      R0,[R4, #+32]
        ADD      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        STR      R0,[R4, #+28]
        LDR      R2,[R4, #+32]
        MOV      R1,R0
        MOV      R0,R5
        SWI      +763
        LDR      R1,[R4, #+28]
        MOV      R2,#+0
        STRB     R2,[R0, +R1]
??ReadIni_2:
        MOV      R0,R5
        SWI      +765
        MOV      R0,R4
        BL       ??DestroyStringList
        LDR      R5,[R4, #+28]
        MOV      R1,#+0
        STR      R1,[SP, #+0]
        B        ??ReadIni_4
??ReadIni_5:
        MOV      R0,#+0
        STRB     R0,[R5, #+0]
??ReadIni_4:
        LDR      R0,[SP, #+0]
        ADD      R5,R0,R5
        LDRB     R0,[R5, #+0]
        CMP      R0,#+0
        BEQ      ??ReadIni_1
        LDR      R0,[R4, #+36]
        MOV      R1,R5
        SWI      +432
        MOV      R1,SP
        MOV      R0,R5
        BL       ??find_eol
        MOVS     R5,R0
        BNE      ??ReadIni_5
??ReadIni_1:
        ADD      SP,SP,#+260      ;; stack cleaning
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock27

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable1:
        DC32     `?<Constant L"\\x2f\\x45\\x78\\x74\\x65\\x6e\\x73\\x69\\_1`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock28 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelFileFilterElf??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock28
        REQUIRE ??SelFileFilterElf

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock29 Using cfiCommon1
        CFI Function ??SelFileFilterElf
        ARM
??SelFileFilterElf:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+28
        CFI CFA R13+40
        MOV      R4,R1
        MOV      R5,R2
        SWI      +295
        CMP      R0,#+0
        BEQ      ??SelFileFilterElf_1
??SelFileFilterElf_2:
        MOV      R0,#+1
        ADD      SP,SP,#+28
        CFI CFA R13+12
        POP      {R4,R5,PC}
        CFI CFA R13+40
??SelFileFilterElf_1:
        MOV      R2,SP
        MOV      R1,R5
        MOV      R0,R4
        SWI      +284
        LDR      R0,[SP, #+4]
        TST      R0,#0x10000
        BNE      ??SelFileFilterElf_2
        MOV      R0,#+0
        ADD      SP,SP,#+28
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock29

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock30 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelFilePageOnCreate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock30
        REQUIRE ??SelFilePageOnCreate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock31 Using cfiCommon1
        CFI Function ??SelFilePageOnCreate
        ARM
??SelFilePageOnCreate:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        SUB      SP,SP,#+688
        CFI CFA R13+716
        MOV      R6,R1
        MOV      R4,#+0
        SWI      +287
        MOV      R5,R0
        LDR      R0,[R6, #+340]
        CMP      R0,#+1
        BNE      ??SelFilePageOnCreate_1
        MOV      R0,#+17
        SWI      +261
        LDR      R2,??SelFilePageOnCreate_2  ;; `?<Constant L"\\x2a\\x2e\\x70\\x6e\\x67\\x3b\\x2a\\x2e\\` + 52
        ADD      R1,R6,#+84
        PUSH     {R1}
        CFI CFA R13+720
        MOV      R3,R0
        ADD      R0,SP,#+12
        MOV      R1,#+255
        SWI      +277
        ADD      R1,SP,#+652
        ADD      R0,SP,#+12
        SWI      +761
        CMP      R0,#+0
        ADD      SP,SP,#+4
        CFI CFA R13+716
        BEQ      ??SelFilePageOnCreate_3
        MOV      R0,#+16
        SWI      +261
        LDR      R2,??SelFilePageOnCreate_2  ;; `?<Constant L"\\x2a\\x2e\\x70\\x6e\\x67\\x3b\\x2a\\x2e\\` + 52
        MOV      R3,R0
        ADD      R0,R6,#+84
        PUSH     {R0}
        CFI CFA R13+720
        MOV      R1,#+255
        ADD      R0,SP,#+12
        SWI      +277
        ADD      R1,SP,#+652
        ADD      R0,SP,#+12
        SWI      +761
        ADD      SP,SP,#+4
        CFI CFA R13+716
??SelFilePageOnCreate_3:
        CMP      R0,#+0
        BNE      ??SelFilePageOnCreate_4
        MOV      R1,#+47
        ADD      R0,SP,#+8
        SWI      +430
        MOVS     R7,R0
        BEQ      ??SelFilePageOnCreate_4
        MOV      R0,#+0
        STRH     R0,[R7], #+2
        SWI      +691
        MOV      R4,R0
        ADD      R1,SP,#+8
        SWI      +725
        MOV      R1,R7
        MOV      R0,R4
        SWI      +724
??SelFilePageOnCreate_4:
        LDR      R8,??SelFilePageOnCreate_2+0x4  ;; `?<Constant L"\\x2a\\x2e\\x70\\x6e\\x67\\x3b\\x2a\\x2e\\` + 64
        LDR      R9,??SelFilePageOnCreate_2+0x8  ;; ??SelFileFilterElf
        MOV      R0,#+17
        SWI      +261
        STR      R0,[SP, #+0]
        MOV      R0,#+16
        SWI      +261
        STR      R0,[SP, #+4]
        MOV      R7,#+2
        B        ??SelFilePageOnCreate_5
??SelFilePageOnCreate_1:
        CMP      R0,#+2
        CMPNE    R0,#+3
        BNE      ??SelFilePageOnCreate_5
        LDR      R7,??SelFilePageOnCreate_2+0xC  ;; ??folderpics
        LDR      R8,??SelFilePageOnCreate_2+0x10  ;; `?<Constant L"\\x2a\\x2e\\x70\\x6e\\x67\\x3b\\x2a\\x2e\\`
        SWI      +691
        MOV      R4,R0
        MOV      R0,#+21
        SWI      +261
        MOV      R1,R0
        MOV      R0,R7
        SWI      +338
        LDR      R1,??SelFilePageOnCreate_2+0x14  ;; `?<Constant L"\\x2a\\x2e\\x70\\x6e\\x67\\x3b\\x2a\\x2e\\` + 76
        MOV      R0,R7
        SWI      +340
        MOV      R1,R7
        MOV      R0,R4
        SWI      +725
        LDR      R0,[R6, #+340]
        MOV      R2,#+63
        CMP      R0,#+2
        ADDEQ    R1,R6,#+212
        ADDNE    R1,R6,#+276
        ADD      R0,SP,#+520
        BL       ??win12512unicode
        ADD      R1,SP,#+520
        MOV      R0,R4
        SWI      +724
        LDR      R1,??SelFilePageOnCreate_2+0xC  ;; ??folderpics
        MOV      R7,#+1
        STR      R1,[SP, #+0]
        SWI      +33063
        MOV      R9,R0
??SelFilePageOnCreate_5:
        LDR      R0,??SelFilePageOnCreate_2+0x18  ;; `?<Constant L"\\x2a\\x2e\\x70\\x6e\\x67\\x3b\\x2a\\x2e\\` + 100
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R5
        SWI      +289
        MOV      R0,R6
        SWI      +506
        MOV      R1,R0
        MOV      R0,R5
        SWI      +685
        MOV      R1,SP
        MOV      R0,R5
        SWI      +290
        MOV      R1,R7
        MOV      R0,R5
        SWI      +681
        MOV      R1,#+1
        MOV      R0,R5
        SWI      +683
        MOV      R1,R8
        MOV      R0,R5
        SWI      +689
        MOV      R1,R9
        MOV      R0,R5
        SWI      +686
        CMP      R4,#+0
        BEQ      ??SelFilePageOnCreate_6
        MOV      R1,R4
        MOV      R0,R5
        SWI      +883
        MOV      R0,R4
        SWI      +692
??SelFilePageOnCreate_6:
        MOV      R0,R5
        SWI      +292
        MOV      R0,R5
        SWI      +293
        MOV      R0,#+1
        ADD      SP,SP,#+688
        CFI CFA R13+28
        POP      {R4-R9,PC}       ;; return
        DATA
??SelFilePageOnCreate_2:
        DC32     `?<Constant L"\\x2a\\x2e\\x70\\x6e\\x67\\x3b\\x2a\\x2e\\` + 52
        DC32     `?<Constant L"\\x2a\\x2e\\x70\\x6e\\x67\\x3b\\x2a\\x2e\\` + 64
        DC32     ??SelFileFilterElf
        DC32     ??folderpics
        DC32     `?<Constant L"\\x2a\\x2e\\x70\\x6e\\x67\\x3b\\x2a\\x2e\\`
        DC32     `?<Constant L"\\x2a\\x2e\\x70\\x6e\\x67\\x3b\\x2a\\x2e\\` + 76
        DC32     `?<Constant L"\\x2a\\x2e\\x70\\x6e\\x67\\x3b\\x2a\\x2e\\` + 100
        CFI EndBlock cfiBlock31

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock32 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelFilePageOnAccept??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock32
        REQUIRE ??SelFilePageOnAccept

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
??folderpics:
        DS8 256

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock33 Using cfiCommon1
        CFI Function ??SelFilePageOnAccept
        ARM
??SelFilePageOnAccept:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        MOV      R5,R0
        MOV      R4,R1
        LDR      R0,[R4, #+340]
        CMP      R0,#+2
        CMPNE    R0,#+3
        BNE      ??SelFilePageOnAccept_1
        CMP      R0,#+2
        MOV      R0,R5
        BNE      ??SelFilePageOnAccept_2
        SWI      +722
        ADD      R5,R4,#+212
        MOV      R2,#+63
        MOV      R1,R0
??SelFilePageOnAccept_3:
        MOV      R0,R5
        BL       ??unicode2win1251
        B        ??SelFilePageOnAccept_4
??SelFilePageOnAccept_2:
        SWI      +722
        MOV      R1,R0
        ADD      R5,R4,#+276
        MOV      R2,#+63
        B        ??SelFilePageOnAccept_3
??SelFilePageOnAccept_1:
        CMP      R0,#+1
        BNE      ??SelFilePageOnAccept_5
        MOV      R0,R5
        SWI      +723
        MOV      R7,R0
        SWI      +343
        MOV      R8,R0
        MOV      R0,R5
        SWI      +722
        MOV      R6,R0
        SWI      +343
        ADD      R0,R0,R8
        ADD      R0,R0,#+2
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R5,R0
        MOV      R1,R7
        SWI      +338
        ADD      R0,R5,R8, LSL #+1
        MOV      R1,#+47
        STRH     R1,[R0], #+2
        MOV      R1,R6
        SWI      +338
        MOV      R0,#+17
        SWI      +261
        MOV      R6,R0
        MOV      R0,#+16
        SWI      +261
        MOV      R7,R0
        MOV      R0,R6
        SWI      +343
        MOV      R8,R0
        MOV      R2,R8
        MOV      R1,R5
        MOV      R0,R6
        SWI      +666
        CMP      R0,#+0
        BEQ      ??SelFilePageOnAccept_6
        MOV      R0,R7
        SWI      +343
        MOV      R8,R0
        MOV      R2,R8
        MOV      R1,R5
        MOV      R0,R7
        SWI      +666
        CMP      R0,#+0
        BNE      ??SelFilePageOnAccept_7
??SelFilePageOnAccept_6:
        MOV      R2,#+127
        ADD      R1,R5,R8, LSL #+1
        ADD      R0,R4,#+84
        BL       ??unicode2win1251
??SelFilePageOnAccept_7:
        MOV      R0,R5
        _BLF     `??operator delete`,`??operator delete??rA`
        ADD      R5,R4,#+84
??SelFilePageOnAccept_4:
        CMP      R5,#+0
        BEQ      ??SelFilePageOnAccept_5
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+6
        MOV      R0,R5
        SWI      +349
        LDR      R1,[R4, #+340]
        MOV      R2,R0
        LDR      R0,[R4, #+40]
        SWI      +678
??SelFilePageOnAccept_5:
        LDR      R0,??DataTable3  ;; PREVIOUS_EVENT
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        SWI      +302
        MOV      R0,#+1
        POP      {R4-R8,PC}       ;; return
        CFI EndBlock cfiBlock33

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock34 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelFilePageOnCancel??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock34
        REQUIRE ??SelFilePageOnCancel

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock35 Using cfiCommon1
        CFI Function ??SelFilePageOnCancel
        ARM
??SelFilePageOnCancel:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R0,R1
        LDR      R1,??DataTable3  ;; PREVIOUS_EVENT
        LDR      R1,[R1, #+0]
        SWI      +302
        MOV      R0,#+1
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock35

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable3:
        DC32     PREVIOUS_EVENT

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock36 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnBackSI_EditExt??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock36
        REQUIRE ??OnBackSI_EditExt

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
bk_msglst_selfile:
        DATA
        DC32 66, ??SelFilePageOnCreate, 76, ??SelFilePageOnAccept, 78
        DC32 ??SelFilePageOnCancel, 77, ??SelFilePageOnCancel, 64, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock37 Using cfiCommon1
        CFI Function ??OnBackSI_EditExt
        ARM
??OnBackSI_EditExt:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+344]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+344]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock37

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock38 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnOkSI_EditExt??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock38
        REQUIRE ??OnOkSI_EditExt

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock39 Using cfiCommon1
        CFI Function ??OnOkSI_EditExt
        ARM
??OnOkSI_EditExt:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R2,#+35
        MOV      R4,R0
        ADD      R0,R4,#+48
        BL       ??unicode2win1251
        LDR      R0,[R4, #+344]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+344]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock39

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock40 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateSI_EditExt??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock40
        REQUIRE ??CreateSI_EditExt

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock41 Using cfiCommon1
        CFI Function ??CreateSI_EditExt
        ARM
??CreateSI_EditExt:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R4,R0
        LDR      R0,??CreateSI_EditExt_1  ;; `?<Constant L"\\x49\\x6e\\x70\\x75\\x74\\x20\\x6e\\x65\\`
        SUB      SP,SP,#+128
        CFI CFA R13+144
        MOV      R6,#+255
        ORR      R6,R6,#0xFF00
        MOV      R2,R6
        MOV      R1,#+0
        SWI      +349
        MOV      R5,R0
        MOV      R2,#+63
        ADD      R1,R4,#+48
        MOV      R0,SP
        BL       ??win12512unicode
        MOV      R2,R6
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        LDR      R3,??CreateSI_EditExt_1+0x4  ;; VAR_ARG_STRINP_MIN_LEN
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+148
        LDR      R1,??CreateSI_EditExt_1+0x8  ;; ??OnOkSI_EditExt
        MOV      R2,R5
        PUSH     {R1}
        CFI CFA R13+152
        LDR      R1,??CreateSI_EditExt_1+0xC  ;; VAR_ARG_CALL_BACK_OK
        PUSH     {R1}
        CFI CFA R13+156
        LDR      R1,??CreateSI_EditExt_1+0x10  ;; ??OnBackSI_EditExt
        PUSH     {R1}
        CFI CFA R13+160
        LDR      R1,??DataTable6  ;; VAR_ARG_CALL_BACK_PREV_ACT
        PUSH     {R1}
        CFI CFA R13+164
        LDR      R1,??CreateSI_EditExt_1+0x14  ;; VAR_ARG_HTEXT
        PUSH     {R0}
        CFI CFA R13+168
        LDR      R0,??CreateSI_EditExt_1+0x18  ;; VAR_ARG_STRINP_TEXT
        PUSH     {R0}
        CFI CFA R13+172
        MOV      R0,R4
        PUSH     {R0}
        CFI CFA R13+176
        LDR      R0,??DataTable7  ;; VAR_ARG_BOOK
        PUSH     {R0}
        CFI CFA R13+180
        MOV      R0,#+1
        PUSH     {R0}
        CFI CFA R13+184
        LDR      R0,??CreateSI_EditExt_1+0x1C  ;; VAR_ARG_STRINP_MODE
        PUSH     {R0}
        CFI CFA R13+188
        MOV      R0,#+35
        PUSH     {R0}
        CFI CFA R13+192
        LDR      R0,??CreateSI_EditExt_1+0x20  ;; VAR_ARG_STRINP_MAX_LEN
        PUSH     {R0}
        CFI CFA R13+196
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+200
        SWI      +324
        ADD      SP,SP,#+56
        CFI CFA R13+144
        STR      R0,[R4, #+344]
        ADD      SP,SP,#+128
        CFI CFA R13+16
        POP      {R4-R6,PC}       ;; return
        DATA
??CreateSI_EditExt_1:
        DC32     `?<Constant L"\\x49\\x6e\\x70\\x75\\x74\\x20\\x6e\\x65\\`
        DC32     VAR_ARG_STRINP_MIN_LEN
        DC32     ??OnOkSI_EditExt
        DC32     VAR_ARG_CALL_BACK_OK
        DC32     ??OnBackSI_EditExt
        DC32     VAR_ARG_HTEXT
        DC32     VAR_ARG_STRINP_TEXT
        DC32     VAR_ARG_STRINP_MODE
        DC32     VAR_ARG_STRINP_MAX_LEN
        CFI EndBlock cfiBlock41

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock42 Using cfiCommon0
        CFI NoFunction
        THUMB
??YSYes??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock42
        REQUIRE ??YSYes

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock43 Using cfiCommon1
        CFI Function ??YSYes
        ARM
??YSYes:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R1,#+1
        MOV      R4,R0
        LDR      R2,[R4, #+352]
        BLX      R2
        LDR      R0,[R4, #+348]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+348]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock43

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock44 Using cfiCommon0
        CFI NoFunction
        THUMB
??YSNo??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock44
        REQUIRE ??YSNo

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock45 Using cfiCommon1
        CFI Function ??YSNo
        ARM
??YSNo:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R1,#+0
        MOV      R4,R0
        LDR      R2,[R4, #+352]
        BLX      R2
        LDR      R0,[R4, #+348]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+348]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock45

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock46 Using cfiCommon0
        CFI NoFunction
        THUMB
??YSPrev??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock46
        REQUIRE ??YSPrev

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock47 Using cfiCommon1
        CFI Function ??YSPrev
        ARM
??YSPrev:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+348]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+348]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock47

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock48 Using cfiCommon0
        CFI NoFunction
        THUMB
??MsgBoxYesNo??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock48
        REQUIRE ??MsgBoxYesNo

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock49 Using cfiCommon1
        CFI Function ??MsgBoxYesNo
        ARM
??MsgBoxYesNo:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
        MOV      R0,R1
        MOV      R5,R2
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        STR      R5,[R4, #+352]
        LDR      R3,??MsgBoxYesNo_1  ;; VAR_ARG_YESNO_QUESTION
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+16
        LDR      R1,??MsgBoxYesNo_1+0x4  ;; ??YSPrev
        MOV      R2,R4
        PUSH     {R1}
        CFI CFA R13+20
        LDR      R1,??DataTable6  ;; VAR_ARG_CALL_BACK_PREV_ACT
        PUSH     {R1}
        CFI CFA R13+24
        LDR      R1,??MsgBoxYesNo_1+0x8  ;; ??YSNo
        PUSH     {R1}
        CFI CFA R13+28
        LDR      R1,??MsgBoxYesNo_1+0xC  ;; VAR_ARG_YESNO_NO_ACTION
        PUSH     {R1}
        CFI CFA R13+32
        LDR      R1,??MsgBoxYesNo_1+0x10  ;; ??YSYes
        PUSH     {R1}
        CFI CFA R13+36
        LDR      R1,??MsgBoxYesNo_1+0x14  ;; VAR_ARG_YESNO_YES_ACTION
        PUSH     {R1}
        CFI CFA R13+40
        LDR      R1,??DataTable7  ;; VAR_ARG_BOOK
        PUSH     {R0}
        CFI CFA R13+44
        MOV      R0,#+0
        SWI      +677
        STR      R0,[R4, #+348]
        ADD      SP,SP,#+32
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        DATA
??MsgBoxYesNo_1:
        DC32     VAR_ARG_YESNO_QUESTION
        DC32     ??YSPrev
        DC32     ??YSNo
        DC32     VAR_ARG_YESNO_NO_ACTION
        DC32     ??YSYes
        DC32     VAR_ARG_YESNO_YES_ACTION
        CFI EndBlock cfiBlock49

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable6:
        DC32     VAR_ARG_CALL_BACK_PREV_ACT

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable7:
        DC32     VAR_ARG_BOOK

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock50 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnSelect1EditExtList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock50
        REQUIRE ??OnSelect1EditExtList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock51 Using cfiCommon1
        CFI Function ??OnSelect1EditExtList
        ARM
??OnSelect1EditExtList:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+40]
        SWI      +318
        STR      R0,[R4, #+340]
        CMP      R0,#+0
        BEQ      ??OnSelect1EditExtList_1
        SUB      R0,R0,#+1
        CMP      R0,#+2
        BLS      ??OnSelect1EditExtList_2
        POP      {R4,PC}
??OnSelect1EditExtList_1:
        MOV      R0,R4
        POP      {R4,LR}          ;; Pop
        CFI R4 SameValue
        CFI ?RET R14
        CFI CFA R13+0
        B        ??CreateSI_EditExt  ;; tailcall
        CFI R4 Frame(CFA, -8)
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+8
??OnSelect1EditExtList_2:
        LDR      R1,??OnSelect1EditExtList_3  ;; bk_selbcfg
        MOV      R0,R4
        SWI      +696
        POP      {R4,PC}          ;; return
        DATA
??OnSelect1EditExtList_3:
        DC32     bk_selbcfg
        CFI EndBlock cfiBlock51

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock52 Using cfiCommon0
        CFI NoFunction
        THUMB
??YesNoOnBackExt??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock52
        REQUIRE ??YesNoOnBackExt

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock53 Using cfiCommon1
        CFI Function ??YesNoOnBackExt
        ARM
??YesNoOnBackExt:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+256
        CFI CFA R13+268
        MOV      R4,R0
        CMP      R1,#+1
        BNE      ??YesNoOnBackExt_1
        LDR      R1,??YesNoOnBackExt_2  ;; `?<Constant "[EXT99]: %s, %s, %s, %s">`
        ADD      R0,R4,#+84
        PUSH     {R0}
        CFI CFA R13+272
        ADD      R3,R4,#+276
        ADD      R2,R4,#+48
        ADD      R0,R4,#+212
        PUSH     {R0}
        CFI CFA R13+276
        ADD      R0,SP,#+8
        SWI      +276
        ADD      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R5,R0
        ADD      R1,SP,#+8
        SWI      +416
        LDR      R0,[R4, #+44]
        ADD      SP,SP,#+8
        CFI CFA R13+268
        CMN      R0,#+1
        BEQ      ??YesNoOnBackExt_3
        MOV      R1,R0
        LDR      R0,[R4, #+36]
        SWI      +377
        MOV      R1,R0
        MOV      R0,R4
        BL       ??SafeFreeString
        LDR      R1,[R4, #+44]
        LDR      R0,[R4, #+36]
        MOV      R2,R5
        SWI      +772
        B        ??YesNoOnBackExt_4
??YesNoOnBackExt_3:
        LDR      R0,[R4, #+36]
        MOV      R1,R5
        SWI      +432
??YesNoOnBackExt_4:
        MOV      R0,#+1
        STR      R0,[R4, #+356]
        MOV      R0,R4
        BL       ??CreateGuiList
??YesNoOnBackExt_1:
        LDR      R0,[R4, #+40]
        CMP      R0,#+0
        BEQ      ??YesNoOnBackExt_5
        SWI      +462
        STR      R0,[R4, #+40]
??YesNoOnBackExt_5:
        ADD      SP,SP,#+256      ;; stack cleaning
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        DATA
??YesNoOnBackExt_2:
        DC32     `?<Constant "[EXT99]: %s, %s, %s, %s">`
        CFI EndBlock cfiBlock53

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock54 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnBackEditExtList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock54
        REQUIRE ??OnBackEditExtList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock55 Using cfiCommon1
        CFI Function ??OnBackEditExtList
        ARM
??OnBackEditExtList:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+292
        CFI CFA R13+300
        MOV      R4,R0
        LDR      R0,[R4, #+44]
        CMN      R0,#+1
        BEQ      ??OnBackEditExtList_1
        MOV      R1,R0
        LDR      R0,[R4, #+36]
        SWI      +429
        ADD      R1,SP,#+192
        PUSH     {R1}
        CFI CFA R13+304
        ADD      R3,SP,#+132
        ADD      R2,SP,#+4
        ADD      R1,SP,#+260
        BL       ??GetExtInfo
        ADD      R1,R4,#+48
        ADD      R0,SP,#+260
        BL       ??strcmp_nocase
        CMP      R0,#+0
        ADD      SP,SP,#+4
        CFI CFA R13+300
        BNE      ??OnBackEditExtList_2
        ADD      R1,R4,#+84
        MOV      R0,SP
        BL       ??strcmp_nocase
??OnBackEditExtList_2:
        CMP      R0,#+0
        BNE      ??OnBackEditExtList_3
        ADD      R1,R4,#+212
        ADD      R0,SP,#+128
        BL       ??strcmp_nocase
??OnBackEditExtList_3:
        CMP      R0,#+0
        BNE      ??OnBackEditExtList_4
        ADD      R1,R4,#+276
        ADD      R0,SP,#+192
        BL       ??strcmp_nocase
        B        ??OnBackEditExtList_4
??OnBackEditExtList_1:
        LDRB     R0,[R4, #+48]
        CMP      R0,#+0
        LDRBEQ   R0,[R4, #+84]
        CMP      R0,#+0
        LDRBEQ   R0,[R4, #+212]
        CMP      R0,#+0
        LDRBEQ   R0,[R4, #+276]
??OnBackEditExtList_4:
        CMP      R0,#+0
        BEQ      ??OnBackEditExtList_5
        LDR      R2,??OnBackEditExtList_6  ;; ??YesNoOnBackExt
        LDR      R1,??OnBackEditExtList_6+0x4  ;; `?<Constant L"\\x44\\x6f\\x20\\x79\\x6f\\x75\\x20\\x77\\_1`
        MOV      R0,R4
        BL       ??MsgBoxYesNo
        ADD      SP,SP,#+292
        CFI CFA R13+8
        POP      {R4,PC}
        CFI CFA R13+300
??OnBackEditExtList_5:
        LDR      R0,[R4, #+40]
        CMP      R0,#+0
        BEQ      ??OnBackEditExtList_7
        SWI      +462
        STR      R0,[R4, #+40]
??OnBackEditExtList_7:
        ADD      SP,SP,#+292      ;; stack cleaning
        CFI CFA R13+8
        POP      {R4,PC}          ;; return
        DATA
??OnBackEditExtList_6:
        DC32     ??YesNoOnBackExt
        DC32     `?<Constant L"\\x44\\x6f\\x20\\x79\\x6f\\x75\\x20\\x77\\_1`
        CFI EndBlock cfiBlock55

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock56 Using cfiCommon0
        CFI NoFunction
        THUMB
??onLBMessageEditExtList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock56
        REQUIRE ??onLBMessageEditExtList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock57 Using cfiCommon1
        CFI Function ??onLBMessageEditExtList
        ARM
??onLBMessageEditExtList:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOV      R4,R0
        ADR      R6,??onLBMessageEditExtList_1  ;; ""
        ADR      R7,??onLBMessageEditExtList_1+0x4  ;; 0x00, 0x00
        SWI      +885
        MOV      R5,R0
        MOV      R0,R4
        SWI      +884
        CMP      R0,#+1
        BNE      ??onLBMessageEditExtList_2
        MOV      R0,R4
        SWI      +311
        CMP      R0,#+0
        BEQ      ??onLBMessageEditExtList_3
        SUBS     R0,R0,#+1
        BEQ      ??onLBMessageEditExtList_4
        SUBS     R0,R0,#+1
        BEQ      ??onLBMessageEditExtList_5
        SUBS     R0,R0,#+1
        LDREQ    R7,??onLBMessageEditExtList_1+0x8  ;; `?<Constant L"\\x62\\x69\\x67\\x20\\x69\\x6d\\x67">`
        ADDEQ    R6,R5,#+276
        B        ??onLBMessageEditExtList_6
??onLBMessageEditExtList_3:
        LDR      R7,??onLBMessageEditExtList_1+0xC  ;; `?<Constant L"\\x62\\x69\\x67\\x20\\x69\\x6d\\x67">` + 16
        ADD      R6,R5,#+48
        B        ??onLBMessageEditExtList_6
??onLBMessageEditExtList_4:
        LDR      R7,??onLBMessageEditExtList_1+0x10  ;; `?<Constant L"\\x62\\x69\\x67\\x20\\x69\\x6d\\x67">` + 36
        ADD      R6,R5,#+84
        B        ??onLBMessageEditExtList_6
??onLBMessageEditExtList_5:
        LDR      R7,??onLBMessageEditExtList_1+0x14  ;; `?<Constant L"\\x62\\x69\\x67\\x20\\x69\\x6d\\x67">` + 44
        ADD      R6,R5,#+212
??onLBMessageEditExtList_6:
        MOV      R5,#+255
        ORR      R5,R5,#0xFF00
        MOV      R2,R5
        MOV      R1,#+0
        MOV      R0,R7
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +312
        MOV      R2,R5
        MOV      R1,#+6
        MOV      R0,R6
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +313
??onLBMessageEditExtList_2:
        MOV      R0,#+1
        POP      {R4-R7,PC}       ;; return
        DATA
??onLBMessageEditExtList_1:
        DC8      "",+0,+0,+0
        DC8      0x00, 0x00,+0,+0
        DC32     `?<Constant L"\\x62\\x69\\x67\\x20\\x69\\x6d\\x67">`
        DC32     `?<Constant L"\\x62\\x69\\x67\\x20\\x69\\x6d\\x67">` + 16
        DC32     `?<Constant L"\\x62\\x69\\x67\\x20\\x69\\x6d\\x67">` + 36
        DC32     `?<Constant L"\\x62\\x69\\x67\\x20\\x69\\x6d\\x67">` + 44
        CFI EndBlock cfiBlock57

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock58 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateEditExtList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock58
        REQUIRE ??CreateEditExtList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock59 Using cfiCommon1
        CFI Function ??CreateEditExtList
        ARM
??CreateEditExtList:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        SUB      SP,SP,#+64
        CFI CFA R13+80
        MOV      R4,R0
        MOV      R5,R1
        MOV      R1,#+0
        SWI      +448
        MOV      R6,R0
        STR      R5,[R4, #+44]
        CMN      R5,#+1
        BEQ      ??CreateEditExtList_1
        LDR      R0,[R4, #+36]
        MOV      R1,R5
        SWI      +429
        ADD      R1,R4,#+276
        PUSH     {R1}
        CFI CFA R13+84
        ADD      R3,R4,#+212
        ADD      R2,R4,#+84
        ADD      R1,R4,#+48
        BL       ??GetExtInfo
        LDR      R2,??CreateEditExtList_2  ;; `?<Constant L"\\x45\\x64\\x69\\x74\\x20\\x65\\x78\\x74\\`
        ADD      R3,R4,#+48
        MOV      R1,#+31
        ADD      R0,SP,#+4
        SWI      +277
        ADD      R0,SP,#+4
        ADD      SP,SP,#+4
        CFI CFA R13+80
        B        ??CreateEditExtList_3
??CreateEditExtList_1:
        LDR      R0,??CreateEditExtList_2+0x4  ;; `?<Constant L"\\x45\\x64\\x69\\x74\\x20\\x65\\x78\\x74\\` + 28
        MOV      R1,#+0
        STRB     R1,[R4, #+48]
        STRB     R1,[R4, #+84]
        STRB     R1,[R4, #+212]
        STRB     R1,[R4, #+276]
??CreateEditExtList_3:
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R6
        SWI      +307
        MOV      R1,#+4
        MOV      R0,R6
        SWI      +449
        MOV      R1,#+3
        MOV      R0,R6
        SWI      +319
        MOV      R1,#+0
        MOV      R0,R6
        SWI      +309
        LDR      R1,??CreateEditExtList_2+0x8  ;; ??onLBMessageEditExtList
        MOV      R0,R6
        SWI      +372
        LDR      R0,??DataTable10  ;; ACTION_BACK
        LDR      R2,??CreateEditExtList_2+0xC  ;; ??OnBackEditExtList
        LDR      R1,[R0, #+0]
        MOV      R0,R6
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??DataTable11  ;; ACTION_SELECT1
        LDR      R2,??CreateEditExtList_2+0x10  ;; ??OnSelect1EditExtList
        LDR      R1,[R0, #+0]
        MOV      R0,R6
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        MOV      R0,R6
        ADD      SP,SP,#+64
        CFI CFA R13+16
        POP      {R4-R6,PC}       ;; return
        DATA
??CreateEditExtList_2:
        DC32     `?<Constant L"\\x45\\x64\\x69\\x74\\x20\\x65\\x78\\x74\\`
        DC32     `?<Constant L"\\x45\\x64\\x69\\x74\\x20\\x65\\x78\\x74\\` + 28
        DC32     ??onLBMessageEditExtList
        DC32     ??OnBackEditExtList
        DC32     ??OnSelect1EditExtList
        CFI EndBlock cfiBlock59

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock60 Using cfiCommon0
        CFI NoFunction
        THUMB
??onLBMessage??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock60
        REQUIRE ??onLBMessage

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock61 Using cfiCommon1
        CFI Function ??onLBMessage
        ARM
??onLBMessage:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        SUB      SP,SP,#+164
        CFI CFA R13+192
        MOV      R4,R0
        SWI      +885
        MOV      R6,R0
        MOV      R0,R4
        SWI      +884
        CMP      R0,#+1
        BNE      ??onLBMessage_1
        MOV      R0,R4
        SWI      +311
        MOV      R7,R0
        CMP      R7,#+1
        BLT      ??onLBMessage_2
        MOV      R8,#+0
        MOV      R9,#+1
        B        ??onLBMessage_3
??onLBMessage_4:
        ADD      R9,R9,#+1
??onLBMessage_5:
        ADD      R8,R8,#+1
??onLBMessage_3:
        LDR      R0,[R6, #+36]
        LDRH     R0,[R0, #+2]
        CMP      R8,R0
        BGE      ??onLBMessage_6
        LDR      R0,[R6, #+36]
        MOV      R1,R8
        SWI      +429
        MOV      R5,R0
        BL       ??IsStringValid
        CMP      R0,#+0
        BEQ      ??onLBMessage_5
        CMP      R9,R7
        BNE      ??onLBMessage_4
??onLBMessage_6:
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+196
        MOV      R3,#+0
        ADD      R2,SP,#+4
        ADD      R1,SP,#+132
        MOV      R0,R5
        BL       ??GetExtInfo
        MOV      R5,#+255
        ORR      R5,R5,#0xFF00
        MOV      R2,R5
        MOV      R1,#+6
        ADD      R0,SP,#+132
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +312
        MOV      R2,R5
        MOV      R1,#+6
        ADD      R0,SP,#+4
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +313
        ADD      SP,SP,#+4
        CFI CFA R13+192
        MOV      R0,#+1
        ADD      SP,SP,#+164
        CFI CFA R13+28
        POP      {R4-R9,PC}
        CFI CFA R13+192
??onLBMessage_2:
        LDR      R0,??onLBMessage_7  ;; `?<Constant L"\\x61\\x64\\x64\\x20\\x6e\\x65\\x77\\x20\\`
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +312
??onLBMessage_1:
        MOV      R0,#+1
        ADD      SP,SP,#+164
        CFI CFA R13+28
        POP      {R4-R9,PC}       ;; return
        DATA
??onLBMessage_7:
        DC32     `?<Constant L"\\x61\\x64\\x64\\x20\\x6e\\x65\\x77\\x20\\`
        CFI EndBlock cfiBlock61

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock62 Using cfiCommon0
        CFI NoFunction
        THUMB
??YesNoOnBackGuiList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock62
        REQUIRE ??YesNoOnBackGuiList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock63 Using cfiCommon1
        CFI Function ??YesNoOnBackGuiList
        ARM
??YesNoOnBackGuiList:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        CMP      R1,#+1
        MOV      R4,R0
        BNE      ??YesNoOnBackGuiList_1
        BL       ??SaveIni
??YesNoOnBackGuiList_1:
        MOV      R0,R4
        SWI      +303
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock63

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock64 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnBackGuiList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock64
        REQUIRE ??OnBackGuiList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock65 Using cfiCommon1
        CFI Function ??OnBackGuiList
        ARM
??OnBackGuiList:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R1,[R0, #+356]
        CMP      R1,#+0
        BEQ      ??OnBackGuiList_1
        LDR      R2,??OnBackGuiList_2  ;; ??YesNoOnBackGuiList
        LDR      R1,??OnBackGuiList_2+0x4  ;; `?<Constant L"\\x44\\x6f\\x20\\x79\\x6f\\x75\\x20\\x77\\`
        POP      {LR}             ;; Pop
        CFI ?RET R14
        CFI CFA R13+0
        B        ??MsgBoxYesNo    ;; tailcall
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
??OnBackGuiList_1:
        SWI      +303
        POP      {PC}             ;; return
        DATA
??OnBackGuiList_2:
        DC32     ??YesNoOnBackGuiList
        DC32     `?<Constant L"\\x44\\x6f\\x20\\x79\\x6f\\x75\\x20\\x77\\`
        CFI EndBlock cfiBlock65

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock66 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnSelect1GuiList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock66
        REQUIRE ??OnSelect1GuiList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock67 Using cfiCommon1
        CFI Function ??OnSelect1GuiList
        ARM
??OnSelect1GuiList:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOV      R4,R0
        LDR      R0,[R4, #+24]
        SWI      +318
        MOV      R5,R0
        CMP      R5,#+1
        BLT      ??OnSelect1GuiList_1
        MOV      R6,#+0
        MOV      R7,#+1
??OnSelect1GuiList_2:
        LDR      R0,[R4, #+36]
        LDRH     R0,[R0, #+2]
        CMP      R6,R0
        BGE      ??OnSelect1GuiList_3
        LDR      R0,[R4, #+36]
        MOV      R1,R6
        SWI      +429
        BL       ??IsStringValid
        CMP      R0,#+0
        BEQ      ??OnSelect1GuiList_4
        CMP      R7,R5
        BEQ      ??OnSelect1GuiList_3
        ADD      R7,R7,#+1
??OnSelect1GuiList_4:
        ADD      R6,R6,#+1
        B        ??OnSelect1GuiList_2
??OnSelect1GuiList_1:
        MVN      R6,#+0
??OnSelect1GuiList_3:
        MOV      R1,R6
        MOV      R0,R4
        BL       ??CreateEditExtList
        STR      R0,[R4, #+40]
        SWI      +308
        POP      {R4-R7,PC}       ;; return
        CFI EndBlock cfiBlock67

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock68 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnDeleteGuiList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock68
        REQUIRE ??OnDeleteGuiList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock69 Using cfiCommon1
        CFI Function ??OnDeleteGuiList
        ARM
??OnDeleteGuiList:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOV      R4,R0
        LDR      R0,[R4, #+24]
        SWI      +318
        MOV      R5,R0
        CMP      R5,#+1
        POPLT    {R4-R7,PC}
        MOV      R6,#+0
        MOV      R7,#+1
        B        ??OnDeleteGuiList_1
??OnDeleteGuiList_2:
        ADD      R6,R6,#+1
??OnDeleteGuiList_1:
        LDR      R0,[R4, #+36]
        LDRH     R0,[R0, #+2]
        CMP      R6,R0
        BGE      ??OnDeleteGuiList_3
        LDR      R0,[R4, #+36]
        MOV      R1,R6
        SWI      +429
        BL       ??IsStringValid
        CMP      R0,#+0
        BEQ      ??OnDeleteGuiList_2
        MOV      R0,R7
        ADD      R7,R0,#+1
        CMP      R0,R5
        BNE      ??OnDeleteGuiList_2
??OnDeleteGuiList_3:
        LDR      R0,[R4, #+36]
        MOV      R1,R6
        SWI      +377
        MOV      R1,R0
        MOV      R0,R4
        BL       ??SafeFreeString
        MOV      R0,#+1
        STR      R0,[R4, #+356]
        MOV      R0,R4
        BL       ??CreateGuiList
        POP      {R4-R7,PC}       ;; return
        CFI EndBlock cfiBlock69

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock70 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateGuiList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock70
        REQUIRE ??CreateGuiList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock71 Using cfiCommon1
        CFI Function ??CreateGuiList
        ARM
??CreateGuiList:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R4,R0
        LDR      R0,[R4, #+24]
        MOV      R5,#+1
        CMP      R0,#+0
        BEQ      ??CreateGuiList_1
        SWI      +462
        STR      R0,[R4, #+24]
??CreateGuiList_1:
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +448
        STR      R0,[R4, #+24]
        LDR      R0,??CreateGuiList_2  ;; `?<Constant L"\\x45\\x78\\x74\\x45\\x64\\x69\\x74\\x6f\\`
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        LDR      R0,[R4, #+24]
        MOV      R6,#+0
        SWI      +307
        LDR      R0,[R4, #+36]
        LDRH     R0,[R0, #+2]
        CMP      R0,#+0
        BNE      ??CreateGuiList_3
        B        ??CreateGuiList_4
??CreateGuiList_5:
        LDR      R0,[R4, #+36]
        MOV      R1,R6
        SWI      +429
        BL       ??IsStringValid
        CMP      R0,#+0
        ADDNE    R5,R5,#+1
        ADD      R6,R6,#+1
??CreateGuiList_3:
        LDR      R0,[R4, #+36]
        LDRH     R0,[R0, #+2]
        CMP      R6,R0
        BLT      ??CreateGuiList_5
??CreateGuiList_4:
        LDR      R0,[R4, #+24]
        MOV      R1,R5
        SWI      +449
        LDR      R1,??CreateGuiList_2+0x4  ;; ??onLBMessage
        LDR      R0,[R4, #+24]
        SWI      +372
        LDR      R0,[R4, #+24]
        MOV      R1,#+3
        SWI      +319
        LDR      R0,[R4, #+24]
        MOV      R1,#+0
        SWI      +309
        LDR      R0,??DataTable10  ;; ACTION_BACK
        LDR      R2,??CreateGuiList_2+0x8  ;; ??OnBackGuiList
        LDR      R1,[R0, #+0]
        LDR      R0,[R4, #+24]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??DataTable11  ;; ACTION_SELECT1
        LDR      R2,??CreateGuiList_2+0xC  ;; ??OnSelect1GuiList
        LDR      R1,[R0, #+0]
        LDR      R0,[R4, #+24]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??CreateGuiList_2+0x10  ;; ACTION_DELETE
        LDR      R2,??CreateGuiList_2+0x14  ;; ??OnDeleteGuiList
        LDR      R5,[R0, #+0]
        LDR      R0,[R4, #+24]
        MOV      R1,R5, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,[R4, #+24]
        MOV      R2,#+0
        MOV      R1,R5, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +336
        LDR      R0,[R4, #+24]
        SWI      +308
        LDR      R0,[R4, #+24]
        POP      {R4-R6,PC}       ;; return
        DATA
??CreateGuiList_2:
        DC32     `?<Constant L"\\x45\\x78\\x74\\x45\\x64\\x69\\x74\\x6f\\`
        DC32     ??onLBMessage
        DC32     ??OnBackGuiList
        DC32     ??OnSelect1GuiList
        DC32     ACTION_DELETE
        DC32     ??OnDeleteGuiList
        CFI EndBlock cfiBlock71

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable10:
        DC32     ACTION_BACK

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable11:
        DC32     ACTION_SELECT1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock72 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateEditGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock72
        REQUIRE ??CreateEditGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock73 Using cfiCommon1
        CFI Function ??CreateEditGui
        ARM
??CreateEditGui:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        BL       ??ReadIni
        MOV      R0,R4
        POP      {R4,LR}          ;; Pop
        CFI R4 SameValue
        CFI ?RET R14
        CFI CFA R13+0
        B        ??CreateGuiList  ;; tailcall
        CFI EndBlock cfiBlock73

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock74 Using cfiCommon0
        CFI NoFunction
        THUMB
??MainPageOnEnter??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock74
        REQUIRE ??MainPageOnEnter

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock75 Using cfiCommon1
        CFI Function ??MainPageOnEnter
        ARM
??MainPageOnEnter:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R1
        SWI      +361
        STR      R0,[R4, #+36]
        MOV      R0,R4
        BL       ??CreateEditGui
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock75

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock76 Using cfiCommon0
        CFI NoFunction
        THUMB
??MainPageOnExit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock76
        REQUIRE ??MainPageOnExit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock77 Using cfiCommon1
        CFI Function ??MainPageOnExit
        ARM
??MainPageOnExit:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R1
        LDR      R0,[R4, #+344]
        CMP      R0,#+0
        BEQ      ??MainPageOnExit_1
        SWI      +462
        STR      R0,[R4, #+344]
??MainPageOnExit_1:
        LDR      R0,[R4, #+40]
        CMP      R0,#+0
        BEQ      ??MainPageOnExit_2
        SWI      +462
        STR      R0,[R4, #+40]
??MainPageOnExit_2:
        LDR      R0,[R4, #+24]
        CMP      R0,#+0
        BEQ      ??MainPageOnExit_3
        SWI      +462
        STR      R0,[R4, #+24]
??MainPageOnExit_3:
        LDR      R0,[R4, #+348]
        CMP      R0,#+0
        BEQ      ??MainPageOnExit_4
        SWI      +462
        STR      R0,[R4, #+348]
??MainPageOnExit_4:
        MOV      R0,R4
        BL       ??DestroyStringList
        LDR      R0,[R4, #+36]
        SWI      +362
        LDR      R0,[R4, #+28]
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,#+0
        STR      R0,[R4, #+28]
        STR      R0,[R4, #+32]
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock77

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock78 Using cfiCommon0
        CFI NoFunction
        THUMB
??onMyBookClose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock78
        REQUIRE ??onMyBookClose

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
bk_msglst_main:
        DATA
        DC32 66, ??MainPageOnEnter, 67, ??MainPageOnExit, 64, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x2a\\x2e\\x70\\x6e\\x67\\x3b\\x2a\\x2e\\`:
        DATA
        DC8 2AH, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 3BH, 0, 2AH, 0, 2EH, 0
        DC8 67H, 0, 69H, 0, 66H, 0, 3BH, 0
        DC8 2AH, 0, 2EH, 0, 6AH, 0, 70H, 0
        DC8 67H, 0, 3BH, 0, 2AH, 0, 2EH, 0
        DC8 6AH, 0, 70H, 0, 65H, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0
        DC8 25H, 0, 6CH, 0, 73H, 0, 25H, 0
        DC8 73H, 0, 0, 0
        DC8 2AH, 0, 2EH, 0, 65H, 0, 6CH, 0
        DC8 66H, 0, 0, 0
        DC8 2FH, 0, 45H, 0, 78H, 0, 74H, 0
        DC8 65H, 0, 6EH, 0, 73H, 0, 69H, 0
        DC8 6FH, 0, 6EH, 0, 0, 0
        DC8 0, 0
        DC8 53H, 0, 65H, 0, 6CH, 0, 65H, 0
        DC8 63H, 0, 74H, 0, 46H, 0, 69H, 0
        DC8 6CH, 0, 65H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x62\\x69\\x67\\x20\\x69\\x6d\\x67">`:
        DATA
        DC8 62H, 0, 69H, 0, 67H, 0, 20H, 0
        DC8 69H, 0, 6DH, 0, 67H, 0, 0, 0
        DC8 65H, 0, 78H, 0, 74H, 0, 65H, 0
        DC8 6EH, 0, 73H, 0, 69H, 0, 6FH, 0
        DC8 6EH, 0, 0, 0
        DC8 65H, 0, 6CH, 0, 66H, 0, 0, 0
        DC8 73H, 0, 6DH, 0, 61H, 0, 6CH, 0
        DC8 6CH, 0, 20H, 0, 69H, 0, 6DH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x45\\x64\\x69\\x74\\x20\\x65\\x78\\x74\\`:
        DATA
        DC8 45H, 0, 64H, 0, 69H, 0, 74H, 0
        DC8 20H, 0, 65H, 0, 78H, 0, 74H, 0
        DC8 3AH, 0, 20H, 0, 25H, 0, 73H, 0
        DC8 0, 0
        DC8 0, 0
        DC8 41H, 0, 64H, 0, 64H, 0, 20H, 0
        DC8 6EH, 0, 65H, 0, 77H, 0, 20H, 0
        DC8 65H, 0, 78H, 0, 74H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x61\\x64\\x64\\x20\\x6e\\x65\\x77\\x20\\`:
        DATA
        DC8 61H, 0, 64H, 0, 64H, 0, 20H, 0
        DC8 6EH, 0, 65H, 0, 77H, 0, 20H, 0
        DC8 65H, 0, 78H, 0, 74H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x44\\x6f\\x20\\x79\\x6f\\x75\\x20\\x77\\`:
        DATA
        DC8 44H, 0, 6FH, 0, 20H, 0, 79H, 0
        DC8 6FH, 0, 75H, 0, 20H, 0, 77H, 0
        DC8 61H, 0, 6EH, 0, 74H, 0, 20H, 0
        DC8 74H, 0, 6FH, 0, 20H, 0, 73H, 0
        DC8 61H, 0, 76H, 0, 65H, 0, 20H, 0
        DC8 65H, 0, 78H, 0, 74H, 0, 2EH, 0
        DC8 69H, 0, 6EH, 0, 69H, 0, 3FH, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "ExtEditor_Base_Page">`:
        DATA
        DC8 "ExtEditor_Base_Page"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "ExtEditor_SelectFile_...">`:
        DATA
        DC8 "ExtEditor_SelectFile_Page"
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "ExtEditor_Main_Page">`:
        DATA
        DC8 "ExtEditor_Main_Page"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\xa\\x45\\x78\\x74\\x45\\x64\\x69\\x74\\x`:
        DATA
        DC8 0AH, 0, 45H, 0, 78H, 0, 74H, 0
        DC8 45H, 0, 64H, 0, 69H, 0, 74H, 0
        DC8 6FH, 0, 72H, 0, 20H, 0, 76H, 0
        DC8 31H, 0, 2EH, 0, 30H, 0, 0AH, 0
        DC8 52H, 0, 65H, 0, 76H, 0, 69H, 0
        DC8 73H, 0, 69H, 0, 6FH, 0, 6EH, 0
        DC8 20H, 0, 25H, 0, 64H, 0, 0AH, 0
        DC8 28H, 0, 63H, 0, 29H, 0, 20H, 0
        DC8 4BH, 0, 72H, 0, 65H, 0, 4EH, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x2f\\x45\\x78\\x74\\x65\\x6e\\x73\\x69\\_1`:
        DATA
        DC8 2FH, 0, 45H, 0, 78H, 0, 74H, 0
        DC8 65H, 0, 6EH, 0, 73H, 0, 69H, 0
        DC8 6FH, 0, 6EH, 0, 2FH, 0, 65H, 0
        DC8 78H, 0, 74H, 0, 2EH, 0, 69H, 0
        DC8 6EH, 0, 69H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(0)
        DATA
        DC8 "\015\012"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x45\\x78\\x74\\x45\\x64\\x69\\x74\\x6f\\`:
        DATA
        DC8 45H, 0, 78H, 0, 74H, 0, 45H, 0
        DC8 64H, 0, 69H, 0, 74H, 0, 6FH, 0
        DC8 72H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "ExtEditor">`:
        DATA
        DC8 "ExtEditor"
        DC8 0, 0
        DC32 `?<Constant "ExtEditor_Base_Page">`, 0H, bk_msglst_base
        DC32 `?<Constant "ExtEditor_Main_Page">`, 0H, bk_msglst_main

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x49\\x6e\\x70\\x75\\x74\\x20\\x6e\\x65\\`:
        DATA
        DC8 49H, 0, 6EH, 0, 70H, 0, 75H, 0
        DC8 74H, 0, 20H, 0, 6EH, 0, 65H, 0
        DC8 77H, 0, 20H, 0, 65H, 0, 78H, 0
        DC8 74H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "[EXT99]: %s, %s, %s, %s">`:
        DATA
        DC8 "[EXT99]: %s, %s, %s, %s"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x44\\x6f\\x20\\x79\\x6f\\x75\\x20\\x77\\_1`:
        DATA
        DC8 44H, 0, 6FH, 0, 20H, 0, 79H, 0
        DC8 6FH, 0, 75H, 0, 20H, 0, 77H, 0
        DC8 61H, 0, 6EH, 0, 74H, 0, 20H, 0
        DC8 74H, 0, 6FH, 0, 20H, 0, 73H, 0
        DC8 61H, 0, 76H, 0, 65H, 0, 20H, 0
        DC8 63H, 0, 68H, 0, 61H, 0, 6EH, 0
        DC8 67H, 0, 65H, 0, 73H, 0, 3FH, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(0)
        DATA
        DC8 ""

        RSEG DATA_C:CONST:SORT:NOROOT(1)
        DATA
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
bk_selbcfg:
        DATA
        DC32 `?<Constant "ExtEditor_SelectFile_...">`, 0H, bk_msglst_selfile

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock79 Using cfiCommon1
        CFI Function ??onMyBookClose
        ARM
??onMyBookClose:
        LDR      R0,??DataTable15  ;; ??elf_exit
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +264
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock79

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock80 Using cfiCommon0
        CFI NoFunction
        THUMB
??isExtEditorBook??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock80
        REQUIRE ??isExtEditorBook

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock81 Using cfiCommon1
        CFI Function ??isExtEditorBook
        ARM
??isExtEditorBook:
        LDR      R0,[R0, #+4]
        LDR      R1,??DataTable14  ;; ??onMyBookClose
        CMP      R0,R1
        MOVEQ    R0,#+1
        BXEQ     LR
        MOV      R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock81

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock82 Using cfiCommon0
        CFI NoFunction
        THUMB
??main??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock82
        REQUIRE main

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock83 Using cfiCommon1
        CFI Function main
        ARM
main:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R0,#+360
        _BLF     `??operator new`,`??operator new??rA`
        MOV      R4,R0
        MOV      R2,#+360
        MOV      R1,#+0
        SWI      +274
        LDR      R0,??main_0      ;; `?<Constant "ExtEditor">`
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+12
        MOV      R3,R0
        ADD      R2,R0,#+12
        MOV      R0,R4
        MVN      R1,R1
        PUSH     {R1}
        CFI CFA R13+16
        LDR      R1,??DataTable14  ;; ??onMyBookClose
        SWI      +299
        CMP      R0,#+0
        ADD      SP,SP,#+8
        CFI CFA R13+8
        BNE      ??main_1
        MOV      R0,R4
        _BLF     `??operator delete`,`??operator delete??rA`
        LDR      R0,??DataTable15  ;; ??elf_exit
        SWI      +264
        MOV      R0,#+0
        POP      {R4,PC}
??main_1:
        LDR      R1,??main_0+0x4  ;; `?<Constant "ExtEditor">` + 24
        MOV      R0,R4
        SWI      +301
        MOV      R0,#+0
        POP      {R4,PC}          ;; return
        DATA
??main_0:
        DC32     `?<Constant "ExtEditor">`
        DC32     `?<Constant "ExtEditor">` + 24
        CFI EndBlock cfiBlock83

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable14:
        DC32     ??onMyBookClose

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable15:
        DC32     ??elf_exit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock84 Using cfiCommon1
        CFI NoFunction
        ARM
??kill_data??rA:
        LDR      R12,??Subroutine42_0  ;; kill_data
        BX       R12
        DATA
??Subroutine42_0:
        DC32     kill_data
        CFI EndBlock cfiBlock84

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock85 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine43_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine43_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock85

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock86 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new[]??rA`:
        LDR      R12,??Subroutine44_0  ;; `??operator new[]`
        BX       R12
        DATA
??Subroutine44_0:
        DC32     `??operator new[]`
        CFI EndBlock cfiBlock86

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock87 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new??rA`:
        LDR      R12,??Subroutine45_0  ;; `??operator new`
        BX       R12
        DATA
??Subroutine45_0:
        DC32     `??operator new`
        CFI EndBlock cfiBlock87

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        RSEG ELFBEGIN:DATA:REORDER:NOROOT(0)

        END
// 
// 6 360 bytes in segment CODE
//   694 bytes in segment DATA_C
//   256 bytes in segment DATA_Z
//    88 bytes in segment DYN_PAGE
//    12 bytes in segment INITTAB
// 
// 6 144 bytes of CODE  memory (+ 228 bytes shared)
//   782 bytes of CONST memory
//   256 bytes of DATA  memory
//
//Errors: none
//Warnings: none
