//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  23:10:49 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\tag.cpp                                           /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\tag.cpp -D NDEBUG -D RUS -D OLDFUNCTIONS -lC      /
//                       Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_RU\List\ -lA Z:\home\perk11\www\perk11.in /
//                       fo\svn\SE\WalkmanDisplay\Release_RU\List\ -o        /
//                       Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_RU\Obj\ -s9 --cpu_mode arm --endian       /
//                       little --cpu ARM926EJ-S --stack_align 4             /
//                       --interwork -e --enable_multibytes --fpu None       /
//                       --eec++ --dlib_config Z:\home\perk11\IAR2\arm\LIB\d /
//                       l5tpainl8n.h -I Z:\home\perk11\IAR2\arm\INC\        /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_RU\List\tag.s79                           /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME tag

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??GetGenre
        FUNCTION ??GetGenre,0203H
        MULTWEAK ??GetGenre??rT
        MULTWEAK ??char2unicode??rA
        PUBLIC ??metadata_Read
        FUNCTION ??metadata_Read,0203H
        LOCFRAME CSTACK, 192, STACK
        MULTWEAK ??metadata_Read??rT
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        


??GetGenre??rT      SYMBOL "??rT", ??GetGenre
??char2unicode??rA  SYMBOL "??rA", ??char2unicode

??metadata_Read??rT SYMBOL "??rT", ??metadata_Read

        EXTERN ??char2unicode
        FUNCTION ??char2unicode,0202H


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??GetGenre??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??GetGenre
// Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDisplay\tag.cpp
//    1 #include "..\deleaker\mem2.h"
//    2 #include "..\include\Lib_Clara.h"
//    3 #include "..\include\dir.h"
//    4 #include "header\wdisplay.h"
//    5 
//    6 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??GetGenre
        ARM
//    7 char * GetGenre(int num)
//    8 {
??GetGenre:
        MOV      R1,R0
//    9   switch (num) 
        LDR      R0,??GetGenre_2+0x8  ;; `?<Constant "Blues">`
        CMP      R1,#+147
        BHI      ??GetGenre_3
        ADR      R2,??GetGenre_1
        MOV      R1,R1, LSL #+1
        LDRH     R2,[R2, R1]
        ADD      PC,PC,R2, LSL #+2
        DATA
??GetGenre_1:
        DC16     +392,+73,+75,+77
        DC16     +79,+81,+83,+85
        DC16     +87,+89,+91,+93
        DC16     +95,+97,+99,+101
        DC16     +103,+105,+107,+109
        DC16     +111,+113,+115,+117
        DC16     +119,+121,+123,+125
        DC16     +127,+129,+131,+133
        DC16     +135,+137,+139,+141
        DC16     +143,+145,+147,+149
        DC16     +151,+153,+155,+157
        DC16     +159,+161,+163,+165
        DC16     +167,+169,+171,+173
        DC16     +175,+177,+179,+181
        DC16     +183,+185,+187,+189
        DC16     +191,+193,+195,+197
        DC16     +199,+201,+203,+205
        DC16     +207,+209,+211,+213
        DC16     +215,+217,+219,+221
        DC16     +223,+225,+227,+229
        DC16     +231,+233,+235,+237
        DC16     +239,+241,+243,+245
        DC16     +247,+249,+251,+253
        DC16     +255,+257,+259,+261
        DC16     +263,+265,+267,+269
        DC16     +271,+273,+275,+279
        DC16     +281,+283,+285,+287
        DC16     +289,+291,+293,+295
        DC16     +297,+299,+301,+303
        DC16     +305,+307,+309,+311
        DC16     +313,+315,+317,+319
        DC16     +321,+323,+326,+328
        DC16     +330,+333,+336,+339
        DC16     +346,+349,+352,+355
        DC16     +358,+361,+363,+366
        DC16     +369,+372,+375,+378
        DC16     +380,+383,+386,+388
        ARM
//   10   {
//   11     case 0 : return "Blues";
//   12     case 1 : return "Classic Rock";
??GetGenre_4:
        ADD      R0,R0,#+8
        BX       LR
//   13     case 2 : return "Country";
??GetGenre_5:
        ADD      R0,R0,#+24
        BX       LR
//   14     case 3 : return "Dance";
??GetGenre_6:
        ADD      R0,R0,#+32
        BX       LR
//   15     case 4 : return "Disco";
??GetGenre_7:
        ADD      R0,R0,#+40
        BX       LR
//   16     case 5 : return "Funk";
??GetGenre_8:
        ADD      R0,R0,#+48
        BX       LR
//   17     case 6 : return "Grunge";
??GetGenre_9:
        ADD      R0,R0,#+56
        BX       LR
//   18     case 7 : return "Hip-Hop";
??GetGenre_10:
        ADD      R0,R0,#+64
        BX       LR
//   19     case 8 : return "Jazz";
??GetGenre_11:
        ADD      R0,R0,#+72
        BX       LR
//   20     case 9 : return "Metal";
??GetGenre_12:
        ADD      R0,R0,#+80
        BX       LR
//   21     case 10 : return "New Age";
??GetGenre_13:
        ADD      R0,R0,#+88
        BX       LR
//   22     case 11 : return "Oldies";
??GetGenre_14:
        ADD      R0,R0,#+96
        BX       LR
//   23     case 12 : return "Other";
??GetGenre_15:
        ADD      R0,R0,#+104
        BX       LR
//   24     case 13 : return "Pop";
??GetGenre_16:
        ADR      R0,??GetGenre_17  ;; "Pop"
        BX       LR
//   25     case 14 : return "R&B";
??GetGenre_18:
        ADR      R0,??GetGenre_17+0x4  ;; "R&B"
        BX       LR
//   26     case 15 : return "Rap";
??GetGenre_19:
        ADR      R0,??GetGenre_17+0x8  ;; "Rap"
        BX       LR
//   27     case 16 : return "Reggae";
??GetGenre_20:
        ADD      R0,R0,#+112
        BX       LR
//   28     case 17 : return "Rock";
??GetGenre_21:
        ADD      R0,R0,#+120
        BX       LR
//   29     case 18 : return "Techno";
??GetGenre_22:
        ADD      R0,R0,#+128
        BX       LR
//   30     case 19 : return "Industrial";
??GetGenre_23:
        ADD      R0,R0,#+136
        BX       LR
//   31     case 20 : return "Alternative";
??GetGenre_24:
        ADD      R0,R0,#+148
        BX       LR
//   32     case 21 : return "Ska";
??GetGenre_25:
        ADR      R0,??GetGenre_17+0xC  ;; "Ska"
        BX       LR
//   33     case 22 : return "Death Metal";
??GetGenre_26:
        ADD      R0,R0,#+160
        BX       LR
//   34     case 23 : return "Pranks";
??GetGenre_27:
        ADD      R0,R0,#+172
        BX       LR
//   35     case 24 : return "Soundtrack";
??GetGenre_28:
        ADD      R0,R0,#+180
        BX       LR
//   36     case 25 : return "Euro-Techno";
??GetGenre_29:
        ADD      R0,R0,#+192
        BX       LR
//   37     case 26 : return "Ambient";
??GetGenre_30:
        ADD      R0,R0,#+204
        BX       LR
//   38     case 27 : return "Trip-Hop";
??GetGenre_31:
        ADD      R0,R0,#+212
        BX       LR
//   39     case 28 : return "Vocal";
??GetGenre_32:
        ADD      R0,R0,#+224
        BX       LR
//   40     case 29 : return "Jazz+Funk";
??GetGenre_33:
        ADD      R0,R0,#+232
        BX       LR
//   41     case 30 : return "Fusion";
??GetGenre_34:
        ADD      R0,R0,#+244
        BX       LR
//   42     case 31 : return "Trance";
??GetGenre_35:
        ADD      R0,R0,#+252
        BX       LR
//   43     case 32 : return "Classical";
??GetGenre_36:
        ADD      R0,R0,#+260
        BX       LR
//   44     case 33 : return "Instrumental";
??GetGenre_37:
        ADD      R0,R0,#+272
        BX       LR
//   45     case 34 : return "Acid";
??GetGenre_38:
        ADD      R0,R0,#+288
        BX       LR
//   46     case 35 : return "House";
??GetGenre_39:
        ADD      R0,R0,#+296
        BX       LR
//   47     case 36 : return "Game";
??GetGenre_40:
        ADD      R0,R0,#+304
        BX       LR
//   48     case 37 : return "Sound Clip";
??GetGenre_41:
        ADD      R0,R0,#+312
        BX       LR
//   49     case 38 : return "Gospel";
??GetGenre_42:
        ADD      R0,R0,#+324
        BX       LR
//   50     case 39 : return "Noise";
??GetGenre_43:
        ADD      R0,R0,#+332
        BX       LR
//   51     case 40 : return "Alternative Rock";
??GetGenre_44:
        ADD      R0,R0,#+340
        BX       LR
//   52     case 41 : return "Bass";
??GetGenre_45:
        ADD      R0,R0,#+360
        BX       LR
//   53     case 42 : return "Soul";
??GetGenre_46:
        ADD      R0,R0,#+368
        BX       LR
//   54     case 43 : return "Punk";
??GetGenre_47:
        ADD      R0,R0,#+376
        BX       LR
//   55     case 44 : return "Space";
??GetGenre_48:
        ADD      R0,R0,#+384
        BX       LR
//   56     case 45 : return "Meditative";
??GetGenre_49:
        ADD      R0,R0,#+392
        BX       LR
//   57     case 46 : return "Instrumental Pop";
??GetGenre_50:
        ADD      R0,R0,#+404
        BX       LR
//   58     case 47 : return "Instrumental Rock";
??GetGenre_51:
        ADD      R0,R0,#+424
        BX       LR
//   59     case 48 : return "Ethnic";
??GetGenre_52:
        ADD      R0,R0,#+444
        BX       LR
//   60     case 49 : return "Gothic";
??GetGenre_53:
        ADD      R0,R0,#+452
        BX       LR
//   61     case 50 : return "Darkwave";
??GetGenre_54:
        ADD      R0,R0,#+460
        BX       LR
//   62     case 51 : return "Techno-Industrial";
??GetGenre_55:
        ADD      R0,R0,#+472
        BX       LR
//   63     case 52 : return "Electronic";
??GetGenre_56:
        ADD      R0,R0,#+492
        BX       LR
//   64     case 53 : return "Pop-Folk";
??GetGenre_57:
        ADD      R0,R0,#+504
        BX       LR
//   65     case 54 : return "Eurodance";
??GetGenre_58:
        ADD      R0,R0,#+516
        BX       LR
//   66     case 55 : return "Dream";
??GetGenre_59:
        ADD      R0,R0,#+528
        BX       LR
//   67     case 56 : return "Southern Rock";
??GetGenre_60:
        ADD      R0,R0,#+536
        BX       LR
//   68     case 57 : return "Comedy";
??GetGenre_61:
        ADD      R0,R0,#+552
        BX       LR
//   69     case 58 : return "Cult";
??GetGenre_62:
        ADD      R0,R0,#+560
        BX       LR
//   70     case 59 : return "Gangsta";
??GetGenre_63:
        ADD      R0,R0,#+568
        BX       LR
//   71     case 60 : return "Top 40";
??GetGenre_64:
        ADD      R0,R0,#+576
        BX       LR
//   72     case 61 : return "Christian Rap";
??GetGenre_65:
        ADD      R0,R0,#+584
        BX       LR
//   73     case 62 : return "Pop/Funk";
??GetGenre_66:
        ADD      R0,R0,#+600
        BX       LR
//   74     case 63 : return "Jungle";
??GetGenre_67:
        ADD      R0,R0,#+612
        BX       LR
//   75     case 64 : return "Native US";
??GetGenre_68:
        ADD      R0,R0,#+620
        BX       LR
//   76     case 65 : return "Cabaret";
??GetGenre_69:
        ADD      R0,R0,#+632
        BX       LR
//   77     case 66 : return "New Wave";
??GetGenre_70:
        ADD      R0,R0,#+640
        BX       LR
//   78     case 67 : return "Psychadelic";
??GetGenre_71:
        ADD      R0,R0,#+652
        BX       LR
//   79     case 68 : return "Rave";
??GetGenre_72:
        ADD      R0,R0,#+664
        BX       LR
//   80     case 69 : return "Showtunes";
??GetGenre_73:
        ADD      R0,R0,#+672
        BX       LR
//   81     case 70 : return "Trailer";
??GetGenre_74:
        ADD      R0,R0,#+684
        BX       LR
//   82     case 71 : return "Lo-Fi";
??GetGenre_75:
        ADD      R0,R0,#+692
        BX       LR
//   83     case 72 : return "Tribal";
??GetGenre_76:
        ADD      R0,R0,#+700
        BX       LR
//   84     case 73 : return "Acid Punk";
??GetGenre_77:
        ADD      R0,R0,#+708
        BX       LR
//   85     case 74 : return "Acid Jazz";
??GetGenre_78:
        ADD      R0,R0,#+720
        BX       LR
//   86     case 75 : return "Polka";
??GetGenre_79:
        ADD      R0,R0,#+732
        BX       LR
//   87     case 76 : return "Retro";
??GetGenre_80:
        ADD      R0,R0,#+740
        BX       LR
//   88     case 77 : return "Musical";
??GetGenre_81:
        ADD      R0,R0,#+748
        BX       LR
//   89     case 78 : return "Rock & Roll";
??GetGenre_82:
        ADD      R0,R0,#+756
        BX       LR
//   90     case 79 : return "Hard Rock";
??GetGenre_83:
        ADD      R0,R0,#+768
        BX       LR
//   91     case 80 : return "Folk";
??GetGenre_84:
        ADD      R0,R0,#+780
        BX       LR
//   92     case 81 : return "Folk-Rock";
??GetGenre_85:
        ADD      R0,R0,#+788
        BX       LR
//   93     case 82 : return "National Folk";
??GetGenre_86:
        ADD      R0,R0,#+800
        BX       LR
//   94     case 83 : return "Swing";
??GetGenre_87:
        ADD      R0,R0,#+816
        BX       LR
//   95     case 84 : return "Fast Fusion";
??GetGenre_88:
        ADD      R0,R0,#+824
        BX       LR
//   96     case 85 : return "Bebob";
??GetGenre_89:
        ADD      R0,R0,#+836
        BX       LR
//   97     case 86 : return "Latin";
??GetGenre_90:
        ADD      R0,R0,#+844
        BX       LR
//   98     case 87 : return "Revival";
??GetGenre_91:
        ADD      R0,R0,#+852
        BX       LR
//   99     case 88 : return "Celtic";
??GetGenre_92:
        ADD      R0,R0,#+860
        BX       LR
//  100     case 89 : return "Bluegrass";
??GetGenre_93:
        ADD      R0,R0,#+868
        BX       LR
//  101     case 90 : return "Avantgarde";
??GetGenre_94:
        ADD      R0,R0,#+880
        BX       LR
//  102     case 91 : return "Gothic Rock";
??GetGenre_95:
        ADD      R0,R0,#+892
        BX       LR
//  103     case 92 : return "Progressive Rock";
??GetGenre_96:
        ADD      R0,R0,#+904
        BX       LR
//  104     case 93 : return "Psychedelic Rock";
??GetGenre_97:
        ADD      R0,R0,#+924
        BX       LR
//  105     case 94 : return "Symphonic Rock";
??GetGenre_98:
        ADD      R0,R0,#+944
        BX       LR
//  106     case 95 : return "Slow Rock";
??GetGenre_99:
        ADD      R0,R0,#+960
        BX       LR
//  107     case 96 : return "Big Band";
??GetGenre_100:
        ADD      R0,R0,#+972
        BX       LR
//  108     case 97 : return "Chorus";
??GetGenre_101:
        ADD      R0,R0,#+984
        BX       LR
//  109     case 98 : return "Easy Listening";
??GetGenre_102:
        ADD      R0,R0,#+992
        BX       LR
//  110     case 99 : return "Acoustic";
??GetGenre_103:
        ADD      R0,R0,#+1008
        BX       LR
//  111     case 100 : return "Humour";
??GetGenre_104:
        ADD      R0,R0,#+1020
        BX       LR
//  112     case 101 : return "Speech";
??GetGenre_105:
        MOV      R1,#+4
        B        ??GetGenre_106
//  113     case 102 : return "Chanson";
??GetGenre_107:
        MOV      R1,#+12
??GetGenre_106:
        ORR      R1,R1,#0x400
??GetGenre_108:
        ADD      R0,R1,R0
        BX       LR
//  114     case 103 : return "Opera";
??GetGenre_109:
        MOV      R1,#+20
        B        ??GetGenre_106
//  115     case 104 : return "Chamber Music";
??GetGenre_110:
        MOV      R1,#+28
        B        ??GetGenre_106
//  116     case 105 : return "Sonata";
??GetGenre_111:
        MOV      R1,#+44
        B        ??GetGenre_106
//  117     case 106 : return "Symphony";
??GetGenre_112:
        MOV      R1,#+52
        B        ??GetGenre_106
//  118     case 107 : return "Booty Bass";
??GetGenre_113:
        ADD      R0,R0,#+1088
        BX       LR
//  119     case 108 : return "Primus";
??GetGenre_114:
        MOV      R1,#+76
        B        ??GetGenre_106
//  120     case 109 : return "Porn Groove";
??GetGenre_115:
        MOV      R1,#+84
        B        ??GetGenre_106
//  121     case 110 : return "Satire";
??GetGenre_116:
        ADD      R0,R0,#+1120
        BX       LR
//  122     case 111 : return "Slow Jam";
??GetGenre_117:
        MOV      R1,#+104
        B        ??GetGenre_106
//  123     case 112 : return "Club";
??GetGenre_118:
        MOV      R1,#+116
        B        ??GetGenre_106
//  124     case 113 : return "Tango";
??GetGenre_119:
        MOV      R1,#+124
        B        ??GetGenre_106
//  125     case 114 : return "Samba";
??GetGenre_120:
        MOV      R1,#+132
        B        ??GetGenre_106
//  126     case 115 : return "Folklore";
??GetGenre_121:
        MOV      R1,#+140
        B        ??GetGenre_106
//  127     case 116 : return "Ballad";
??GetGenre_122:
        MOV      R1,#+152
        B        ??GetGenre_106
//  128     case 117 : return "Power Ballad";
??GetGenre_123:
        ADD      R0,R0,#+1184
        BX       LR
//  129     case 118 : return "Rhytmic Soul";
??GetGenre_124:
        ADD      R0,R0,#+1200
        BX       LR
//  130     case 119 : return "Freestyle";
??GetGenre_125:
        ADD      R0,R0,#+1216
        BX       LR
//  131     case 120 : return "Duet";
??GetGenre_126:
        MOV      R1,#+204
        B        ??GetGenre_106
//  132     case 121 : return "Punk Rock";
??GetGenre_127:
        MOV      R1,#+212
        B        ??GetGenre_106
//  133     case 122 : return "Drum Solo";
??GetGenre_128:
        ADD      R0,R0,#+1248
        BX       LR
//  134     case 123 : return "Acapella";
??GetGenre_129:
        MOV      R1,#+236
        B        ??GetGenre_106
//  135     case 124 : return "Euro-House";
??GetGenre_130:
        MOV      R1,#+248
        B        ??GetGenre_106
//  136     case 125 : return "Dance Hall";
??GetGenre_131:
        MOV      R1,#+4
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  137     case 126 : return "Goa";
??GetGenre_132:
        ADR      R0,??GetGenre_2  ;; "Goa"
        BX       LR
//  138     case 127 : return "Drum & Bass";
??GetGenre_133:
        ADD      R0,R0,#+1296
        BX       LR
//  139     case 128 : return "Club-House";
??GetGenre_134:
        MOV      R1,#+28
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  140     case 129 : return "Hardcore";
??GetGenre_135:
        MOV      R1,#+40
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  141     case 130 : return "Terror";
??GetGenre_136:
        MOV      R1,#+52
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  142     case 131 : return "Indie";
??GetGenre_137:
        MOV      R1,#+60
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
        DATA
??GetGenre_17:
        DC8      "Pop"
        DC8      "R&B"
        DC8      "Rap"
        DC8      "Ska"
        ARM
//  143     case 132 : return "BritPop";
??GetGenre_138:
        MOV      R1,#+68
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  144     case 133 : return "Negerpunk";
??GetGenre_139:
        MOV      R1,#+76
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  145     case 134 : return "Polsk Punk";
??GetGenre_140:
        MOV      R1,#+88
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  146     case 135 : return "Beat";
??GetGenre_141:
        MOV      R1,#+100
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  147     case 136 : return "Christian Gangsta";
??GetGenre_142:
        MOV      R1,#+108
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  148     case 137 : return "Heavy Metal";
??GetGenre_143:
        ADD      R0,R0,#+1408
        BX       LR
//  149     case 138 : return "Black Metal";
??GetGenre_144:
        MOV      R1,#+140
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  150     case 139 : return "Crossover";
??GetGenre_145:
        MOV      R1,#+152
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  151     case 140 : return "Contemporary C";
??GetGenre_146:
        MOV      R1,#+164
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  152     case 141 : return "Christian Rock";
??GetGenre_147:
        MOV      R1,#+180
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  153     case 142 : return "Merengue";
??GetGenre_148:
        MOV      R1,#+196
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  154     case 143 : return "Salsa";
??GetGenre_149:
        ADD      R0,R0,#+1488
        BX       LR
//  155     case 144 : return "Thrash Metal";
??GetGenre_150:
        MOV      R1,#+216
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  156     case 145 : return "Anime";
??GetGenre_151:
        MOV      R1,#+232
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  157     case 146 : return "JPop";
??GetGenre_152:
        ADD      R0,R0,#+1520
        BX       LR
//  158     case 147 : return "SynthPop";
??GetGenre_153:
        MOV      R1,#+248
        ORR      R1,R1,#0x500
        B        ??GetGenre_108
//  159   }
//  160   return " ";
??GetGenre_3:
        ADR      R0,??GetGenre_2+0x4  ;; " "
??GetGenre_154:
        BX       LR               ;; return
        DATA
??GetGenre_2:
        DC8      "Goa"
        DC8      " ",+0,+0
        DC32     `?<Constant "Blues">`
        CFI EndBlock cfiBlock1
//  161 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??metadata_Read??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??metadata_Read
//  162 
//  163 #pragma optimize = z 9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??metadata_Read
        ARM
//  164 void metadata_Read(wchar_t *path, wchar_t *name, METADATA *meta, TAG_REQUEST tr)
//  165 {
??metadata_Read:
        PUSH     {R3}
        CFI CFA R13+4
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        SUB      SP,SP,#+172
        CFI CFA R13+192
        MOV      R5,R0
        MOV      R6,R1
        MOV      R4,R2
//  166   FSTAT fst;
//  167   if (wstrcmpni(L"mp3",&name[wstrlen(name)-3],3)!=0)
        MOV      R0,R6
        SWI      +343
        ADD      R0,R6,R0, LSL #+1
        SUB      R1,R0,#+6
        LDR      R0,??metadata_Read_1+0x4  ;; `?<Constant L"\\x6d\\x70\\x33">`
        MOV      R2,#+3
        SWI      +666
        CMP      R0,#+0
        BNE      ??metadata_Read_2
//  168   {
//  169     return;
//  170   }
//  171   if (fstat(path,name,&fst)==0)
        ADD      R2,SP,#+144
        MOV      R1,R6
        MOV      R0,R5
        SWI      +284
        CMP      R0,#+0
        BNE      ??metadata_Read_2
//  172   {
//  173     int file;
//  174     if ((file=_fopen(path,name,FSX_O_RDONLY,FSX_S_IREAD|FSX_S_IWRITE,0))>=0)
        PUSH     {R0}
        CFI CFA R13+196
        MOV      R3,#+384
        MOV      R2,#+1
        MOV      R1,R6
        MOV      R0,R5
        SWI      +278
        MOVS     R5,R0
        ADD      SP,SP,#+4
        CFI CFA R13+192
        BMI      ??metadata_Read_3
//  175     {
//  176       if (fst.fsize>128)
        LDR      R0,[SP, #+152]
        CMP      R0,#+129
        BLT      ??metadata_Read_3
//  177       {
//  178         char wtag[4];
//  179         char title[31];
//  180         char artist[31];
//  181         char album[31];
//  182         char year[5];
//  183         char comment[31];
//  184         char genre;
//  185         lseek(file,fst.fsize-128,0);
        MOV      R2,#+0
        MVN      R1,#+127
        ADD      R1,R1,R0
        MOV      R0,R5
        SWI      +374
//  186         fread(file,wtag,3);
        MOV      R2,#+3
        MOV      R1,SP
        MOV      R0,R5
        SWI      +280
//  187         wtag[3]='\0';
        MOV      R6,#+0
        STRB     R6,[SP, #+3]
//  188         if (strcmp(wtag,"TAG")==0)
        ADR      R1,??metadata_Read_1  ;; "TAG"
        MOV      R0,SP
        SWI      +345
        CMP      R0,#+0
        BNE      ??metadata_Read_3
//  189         {
//  190           fread(file,title,30);
        MOV      R2,#+30
        ADD      R1,SP,#+16
        MOV      R0,R5
        SWI      +280
//  191           fread(file,artist,30);
        MOV      R2,#+30
        ADD      R1,SP,#+48
        MOV      R0,R5
        SWI      +280
//  192           fread(file,album,30);
        MOV      R2,#+30
        ADD      R1,SP,#+80
        MOV      R0,R5
        SWI      +280
//  193           fread(file,year,4);
        MOV      R2,#+4
        ADD      R1,SP,#+8
        MOV      R0,R5
        SWI      +280
//  194           fread(file,comment,30);
        MOV      R2,#+30
        ADD      R1,SP,#+112
        MOV      R0,R5
        SWI      +280
//  195           fread(file,&genre,1);
        MOV      R2,#+1
        ADD      R1,SP,#+4
        MOV      R0,R5
        SWI      +280
//  196           title[30]='\0';
        STRB     R6,[SP, #+46]
//  197           artist[30]='\0';
        STRB     R6,[SP, #+78]
//  198           album[30]='\0';
        STRB     R6,[SP, #+110]
//  199           year[4]='\0';
        STRB     R6,[SP, #+12]
//  200           comment[30]='\0';
        STRB     R6,[SP, #+142]
//  201           if (tr.title && title[0]!=0)
        LDRB     R0,[SP, #+188]
        MOV      R6,#+255
        ORR      R6,R6,#0xFF00
        CMP      R0,#+0
        LDRBNE   R0,[SP, #+16]
        CMPNE    R0,#+0
        BEQ      ??metadata_Read_4
//  202           {
//  203             char2unicode(meta->Title,title,TEXTID_ANY_LEN);
        MOV      R2,R6
        ADD      R1,SP,#+16
        MOV      R0,R4
        _BLF     ??char2unicode,??char2unicode??rA
//  204           }
//  205           if (tr.artist && artist[0]!=0)
??metadata_Read_4:
        LDRB     R0,[SP, #+189]
        CMP      R0,#+0
        LDRBNE   R0,[SP, #+48]
        CMPNE    R0,#+0
        BEQ      ??metadata_Read_5
//  206           {
//  207             char2unicode(meta->Artist,artist,TEXTID_ANY_LEN);
        MOV      R2,R6
        ADD      R1,SP,#+48
        ADD      R0,R4,#+4096
        _BLF     ??char2unicode,??char2unicode??rA
//  208           }
//  209           if (tr.album && album[0]!=0)
??metadata_Read_5:
        LDRB     R0,[SP, #+190]
        CMP      R0,#+0
        LDRBNE   R0,[SP, #+80]
        CMPNE    R0,#+0
        BEQ      ??metadata_Read_6
//  210           {
//  211             char2unicode(meta->Album,album,TEXTID_ANY_LEN);
        MOV      R2,R6
        ADD      R1,SP,#+80
        ADD      R0,R4,#+2048
        _BLF     ??char2unicode,??char2unicode??rA
//  212           }
//  213           if (tr.year && year[0]!=0)
??metadata_Read_6:
        LDRB     R0,[SP, #+191]
        CMP      R0,#+0
        LDRBNE   R0,[SP, #+8]
        CMPNE    R0,#+0
        BEQ      ??metadata_Read_7
//  214           {
//  215             char2unicode(meta->Year,year,TEXTID_ANY_LEN);
        MOV      R2,R6
        ADD      R1,SP,#+8
        ADD      R0,R4,#+6144
        _BLF     ??char2unicode,??char2unicode??rA
//  216           }
//  217           if (tr.genre && year[0]!=0)
??metadata_Read_7:
        LDRB     R0,[SP, #+192]
        CMP      R0,#+0
        LDRBNE   R0,[SP, #+8]
        CMPNE    R0,#+0
        BEQ      ??metadata_Read_3
//  218           {
//  219             char2unicode(meta->Genre,GetGenre(genre),TEXTID_ANY_LEN);
        LDRB     R0,[SP, #+4]
        BL       ??GetGenre
        MOV      R1,R0
        MOV      R2,R6
        ADD      R0,R4,#+8192
        _BLF     ??char2unicode,??char2unicode??rA
//  220           }
//  221         }
//  222       }
//  223     }
//  224     fclose(file);
??metadata_Read_3:
        MOV      R0,R5
        SWI      +279
??metadata_Read_2:
        ADD      SP,SP,#+172
        CFI CFA R13+20
        POP      {R4-R6,LR}
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI ?RET R14
        CFI CFA R13+4
        ADD      SP,SP,#+4
        CFI CFA R13+0
        BX       LR               ;; return
        DATA
??metadata_Read_1:
        DC8      "TAG"
        DC32     `?<Constant L"\\x6d\\x70\\x33">`
        CFI EndBlock cfiBlock3
//  225   }
//  226 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon1
        CFI NoFunction
        ARM
??char2unicode??rA:
        LDR      R12,??Subroutine2_0  ;; ??char2unicode
        BX       R12
        DATA
??Subroutine2_0:
        DC32     ??char2unicode
        CFI EndBlock cfiBlock4

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "Blues">`:
        DATA
        DC8 "Blues"
        DC8 0, 0
        DC8 "Classic Rock"
        DC8 0, 0, 0
        DC8 "Country"
        DC8 "Dance"
        DC8 0, 0
        DC8 "Disco"
        DC8 0, 0
        DC8 "Funk"
        DC8 0, 0, 0
        DC8 "Grunge"
        DC8 0
        DC8 "Hip-Hop"
        DC8 "Jazz"
        DC8 0, 0, 0
        DC8 "Metal"
        DC8 0, 0
        DC8 "New Age"
        DC8 "Oldies"
        DC8 0
        DC8 "Other"
        DC8 0, 0
        DC8 "Reggae"
        DC8 0
        DC8 "Rock"
        DC8 0, 0, 0
        DC8 "Techno"
        DC8 0
        DC8 "Industrial"
        DC8 0
        DC8 "Alternative"
        DC8 "Death Metal"
        DC8 "Pranks"
        DC8 0
        DC8 "Soundtrack"
        DC8 0
        DC8 "Euro-Techno"
        DC8 "Ambient"
        DC8 "Trip-Hop"
        DC8 0, 0, 0
        DC8 "Vocal"
        DC8 0, 0
        DC8 "Jazz+Funk"
        DC8 0, 0
        DC8 "Fusion"
        DC8 0
        DC8 "Trance"
        DC8 0
        DC8 "Classical"
        DC8 0, 0
        DC8 "Instrumental"
        DC8 0, 0, 0
        DC8 "Acid"
        DC8 0, 0, 0
        DC8 "House"
        DC8 0, 0
        DC8 "Game"
        DC8 0, 0, 0
        DC8 "Sound Clip"
        DC8 0
        DC8 "Gospel"
        DC8 0
        DC8 "Noise"
        DC8 0, 0
        DC8 "Alternative Rock"
        DC8 0, 0, 0
        DC8 "Bass"
        DC8 0, 0, 0
        DC8 "Soul"
        DC8 0, 0, 0
        DC8 "Punk"
        DC8 0, 0, 0
        DC8 "Space"
        DC8 0, 0
        DC8 "Meditative"
        DC8 0
        DC8 "Instrumental Pop"
        DC8 0, 0, 0
        DC8 "Instrumental Rock"
        DC8 0, 0
        DC8 "Ethnic"
        DC8 0
        DC8 "Gothic"
        DC8 0
        DC8 "Darkwave"
        DC8 0, 0, 0
        DC8 "Techno-Industrial"
        DC8 0, 0
        DC8 "Electronic"
        DC8 0
        DC8 "Pop-Folk"
        DC8 0, 0, 0
        DC8 "Eurodance"
        DC8 0, 0
        DC8 "Dream"
        DC8 0, 0
        DC8 "Southern Rock"
        DC8 0, 0
        DC8 "Comedy"
        DC8 0
        DC8 "Cult"
        DC8 0, 0, 0
        DC8 "Gangsta"
        DC8 "Top 40"
        DC8 0
        DC8 "Christian Rap"
        DC8 0, 0
        DC8 "Pop/Funk"
        DC8 0, 0, 0
        DC8 "Jungle"
        DC8 0
        DC8 "Native US"
        DC8 0, 0
        DC8 "Cabaret"
        DC8 "New Wave"
        DC8 0, 0, 0
        DC8 "Psychadelic"
        DC8 "Rave"
        DC8 0, 0, 0
        DC8 "Showtunes"
        DC8 0, 0
        DC8 "Trailer"
        DC8 "Lo-Fi"
        DC8 0, 0
        DC8 "Tribal"
        DC8 0
        DC8 "Acid Punk"
        DC8 0, 0
        DC8 "Acid Jazz"
        DC8 0, 0
        DC8 "Polka"
        DC8 0, 0
        DC8 "Retro"
        DC8 0, 0
        DC8 "Musical"
        DC8 "Rock & Roll"
        DC8 "Hard Rock"
        DC8 0, 0
        DC8 "Folk"
        DC8 0, 0, 0
        DC8 "Folk-Rock"
        DC8 0, 0
        DC8 "National Folk"
        DC8 0, 0
        DC8 "Swing"
        DC8 0, 0
        DC8 "Fast Fusion"
        DC8 "Bebob"
        DC8 0, 0
        DC8 "Latin"
        DC8 0, 0
        DC8 "Revival"
        DC8 "Celtic"
        DC8 0
        DC8 "Bluegrass"
        DC8 0, 0
        DC8 "Avantgarde"
        DC8 0
        DC8 "Gothic Rock"
        DC8 "Progressive Rock"
        DC8 0, 0, 0
        DC8 "Psychedelic Rock"
        DC8 0, 0, 0
        DC8 "Symphonic Rock"
        DC8 0
        DC8 "Slow Rock"
        DC8 0, 0
        DC8 "Big Band"
        DC8 0, 0, 0
        DC8 "Chorus"
        DC8 0
        DC8 "Easy Listening"
        DC8 0
        DC8 "Acoustic"
        DC8 0, 0, 0
        DC8 "Humour"
        DC8 0
        DC8 "Speech"
        DC8 0
        DC8 "Chanson"
        DC8 "Opera"
        DC8 0, 0
        DC8 "Chamber Music"
        DC8 0, 0
        DC8 "Sonata"
        DC8 0
        DC8 "Symphony"
        DC8 0, 0, 0
        DC8 "Booty Bass"
        DC8 0
        DC8 "Primus"
        DC8 0
        DC8 "Porn Groove"
        DC8 "Satire"
        DC8 0
        DC8 "Slow Jam"
        DC8 0, 0, 0
        DC8 "Club"
        DC8 0, 0, 0
        DC8 "Tango"
        DC8 0, 0
        DC8 "Samba"
        DC8 0, 0
        DC8 "Folklore"
        DC8 0, 0, 0
        DC8 "Ballad"
        DC8 0
        DC8 "Power Ballad"
        DC8 0, 0, 0
        DC8 "Rhytmic Soul"
        DC8 0, 0, 0
        DC8 "Freestyle"
        DC8 0, 0
        DC8 "Duet"
        DC8 0, 0, 0
        DC8 "Punk Rock"
        DC8 0, 0
        DC8 "Drum Solo"
        DC8 0, 0
        DC8 "Acapella"
        DC8 0, 0, 0
        DC8 "Euro-House"
        DC8 0
        DC8 "Dance Hall"
        DC8 0
        DC8 "Drum & Bass"
        DC8 "Club-House"
        DC8 0
        DC8 "Hardcore"
        DC8 0, 0, 0
        DC8 "Terror"
        DC8 0
        DC8 "Indie"
        DC8 0, 0
        DC8 "BritPop"
        DC8 "Negerpunk"
        DC8 0, 0
        DC8 "Polsk Punk"
        DC8 0
        DC8 "Beat"
        DC8 0, 0, 0
        DC8 "Christian Gangsta"
        DC8 0, 0
        DC8 "Heavy Metal"
        DC8 "Black Metal"
        DC8 "Crossover"
        DC8 0, 0
        DC8 "Contemporary C"
        DC8 0
        DC8 "Christian Rock"
        DC8 0
        DC8 "Merengue"
        DC8 0, 0, 0
        DC8 "Salsa"
        DC8 0, 0
        DC8 "Thrash Metal"
        DC8 0, 0, 0
        DC8 "Anime"
        DC8 0, 0
        DC8 "JPop"
        DC8 0, 0, 0
        DC8 "SynthPop"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 "Pop"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 "R&B"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 "Rap"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 "Ska"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 "Goa"

        RSEG DATA_C:CONST:SORT:NOROOT(0)
        DATA
        DC8 " "

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x6d\\x70\\x33">`:
        DATA
        DC8 6DH, 0, 70H, 0, 33H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 "TAG"

        END
// 
// 2 180 bytes in segment CODE
// 1 574 bytes in segment DATA_C
// 
// 2 160 bytes of CODE  memory (+ 20 bytes shared)
// 1 574 bytes of CONST memory
//
//Errors: none
//Warnings: none
