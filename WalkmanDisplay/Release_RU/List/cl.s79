//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  23:09:10 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\cl.cpp                                            /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\cl.cpp -D NDEBUG -D RUS -D OLDFUNCTIONS -lC       /
//                       Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_RU\List\ -lA Z:\home\perk11\www\perk11.in /
//                       fo\svn\SE\WalkmanDisplay\Release_RU\List\ -o        /
//                       Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_RU\Obj\ -s9 --cpu_mode arm --endian       /
//                       little --cpu ARM926EJ-S --stack_align 4             /
//                       --interwork -e --enable_multibytes --fpu None       /
//                       --eec++ --dlib_config Z:\home\perk11\IAR2\arm\LIB\d /
//                       l5tpainl8n.h -I Z:\home\perk11\IAR2\arm\INC\        /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_RU\List\cl.s79                            /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME cl

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??CBook
        FUNCTION ??CBook,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??CBook??rT
        FUNCTION ??__onClose,0603H
        LOCFRAME CSTACK, 4, STACK
        PUBLIC ??__vtbl
        PUBLIC ??destroy
        FUNCTION ??destroy,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??destroy??rT
        PUBLIC `??new CBook`
        FUNCTION `??new CBook`,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK `??new CBook??rT`
        PUBLIC ??onClose
        FUNCTION ??onClose,0603H
        MULTWEAK ??onClose??rT
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new??rA`
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC `?~CBook`
        FUNCTION `?~CBook`,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK `?~CBook??rT`
        PUBLIC MyBook
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        


`?<Name CBook 5>`   SYMBOL "CBook"

??CBook??rT         SYMBOL "??rT", ??CBook
??__vtbl            SYMBOL "__vtbl", `?<Name CBook 5>`

??destroy??rT       SYMBOL "??rT", ??destroy

`??new CBook??rT`   SYMBOL "??rT", `??new CBook`

??onClose??rT       SYMBOL "??rT", ??onClose
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new??rA` SYMBOL "??rA", `??operator new`

`?~CBook??rT`       SYMBOL "??rT", `?~CBook`

        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new`
        FUNCTION `??operator new`,0202H

// Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDisplay\cl.cpp
//    1 #include "..\deleaker\mem2.h"
//    2 #include "..\include\Lib_Clara.h"
//    3 #include "header\cl.h"
//    4 

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
//    5 MyBOOK *MyBook=0;
MyBook:
        DS8 4

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
`??new CBook??rT`:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE `??new CBook`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function `??new CBook`
        ARM
// __??Code32?? __code __interwork __atpcs CBook &CBook::new CBook(char *, PAGE_DESC const *)
`??new CBook`:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
        MOV      R0,#+44
        MOV      R5,R1
        _BLF     `??operator new`,`??operator new??rA`
        CMP      R0,#+0
        POPEQ    {R4,R5,PC}
        MOV      R2,R5
        MOV      R1,R4
        POP      {R4,R5,LR}       ;; Pop
        CFI R4 SameValue
        CFI R5 SameValue
        CFI ?RET R14
        CFI CFA R13+0
        B        ??CBook          ;; tailcall
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??__onClose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??__onClose

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??__onClose
        ARM
//    6 static void __onClose(BOOK* bk)
//    7 {
//    8   ((CBook*)bk)->onClose();
??__onClose:
        LDR      R1,[R0, #+40]
        LDR      R1,[R1, #+4]
        MOV      PC,R1            ;; tailcall
        CFI EndBlock cfiBlock3
//    9 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??CBook??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??CBook
//   10 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??CBook
        ARM
//   11 CBook::CBook(char* pBookName, const PAGE_DESC * bp)
//   12 {
??CBook:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
//   13   CreateBook( &bk, &__onClose, bp, pBookName, -1, 0);
        MOV      R3,R1
        LDR      R1,??CBook_1     ;; ??__onClose
        MOV      R4,R0
        LDR      R0,??CBook_1+0x4  ;; ??__vtbl
        STR      R0,[R4, #+40]
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+12
        MVN      R0,R0
        PUSH     {R0}
        CFI CFA R13+16
        MOV      R0,R4
        SWI      +299
//   14   MyBook=this;
        LDR      R0,??CBook_1+0x8  ;; MyBook
        STR      R4,[R0, #+0]
//   15 };
        MOV      R0,R4
        POP      {R1,R2,R4,PC}    ;; return
        DATA
??CBook_1:
        DC32     ??__onClose
        DC32     ??__vtbl
        DC32     MyBook
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??destroy??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??destroy
//   16 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??destroy
        ARM
//   17 void CBook::destroy()
//   18 {
??destroy:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
//   19   FreeBook((BOOK*)this);
        SWI      +303
//   20 };
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
`?~CBook??rT`:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE `?~CBook`
//   21 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function `?~CBook`
        ARM
//   22 CBook::~CBook()
//   23 {
`?~CBook`:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        CMP      R0,#+0
        TSTNE    R1,#0x1
        POPEQ    {PC}
//   24 };
        _BLF     `??operator delete`,`??operator delete??rA`
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??onClose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??onClose
//   25 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??onClose
        ARM
//   26 void CBook::onClose()
//   27 {
//   28 };
??onClose:
        BX       LR               ;; return
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new??rA`:
        LDR      R12,??Subroutine6_0  ;; `??operator new`
        BX       R12
        DATA
??Subroutine6_0:
        DC32     `??operator new`
        CFI EndBlock cfiBlock12

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine7_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine7_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock13

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        RSEG DATA_C:CONST:SORT:NOROOT(2)
// __vtbl_entry const __data CBook::__vtbl[2]
??__vtbl:
        DATA
        DC32 `?~CBook`, ??onClose

        END
// 
// 220 bytes in segment CODE
//   8 bytes in segment DATA_C
//   4 bytes in segment DATA_Z
//  12 bytes in segment INITTAB
// 
// 172 bytes of CODE  memory (+ 60 bytes shared)
//   8 bytes of CONST memory
//   4 bytes of DATA  memory
//
//Errors: none
//Warnings: none
