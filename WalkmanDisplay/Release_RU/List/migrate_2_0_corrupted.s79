//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  23:10:33 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\migrate_2_0_corrupted.cpp                         /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\migrate_2_0_corrupted.cpp -D NDEBUG -D RUS -D     /
//                       OLDFUNCTIONS -lC Z:\home\perk11\www\perk11.info\svn /
//                       \SE\WalkmanDisplay\Release_RU\List\ -lA             /
//                       Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_RU\List\ -o Z:\home\perk11\www\perk11.inf /
//                       o\svn\SE\WalkmanDisplay\Release_RU\Obj\ -s9         /
//                       --cpu_mode arm --endian little --cpu ARM926EJ-S     /
//                       --stack_align 4 --interwork -e --enable_multibytes  /
//                       --fpu None --eec++ --dlib_config                    /
//                       Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.h -I        /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_RU\List\migrate_2_0_corrupted.s79         /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME migrate_2_0_corrupted

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??migrate_from_2_0corrupted_to_2_1
        FUNCTION ??migrate_from_2_0corrupted_to_2_1,0203H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??migrate_from_2_0corrupted_to_2_1??rT
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        

??migrate_from_2_0corrupted_to_2_1??rT SYMBOL "??rT", ??migrate_from_2_0corrupted_to_2_1


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??migrate_from_2_0corrupted_to_2_1??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??migrate_from_2_0corrupted_to_2_1
// Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDisplay\migrate_2_0_corrupted.cpp
//    1 
//    2 #include "..\deleaker\mem2.h"
//    3 #include "..\include\Lib_Clara.h"
//    4 #include "..\include\Dir.h"
//    5 #include "header\cl.h"
//    6 #include "header\accelctrl.h"
//    7 #include "header\wdisplay.h"
//    8 #include "header\images.h"
//    9 #include "..\include\cfg_items.h"
//   10 #include "header\conf_loader.h"
//   11 #include "header\config_data.h"
//   12 #include "header\skin_data.h"
//   13 #include "header\skin_loader.h"
//   14 
//   15 #include "header\rus.h"
//   16 #include "header\eng.h"
//   17 
//   18 #include "cfg_2_0_corrupted.h"
//   19 #include "cfg_2_1.h"
//   20 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??migrate_from_2_0corrupted_to_2_1
        ARM
//   21 int migrate_from_2_0corrupted_to_2_1(CFG_2_0_corrupted *oldcfg, CFG_2_1 *cfg)
//   22 {
??migrate_from_2_0corrupted_to_2_1:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOV      R4,R0
//   23   cfg->standartwnd=oldcfg->standartwnd;
        ADD      R6,R4,#+88
        LDR      R0,[R6, #+0]
        MOV      R5,R1
        ADD      R7,R5,#+88
        STR      R0,[R7, #+0]
//   24   cfg->title_show=oldcfg->title_show;
        LDR      R0,[R6, #+92]
        STR      R0,[R7, #+92]
//   25   cfg->title_font=oldcfg->title_font;
        LDR      R0,[R6, #+140]
        STR      R0,[R7, #+140]
//   26   cfg->title_rc=oldcfg->title_rc;
        MOV      R0,#+276
        ADD      R1,R0,R5
        ADD      R0,R0,R4
        LDRH     R2,[R0, #0]
        STRH     R2,[R1, #+0]
        LDRH     R2,[R0, #+2]
        STRH     R2,[R1, #+2]
        LDRH     R2,[R0, #+4]
        STRH     R2,[R1, #+4]
        LDRH     R2,[R0, #+6]
        STRH     R2,[R1, #+6]
//   27   cfg->title_color=oldcfg->title_color;
        LDR      R0,[R6, #+240]
//   28   cfg->title_scolor=oldcfg->title_scolor;
//   29   cfg->title_ct=oldcfg->title_ct;
//   30   cfg->album_show=oldcfg->album_show;
//   31   cfg->album_font=oldcfg->album_font;
//   32   cfg->album_rc=oldcfg->album_rc;
        ADD      R1,R4,#+752
        STR      R0,[R7, #+240]
        LDR      R0,[R6, #+288]
        STR      R0,[R7, #+288]
        LDR      R0,[R6, #+336]
        STR      R0,[R7, #+480]
        LDR      R0,[R6, #+568]
        STR      R0,[R7, #+712]
        LDR      R0,[R6, #+616]
        STR      R0,[R7, #+760]
        LDRH     R2,[R1, #0]
        ADD      R0,R5,#+896
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//   33   cfg->album_color=oldcfg->album_color;
//   34   cfg->album_scolor=oldcfg->album_scolor;
//   35   cfg->album_ct=oldcfg->album_ct;
//   36   cfg->artist_show=oldcfg->artist_show;
//   37   cfg->artist_font=oldcfg->artist_font;
//   38   cfg->artist_rc=oldcfg->artist_rc;
        MOV      R1,#+204
        ORR      R1,R1,#0x400
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+716]
        ADD      R1,R1,R4
        STR      R0,[R7, #+860]
        LDR      R0,[R6, #+764]
        STR      R0,[R7, #+908]
        LDR      R0,[R6, #+812]
        STR      R0,[R7, #+1100]
        LDR      R0,[R6, #+1044]
        STR      R0,[R7, #+1332]
        LDR      R0,[R6, #+1092]
        STR      R0,[R7, #+1380]
        LDRH     R2,[R1, #0]
        MOV      R0,#+236
        ORR      R0,R0,#0x500
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//   39   cfg->artist_color=oldcfg->artist_color;
//   40   cfg->artist_scolor=oldcfg->artist_scolor;
//   41   cfg->artist_ct=oldcfg->artist_ct;
//   42   cfg->year_show=oldcfg->year_show;
//   43   cfg->year_font=oldcfg->year_font;
//   44   cfg->year_rc=oldcfg->year_rc;
        MOV      R1,#+168
        ORR      R1,R1,#0x600
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+1192]
        ADD      R1,R1,R4
        STR      R0,[R7, #+1480]
        LDR      R0,[R6, #+1240]
        STR      R0,[R7, #+1528]
        LDR      R0,[R6, #+1288]
        STR      R0,[R7, #+1720]
        LDR      R0,[R6, #+1520]
        STR      R0,[R7, #+1952]
        LDR      R0,[R6, #+1568]
        STR      R0,[R7, #+2000]
        LDRH     R2,[R1, #0]
        MOV      R0,#+88
        ORR      R0,R0,#0x800
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//   45   cfg->year_color=oldcfg->year_color;
//   46   cfg->year_scolor=oldcfg->year_scolor;
//   47   cfg->year_ct=oldcfg->year_ct;
//   48   cfg->genre_show=oldcfg->genre_show;
//   49   cfg->genre_font=oldcfg->genre_font;
//   50   cfg->genre_rc=oldcfg->genre_rc;
        MOV      R1,#+132
        ORR      R1,R1,#0x800
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+1668]
        ADD      R1,R1,R4
        STR      R0,[R7, #+2100]
        LDR      R0,[R6, #+1716]
        STR      R0,[R7, #+2148]
        LDR      R0,[R6, #+1764]
        STR      R0,[R7, #+2340]
        LDR      R0,[R6, #+1996]
        STR      R0,[R7, #+2572]
        LDR      R0,[R6, #+2044]
        STR      R0,[R7, #+2620]
        LDRH     R2,[R1, #0]
        MOV      R0,#+196
        ORR      R0,R0,#0xA00
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//   51   cfg->genre_color=oldcfg->genre_color;
//   52   cfg->genre_scolor=oldcfg->genre_scolor;
//   53   cfg->genre_ct=oldcfg->genre_ct;
//   54   cfg->trackn_show=oldcfg->trackn_show;
//   55   cfg->trackn_font=oldcfg->trackn_font;
//   56   cfg->trackn_rc=oldcfg->trackn_rc;
        ADD      R1,R4,#+2656
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+2144]
        STR      R0,[R7, #+2720]
        LDR      R0,[R6, #+2192]
        STR      R0,[R7, #+2768]
        LDR      R0,[R6, #+2240]
        STR      R0,[R7, #+2960]
        LDR      R0,[R6, #+2472]
        STR      R0,[R7, #+3192]
        LDR      R0,[R6, #+2520]
        STR      R0,[R7, #+3240]
        LDRH     R2,[R1, #0]
        ADD      R0,R5,#+3376
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//   57   cfg->trackn_color=oldcfg->trackn_color;
        LDR      R0,[R6, #+2620]
//   58   cfg->trackn_scolor=oldcfg->trackn_scolor;
//   59   cfg->trackn_ct=oldcfg->trackn_ct;
//   60   memcpy(cfg->trackn_mask, oldcfg->trackn_mask,49*2);
        MOV      R2,#+98
        STR      R0,[R7, #+3340]
        LDR      R0,[R6, #+2668]
        STR      R0,[R7, #+3388]
        LDR      R0,[R6, #+2716]
        STR      R0,[R7, #+3580]
        MOV      R0,#+132
        ORR      R0,R0,#0xB00
        ADD      R1,R0,R4
        ADD      R0,R0,#+864
        ADD      R0,R0,R5
        SWI      +275
//   61   cfg->tracks_show=oldcfg->tracks_show;
        LDR      R0,[R6, #+3092]
//   62   cfg->tracks_font=oldcfg->tracks_font;
//   63   cfg->tracks_rc=oldcfg->tracks_rc;
        MOV      R1,#+204
        STR      R0,[R7, #+3956]
        LDR      R0,[R6, #+3140]
        ORR      R1,R1,#0xC00
        STR      R0,[R7, #+4004]
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+44
        ORR      R0,R0,#0x1000
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//   64   cfg->tracks_color=oldcfg->tracks_color;
//   65   cfg->tracks_scolor=oldcfg->tracks_scolor;
//   66   cfg->tracks_ct=oldcfg->tracks_ct;
//   67   memcpy(cfg->tracks_mask, oldcfg->tracks_mask,49*2);
        ADD      R1,R4,#+3568
        STRH     R2,[R0, #+6]
        MOV      R0,#+96
        ORR      R0,R0,#0x1000
        ADD      R7,R0,R5
        LDR      R0,[R6, #+3240]
        MOV      R2,#+98
        STR      R0,[R7, #+0]
        LDR      R0,[R6, #+3288]
        STR      R0,[R7, #+48]
        LDR      R0,[R6, #+3336]
        STR      R0,[R7, #+240]
        MOV      R0,#+224
        ORR      R0,R0,#0x1100
        ADD      R0,R0,R5
        SWI      +275
//   68   cfg->ctime_show=oldcfg->ctime_show;
        LDR      R0,[R6, #+3712]
//   69   cfg->ctime_font=oldcfg->ctime_font;
//   70   cfg->ctime_rc=oldcfg->ctime_rc;
        MOV      R1,#+56
        STR      R0,[R7, #+616]
        LDR      R0,[R6, #+3760]
        ORR      R1,R1,#0xF00
        STR      R0,[R7, #+664]
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+40
        ORR      R0,R0,#0x1300
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//   71   cfg->ctime_color=oldcfg->ctime_color;
        LDR      R0,[R6, #+3860]
//   72   cfg->ctime_scolor=oldcfg->ctime_scolor;
//   73   cfg->ctime_ct=oldcfg->ctime_ct;
//   74   memcpy(cfg->ctime_mask, oldcfg->ctime_mask,49*2);
        MOV      R2,#+98
        STR      R0,[R7, #+764]
        LDR      R0,[R6, #+3908]
        STR      R0,[R7, #+812]
        LDR      R0,[R6, #+3956]
        STR      R0,[R7, #+1004]
        MOV      R0,#+92
        ORR      R0,R0,#0x1000
        ADD      R1,R0,R4
        ORR      R0,R0,#0x480
        ADD      R0,R0,R5
        SWI      +275
        MOV      R0,#+68
        ORR      R0,R0,#0x1100
        ADD      R6,R0,R4
        LDR      R0,[R6, #+0]
//   75   cfg->ftime_show=oldcfg->ftime_show;
//   76   cfg->ftime_font=oldcfg->ftime_font;
//   77   cfg->ftime_rc=oldcfg->ftime_rc;
        MOV      R1,#+164
        STR      R0,[R7, #+1380]
        LDR      R0,[R6, #+48]
        ORR      R1,R1,#0x1100
        STR      R0,[R7, #+1428]
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+36
        ORR      R0,R0,#0x1600
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//   78   cfg->ftime_color=oldcfg->ftime_color;
        LDR      R0,[R6, #+148]
//   79   cfg->ftime_scolor=oldcfg->ftime_scolor;
//   80   cfg->ftime_ct=oldcfg->ftime_ct;
//   81   memcpy(cfg->ftime_mask, oldcfg->ftime_mask,49*2);
        MOV      R2,#+98
        STR      R0,[R7, #+1528]
        LDR      R0,[R6, #+196]
        STR      R0,[R7, #+1576]
        LDR      R0,[R6, #+244]
        STR      R0,[R7, #+1768]
        MOV      R0,#+200
        ORR      R0,R0,#0x1200
        ADD      R1,R0,R4
        ORR      R0,R0,#0x510
        ADD      R0,R0,R5
        SWI      +275
//   82   cfg->ltime_show=oldcfg->ltime_show;
        LDR      R0,[R6, #+620]
//   83   cfg->ltime_font=oldcfg->ltime_font;
//   84   cfg->ltime_rc=oldcfg->ltime_rc;
        MOV      R1,#+16
        STR      R0,[R7, #+2144]
        LDR      R0,[R6, #+668]
        ORR      R1,R1,#0x1400
        STR      R0,[R7, #+2192]
        MOV      R0,#+32
        ORR      R0,R0,#0x1900
        ADD      R0,R0,R5
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//   85   cfg->ltime_color=oldcfg->ltime_color;
        LDR      R0,[R6, #+768]
//   86   cfg->ltime_scolor=oldcfg->ltime_scolor;
//   87   cfg->ltime_ct=oldcfg->ltime_ct;
//   88   memcpy(cfg->ltime_mask, oldcfg->ltime_mask,49*2);
        MOV      R2,#+98
        STR      R0,[R7, #+2292]
        LDR      R0,[R6, #+816]
        STR      R0,[R7, #+2340]
        LDR      R0,[R6, #+864]
        STR      R0,[R7, #+2532]
        MOV      R0,#+52
        ORR      R0,R0,#0x1500
        ADD      R1,R0,R4
        ADD      R0,R0,#+1440
        ADD      R0,R0,R5
        SWI      +275
//   89   cfg->bitrate_show=oldcfg->bitrate_show;
        LDR      R0,[R6, #+1240]
//   90   cfg->bitrate_font=oldcfg->bitrate_font;
//   91   cfg->bitrate_rc=oldcfg->bitrate_rc;
        MOV      R1,#+124
        STR      R0,[R7, #+2908]
        LDR      R0,[R6, #+1288]
        ORR      R1,R1,#0x1600
        STR      R0,[R7, #+2956]
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+28
        ORR      R0,R0,#0x1C00
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//   92   cfg->bitrate_color=oldcfg->bitrate_color;
        LDR      R0,[R6, #+1388]
//   93   cfg->bitrate_scolor=oldcfg->bitrate_scolor;
//   94   cfg->bitrate_ct=oldcfg->bitrate_ct;
//   95   memcpy(cfg->bitrate_mask, oldcfg->bitrate_mask,49*2);
        MOV      R2,#+98
        STR      R0,[R7, #+3056]
        LDR      R0,[R6, #+1436]
        STR      R0,[R7, #+3104]
        LDR      R0,[R6, #+1484]
        STR      R0,[R7, #+3296]
        MOV      R0,#+160
        ORR      R0,R0,#0x1700
        ADD      R1,R0,R4
        ADD      R0,R0,#+1584
        ADD      R0,R0,R5
        SWI      +275
//   96   memcpy(cfg->bitrate_vbr, oldcfg->bitrate_vbr,49*2);
        MOV      R2,#+98
        MOV      R0,#+48
        ORR      R0,R0,#0x1800
        ADD      R1,R0,R4
        ADD      R0,R0,#+1584
        ADD      R0,R0,R5
        SWI      +275
//   97   cfg->freq_show=oldcfg->freq_show;
        LDR      R0,[R6, #+2004]
//   98   cfg->freq_font=oldcfg->freq_font;
//   99   cfg->freq_rc=oldcfg->freq_rc;
        MOV      R1,#+120
        STR      R0,[R7, #+3816]
        LDR      R0,[R6, #+2052]
        ORR      R1,R1,#0x1900
        STR      R0,[R7, #+3864]
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+168
        ORR      R0,R0,#0x1F00
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//  100   cfg->freq_color=oldcfg->freq_color;
        LDR      R0,[R6, #+2152]
//  101   cfg->freq_scolor=oldcfg->freq_scolor;
//  102   cfg->freq_ct=oldcfg->freq_ct;
//  103   memcpy(cfg->freq_mask, oldcfg->freq_mask,49*2);
        MOV      R2,#+98
        STR      R0,[R7, #+3964]
        LDR      R0,[R6, #+2200]
        STR      R0,[R7, #+4012]
        MOV      R0,#+204
        ORR      R0,R0,#0x2000
        ADD      R7,R0,R5
        LDR      R0,[R6, #+2248]
        STR      R0,[R7, #+0]
        MOV      R0,#+156
        ORR      R0,R0,#0x1A00
        ADD      R1,R0,R4
        ADD      R0,R0,#+1728
        ADD      R0,R0,R5
        SWI      +275
//  104   cfg->ch_show=oldcfg->ch_show;
        LDR      R0,[R6, #+2624]
//  105   cfg->ch_font=oldcfg->ch_font;
//  106   cfg->ch_rc=oldcfg->ch_rc;
        MOV      R1,#+228
        STR      R0,[R7, #+376]
        LDR      R0,[R6, #+2672]
        ORR      R1,R1,#0x1B00
        STR      R0,[R7, #+424]
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+164
        ORR      R0,R0,#0x2200
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  107   cfg->ch_color=oldcfg->ch_color;
//  108   cfg->ch_scolor=oldcfg->ch_scolor;
//  109   cfg->ch_ct=oldcfg->ch_ct;
//  110   cfg->ProgressBar_Show=oldcfg->ProgressBar_Show;
//  111   cfg->pbrect=oldcfg->pbrect;
        MOV      R1,#+144
        ORR      R1,R1,#0x1D00
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+2772]
        ADD      R1,R1,R4
        STR      R0,[R7, #+524]
        LDR      R0,[R6, #+2820]
        STR      R0,[R7, #+572]
        LDR      R0,[R6, #+2868]
        STR      R0,[R7, #+764]
        LDR      R0,[R6, #+3100]
        STR      R0,[R7, #+996]
        LDRH     R2,[R1, #0]
        MOV      R0,#+224
        ORR      R0,R0,#0x2400
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  112   cfg->ProgressBar_cColor=oldcfg->ProgressBar_cColor;
//  113   cfg->ProgressBar_oColor=oldcfg->ProgressBar_oColor;
//  114   cfg->ProgressBar_bColor=oldcfg->ProgressBar_bColor;
//  115   cfg->ProgressBar_highlight=oldcfg->ProgressBar_highlight;
//  116   cfg->cover_show=oldcfg->cover_show;
//  117   cfg->cover_rect=oldcfg->cover_rect;
        MOV      R1,#+12
        ORR      R1,R1,#0x1F00
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+3200]
        ADD      R1,R1,R4
        STR      R0,[R7, #+1096]
        LDR      R0,[R6, #+3248]
        STR      R0,[R7, #+1144]
        LDR      R0,[R6, #+3296]
        STR      R0,[R7, #+1192]
        LDR      R0,[R6, #+3344]
        STR      R0,[R7, #+1240]
        LDR      R0,[R6, #+3480]
        STR      R0,[R7, #+1376]
        LDRH     R2,[R1, #0]
        MOV      R0,#+92
        ORR      R0,R0,#0x2600
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  118   cfg->ticn_show=oldcfg->ticn_show;
//  119   cfg->ticn_rect=oldcfg->ticn_rect;
        MOV      R1,#+244
        ORR      R1,R1,#0x1F00
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+3712]
        ADD      R1,R1,R4
        STR      R0,[R7, #+1608]
        LDRH     R2,[R1, #0]
        MOV      R0,#+68
        ORR      R0,R0,#0x2700
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  120   cfg->alicn_show=oldcfg->alicn_show;
//  121   cfg->alicn_rect=oldcfg->alicn_rect;
        MOV      R1,#+176
        ORR      R1,R1,#0x2000
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+3900]
        ADD      R1,R1,R4
        STR      R0,[R7, #+1796]
        LDRH     R2,[R1, #0]
        ADD      R0,R5,#+10240
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  122   cfg->aricn_show=oldcfg->aricn_show;
//  123   cfg->aricn_rect=oldcfg->aricn_rect;
        MOV      R1,#+108
        ORR      R1,R1,#0x2100
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+4088]
        ADD      R1,R1,R4
        STR      R0,[R7, #+1984]
        LDRH     R2,[R1, #0]
        MOV      R0,#+188
        ORR      R0,R0,#0x2800
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
        MOV      R0,#+248
        ORR      R0,R0,#0x2100
        ADD      R0,R0,R4
        LDR      R1,[R0, #+0]
//  124   cfg->pls_show=oldcfg->pls_show;
//  125   cfg->pls_rect=oldcfg->pls_rect;
        MOV      R2,#+40
        STR      R1,[R7, #+2172]
        ORR      R2,R2,#0x2200
        ADD      R2,R2,R4
        LDRH     R3,[R2, #0]
        MOV      R1,#+120
        ORR      R1,R1,#0x2900
        ADD      R1,R1,R5
        STRH     R3,[R1, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R1, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R1, #+4]
        LDRH     R3,[R2, #+6]
//  126   cfg->eq_preset_show=oldcfg->eq_preset_show;
//  127   cfg->eq_preset_rect=oldcfg->eq_preset_rect;
        MOV      R2,#+228
        ORR      R2,R2,#0x2200
        STRH     R3,[R1, #+6]
        LDR      R1,[R0, #+188]
        ADD      R2,R2,R4
        STR      R1,[R7, #+2360]
        LDRH     R3,[R2, #0]
        MOV      R1,#+52
        ORR      R1,R1,#0x2A00
        ADD      R1,R1,R5
        STRH     R3,[R1, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R1, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R1, #+4]
        LDRH     R3,[R2, #+6]
//  128   cfg->shuffle_show=oldcfg->shuffle_show;
//  129   cfg->shuffle_rect=oldcfg->shuffle_rect;
        MOV      R2,#+160
        ORR      R2,R2,#0x2300
        STRH     R3,[R1, #+6]
        LDR      R1,[R0, #+376]
        ADD      R2,R2,R4
        STR      R1,[R7, #+2548]
        LDRH     R3,[R2, #0]
        MOV      R1,#+240
        ORR      R1,R1,#0x2A00
        ADD      R1,R1,R5
        STRH     R3,[R1, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R1, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R1, #+4]
        LDRH     R3,[R2, #+6]
        STRH     R3,[R1, #+6]
//  130   cfg->repeat_show=oldcfg->repeat_show;
        LDR      R1,[R0, #+564]
        STR      R1,[R7, #+2736]
//  131   cfg->repeat_rect=oldcfg->repeat_rect;
        MOV      R1,#+172
        MOV      R2,#+92
        ORR      R2,R2,#0x2400
        ADD      R2,R2,R4
        LDRH     R3,[R2, #0]
        ORR      R1,R1,#0x2B00
        ADD      R1,R1,R5
        STRH     R3,[R1, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R1, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R1, #+4]
        LDRH     R3,[R2, #+6]
//  132   cfg->stereo_show=oldcfg->stereo_show;
//  133   cfg->stereo_rect=oldcfg->stereo_rect;
        MOV      R2,#+24
        ORR      R2,R2,#0x2500
        STRH     R3,[R1, #+6]
        LDR      R1,[R0, #+752]
        ADD      R2,R2,R4
        STR      R1,[R7, #+2924]
        LDRH     R3,[R2, #0]
        MOV      R1,#+104
        ORR      R1,R1,#0x2C00
        ADD      R1,R1,R5
        STRH     R3,[R1, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R1, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R1, #+4]
        LDRH     R3,[R2, #+6]
//  134   cfg->navigimg_show=oldcfg->navigimg_show;
//  135   cfg->navigimg_rect=oldcfg->navigimg_rect;
        MOV      R2,#+44
        ORR      R2,R2,#0x2600
        STRH     R3,[R1, #+6]
        LDR      R1,[R0, #+1028]
        ADD      R2,R2,R4
        STR      R1,[R7, #+3200]
        LDRH     R3,[R2, #0]
        MOV      R1,#+124
        ORR      R1,R1,#0x2D00
        ADD      R1,R1,R5
        STRH     R3,[R1, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R1, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R1, #+4]
        LDRH     R3,[R2, #+6]
//  136   cfg->leftimg_show=oldcfg->leftimg_show;
//  137   cfg->leftimg_rect=oldcfg->leftimg_rect;
        MOV      R2,#+232
        ORR      R2,R2,#0x2600
        STRH     R3,[R1, #+6]
        LDR      R1,[R0, #+1216]
        ADD      R2,R2,R4
        STR      R1,[R7, #+3388]
        LDRH     R3,[R2, #0]
        MOV      R1,#+56
        ORR      R1,R1,#0x2E00
        ADD      R1,R1,R5
        STRH     R3,[R1, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R1, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R1, #+4]
        LDRH     R3,[R2, #+6]
//  138   cfg->rightimg_show=oldcfg->rightimg_show;
//  139   cfg->rightimg_rect=oldcfg->rightimg_rect;
        MOV      R2,#+164
        ORR      R2,R2,#0x2700
        STRH     R3,[R1, #+6]
        LDR      R1,[R0, #+1404]
        ADD      R2,R2,R4
        STR      R1,[R7, #+3576]
        LDRH     R3,[R2, #0]
        MOV      R1,#+244
        ORR      R1,R1,#0x2E00
        ADD      R1,R1,R5
        STRH     R3,[R1, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R1, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R1, #+4]
        LDRH     R3,[R2, #+6]
//  140   cfg->centerimg_show=oldcfg->centerimg_show;
//  141   cfg->centerimg_rect=oldcfg->centerimg_rect;
        MOV      R2,#+96
        ORR      R2,R2,#0x2800
        STRH     R3,[R1, #+6]
        LDR      R1,[R0, #+1592]
        ADD      R2,R2,R4
        STR      R1,[R7, #+3764]
        LDRH     R3,[R2, #0]
        MOV      R1,#+176
        ORR      R1,R1,#0x2F00
        ADD      R1,R1,R5
        STRH     R3,[R1, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R1, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R1, #+4]
        LDRH     R3,[R2, #+6]
//  142   cfg->upimg_show=oldcfg->upimg_show;
//  143   cfg->upimg_rect=oldcfg->upimg_rect;
        MOV      R2,#+28
        ORR      R2,R2,#0x2900
        STRH     R3,[R1, #+6]
        LDR      R1,[R0, #+1780]
        ADD      R2,R2,R4
        STR      R1,[R7, #+3952]
        LDRH     R3,[R2, #0]
        MOV      R1,#+108
        ORR      R1,R1,#0x3000
        ADD      R1,R1,R5
        STRH     R3,[R1, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R1, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R1, #+4]
        LDRH     R3,[R2, #+6]
        STRH     R3,[R1, #+6]
        LDR      R2,[R0, #+1968]
        MOV      R1,#+248
        ORR      R1,R1,#0x3000
        ADD      R1,R1,R5
        STR      R2,[R1, #+0]
//  144   cfg->downimg_show=oldcfg->downimg_show;
//  145   cfg->downimg_rect=oldcfg->downimg_rect;
        MOV      R3,#+216
        ORR      R3,R3,#0x2900
        ADD      R3,R3,R4
        LDRH     R6,[R3, #0]
        MOV      R2,#+40
        ORR      R2,R2,#0x3100
        ADD      R2,R2,R5
        STRH     R6,[R2, #+0]
        LDRH     R6,[R3, #+2]
        STRH     R6,[R2, #+2]
        LDRH     R6,[R3, #+4]
        STRH     R6,[R2, #+4]
        LDRH     R6,[R3, #+6]
        STRH     R6,[R2, #+6]
//  146   cfg->title_show_h=oldcfg->title_show_h;
        LDR      R2,[R0, #+2288]
//  147   cfg->title_font_h=oldcfg->title_font_h;
//  148   cfg->title_rc_h=oldcfg->title_rc_h;
        MOV      R3,#+72
        STR      R2,[R1, #+320]
        LDR      R2,[R0, #+2336]
        ORR      R3,R3,#0x2B00
        STR      R2,[R1, #+368]
        ADD      R3,R3,R4
        LDRH     R6,[R3, #0]
        MOV      R2,#+152
        ORR      R2,R2,#0x3200
        ADD      R2,R2,R5
        STRH     R6,[R2, #+0]
        LDRH     R6,[R3, #+2]
        STRH     R6,[R2, #+2]
        LDRH     R6,[R3, #+4]
        STRH     R6,[R2, #+4]
        LDRH     R6,[R3, #+6]
//  149   cfg->title_color_h=oldcfg->title_color_h;
//  150   cfg->title_scolor_h=oldcfg->title_scolor_h;
//  151   cfg->title_ct_h=oldcfg->title_ct_h;
//  152   cfg->album_show_h=oldcfg->album_show_h;
//  153   cfg->album_font_h=oldcfg->album_font_h;
//  154   cfg->album_rc_h=oldcfg->album_rc_h;
        MOV      R3,#+36
        ORR      R3,R3,#0x2D00
        STRH     R6,[R2, #+6]
        LDR      R2,[R0, #+2436]
        ADD      R3,R3,R4
        STR      R2,[R1, #+468]
        LDR      R2,[R0, #+2484]
        STR      R2,[R1, #+516]
        LDR      R2,[R0, #+2532]
        STR      R2,[R1, #+708]
        LDR      R2,[R0, #+2764]
        STR      R2,[R1, #+940]
        LDR      R2,[R0, #+2812]
        STR      R2,[R1, #+988]
        LDRH     R6,[R3, #0]
        MOV      R2,#+4
        ORR      R2,R2,#0x3500
        ADD      R2,R2,R5
        STRH     R6,[R2, #+0]
        LDRH     R6,[R3, #+2]
        STRH     R6,[R2, #+2]
        LDRH     R6,[R3, #+4]
        STRH     R6,[R2, #+4]
        LDRH     R6,[R3, #+6]
//  155   cfg->album_color_h=oldcfg->album_color_h;
//  156   cfg->album_scolor_h=oldcfg->album_scolor_h;
//  157   cfg->album_ct_h=oldcfg->album_ct_h;
//  158   cfg->artist_show_h=oldcfg->artist_show_h;
//  159   cfg->artist_font_h=oldcfg->artist_font_h;
//  160   cfg->artist_rc_h=oldcfg->artist_rc_h;
        ADD      R3,R4,#+12032
        STRH     R6,[R2, #+6]
        LDR      R2,[R0, #+2912]
        STR      R2,[R1, #+1088]
        LDR      R2,[R0, #+2960]
        STR      R2,[R1, #+1136]
        LDR      R2,[R0, #+3008]
        STR      R2,[R1, #+1328]
        LDR      R2,[R0, #+3240]
        STR      R2,[R1, #+1560]
        LDR      R2,[R0, #+3288]
        STR      R2,[R1, #+1608]
        LDRH     R6,[R3, #0]
        MOV      R2,#+112
        ORR      R2,R2,#0x3700
        ADD      R2,R2,R5
        STRH     R6,[R2, #+0]
        LDRH     R6,[R3, #+2]
        STRH     R6,[R2, #+2]
        LDRH     R6,[R3, #+4]
        STRH     R6,[R2, #+4]
        LDRH     R6,[R3, #+6]
//  161   cfg->artist_color_h=oldcfg->artist_color_h;
//  162   cfg->artist_scolor_h=oldcfg->artist_scolor_h;
//  163   cfg->artist_ct_h=oldcfg->artist_ct_h;
//  164   cfg->year_show_h=oldcfg->year_show_h;
//  165   cfg->year_font_h=oldcfg->year_font_h;
//  166   cfg->year_rc_h=oldcfg->year_rc_h;
        MOV      R3,#+220
        ORR      R3,R3,#0x3000
        STRH     R6,[R2, #+6]
        LDR      R2,[R0, #+3388]
        ADD      R3,R3,R4
        STR      R2,[R1, #+1708]
        LDR      R2,[R0, #+3436]
        STR      R2,[R1, #+1756]
        LDR      R2,[R0, #+3484]
        STR      R2,[R1, #+1948]
        LDR      R2,[R0, #+3716]
        STR      R2,[R1, #+2180]
        LDR      R2,[R0, #+3764]
        STR      R2,[R1, #+2228]
        LDRH     R6,[R3, #0]
        MOV      R2,#+220
        ORR      R2,R2,#0x3900
        ADD      R2,R2,R5
        STRH     R6,[R2, #+0]
        LDRH     R6,[R3, #+2]
        STRH     R6,[R2, #+2]
        LDRH     R6,[R3, #+4]
        STRH     R6,[R2, #+4]
        LDRH     R6,[R3, #+6]
        STRH     R6,[R2, #+6]
//  167   cfg->year_color_h=oldcfg->year_color_h;
        LDR      R2,[R0, #+3864]
        STR      R2,[R1, #+2328]
//  168   cfg->year_scolor_h=oldcfg->year_scolor_h;
        LDR      R2,[R0, #+3912]
        STR      R2,[R1, #+2376]
//  169   cfg->year_ct_h=oldcfg->year_ct_h;
        LDR      R0,[R0, #+3960]
//  170   cfg->genre_show_h=oldcfg->genre_show_h;
//  171   cfg->genre_font_h=oldcfg->genre_font_h;
//  172   cfg->genre_rc_h=oldcfg->genre_rc_h;
        MOV      R2,#+184
        STR      R0,[R1, #+2568]
        MOV      R0,#+88
        ORR      R0,R0,#0x3200
        ADD      R6,R0,R4
        LDR      R0,[R6, #+0]
        ORR      R2,R2,#0x3200
        STR      R0,[R1, #+2800]
        LDR      R0,[R6, #+48]
        ADD      R2,R2,R4
        STR      R0,[R1, #+2848]
        LDRH     R3,[R2, #0]
        MOV      R0,#+72
        ORR      R0,R0,#0x3C00
        ADD      R0,R0,R5
        STRH     R3,[R0, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R0, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R0, #+4]
        LDRH     R3,[R2, #+6]
        STRH     R3,[R0, #+6]
//  173   cfg->genre_color_h=oldcfg->genre_color_h;
        LDR      R0,[R6, #+148]
        STR      R0,[R1, #+2948]
//  174   cfg->genre_scolor_h=oldcfg->genre_scolor_h;
        LDR      R0,[R6, #+196]
        STR      R0,[R1, #+2996]
//  175   cfg->genre_ct_h=oldcfg->genre_ct_h;
        LDR      R0,[R6, #+244]
        STR      R0,[R1, #+3188]
//  176   cfg->trackn_show_h=oldcfg->trackn_show_h;
        LDR      R0,[R6, #+476]
        STR      R0,[R1, #+3420]
//  177   cfg->trackn_font_h=oldcfg->trackn_font_h;
        LDR      R0,[R6, #+524]
        STR      R0,[R1, #+3468]
//  178   cfg->trackn_rc_h=oldcfg->trackn_rc_h;
        MOV      R0,#+180
        ORR      R0,R0,#0x3E00
        ADD      R0,R0,R5
        MOV      R2,#+148
        ORR      R2,R2,#0x3400
        ADD      R2,R2,R4
        LDRH     R3,[R2, #0]
        STRH     R3,[R0, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R0, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R0, #+4]
        LDRH     R3,[R2, #+6]
//  179   cfg->trackn_color_h=oldcfg->trackn_color_h;
//  180   cfg->trackn_scolor_h=oldcfg->trackn_scolor_h;
//  181   cfg->trackn_ct_h=oldcfg->trackn_ct_h;
//  182   memcpy(cfg->trackn_mask_h, oldcfg->trackn_mask_h,49*2);
        MOV      R2,#+98
        STRH     R3,[R0, #+6]
        LDR      R0,[R6, #+624]
        STR      R0,[R1, #+3568]
        LDR      R0,[R6, #+672]
        STR      R0,[R1, #+3616]
        LDR      R0,[R6, #+720]
        STR      R0,[R1, #+3808]
        MOV      R0,#+184
        ORR      R0,R0,#0x3500
        ADD      R1,R0,R4
        ADD      R0,R0,#+2736
        ADD      R0,R0,R5
        SWI      +275
        MOV      R0,#+80
        ORR      R0,R0,#0x4100
        ADD      R7,R0,R5
        LDR      R0,[R6, #+1096]
//  183   cfg->tracks_show_h=oldcfg->tracks_show_h;
//  184   cfg->tracks_font_h=oldcfg->tracks_font_h;
//  185   cfg->tracks_rc_h=oldcfg->tracks_rc_h;
        ADD      R1,R4,#+14080
        STR      R0,[R7, #+0]
        LDR      R0,[R6, #+1144]
        STR      R0,[R7, #+48]
        LDRH     R2,[R1, #0]
        MOV      R0,#+176
        ORR      R0,R0,#0x4100
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//  186   cfg->tracks_color_h=oldcfg->tracks_color_h;
        LDR      R0,[R6, #+1244]
//  187   cfg->tracks_scolor_h=oldcfg->tracks_scolor_h;
//  188   cfg->tracks_ct_h=oldcfg->tracks_ct_h;
//  189   memcpy(cfg->tracks_mask_h, oldcfg->tracks_mask_h,49*2);
        MOV      R2,#+98
        STR      R0,[R7, #+148]
        LDR      R0,[R6, #+1292]
        STR      R0,[R7, #+196]
        LDR      R0,[R6, #+1340]
        STR      R0,[R7, #+388]
        MOV      R0,#+36
        ORR      R0,R0,#0x3800
        ADD      R1,R0,R4
        ADD      R0,R0,#+2880
        ADD      R0,R0,R5
        SWI      +275
//  190   cfg->ctime_show_h=oldcfg->ctime_show_h;
        LDR      R0,[R6, #+1716]
//  191   cfg->ctime_font_h=oldcfg->ctime_font_h;
//  192   cfg->ctime_rc_h=oldcfg->ctime_rc_h;
        MOV      R1,#+108
        STR      R0,[R7, #+764]
        LDR      R0,[R6, #+1764]
        ORR      R1,R1,#0x3900
        STR      R0,[R7, #+812]
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+172
        ORR      R0,R0,#0x4400
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//  193   cfg->ctime_color_h=oldcfg->ctime_color_h;
        LDR      R0,[R6, #+1864]
//  194   cfg->ctime_scolor_h=oldcfg->ctime_scolor_h;
//  195   cfg->ctime_ct_h=oldcfg->ctime_ct_h;
//  196   memcpy(cfg->ctime_mask_h, oldcfg->ctime_mask_h,49*2);
        MOV      R2,#+98
        STR      R0,[R7, #+912]
        LDR      R0,[R6, #+1912]
        STR      R0,[R7, #+960]
        LDR      R0,[R6, #+1960]
        STR      R0,[R7, #+1152]
        MOV      R0,#+144
        ORR      R0,R0,#0x3A00
        ADD      R1,R0,R4
        ADD      R0,R0,#+3024
        ADD      R0,R0,R5
        SWI      +275
//  197   cfg->ftime_show_h=oldcfg->ftime_show_h;
        LDR      R0,[R6, #+2336]
//  198   cfg->ftime_font_h=oldcfg->ftime_font_h;
//  199   cfg->ftime_rc_h=oldcfg->ftime_rc_h;
        MOV      R1,#+216
        STR      R0,[R7, #+1528]
        LDR      R0,[R6, #+2384]
        ORR      R1,R1,#0x3B00
        STR      R0,[R7, #+1576]
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+168
        ORR      R0,R0,#0x4700
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//  200   cfg->ftime_color_h=oldcfg->ftime_color_h;
        LDR      R0,[R6, #+2484]
//  201   cfg->ftime_scolor_h=oldcfg->ftime_scolor_h;
//  202   cfg->ftime_ct_h=oldcfg->ftime_ct_h;
//  203   memcpy(cfg->ftime_mask_h, oldcfg->ftime_mask_h,49*2);
        MOV      R2,#+98
        STR      R0,[R7, #+1676]
        LDR      R0,[R6, #+2532]
        STR      R0,[R7, #+1724]
        LDR      R0,[R6, #+2580]
        STR      R0,[R7, #+1916]
        MOV      R0,#+252
        ORR      R0,R0,#0x3C00
        ADD      R1,R0,R4
        ADD      R0,R0,#+3168
        ADD      R0,R0,R5
        SWI      +275
//  204   cfg->ltime_show_h=oldcfg->ltime_show_h;
        LDR      R0,[R6, #+2956]
//  205   cfg->ltime_font_h=oldcfg->ltime_font_h;
//  206   cfg->ltime_rc_h=oldcfg->ltime_rc_h;
        MOV      R1,#+68
        STR      R0,[R7, #+2292]
        LDR      R0,[R6, #+3004]
        ORR      R1,R1,#0x3E00
        STR      R0,[R7, #+2340]
        MOV      R0,#+164
        ORR      R0,R0,#0x4A00
        ADD      R0,R0,R5
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//  207   cfg->ltime_color_h=oldcfg->ltime_color_h;
        LDR      R0,[R6, #+3104]
//  208   cfg->ltime_scolor_h=oldcfg->ltime_scolor_h;
//  209   cfg->ltime_ct_h=oldcfg->ltime_ct_h;
//  210   memcpy(cfg->ltime_mask_h, oldcfg->ltime_mask_h,49*2);
        MOV      R2,#+98
        STR      R0,[R7, #+2440]
        LDR      R0,[R6, #+3152]
        STR      R0,[R7, #+2488]
        LDR      R0,[R6, #+3200]
        STR      R0,[R7, #+2680]
        MOV      R0,#+104
        ORR      R0,R0,#0x3F00
        ADD      R1,R0,R4
        ADD      R0,R0,#+3312
        ADD      R0,R0,R5
        SWI      +275
//  211   cfg->bitrate_show_h=oldcfg->bitrate_show_h;
        LDR      R0,[R6, #+3576]
//  212   cfg->bitrate_font_h=oldcfg->bitrate_font_h;
//  213   cfg->bitrate_rc_h=oldcfg->bitrate_rc_h;
        MOV      R1,#+176
        STR      R0,[R7, #+3056]
        LDR      R0,[R6, #+3624]
        ORR      R1,R1,#0x4000
        STR      R0,[R7, #+3104]
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+160
        ORR      R0,R0,#0x4D00
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//  214   cfg->bitrate_color_h=oldcfg->bitrate_color_h;
        LDR      R0,[R6, #+3724]
//  215   cfg->bitrate_scolor_h=oldcfg->bitrate_scolor_h;
//  216   cfg->bitrate_ct_h=oldcfg->bitrate_ct_h;
//  217   memcpy(cfg->bitrate_mask_h, oldcfg->bitrate_mask_h,49*2);
        MOV      R2,#+98
        STR      R0,[R7, #+3204]
        LDR      R0,[R6, #+3772]
        STR      R0,[R7, #+3252]
        LDR      R0,[R6, #+3820]
        STR      R0,[R7, #+3444]
        MOV      R0,#+212
        ORR      R0,R0,#0x4100
        ADD      R1,R0,R4
        ADD      R0,R0,#+3456
        ADD      R0,R0,R5
        SWI      +275
//  218   memcpy(cfg->bitrate_vbr_h, oldcfg->bitrate_vbr_h,49*2);
        MOV      R2,#+98
        MOV      R0,#+100
        ORR      R0,R0,#0x4200
        ADD      R1,R0,R4
        ORR      R0,R0,#0xD80
        ADD      R0,R0,R5
        SWI      +275
        MOV      R0,#+76
        ORR      R0,R0,#0x4300
        ADD      R6,R0,R4
        LDR      R0,[R6, #+0]
//  219   cfg->freq_show_h=oldcfg->freq_show_h;
//  220   cfg->freq_font_h=oldcfg->freq_font_h;
//  221   cfg->freq_rc_h=oldcfg->freq_rc_h;
        MOV      R1,#+172
        STR      R0,[R7, #+3964]
        LDR      R0,[R6, #+48]
        ORR      R1,R1,#0x4300
        STR      R0,[R7, #+4012]
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+44
        ORR      R0,R0,#0x5100
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
        MOV      R0,#+96
        ORR      R0,R0,#0x5100
        ADD      R7,R0,R5
        LDR      R0,[R6, #+148]
//  222   cfg->freq_color_h=oldcfg->freq_color_h;
//  223   cfg->freq_scolor_h=oldcfg->freq_scolor_h;
//  224   cfg->freq_ct_h=oldcfg->freq_ct_h;
//  225   memcpy(cfg->freq_mask_h, oldcfg->freq_mask_h,49*2);
        MOV      R2,#+98
        STR      R0,[R7, #+0]
        LDR      R0,[R6, #+196]
        STR      R0,[R7, #+48]
        LDR      R0,[R6, #+244]
        STR      R0,[R7, #+240]
        MOV      R0,#+208
        ORR      R0,R0,#0x4400
        ADD      R1,R0,R4
        ADD      R0,R0,#+3600
        ADD      R0,R0,R5
        SWI      +275
//  226   cfg->ch_show_h=oldcfg->ch_show_h;
        LDR      R0,[R6, #+620]
//  227   cfg->ch_font_h=oldcfg->ch_font_h;
//  228   cfg->ch_rc_h=oldcfg->ch_rc_h;
        MOV      R1,#+24
        STR      R0,[R7, #+616]
        LDR      R0,[R6, #+668]
        ORR      R1,R1,#0x4600
        STR      R0,[R7, #+664]
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+40
        ORR      R0,R0,#0x5400
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  229   cfg->ch_color_h=oldcfg->ch_color_h;
//  230   cfg->ch_scolor_h=oldcfg->ch_scolor_h;
//  231   cfg->ch_ct_h=oldcfg->ch_ct_h;
//  232   cfg->ProgressBar_Show_h=oldcfg->ProgressBar_Show_h;
//  233   cfg->pbrect_h=oldcfg->pbrect_h;
        MOV      R1,#+196
        ORR      R1,R1,#0x4700
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+768]
        ADD      R1,R1,R4
        STR      R0,[R7, #+764]
        LDR      R0,[R6, #+816]
        STR      R0,[R7, #+812]
        LDR      R0,[R6, #+864]
        STR      R0,[R7, #+1004]
        LDR      R0,[R6, #+1096]
        STR      R0,[R7, #+1236]
        MOV      R0,#+100
        ORR      R0,R0,#0x5600
        ADD      R0,R0,R5
        LDRH     R2,[R1, #0]
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  234   cfg->ProgressBar_cColor_h=oldcfg->ProgressBar_cColor_h;
//  235   cfg->ProgressBar_oColor_h=oldcfg->ProgressBar_oColor_h;
//  236   cfg->ProgressBar_bColor_h=oldcfg->ProgressBar_bColor_h;
//  237   cfg->ProgressBar_highlight_h=oldcfg->ProgressBar_highlight_h;
//  238   cfg->cover_show_h=oldcfg->cover_show_h;
//  239   cfg->cover_rect_h=oldcfg->cover_rect_h;
        MOV      R1,#+64
        ORR      R1,R1,#0x4900
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+1196]
        ADD      R1,R1,R4
        STR      R0,[R7, #+1336]
        LDR      R0,[R6, #+1244]
        STR      R0,[R7, #+1384]
        LDR      R0,[R6, #+1292]
        STR      R0,[R7, #+1432]
        LDR      R0,[R6, #+1340]
        STR      R0,[R7, #+1480]
        LDR      R0,[R6, #+1476]
        STR      R0,[R7, #+1616]
        LDRH     R2,[R1, #0]
        MOV      R0,#+224
        ORR      R0,R0,#0x5700
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  240   cfg->ticn_show_h=oldcfg->ticn_show_h;
//  241   cfg->ticn_rect_h=oldcfg->ticn_rect_h;
        MOV      R1,#+40
        ORR      R1,R1,#0x4A00
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+1708]
        ADD      R1,R1,R4
        STR      R0,[R7, #+1848]
        LDRH     R2,[R1, #0]
        MOV      R0,#+200
        ORR      R0,R0,#0x5800
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  242   cfg->alicn_show_h=oldcfg->alicn_show_h;
//  243   cfg->alicn_rect_h=oldcfg->alicn_rect_h;
        MOV      R1,#+228
        ORR      R1,R1,#0x4A00
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+1896]
        ADD      R1,R1,R4
        STR      R0,[R7, #+2036]
        LDRH     R2,[R1, #0]
        MOV      R0,#+132
        ORR      R0,R0,#0x5900
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  244   cfg->aricn_show_h=oldcfg->aricn_show_h;
//  245   cfg->aricn_rect_h=oldcfg->aricn_rect_h;
        MOV      R1,#+160
        ORR      R1,R1,#0x4B00
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+2084]
        ADD      R1,R1,R4
        STR      R0,[R7, #+2224]
        LDRH     R2,[R1, #0]
        MOV      R0,#+64
        ORR      R0,R0,#0x5A00
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  246   cfg->pls_show_h=oldcfg->pls_show_h;
//  247   cfg->pls_rect_h=oldcfg->pls_rect_h;
        MOV      R1,#+92
        ORR      R1,R1,#0x4C00
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+2272]
        ADD      R1,R1,R4
        STR      R0,[R7, #+2412]
        LDRH     R2,[R1, #0]
        MOV      R0,#+252
        ORR      R0,R0,#0x5A00
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  248   cfg->eq_preset_show_h=oldcfg->eq_preset_show_h;
//  249   cfg->eq_preset_rect_h=oldcfg->eq_preset_rect_h;
        MOV      R1,#+24
        ORR      R1,R1,#0x4D00
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+2460]
        ADD      R1,R1,R4
        STR      R0,[R7, #+2600]
        LDRH     R2,[R1, #0]
        MOV      R0,#+184
        ORR      R0,R0,#0x5B00
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  250   cfg->shuffle_show_h=oldcfg->shuffle_show_h;
//  251   cfg->shuffle_rect_h=oldcfg->shuffle_rect_h;
        MOV      R1,#+212
        ORR      R1,R1,#0x4D00
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+2648]
        ADD      R1,R1,R4
        STR      R0,[R7, #+2788]
        LDRH     R2,[R1, #0]
        MOV      R0,#+116
        ORR      R0,R0,#0x5C00
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//  252   cfg->repeat_show_h=oldcfg->repeat_show_h;
        LDR      R0,[R6, #+2836]
//  253   cfg->repeat_rect_h=oldcfg->repeat_rect_h;
        MOV      R1,#+144
        STR      R0,[R7, #+2976]
        ORR      R1,R1,#0x4E00
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+48
        ORR      R0,R0,#0x5D00
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  254   cfg->stereo_show_h=oldcfg->stereo_show_h;
//  255   cfg->stereo_rect_h=oldcfg->stereo_rect_h;
        MOV      R1,#+76
        ORR      R1,R1,#0x4F00
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+3024]
        ADD      R1,R1,R4
        STR      R0,[R7, #+3164]
        LDRH     R2,[R1, #0]
        MOV      R0,#+236
        ORR      R0,R0,#0x5D00
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  256   cfg->navigimg_show_h=oldcfg->navigimg_show_h;
//  257   cfg->navigimg_rect_h=oldcfg->navigimg_rect_h;
        MOV      R1,#+96
        ORR      R1,R1,#0x5000
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+3300]
        ADD      R1,R1,R4
        STR      R0,[R7, #+3440]
        LDRH     R2,[R1, #0]
        ADD      R0,R5,#+24320
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  258   cfg->leftimg_show_h=oldcfg->leftimg_show_h;
//  259   cfg->leftimg_rect_h=oldcfg->leftimg_rect_h;
        MOV      R1,#+28
        ORR      R1,R1,#0x5100
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+3488]
        ADD      R1,R1,R4
        STR      R0,[R7, #+3628]
        LDRH     R2,[R1, #0]
        MOV      R0,#+188
        ORR      R0,R0,#0x5F00
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  260   cfg->rightimg_show_h=oldcfg->rightimg_show_h;
//  261   cfg->rightimg_rect_h=oldcfg->rightimg_rect_h;
        MOV      R1,#+216
        ORR      R1,R1,#0x5100
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+3676]
        ADD      R1,R1,R4
        STR      R0,[R7, #+3816]
        LDRH     R2,[R1, #0]
        MOV      R0,#+120
        ORR      R0,R0,#0x6000
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
//  262   cfg->centerimg_show_h=oldcfg->centerimg_show_h;
//  263   cfg->centerimg_rect_h=oldcfg->centerimg_rect_h;
        MOV      R1,#+148
        ORR      R1,R1,#0x5200
        STRH     R2,[R0, #+6]
        LDR      R0,[R6, #+3864]
        ADD      R1,R1,R4
        STR      R0,[R7, #+4004]
        LDRH     R2,[R1, #0]
        MOV      R0,#+52
        ORR      R0,R0,#0x6100
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
        LDR      R1,[R6, #+4052]
        MOV      R0,#+192
        ORR      R0,R0,#0x6100
        ADD      R0,R0,R5
        STR      R1,[R0, #+0]
//  264   cfg->upimg_show_h=oldcfg->upimg_show_h;
//  265   cfg->upimg_rect_h=oldcfg->upimg_rect_h;
        MOV      R2,#+80
        ORR      R2,R2,#0x5300
        ADD      R2,R2,R4
        LDRH     R3,[R2, #0]
        MOV      R1,#+240
        ORR      R1,R1,#0x6100
        ADD      R1,R1,R5
        STRH     R3,[R1, #+0]
        LDRH     R3,[R2, #+2]
        STRH     R3,[R1, #+2]
        LDRH     R3,[R2, #+4]
        STRH     R3,[R1, #+4]
        LDRH     R3,[R2, #+6]
        STRH     R3,[R1, #+6]
//  266   cfg->downimg_show_h=oldcfg->downimg_show_h;
        MOV      R1,#+220
        ORR      R1,R1,#0x5300
        LDR      R1,[R1, +R4]
        STR      R1,[R0, #+188]
//  267   cfg->downimg_rect_h=oldcfg->downimg_rect_h;
        MOV      R1,#+12
        ORR      R1,R1,#0x5400
        ADD      R1,R1,R4
        LDRH     R2,[R1, #0]
        MOV      R0,#+172
        ORR      R0,R0,#0x6200
        ADD      R0,R0,R5
        STRH     R2,[R0, #+0]
        LDRH     R2,[R1, #+2]
        STRH     R2,[R0, #+2]
        LDRH     R2,[R1, #+4]
        STRH     R2,[R0, #+4]
        LDRH     R2,[R1, #+6]
        STRH     R2,[R0, #+6]
//  268   return 1;
        MOV      R0,#+1
        POP      {R4-R7,PC}       ;; return
        CFI EndBlock cfiBlock1
//  269 };

        END
// 
// 5 144 bytes in segment CODE
// 
// 5 140 bytes of CODE memory (+ 4 bytes shared)
//
//Errors: none
//Warnings: none
