//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  23:11:15 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\config_data.c                                     /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\config_data.c -D NDEBUG -D ENG -lC                /
//                       Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_ENG\List\ -lA Z:\home\perk11\www\perk11.i /
//                       nfo\svn\SE\WalkmanDisplay\Release_ENG\List\ -o      /
//                       Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_ENG\Obj\ -s9 --cpu_mode arm --endian      /
//                       little --cpu ARM926EJ-S --stack_align 4             /
//                       --interwork -e --enable_multibytes --fpu None       /
//                       --eec++ --dlib_config Z:\home\perk11\IAR2\arm\LIB\d /
//                       l5tpainl8n.h --segment data=CONFIG -I               /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_ENG\List\config_data.s79                  /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME config_data

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        PUBLIC cfg_orient
        PUBLIC hidesoftkeys
        PUBLIC img_priority
        PUBLIC key_rotation
        PUBLIC key_rotation_mode
        PUBLIC phone
        PUBLIC restr_CoverAlbum
        PUBLIC skin_cfg
        PUBLIC use_accel
        PUBLIC use_albumpng
        PUBLIC use_pauseicn
        PUBLIC use_vbr
// Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDisplay\config_data.c
//    1 #include "..\deleaker\mem2.h"
//    2 #include "..\include\cfg_items.h"
//    3 #include "header\config_data.h"
//    4 #include "..\include\Colors.h"
//    5 
//    6 #pragma diag_suppress=Pe177
//    7 
//    8 #include "header\eng.h"
//    9 #include "header\rus.h"
//   10 
//   11 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 11
        DC8 "Use pause icon"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//   12 __root const CFG_HDR cfghdr319={CFG_CHECKBOX,lng_chkUsePauseIcon,0,0};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   13 __root const int use_pauseicn=true;
use_pauseicn:
        DATA
        DC32 1
//   14 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 17
        DC8 "Rotation key"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 3
//   15 __root const CFG_HDR cfghdr320={CFG_KEYCODE,lng_keyRotation,0,3};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   16 __root const int key_rotation=0;
key_rotation:
        DATA
        DC32 0

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   17 __root const int key_rotation_mode=0;
key_rotation_mode:
        DATA
        DC32 0
//   18 
//   19 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 5
        DC8 "Use accelerometer"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 3
//   20 __root const CFG_HDR cfghdr321_={CFG_CBOX,lng_chkAccelerometer,0,3};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   21 __root const int use_accel=0;
use_accel:
        DATA
        DC32 0

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC8 "On"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "Turn off after pressing key"
        DC8 0, 0, 0, 0
        DC8 "Off"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//   22 __root const CFG_CBOX_ITEM cfgcbox324_[3]={lng_chkAccelOn,lng_chkAccelRotate,lng_chkAccelOff};
//   23 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 11
        DC8 "Use album/cover.png"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//   24 __root const CFG_HDR cfghdr322={CFG_CHECKBOX,lng_chkAlbumPng,0,0};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   25 __root const int use_albumpng=true;
use_albumpng:
        DATA
        DC32 1
//   26 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 5
        DC8 "Image priority"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 3
//   27 __root const CFG_HDR cfghdr323={CFG_CBOX,lng_chkImagePriority,0,3};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   28 __root const int img_priority=0;
img_priority:
        DATA
        DC32 0

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC8 "First internal, then external"
        DC8 0, 0
        DC8 "Only external"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "Only internal"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//   29 __root const CFG_CBOX_ITEM cfgcbox324[3]={lng_chkFirstInternal,lng_chkOnlyExternal,lng_chkOnlyInternal};
//   30 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 11
        DC8 "Use VBR"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//   31 __root const CFG_HDR cfghdr325={CFG_CHECKBOX,lng_chkUseVbr,0,0};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   32 __root const int use_vbr=true;
use_vbr:
        DATA
        DC32 1
//   33 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 5
        DC8 "Use skin bcfg"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 2
//   34 __root const CFG_HDR cfghdr326={CFG_CBOX,lng_chkUnicalSkinData,0,2};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   35 __root const int skin_cfg=0;
skin_cfg:
        DATA
        DC32 0

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC8 "Skin and common data"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "Only common data"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//   36 __root const CFG_CBOX_ITEM cfgcbox3277[2]={lng_chkSkinAndCommonData,lng_chkOnlyCommonData};
//   37 
//   38 
//   39 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 9
        DC8 "Restrictions"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 1, 0
//   40 __root const CFG_HDR confighdr_1={CFG_LEVEL,lng_lvlRestrictions,1,0};
//   41 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 11
        DC8 "No cover->No album name"
        DC8 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//   42 __root const CFG_HDR cfghdr__1={CFG_CHECKBOX,lng_chkRestriction_Cover,0,0};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   43 __root const int restr_CoverAlbum=false;
restr_CoverAlbum:
        DATA
        DC32 0
//   44 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 9
        DC8 ""
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//   45 __root const CFG_HDR confighdr_1_close={CFG_LEVEL,"",0,0};
//   46 
//   47 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 5
        DC8 "Phone"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 3
//   48 __root const CFG_HDR cfghdr3261={CFG_CBOX,lng_chkPhone,0,3};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   49 __root const int phone=0;
phone:
        DATA
        DC32 0

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC8 "Autodetect"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "W580/W850"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "W610/W660/W880"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//   50 __root const CFG_CBOX_ITEM cfgcbox32771[3]={lng_chkNotSelected,"W580/W850","W610/W660/W880"};
//   51 
//   52 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 5
        DC8 "Hide softkeys"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 4
//   53 __root const CFG_HDR cfghdr3262={CFG_CBOX,lng_chkHideSoftkeys,0,4};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   54 __root const int hidesoftkeys=0;
hidesoftkeys:
        DATA
        DC32 0

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC8 "Don't hide"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "In horizontal mode"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "In vertical mode"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "Everywhere"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
//   55 __root const CFG_CBOX_ITEM cfgcbox327712[4]={lng_chkNo,lng_chkInHorizontalMode,lng_chkInVerticalMode,lng_chkEverywhere};
//   56 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 5
        DC8 "Default orientation"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 2
//   57 __root const CFG_HDR cfghdr___1={CFG_CBOX,lng_chkInitOrientation,0,2};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   58 __root const int cfg_orient=false;
cfg_orient:
        DATA
        DC32 0

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC8 "Vertical"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "Horizontal"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

        END
//   59 __root const CFG_CBOX_ITEM cfgcbox327711[2]={lng_chkVertical, lng_chkHorizontal};
// 
// 1 164 bytes in segment CONFIG_C
// 
// 1 164 bytes of CONST memory
//
//Errors: none
//Warnings: none
