//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  23:11:32 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\images.cpp                                        /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\images.cpp -D NDEBUG -D ENG -D OLDFUNCTIONS -lC   /
//                       Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_ENG\List\ -lA Z:\home\perk11\www\perk11.i /
//                       nfo\svn\SE\WalkmanDisplay\Release_ENG\List\ -o      /
//                       Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_ENG\Obj\ -s9 --cpu_mode arm --endian      /
//                       little --cpu ARM926EJ-S --stack_align 4             /
//                       --interwork -e --enable_multibytes --fpu None       /
//                       --eec++ --dlib_config Z:\home\perk11\IAR2\arm\LIB\d /
//                       l5tpainl8n.h -I Z:\home\perk11\IAR2\arm\INC\        /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDispla /
//                       y\Release_ENG\List\images.s79                       /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME images

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBWEAK `?*?DATA_ID`
??DataTable0 EQU 0
        PUBLIC ??GetIconID
        FUNCTION ??GetIconID,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??GetIconID??rT
        MULTWEAK ??checkfile_??rA
        PUBLIC ??deinit_resources
        FUNCTION ??deinit_resources,0203H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??deinit_resources??rT
        PUBLIC ??init_resources
        FUNCTION ??init_resources,0203H
        LOCFRAME CSTACK, 176, STACK
        MULTWEAK ??init_resources??rT
        PUBWEAK ?init?tab?DATA_I
        PUBLIC cover_h_
        PUBLIC cover_v_
        PUBLIC imageID
        PUBLIC images
        PUBLIC images_fnames
        PUBLIC images_offsets
        PUBLIC main_icons
        PUBLIC main_icons_fnames
        PUBLIC media_fnames
        PUBLIC media_images
        PUBLIC media_names
        PUBLIC navigimg
        PUBLIC pauseicn
        PUBLIC playicn
        PUBLIC playnow_h
        PUBLIC playview_h
        PUBLIC presets
        PUBLIC presets_names
        PUBLIC stopicn
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        


??GetIconID??rT     SYMBOL "??rT", ??GetIconID
??checkfile_??rA    SYMBOL "??rA", ??checkfile_

??deinit_resources??rT SYMBOL "??rT", ??deinit_resources

??init_resources??rT SYMBOL "??rT", ??init_resources

        EXTERN ??checkfile_
        FUNCTION ??checkfile_,0202H
        EXTERN img_priority


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??GetIconID??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??GetIconID
// Z:\home\perk11\www\perk11.info\svn\SE\WalkmanDisplay\images.cpp
//    1 #include "..\deleaker\mem2.h"
//    2 #include "..\include\Lib_Clara.h"
//    3 #include "..\include\Dir.h"
//    4 #include "header\wdisplay.h"
//    5 #include "header\cl.h"
//    6 #include "header\config_data.h"
//    7 #include "header\images.h"
//    8 
//    9 wchar_t playnow_h=NOIMAGE;
//   10 wchar_t playview_h=NOIMAGE;
//   11 
//   12 wchar_t imageID=NOIMAGE;
//   13 wchar_t cover_h_=NOIMAGE;
//   14 wchar_t cover_v_=NOIMAGE;
//   15 
//   16 wchar_t playicn=NOIMAGE;
//   17 wchar_t stopicn=NOIMAGE;
//   18 wchar_t pauseicn=NOIMAGE;
//   19 
//   20 
//   21 wchar_t images[]={NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE}; //left,right,left2,right2,play,stop,up,down
//   22 wchar_t *images_fnames[]={
//   23   L"Prev_nav_icn.png",
//   24   L"Next_nav_icn.png",
//   25   L"Prev2_nav_icn.png",
//   26   L"Next2_nav_icn.png",
//   27   L"Play_nav_icn.png",
//   28   L"Stop_nav_icn.png",
//   29   L"Up_nav_icn.png",
//   30   L"Down_nav_icn.png"
//   31 };
//   32 int images_offsets[]={
//   33   -2,
//   34   -3,
//   35   -4,
//   36   -6,
//   37   -5,
//   38   -1,
//   39   -7,
//   40   -10
//   41 };
//   42 wchar_t presets[]={NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE, NOIMAGE};
//   43 wchar_t navigimg=NOIMAGE;
//   44 wchar_t *presets_names[]={
//   45   L"MP_EQ_NORMAL_ICN",
//   46   L"MP_EQ_BASS_ICN",
//   47   L"MP_EQ_MEGABASS_ICN",
//   48   L"MP_EQ_VOICE_ICN",
//   49   L"MP_EQ_TREBLEBOOST_ICN",
//   50   L"MP_EQ_NORMAL_ICN",
//   51   L"MP_EQ_MANUAL_ICN"
//   52 };
//   53 
//   54 wchar_t media_images[]={NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE};
//   55 wchar_t *media_names[]={
//   56   L"MEDIAPLAYER_FAST_FORWARD_ICN",
//   57   L"MEDIAPLAYER_REWIND_ICN",
//   58   L"MEDIAPLAYER_MODE_LOOP_ICN",
//   59   L"EMPTY_ICN",
//   60   L"MEDIAPLAYER_MODE_RANDOM_ICN",
//   61   L"EMPTY_ICN",
//   62   L"EMPTY_ICN",
//   63   L"EMPTY_ICN"
//   64 };
//   65 
//   66 wchar_t *media_fnames[]={
//   67   L"Forward_icn.png",
//   68   L"Rewind_icn.png",
//   69   L"Loop_mode_icn.png",
//   70   L"StereoWidening_mode_off_icn.png",
//   71   L"Random_mode_icn.png",
//   72   L"Random_mode_off_icn.png",
//   73   L"StereoWidening_mode_icn.png",
//   74   L"Loop_mode_off_icn.png"
//   75 };
//   76 
//   77 inline IMAGEID RegisterImage (wchar_t  * path, wchar_t * fname)
//   78 { 
//   79   FSTAT fst;
//   80   if (fstat(path,fname,&fst)==0)
//   81   {
//   82     IMAGEID ret;
//   83     ImageID_Get(path, fname,&ret);
//   84     
//   85     return ret;
//   86   }
//   87   else
//   88   {
//   89     return NOIMAGE;
//   90   }
//   91 }; 
//   92 
//   93 #define IDFREE(a) if (a!=NOIMAGE && a!=0) {ImageID_Free(a);} a=NOIMAGE
//   94 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??GetIconID
        ARM
//   95 int GetIconID(wchar_t *txt)
//   96 {
??GetIconID:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SUB      SP,SP,#+4
        CFI CFA R13+8
//   97   int id=NOIMAGE;
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        STR      R2,[SP, #+0]
//   98   iconidname2id(txt,0xFFFFFFFF,&id);
        MOV      R2,SP
        MVN      R1,#+0
        SWI      +646
//   99   return id;
        LDR      R0,[SP, #+0]
        POP      {R1,PC}          ;; return
        CFI EndBlock cfiBlock1
//  100 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??init_resources??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??init_resources

        RSEG DATA_I:DATA:SORT:NOROOT(2)
playnow_h:
        DS8 2
        REQUIRE `?<Initializer for playnow_h>`
playview_h:
        DS8 2
        REQUIRE `?<Initializer for playview_h>`
cover_h_:
        DS8 2
        REQUIRE `?<Initializer for cover_h_>`
cover_v_:
        DS8 2
        REQUIRE `?<Initializer for cover_v_>`
playicn:
        DS8 2
        REQUIRE `?<Initializer for playicn>`
stopicn:
        DS8 2
        REQUIRE `?<Initializer for stopicn>`
pauseicn:
        DS8 2
        REQUIRE `?<Initializer for pauseicn>`
navigimg:
        DS8 2
        REQUIRE `?<Initializer for navigimg>`
images:
        DS8 16
        REQUIRE `?<Initializer for images>`
presets:
        DS8 16
        REQUIRE `?<Initializer for presets>`
media_images:
        DS8 16
        REQUIRE `?<Initializer for media_images>`
//  101 
//  102 wchar_t main_icons[]={NOIMAGE,NOIMAGE,NOIMAGE};
main_icons:
        DS8 8
        REQUIRE `?<Initializer for main_icons>`
images_fnames:
        DS8 32
        REQUIRE `?<Initializer for images_fnames>`
images_offsets:
        DS8 32
        REQUIRE `?<Initializer for images_offsets>`
presets_names:
        DS8 28
        REQUIRE `?<Initializer for presets_names>`
media_names:
        DS8 32
        REQUIRE `?<Initializer for media_names>`
media_fnames:
        DS8 32
        REQUIRE `?<Initializer for media_fnames>`
//  103 wchar_t *main_icons_fnames[]={
main_icons_fnames:
        DS8 12
        REQUIRE `?<Initializer for main_icons_fnames>`

        RSEG DATA_I:DATA:SORT:NOROOT(1)
imageID:
        DS8 2
        REQUIRE `?<Initializer for imageID>`
//  104   L"Artist_icn.png",
//  105   L"Album_icn.png",
//  106   L"Title_icn.png"
//  107 };
//  108 
//  109 #pragma optimize = s 9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??init_resources
        ARM
//  110 void init_resources(wchar_t *path)
//  111 {
??init_resources:
        PUSH     {R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+36
//  112 #define REGISTER(__iconname__,__internalname__,__filename__) if (img_priority==0 || img_priority==2) {__iconname__=GetIconID(__internalname__);} if (img_priority<2) {    wchar_t img=RegisterImage(checkfile_(__filename__,path),__filename__); if (img!=NOIMAGE) { __iconname__=img; }}
//  113   
//  114   IDFREE(playview_h);
        LDR      R5,??DataTable1  ;; playnow_h
        SUB      SP,SP,#+140
        CFI CFA R13+176
        MOV      R4,R0
        LDRH     R0,[R5, #+2]
        MOV      R6,#+255
        ORR      R6,R6,#0xFF00
        CMP      R0,R6
        CMPNE    R0,#+0
        BEQ      ??init_resources_1
        SWI      +717
//  115   REGISTER(playview_h,L"EMPTY_ICN",L"PlayView_Background_h.png");
??init_resources_1:
        LDR      R0,??init_resources_2  ;; img_priority
        LDR      R8,??init_resources_2+0x4  ;; `?<Constant L"\\x50\\x6c\\x61\\x79\\x56\\x69\\x65\\x77\\`
        LDR      R7,[R0, #+0]
        STRH     R6,[R5, #+2]
        CMP      R7,#+0
        CMPNE    R7,#+2
        BNE      ??init_resources_3
        ADD      R0,R8,#+412
        BL       ??GetIconID
        STRH     R0,[R5, #+2]
??init_resources_3:
        CMP      R7,#+2
        BGE      ??init_resources_4
        MOV      R1,R4
        MOV      R0,R8
        _BLF     ??checkfile_,??checkfile_??rA
        MOV      R9,R0
        ADD      R2,SP,#+8
        MOV      R1,R8
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_4
        MOV      R2,SP
        MOV      R1,R8
        MOV      R0,R9
        SWI      +716
        LDRH     R0,[SP, #+0]
        CMP      R0,R6
        STRHNE   R0,[R5, #+2]
//  116   
//  117   IDFREE(playnow_h);
??init_resources_4:
        LDRH     R0,[R5, #+0]
        CMP      R0,R6
        CMPNE    R0,#+0
        BEQ      ??init_resources_5
        SWI      +717
??init_resources_5:
        STRH     R6,[R5, #+0]
//  118   REGISTER(playnow_h,L"EMPTY_ICN",L"PlayNow_Background_h.png");
        CMP      R7,#+0
        CMPNE    R7,#+2
        BNE      ??init_resources_6
        ADD      R0,R8,#+412
        BL       ??GetIconID
        STRH     R0,[R5, #+0]
??init_resources_6:
        CMP      R7,#+2
        BGE      ??init_resources_7
        MOV      R1,R4
        ADD      R0,R8,#+52
        _BLF     ??checkfile_,??checkfile_??rA
        MOV      R9,R0
        ADD      R2,SP,#+8
        ADD      R1,R8,#+52
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_7
        MOV      R2,SP
        ADD      R1,R8,#+52
        MOV      R0,R9
        SWI      +716
        LDRH     R0,[SP, #+0]
        CMP      R0,R6
        STRHNE   R0,[R5, #+0]
//  119   
//  120   IDFREE(playicn);
??init_resources_7:
        LDRH     R0,[R5, #+8]
        CMP      R0,R6
        CMPNE    R0,#+0
        BEQ      ??init_resources_8
        SWI      +717
??init_resources_8:
        STRH     R6,[R5, #+8]
//  121   REGISTER(playicn,L"MEDIAPLAYER_PLAY_ICN",L"Play_icn.png");
        CMP      R7,#+0
        CMPNE    R7,#+2
        BNE      ??init_resources_9
        ADD      R0,R8,#+104
        BL       ??GetIconID
        STRH     R0,[R5, #+8]
??init_resources_9:
        CMP      R7,#+2
        BGE      ??init_resources_10
        MOV      R9,#+384
        MOV      R1,R4
        ADD      R0,R9,R8
        _BLF     ??checkfile_,??checkfile_??rA
        MOV      R10,R0
        ADD      R2,SP,#+8
        ADD      R1,R9,R8
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_10
        MOV      R2,SP
        ADD      R1,R9,R8
        MOV      R0,R10
        SWI      +716
        LDRH     R0,[SP, #+0]
        CMP      R0,R6
        STRHNE   R0,[R5, #+8]
//  122     
//  123   IDFREE(pauseicn);
??init_resources_10:
        LDRH     R0,[R5, #+12]
        CMP      R0,R6
        CMPNE    R0,#+0
        BEQ      ??init_resources_11
        SWI      +717
??init_resources_11:
        STRH     R6,[R5, #+12]
//  124   REGISTER(pauseicn,L"MEDIAPLAYER_STOP_ICN",L"Pause_icn.png");
        CMP      R7,#+0
        CMPNE    R7,#+2
        BNE      ??init_resources_12
        ADD      R0,R8,#+148
        BL       ??GetIconID
        STRH     R0,[R5, #+12]
??init_resources_12:
        CMP      R7,#+2
        BGE      ??init_resources_13
        MOV      R1,R4
        ADD      R0,R8,#+192
        _BLF     ??checkfile_,??checkfile_??rA
        MOV      R9,R0
        ADD      R2,SP,#+8
        ADD      R1,R8,#+192
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_13
        MOV      R2,SP
        ADD      R1,R8,#+192
        MOV      R0,R9
        SWI      +716
        LDRH     R0,[SP, #+0]
        CMP      R0,R6
        BNE      ??init_resources_14
//  125   if (pauseicn==NOIMAGE)
??init_resources_13:
        LDRH     R0,[R5, #+12]
        CMP      R0,R6
        BNE      ??init_resources_15
//  126   {
//  127     REGISTER(pauseicn,L"MEDIAPLAYER_STOP_ICN",L"Stop_icn.png");
        CMP      R7,#+0
        CMPNE    R7,#+2
        BNE      ??init_resources_16
        ADD      R0,R8,#+148
        BL       ??GetIconID
        STRH     R0,[R5, #+12]
??init_resources_16:
        CMP      R7,#+2
        BGE      ??init_resources_15
        MOV      R1,R4
        ADD      R0,R8,#+220
        _BLF     ??checkfile_,??checkfile_??rA
        MOV      R9,R0
        ADD      R2,SP,#+8
        ADD      R1,R8,#+220
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_15
        MOV      R2,SP
        ADD      R1,R8,#+220
        MOV      R0,R9
        SWI      +716
        LDRH     R0,[SP, #+0]
        CMP      R0,R6
        BEQ      ??init_resources_15
??init_resources_14:
        STRH     R0,[R5, #+12]
//  128   }
//  129   
//  130   IDFREE(stopicn);
??init_resources_15:
        LDRH     R0,[R5, #+10]
        CMP      R0,R6
        CMPNE    R0,#+0
        BEQ      ??init_resources_17
        SWI      +717
??init_resources_17:
        STRH     R6,[R5, #+10]
//  131   REGISTER(stopicn,L"MEDIAPLAYER_STOP_ICN",L"Stop_icn.png");
        CMP      R7,#+0
        CMPNE    R7,#+2
        BNE      ??init_resources_18
        ADD      R0,R8,#+148
        BL       ??GetIconID
        STRH     R0,[R5, #+10]
??init_resources_18:
        CMP      R7,#+2
        BGE      ??init_resources_19
        MOV      R1,R4
        ADD      R0,R8,#+220
        _BLF     ??checkfile_,??checkfile_??rA
        MOV      R9,R0
        ADD      R2,SP,#+8
        ADD      R1,R8,#+220
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_20
        MOV      R2,SP
        ADD      R1,R8,#+220
        MOV      R0,R9
        SWI      +716
        LDRH     R0,[SP, #+0]
        CMP      R0,R6
        STRHNE   R0,[R5, #+10]
//  132   
//  133   if (img_priority<2)
//  134   {
//  135     for (int j=0;j<3;j++)
??init_resources_20:
        MOV      R9,#+0
//  136     {
//  137       wchar_t img=RegisterImage(checkfile_(main_icons_fnames[j],path),main_icons_fnames[j]);
??init_resources_21:
        ADD      R10,R5,R9, LSL #+2
        LDR      R0,[R10, #+228]
        MOV      R1,R4
        _BLF     ??checkfile_,??checkfile_??rA
        LDR      R10,[R10, #+228]
        MOV      R11,R0
        ADD      R2,SP,#+8
        MOV      R1,R10
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_22
        MOV      R2,SP
        MOV      R1,R10
        MOV      R0,R11
        SWI      +716
        LDRH     R0,[SP, #+0]
//  138       if (img!=NOIMAGE)
        CMP      R0,R6
//  139         main_icons[j]=img;
        ADDNE    R1,R5,R9, LSL #+1
        STRHNE   R0,[R1, #+64]
//  140     }
??init_resources_22:
        ADD      R9,R9,#+1
        CMP      R9,#+3
        BLT      ??init_resources_21
//  141     int imageID;
//  142     imageID=GetIconID(L"MP_EQ_BASS_ICN");
        ADD      R0,R8,#+352
        BL       ??GetIconID
        STR      R0,[SP, #+36]
//  143     for (int j=0;j<8;j++)
        MOV      R9,#+0
//  144     {
//  145       images[j]=imageID+images_offsets[j];
??init_resources_23:
        ADD      R1,R5,R9, LSL #+1
        STR      R1,[SP, #+4]
        ADD      R10,R5,R9, LSL #+2
        LDR      R2,[R10, #+104]
        MOV      R0,R1
        LDR      R1,[SP, #+36]
        ADD      R1,R2,R1
        STRH     R1,[R0, #+16]
//  146       wchar_t img=RegisterImage(checkfile_(images_fnames[j],path),images_fnames[j]);
        LDR      R0,[R10, #+72]
        MOV      R1,R4
        _BLF     ??checkfile_,??checkfile_??rA
        LDR      R10,[R10, #+72]
        MOV      R11,R0
        ADD      R2,SP,#+8
        MOV      R1,R10
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_24
        MOV      R2,SP
        MOV      R1,R10
        MOV      R0,R11
        SWI      +716
        LDRH     R0,[SP, #+0]
//  147       if (img!=NOIMAGE)
        CMP      R0,R6
//  148         images[j]=img;
        LDRNE    R1,[SP, #+4]
        STRHNE   R0,[R1, #+16]
//  149     }
??init_resources_24:
        ADD      R9,R9,#+1
        CMP      R9,#+8
        BLT      ??init_resources_23
//  150   }
//  151   
//  152   IDFREE(cover_h_);
??init_resources_19:
        LDRH     R0,[R5, #+4]
        CMP      R0,R6
        CMPNE    R0,#+0
        BEQ      ??init_resources_25
        SWI      +717
??init_resources_25:
        STRH     R6,[R5, #+4]
//  153   REGISTER(cover_h_,L"EMPTY_ICN",L"cover_h.png");
        CMP      R7,#+0
        CMPNE    R7,#+2
        BNE      ??init_resources_26
        ADD      R0,R8,#+412
        BL       ??GetIconID
        STRH     R0,[R5, #+4]
??init_resources_26:
        CMP      R7,#+2
        BGE      ??init_resources_27
        MOV      R1,R4
        ADD      R0,R8,#+248
        _BLF     ??checkfile_,??checkfile_??rA
        MOV      R9,R0
        ADD      R2,SP,#+8
        ADD      R1,R8,#+248
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_27
        MOV      R2,SP
        ADD      R1,R8,#+248
        MOV      R0,R9
        SWI      +716
        LDRH     R0,[SP, #+0]
        CMP      R0,R6
        STRHNE   R0,[R5, #+4]
//  154 
//  155   IDFREE(cover_v_);
??init_resources_27:
        LDRH     R0,[R5, #+6]
        CMP      R0,R6
        CMPNE    R0,#+0
        BEQ      ??init_resources_28
        SWI      +717
??init_resources_28:
        STRH     R6,[R5, #+6]
//  156 
//  157   REGISTER(cover_v_,L"EMPTY_ICN",L"cover_v.png");
        CMP      R7,#+0
        CMPNE    R7,#+2
        BNE      ??init_resources_29
        ADD      R0,R8,#+412
        BL       ??GetIconID
        STRH     R0,[R5, #+6]
??init_resources_29:
        CMP      R7,#+2
        BGE      ??init_resources_30
        MOV      R9,#+272
        MOV      R1,R4
        ADD      R0,R9,R8
        _BLF     ??checkfile_,??checkfile_??rA
        MOV      R10,R0
        ADD      R2,SP,#+8
        ADD      R1,R9,R8
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_30
        MOV      R2,SP
        ADD      R1,R9,R8
        MOV      R0,R10
        SWI      +716
        LDRH     R0,[SP, #+0]
        CMP      R0,R6
        STRHNE   R0,[R5, #+6]
//  158   
//  159   for (int j=0;j<7;j++)
??init_resources_30:
        MOV      R9,#+0
//  160   {
//  161     IDFREE(presets[j]);
??init_resources_31:
        ADD      R10,R5,R9, LSL #+1
        LDRH     R0,[R10, #+32]
        CMP      R0,R6
        CMPNE    R0,#+0
        BEQ      ??init_resources_32
        SWI      +717
??init_resources_32:
        STRH     R6,[R10, #+32]
//  162     wchar_t prt_name[50];
//  163     snwprintf(prt_name,49,L"eq_%02d.png",j);
        MOV      R3,R9
        ADD      R2,R8,#+296
        MOV      R1,#+49
        ADD      R0,SP,#+40
        SWI      +277
//  164     REGISTER(presets[j],presets_names[j],prt_name);
        CMP      R7,#+0
        CMPNE    R7,#+2
        BNE      ??init_resources_33
        ADD      R0,R5,R9, LSL #+2
        LDR      R0,[R0, #+136]
        BL       ??GetIconID
        STRH     R0,[R10, #+32]
??init_resources_33:
        CMP      R7,#+2
        BGE      ??init_resources_34
        MOV      R1,R4
        ADD      R0,SP,#+40
        _BLF     ??checkfile_,??checkfile_??rA
        MOV      R11,R0
        ADD      R2,SP,#+8
        ADD      R1,SP,#+40
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_34
        MOV      R2,SP
        ADD      R1,SP,#+40
        MOV      R0,R11
        SWI      +716
        LDRH     R0,[SP, #+0]
        CMP      R0,R6
        STRHNE   R0,[R10, #+32]
//  165   }
??init_resources_34:
        ADD      R9,R9,#+1
        CMP      R9,#+7
        BLT      ??init_resources_31
//  166   for (int j=0;j<8;j++)
        MOV      R9,#+0
//  167   {
//  168     IDFREE(media_images[j]);
??init_resources_35:
        ADD      R10,R5,R9, LSL #+1
        LDRH     R0,[R10, #+48]
        CMP      R0,R6
        CMPNE    R0,#+0
        BEQ      ??init_resources_36
        SWI      +717
??init_resources_36:
        STRH     R6,[R10, #+48]
//  169     REGISTER(media_images[j],media_names[j],media_fnames[j]);
        ADD      R11,R5,R9, LSL #+2
        CMP      R7,#+0
        CMPNE    R7,#+2
        BNE      ??init_resources_37
        LDR      R0,[R11, #+164]
        BL       ??GetIconID
        STRH     R0,[R10, #+48]
??init_resources_37:
        CMP      R7,#+2
        BGE      ??init_resources_38
        LDR      R0,[R11, #+196]
        MOV      R1,R4
        _BLF     ??checkfile_,??checkfile_??rA
        LDR      R11,[R11, #+196]
        STR      R0,[SP, #+4]
        ADD      R2,SP,#+8
        MOV      R1,R11
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_38
        LDR      R0,[SP, #+4]
        MOV      R2,SP
        MOV      R1,R11
        SWI      +716
        LDRH     R0,[SP, #+0]
        CMP      R0,R6
        STRHNE   R0,[R10, #+48]
//  170   }
??init_resources_38:
        ADD      R9,R9,#+1
        CMP      R9,#+8
        BLT      ??init_resources_35
//  171   IDFREE(navigimg);
        LDRH     R0,[R5, #+14]
        CMP      R0,R6
        CMPNE    R0,#+0
        BEQ      ??init_resources_39
        SWI      +717
??init_resources_39:
        STRH     R6,[R5, #+14]
//  172   REGISTER(navigimg,L"EMPTY_ICN",L"Navigation.png");
        CMP      R7,#+0
        CMPNE    R7,#+2
        BNE      ??init_resources_40
        ADD      R0,R8,#+412
        BL       ??GetIconID
        STRH     R0,[R5, #+14]
??init_resources_40:
        CMP      R7,#+2
        BGE      ??init_resources_41
        MOV      R7,#+320
        MOV      R1,R4
        ADD      R0,R7,R8
        _BLF     ??checkfile_,??checkfile_??rA
        MOV      R4,R0
        ADD      R2,SP,#+8
        ADD      R1,R7,R8
        SWI      +284
        CMP      R0,#+0
        BNE      ??init_resources_41
        MOV      R2,SP
        ADD      R1,R7,R8
        MOV      R0,R4
        SWI      +716
        LDRH     R0,[SP, #+0]
        CMP      R0,R6
        STRHNE   R0,[R5, #+14]
//  173 };
??init_resources_41:
        ADD      SP,SP,#+140      ;; stack cleaning
        CFI CFA R13+36
        POP      {R4-R11,PC}      ;; return
        DATA
??init_resources_2:
        DC32     img_priority
        DC32     `?<Constant L"\\x50\\x6c\\x61\\x79\\x56\\x69\\x65\\x77\\`
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??deinit_resources??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??deinit_resources
//  174 
//  175 #pragma optimize = s 9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??deinit_resources
        ARM
//  176 void deinit_resources()
//  177 {
??deinit_resources:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
//  178   IDFREE(playnow_h);
        LDR      R4,??DataTable1  ;; playnow_h
        MOV      R5,#+255
        LDRH     R0,[R4, #+0]
        ORR      R5,R5,#0xFF00
        CMP      R0,R5
        CMPNE    R0,#+0
        BEQ      ??deinit_resources_1
        SWI      +717
//  179   IDFREE(playview_h);
??deinit_resources_1:
        LDRH     R0,[R4, #+2]
        STRH     R5,[R4, #+0]
        CMP      R0,R5
        CMPNE    R0,#+0
        BEQ      ??deinit_resources_2
        SWI      +717
//  180 
//  181   IDFREE(cover_h_);
??deinit_resources_2:
        LDRH     R0,[R4, #+4]
        STRH     R5,[R4, #+2]
        CMP      R0,R5
        CMPNE    R0,#+0
        BEQ      ??deinit_resources_3
        SWI      +717
//  182   IDFREE(cover_v_);
??deinit_resources_3:
        LDRH     R0,[R4, #+6]
        STRH     R5,[R4, #+4]
        CMP      R0,R5
        CMPNE    R0,#+0
        BEQ      ??deinit_resources_4
        SWI      +717
//  183   
//  184   IDFREE(playicn);
??deinit_resources_4:
        LDRH     R0,[R4, #+8]
        STRH     R5,[R4, #+6]
        CMP      R0,R5
        CMPNE    R0,#+0
        BEQ      ??deinit_resources_5
        SWI      +717
//  185   IDFREE(pauseicn);
??deinit_resources_5:
        LDRH     R0,[R4, #+12]
        STRH     R5,[R4, #+8]
        CMP      R0,R5
        CMPNE    R0,#+0
        BEQ      ??deinit_resources_6
        SWI      +717
//  186   IDFREE(stopicn);
??deinit_resources_6:
        LDRH     R0,[R4, #+10]
        STRH     R5,[R4, #+12]
        CMP      R0,R5
        CMPNE    R0,#+0
        BEQ      ??deinit_resources_7
        SWI      +717
//  187   IDFREE(navigimg);
??deinit_resources_7:
        LDRH     R0,[R4, #+14]
        STRH     R5,[R4, #+10]
        CMP      R0,R5
        CMPNE    R0,#+0
        BEQ      ??deinit_resources_8
        SWI      +717
??deinit_resources_8:
        STRH     R5,[R4, #+14]
//  188   for (int j=0;j<7;j++)
        MOV      R6,#+0
//  189   {
//  190     IDFREE(presets[j]);
??deinit_resources_9:
        ADD      R7,R4,R6, LSL #+1
        LDRH     R0,[R7, #+32]
        CMP      R0,R5
        CMPNE    R0,#+0
        BEQ      ??deinit_resources_10
        SWI      +717
??deinit_resources_10:
        STRH     R5,[R7, #+32]
//  191   }
        ADD      R6,R6,#+1
        CMP      R6,#+7
        BLT      ??deinit_resources_9
//  192   for (int j=0;j<8;j++)
        MOV      R6,#+0
//  193   {
//  194     IDFREE(images[j]);
??deinit_resources_11:
        ADD      R7,R4,R6, LSL #+1
        LDRH     R0,[R7, #+16]
        CMP      R0,R5
        CMPNE    R0,#+0
        BEQ      ??deinit_resources_12
        SWI      +717
??deinit_resources_12:
        STRH     R5,[R7, #+16]
//  195   }
        ADD      R6,R6,#+1
        CMP      R6,#+8
        BLT      ??deinit_resources_11
//  196   for (int j=0;j<6;j++)
        MOV      R6,#+0
//  197   {
//  198     IDFREE(media_images[j]);
??deinit_resources_13:
        ADD      R7,R4,R6, LSL #+1
        LDRH     R0,[R7, #+48]
        CMP      R0,R5
        CMPNE    R0,#+0
        BEQ      ??deinit_resources_14
        SWI      +717
??deinit_resources_14:
        STRH     R5,[R7, #+48]
//  199   }
        ADD      R6,R6,#+1
        CMP      R6,#+6
        BLT      ??deinit_resources_13
//  200   for (int j=0;j<3;j++)
        MOV      R6,#+0
//  201   {
//  202     IDFREE(main_icons[j]);
??deinit_resources_15:
        ADD      R7,R4,R6, LSL #+1
        LDRH     R0,[R7, #+64]
        CMP      R0,R5
        CMPNE    R0,#+0
        BEQ      ??deinit_resources_16
        SWI      +717
??deinit_resources_16:
        STRH     R5,[R7, #+64]
//  203   }
        ADD      R6,R6,#+1
        CMP      R6,#+3
        BLT      ??deinit_resources_15
//  204 };
        POP      {R4-R7,PC}       ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable1:
        DC32     playnow_h

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon1
        CFI NoFunction
        ARM
??checkfile_??rA:
        LDR      R12,??Subroutine3_0  ;; ??checkfile_
        BX       R12
        DATA
??Subroutine3_0:
        DC32     ??checkfile_
        CFI EndBlock cfiBlock6

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for playnow_h>`:
        DATA
        DC16 65535
`?<Initializer for playview_h>`:
        DC16 65535
`?<Initializer for cover_h_>`:
        DC16 65535
`?<Initializer for cover_v_>`:
        DC16 65535
`?<Initializer for playicn>`:
        DC16 65535
`?<Initializer for stopicn>`:
        DC16 65535
`?<Initializer for pauseicn>`:
        DC16 65535
`?<Initializer for navigimg>`:
        DC16 65535
`?<Initializer for images>`:
        DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
`?<Initializer for presets>`:
        DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535
        DC8 0, 0
`?<Initializer for media_images>`:
        DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
`?<Initializer for main_icons>`:
        DC16 65535, 65535, 65535
        DC8 0, 0
`?<Initializer for images_fnames>`:
        DC32 `?<Constant L"\\x50\\x72\\x65\\x76\\x5f\\x6e\\x61\\x76\\`
        DC32 `?<Constant L"\\x4e\\x65\\x78\\x74\\x5f\\x6e\\x61\\x76\\`
        DC32 `?<Constant L"\\x50\\x72\\x65\\x76\\x32\\x5f\\x6e\\x61\\`
        DC32 `?<Constant L"\\x4e\\x65\\x78\\x74\\x32\\x5f\\x6e\\x61\\`
        DC32 `?<Constant L"\\x50\\x6c\\x61\\x79\\x5f\\x6e\\x61\\x76\\`
        DC32 `?<Constant L"\\x53\\x74\\x6f\\x70\\x5f\\x6e\\x61\\x76\\`
        DC32 `?<Constant L"\\x55\\x70\\x5f\\x6e\\x61\\x76\\x5f\\x69\\`
        DC32 `?<Constant L"\\x44\\x6f\\x77\\x6e\\x5f\\x6e\\x61\\x76\\`
`?<Initializer for images_offsets>`:
        DC32 -2, -3, -4, -6, -5, -1, -7, -10
`?<Initializer for presets_names>`:
        DC32 `?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x4e\\x4f\\`
        DC32 `?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x42\\x41\\`
        DC32 `?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x4d\\x45\\`
        DC32 `?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x56\\x4f\\`
        DC32 `?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x54\\x52\\`
        DC32 `?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x4e\\x4f\\`
        DC32 `?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x4d\\x41\\`
`?<Initializer for media_names>`:
        DC32 `?<Constant L"\\x4d\\x45\\x44\\x49\\x41\\x50\\x4c\\x41\\_2`
        DC32 `?<Constant L"\\x4d\\x45\\x44\\x49\\x41\\x50\\x4c\\x41\\_3`
        DC32 `?<Constant L"\\x4d\\x45\\x44\\x49\\x41\\x50\\x4c\\x41\\_4`
        DC32 `?<Constant L"\\x45\\x4d\\x50\\x54\\x59\\x5f\\x49\\x43\\`
        DC32 `?<Constant L"\\x4d\\x45\\x44\\x49\\x41\\x50\\x4c\\x41\\_5`
        DC32 `?<Constant L"\\x45\\x4d\\x50\\x54\\x59\\x5f\\x49\\x43\\`
        DC32 `?<Constant L"\\x45\\x4d\\x50\\x54\\x59\\x5f\\x49\\x43\\`
        DC32 `?<Constant L"\\x45\\x4d\\x50\\x54\\x59\\x5f\\x49\\x43\\`
`?<Initializer for media_fnames>`:
        DC32 `?<Constant L"\\x46\\x6f\\x72\\x77\\x61\\x72\\x64\\x5f\\`
        DC32 `?<Constant L"\\x52\\x65\\x77\\x69\\x6e\\x64\\x5f\\x69\\`
        DC32 `?<Constant L"\\x4c\\x6f\\x6f\\x70\\x5f\\x6d\\x6f\\x64\\_1`
        DC32 `?<Constant L"\\x53\\x74\\x65\\x72\\x65\\x6f\\x57\\x69\\`
        DC32 `?<Constant L"\\x52\\x61\\x6e\\x64\\x6f\\x6d\\x5f\\x6d\\`
        DC32 `?<Constant L"\\x52\\x61\\x6e\\x64\\x6f\\x6d\\x5f\\x6d\\_1`
        DC32 `?<Constant L"\\x53\\x74\\x65\\x72\\x65\\x6f\\x57\\x69\\_1`
        DC32 `?<Constant L"\\x4c\\x6f\\x6f\\x70\\x5f\\x6d\\x6f\\x64\\`
`?<Initializer for main_icons_fnames>`:
        DC32 `?<Constant L"\\x41\\x72\\x74\\x69\\x73\\x74\\x5f\\x69\\`
        DC32 `?<Constant L"\\x41\\x6c\\x62\\x75\\x6d\\x5f\\x69\\x63\\`
        DC32 `?<Constant L"\\x54\\x69\\x74\\x6c\\x65\\x5f\\x69\\x63\\`

        RSEG DATA_ID:CONST:SORT:NOROOT(1)
`?<Initializer for imageID>`:
        DATA
        DC16 65535

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x53\\x74\\x65\\x72\\x65\\x6f\\x57\\x69\\`:
        DATA
        DC8 53H, 0, 74H, 0, 65H, 0, 72H, 0
        DC8 65H, 0, 6FH, 0, 57H, 0, 69H, 0
        DC8 64H, 0, 65H, 0, 6EH, 0, 69H, 0
        DC8 6EH, 0, 67H, 0, 5FH, 0, 6DH, 0
        DC8 6FH, 0, 64H, 0, 65H, 0, 5FH, 0
        DC8 6FH, 0, 66H, 0, 66H, 0, 5FH, 0
        DC8 69H, 0, 63H, 0, 6EH, 0, 2EH, 0
        DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x52\\x61\\x6e\\x64\\x6f\\x6d\\x5f\\x6d\\`:
        DATA
        DC8 52H, 0, 61H, 0, 6EH, 0, 64H, 0
        DC8 6FH, 0, 6DH, 0, 5FH, 0, 6DH, 0
        DC8 6FH, 0, 64H, 0, 65H, 0, 5FH, 0
        DC8 69H, 0, 63H, 0, 6EH, 0, 2EH, 0
        DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x52\\x61\\x6e\\x64\\x6f\\x6d\\x5f\\x6d\\_1`:
        DATA
        DC8 52H, 0, 61H, 0, 6EH, 0, 64H, 0
        DC8 6FH, 0, 6DH, 0, 5FH, 0, 6DH, 0
        DC8 6FH, 0, 64H, 0, 65H, 0, 5FH, 0
        DC8 6FH, 0, 66H, 0, 66H, 0, 5FH, 0
        DC8 69H, 0, 63H, 0, 6EH, 0, 2EH, 0
        DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x53\\x74\\x65\\x72\\x65\\x6f\\x57\\x69\\_1`:
        DATA
        DC8 53H, 0, 74H, 0, 65H, 0, 72H, 0
        DC8 65H, 0, 6FH, 0, 57H, 0, 69H, 0
        DC8 64H, 0, 65H, 0, 6EH, 0, 69H, 0
        DC8 6EH, 0, 67H, 0, 5FH, 0, 6DH, 0
        DC8 6FH, 0, 64H, 0, 65H, 0, 5FH, 0
        DC8 69H, 0, 63H, 0, 6EH, 0, 2EH, 0
        DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4c\\x6f\\x6f\\x70\\x5f\\x6d\\x6f\\x64\\`:
        DATA
        DC8 4CH, 0, 6FH, 0, 6FH, 0, 70H, 0
        DC8 5FH, 0, 6DH, 0, 6FH, 0, 64H, 0
        DC8 65H, 0, 5FH, 0, 6FH, 0, 66H, 0
        DC8 66H, 0, 5FH, 0, 69H, 0, 63H, 0
        DC8 6EH, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41\\x72\\x74\\x69\\x73\\x74\\x5f\\x69\\`:
        DATA
        DC8 41H, 0, 72H, 0, 74H, 0, 69H, 0
        DC8 73H, 0, 74H, 0, 5FH, 0, 69H, 0
        DC8 63H, 0, 6EH, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41\\x6c\\x62\\x75\\x6d\\x5f\\x69\\x63\\`:
        DATA
        DC8 41H, 0, 6CH, 0, 62H, 0, 75H, 0
        DC8 6DH, 0, 5FH, 0, 69H, 0, 63H, 0
        DC8 6EH, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x56\\x4f\\`:
        DATA
        DC8 4DH, 0, 50H, 0, 5FH, 0, 45H, 0
        DC8 51H, 0, 5FH, 0, 56H, 0, 4FH, 0
        DC8 49H, 0, 43H, 0, 45H, 0, 5FH, 0
        DC8 49H, 0, 43H, 0, 4EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x54\\x69\\x74\\x6c\\x65\\x5f\\x69\\x63\\`:
        DATA
        DC8 54H, 0, 69H, 0, 74H, 0, 6CH, 0
        DC8 65H, 0, 5FH, 0, 69H, 0, 63H, 0
        DC8 6EH, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x50\\x6c\\x61\\x79\\x56\\x69\\x65\\x77\\`:
        DATA
        DC8 50H, 0, 6CH, 0, 61H, 0, 79H, 0
        DC8 56H, 0, 69H, 0, 65H, 0, 77H, 0
        DC8 5FH, 0, 42H, 0, 61H, 0, 63H, 0
        DC8 6BH, 0, 67H, 0, 72H, 0, 6FH, 0
        DC8 75H, 0, 6EH, 0, 64H, 0, 5FH, 0
        DC8 68H, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0
        DC8 50H, 0, 6CH, 0, 61H, 0, 79H, 0
        DC8 4EH, 0, 6FH, 0, 77H, 0, 5FH, 0
        DC8 42H, 0, 61H, 0, 63H, 0, 6BH, 0
        DC8 67H, 0, 72H, 0, 6FH, 0, 75H, 0
        DC8 6EH, 0, 64H, 0, 5FH, 0, 68H, 0
        DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0
        DC8 4DH, 0, 45H, 0, 44H, 0, 49H, 0
        DC8 41H, 0, 50H, 0, 4CH, 0, 41H, 0
        DC8 59H, 0, 45H, 0, 52H, 0, 5FH, 0
        DC8 50H, 0, 4CH, 0, 41H, 0, 59H, 0
        DC8 5FH, 0, 49H, 0, 43H, 0, 4EH, 0
        DC8 0, 0
        DC8 0, 0
        DC8 4DH, 0, 45H, 0, 44H, 0, 49H, 0
        DC8 41H, 0, 50H, 0, 4CH, 0, 41H, 0
        DC8 59H, 0, 45H, 0, 52H, 0, 5FH, 0
        DC8 53H, 0, 54H, 0, 4FH, 0, 50H, 0
        DC8 5FH, 0, 49H, 0, 43H, 0, 4EH, 0
        DC8 0, 0
        DC8 0, 0
        DC8 50H, 0, 61H, 0, 75H, 0, 73H, 0
        DC8 65H, 0, 5FH, 0, 69H, 0, 63H, 0
        DC8 6EH, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0
        DC8 53H, 0, 74H, 0, 6FH, 0, 70H, 0
        DC8 5FH, 0, 69H, 0, 63H, 0, 6EH, 0
        DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0
        DC8 63H, 0, 6FH, 0, 76H, 0, 65H, 0
        DC8 72H, 0, 5FH, 0, 68H, 0, 2EH, 0
        DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0
        DC8 63H, 0, 6FH, 0, 76H, 0, 65H, 0
        DC8 72H, 0, 5FH, 0, 76H, 0, 2EH, 0
        DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0
        DC8 65H, 0, 71H, 0, 5FH, 0, 25H, 0
        DC8 30H, 0, 32H, 0, 64H, 0, 2EH, 0
        DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0
        DC8 4EH, 0, 61H, 0, 76H, 0, 69H, 0
        DC8 67H, 0, 61H, 0, 74H, 0, 69H, 0
        DC8 6FH, 0, 6EH, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0
`?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x42\\x41\\`:
        DC8 4DH, 0, 50H, 0, 5FH, 0, 45H, 0
        DC8 51H, 0, 5FH, 0, 42H, 0, 41H, 0
        DC8 53H, 0, 53H, 0, 5FH, 0, 49H, 0
        DC8 43H, 0, 4EH, 0, 0, 0
        DC8 0, 0
        DC8 50H, 0, 6CH, 0, 61H, 0, 79H, 0
        DC8 5FH, 0, 69H, 0, 63H, 0, 6EH, 0
        DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0
`?<Constant L"\\x45\\x4d\\x50\\x54\\x59\\x5f\\x49\\x43\\`:
        DC8 45H, 0, 4DH, 0, 50H, 0, 54H, 0
        DC8 59H, 0, 5FH, 0, 49H, 0, 43H, 0
        DC8 4EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x50\\x72\\x65\\x76\\x5f\\x6e\\x61\\x76\\`:
        DATA
        DC8 50H, 0, 72H, 0, 65H, 0, 76H, 0
        DC8 5FH, 0, 6EH, 0, 61H, 0, 76H, 0
        DC8 5FH, 0, 69H, 0, 63H, 0, 6EH, 0
        DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4e\\x65\\x78\\x74\\x5f\\x6e\\x61\\x76\\`:
        DATA
        DC8 4EH, 0, 65H, 0, 78H, 0, 74H, 0
        DC8 5FH, 0, 6EH, 0, 61H, 0, 76H, 0
        DC8 5FH, 0, 69H, 0, 63H, 0, 6EH, 0
        DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x50\\x72\\x65\\x76\\x32\\x5f\\x6e\\x61\\`:
        DATA
        DC8 50H, 0, 72H, 0, 65H, 0, 76H, 0
        DC8 32H, 0, 5FH, 0, 6EH, 0, 61H, 0
        DC8 76H, 0, 5FH, 0, 69H, 0, 63H, 0
        DC8 6EH, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4e\\x65\\x78\\x74\\x32\\x5f\\x6e\\x61\\`:
        DATA
        DC8 4EH, 0, 65H, 0, 78H, 0, 74H, 0
        DC8 32H, 0, 5FH, 0, 6EH, 0, 61H, 0
        DC8 76H, 0, 5FH, 0, 69H, 0, 63H, 0
        DC8 6EH, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x50\\x6c\\x61\\x79\\x5f\\x6e\\x61\\x76\\`:
        DATA
        DC8 50H, 0, 6CH, 0, 61H, 0, 79H, 0
        DC8 5FH, 0, 6EH, 0, 61H, 0, 76H, 0
        DC8 5FH, 0, 69H, 0, 63H, 0, 6EH, 0
        DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x53\\x74\\x6f\\x70\\x5f\\x6e\\x61\\x76\\`:
        DATA
        DC8 53H, 0, 74H, 0, 6FH, 0, 70H, 0
        DC8 5FH, 0, 6EH, 0, 61H, 0, 76H, 0
        DC8 5FH, 0, 69H, 0, 63H, 0, 6EH, 0
        DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x55\\x70\\x5f\\x6e\\x61\\x76\\x5f\\x69\\`:
        DATA
        DC8 55H, 0, 70H, 0, 5FH, 0, 6EH, 0
        DC8 61H, 0, 76H, 0, 5FH, 0, 69H, 0
        DC8 63H, 0, 6EH, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x44\\x6f\\x77\\x6e\\x5f\\x6e\\x61\\x76\\`:
        DATA
        DC8 44H, 0, 6FH, 0, 77H, 0, 6EH, 0
        DC8 5FH, 0, 6EH, 0, 61H, 0, 76H, 0
        DC8 5FH, 0, 69H, 0, 63H, 0, 6EH, 0
        DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x4e\\x4f\\`:
        DATA
        DC8 4DH, 0, 50H, 0, 5FH, 0, 45H, 0
        DC8 51H, 0, 5FH, 0, 4EH, 0, 4FH, 0
        DC8 52H, 0, 4DH, 0, 41H, 0, 4CH, 0
        DC8 5FH, 0, 49H, 0, 43H, 0, 4EH, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x4d\\x45\\`:
        DATA
        DC8 4DH, 0, 50H, 0, 5FH, 0, 45H, 0
        DC8 51H, 0, 5FH, 0, 4DH, 0, 45H, 0
        DC8 47H, 0, 41H, 0, 42H, 0, 41H, 0
        DC8 53H, 0, 53H, 0, 5FH, 0, 49H, 0
        DC8 43H, 0, 4EH, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x54\\x52\\`:
        DATA
        DC8 4DH, 0, 50H, 0, 5FH, 0, 45H, 0
        DC8 51H, 0, 5FH, 0, 54H, 0, 52H, 0
        DC8 45H, 0, 42H, 0, 4CH, 0, 45H, 0
        DC8 42H, 0, 4FH, 0, 4FH, 0, 53H, 0
        DC8 54H, 0, 5FH, 0, 49H, 0, 43H, 0
        DC8 4EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4d\\x50\\x5f\\x45\\x51\\x5f\\x4d\\x41\\`:
        DATA
        DC8 4DH, 0, 50H, 0, 5FH, 0, 45H, 0
        DC8 51H, 0, 5FH, 0, 4DH, 0, 41H, 0
        DC8 4EH, 0, 55H, 0, 41H, 0, 4CH, 0
        DC8 5FH, 0, 49H, 0, 43H, 0, 4EH, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4d\\x45\\x44\\x49\\x41\\x50\\x4c\\x41\\_2`:
        DATA
        DC8 4DH, 0, 45H, 0, 44H, 0, 49H, 0
        DC8 41H, 0, 50H, 0, 4CH, 0, 41H, 0
        DC8 59H, 0, 45H, 0, 52H, 0, 5FH, 0
        DC8 46H, 0, 41H, 0, 53H, 0, 54H, 0
        DC8 5FH, 0, 46H, 0, 4FH, 0, 52H, 0
        DC8 57H, 0, 41H, 0, 52H, 0, 44H, 0
        DC8 5FH, 0, 49H, 0, 43H, 0, 4EH, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4d\\x45\\x44\\x49\\x41\\x50\\x4c\\x41\\_3`:
        DATA
        DC8 4DH, 0, 45H, 0, 44H, 0, 49H, 0
        DC8 41H, 0, 50H, 0, 4CH, 0, 41H, 0
        DC8 59H, 0, 45H, 0, 52H, 0, 5FH, 0
        DC8 52H, 0, 45H, 0, 57H, 0, 49H, 0
        DC8 4EH, 0, 44H, 0, 5FH, 0, 49H, 0
        DC8 43H, 0, 4EH, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4d\\x45\\x44\\x49\\x41\\x50\\x4c\\x41\\_4`:
        DATA
        DC8 4DH, 0, 45H, 0, 44H, 0, 49H, 0
        DC8 41H, 0, 50H, 0, 4CH, 0, 41H, 0
        DC8 59H, 0, 45H, 0, 52H, 0, 5FH, 0
        DC8 4DH, 0, 4FH, 0, 44H, 0, 45H, 0
        DC8 5FH, 0, 4CH, 0, 4FH, 0, 4FH, 0
        DC8 50H, 0, 5FH, 0, 49H, 0, 43H, 0
        DC8 4EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4d\\x45\\x44\\x49\\x41\\x50\\x4c\\x41\\_5`:
        DATA
        DC8 4DH, 0, 45H, 0, 44H, 0, 49H, 0
        DC8 41H, 0, 50H, 0, 4CH, 0, 41H, 0
        DC8 59H, 0, 45H, 0, 52H, 0, 5FH, 0
        DC8 4DH, 0, 4FH, 0, 44H, 0, 45H, 0
        DC8 5FH, 0, 52H, 0, 41H, 0, 4EH, 0
        DC8 44H, 0, 4FH, 0, 4DH, 0, 5FH, 0
        DC8 49H, 0, 43H, 0, 4EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x46\\x6f\\x72\\x77\\x61\\x72\\x64\\x5f\\`:
        DATA
        DC8 46H, 0, 6FH, 0, 72H, 0, 77H, 0
        DC8 61H, 0, 72H, 0, 64H, 0, 5FH, 0
        DC8 69H, 0, 63H, 0, 6EH, 0, 2EH, 0
        DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x52\\x65\\x77\\x69\\x6e\\x64\\x5f\\x69\\`:
        DATA
        DC8 52H, 0, 65H, 0, 77H, 0, 69H, 0
        DC8 6EH, 0, 64H, 0, 5FH, 0, 69H, 0
        DC8 63H, 0, 6EH, 0, 2EH, 0, 70H, 0
        DC8 6EH, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4c\\x6f\\x6f\\x70\\x5f\\x6d\\x6f\\x64\\_1`:
        DATA
        DC8 4CH, 0, 6FH, 0, 6FH, 0, 70H, 0
        DC8 5FH, 0, 6DH, 0, 6FH, 0, 64H, 0
        DC8 65H, 0, 5FH, 0, 69H, 0, 63H, 0
        DC8 6EH, 0, 2EH, 0, 70H, 0, 6EH, 0
        DC8 67H, 0, 0, 0

        END
// 
// 2 128 bytes in segment CODE
// 1 560 bytes in segment DATA_C
//   242 bytes in segment DATA_I
//   242 bytes in segment DATA_ID
//    12 bytes in segment INITTAB
// 
// 2 104 bytes of CODE  memory (+ 36 bytes shared)
// 1 802 bytes of CONST memory
//   242 bytes of DATA  memory
//
//Errors: none
//Warnings: none
