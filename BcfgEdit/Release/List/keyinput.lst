##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  22:42:27 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\keyin #
#                       put.cpp                                              #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\keyin #
#                       put.cpp -D NDEBUG -lCN Z:\home\perk11\www\perk11.inf #
#                       o\svn\SE\BcfgEdit\Release\List\ -la                  #
#                       Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\Relea #
#                       se\List\ -o Z:\home\perk11\www\perk11.info\svn\SE\Bc #
#                       fgEdit\Release\Obj\ -s9 --no_unroll                  #
#                       --no_code_motion --cpu_mode arm --endian little      #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --enable_multibytes --fpu None --eec++               #
#                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8 #
#                       n.h -I Z:\home\perk11\IAR2\arm\INC\                  #
#                       --inline_threshold=2                                 #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\Relea #
#                       se\List\keyinput.lst                                 #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\Relea #
#                       se\Obj\keyinput.r79                                  #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\keyinput.cpp
      1          #include "..\include\Lib_Clara.h"
      2          #include "..\include\Dir.h"
      3          
      4          #include "..\include\cfg_items.h"
      5          #include "main.h"
      6          #include "keyinput.h"
      7          

   \                                 In segment CODE, align 4, keep-with-next
      8          void KeyCode_KeyHook( BOOK* bk, int key, int unk, int mode )
      9          {
   \                     ??KeyCode_KeyHook:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     10                  if (mode==KBD_SHORT_PRESS)
   \   00000008   F8009FE5           LDR      R0,??KeyCode_KeyHook_1  ;; KBD_SHORT_PRESS
   \   0000000C   8CD04DE2           SUB      SP,SP,#+140
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   000053E1           CMP      R3,R0
   \   0000001C   3700001A           BNE      ??KeyCode_KeyHook_2
     11                  {
     12                   	MyBOOK* mbk = (MyBOOK*) bk;
     13                   	EP_DATA * epd = (EP_DATA *)get_envp(get_bid(current_process()), "elfpackdata");
   \   00000020   840100EF           SWI      +388
   \   00000024   8F0100EF           SWI      +399
   \   00000028   ........           LDR      R1,??DataTable2  ;; `?<Constant "elfpackdata">`
   \   0000002C   8D0100EF           SWI      +397
     14                    
     15                    	if (key==epd->LastKey)
   \   00000030   B403D0E1           LDRH     R0,[R0, #+52]
   \   00000034   000055E1           CMP      R5,R0
   \   00000038   0A00001A           BNE      ??KeyCode_KeyHook_3
     16                    	{
     17                      		Feedback_SetTextExtended( mbk->key_input, TextID_Create( "Key blocked", ENC_LAT1, TEXTID_ANY_LEN ), 0 );
   \   0000003C   C8009FE5           LDR      R0,??KeyCode_KeyHook_1+0x4  ;; `?<Constant "elfpackdata">` + 12
   \   00000040   FF20A0E3           MOV      R2,#+255
   \   00000044   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000048   0610A0E3           MOV      R1,#+6
   \   0000004C   5D0100EF           SWI      +349
   \   00000050   0010A0E1           MOV      R1,R0
   \   00000054   3C0094E5           LDR      R0,[R4, #+60]
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   C90200EF           SWI      +713
     18                      		return;
   \   00000060   8CD08DE2           ADD      SP,SP,#+140
   \   00000064   F080BDE8           POP      {R4-R7,PC}
     19                    	}
     20                    
     21                    	wchar_t ustr[64];
     22                    	TEXTID sid[3];
     23                    
     24                    	snwprintf( ustr, MAXELEMS( ustr )-1, L"\n\nHEX: 0x%02X\nDEC: %d", key, key );
   \                     ??KeyCode_KeyHook_3:
   \   00000068   ........           LDR      R6,??DataTable2  ;; `?<Constant "elfpackdata">`
   \   0000006C   0500A0E1           MOV      R0,R5
   \   00000070   01002DE9           PUSH     {R0}
   \   00000074   0530A0E1           MOV      R3,R5
   \   00000078   182086E2           ADD      R2,R6,#+24
   \   0000007C   3F10A0E3           MOV      R1,#+63
   \   00000080   10008DE2           ADD      R0,SP,#+16
   \   00000084   150100EF           SWI      +277
     25                    
     26                    	mbk->cur_hp.key->keycode = key;
   \   00000088   540094E5           LDR      R0,[R4, #+84]
     27                    
     28                    	sid[0] = TextID_Create( L"Current key:\n\n", ENC_UCS2, TEXTID_ANY_LEN );
   \   0000008C   FF70A0E3           MOV      R7,#+255
   \   00000090   2C5080E5           STR      R5,[R0, #+44]
   \   00000094   FF7C87E3           ORR      R7,R7,#0xFF00
   \   00000098   0720A0E1           MOV      R2,R7
   \   0000009C   0010A0E3           MOV      R1,#+0
   \   000000A0   440086E2           ADD      R0,R6,#+68
   \   000000A4   5D0100EF           SWI      +349
   \   000000A8   04008DE5           STR      R0,[SP, #+4]
     29                    	sid[1] = KeyCode2Name( key );
   \   000000AC   0500A0E1           MOV      R0,R5
   \   000000B0   CB0200EF           SWI      +715
   \   000000B4   08008DE5           STR      R0,[SP, #+8]
     30                    	sid[2] = TextID_Create( ustr, ENC_UCS2, TEXTID_ANY_LEN );
   \   000000B8   0720A0E1           MOV      R2,R7
   \   000000BC   0010A0E3           MOV      R1,#+0
   \   000000C0   10008DE2           ADD      R0,SP,#+16
   \   000000C4   5D0100EF           SWI      +349
   \   000000C8   0C008DE5           STR      R0,[SP, #+12]
     31                    	Feedback_SetTextExtended( mbk->key_input, TextID_Create( sid, ENC_TEXTID, 3 ), 0 );
   \   000000CC   0320A0E3           MOV      R2,#+3
   \   000000D0   0510A0E3           MOV      R1,#+5
   \   000000D4   04008DE2           ADD      R0,SP,#+4
   \   000000D8   5D0100EF           SWI      +349
   \   000000DC   0020A0E3           MOV      R2,#+0
   \   000000E0   0010A0E1           MOV      R1,R0
   \   000000E4   3C0094E5           LDR      R0,[R4, #+60]
   \   000000E8   C90200EF           SWI      +713
     32                    	Feedback_SetTimeout( mbk->key_input, 3000 );
   \   000000EC   3C0094E5           LDR      R0,[R4, #+60]
   \   000000F0   B810A0E3           MOV      R1,#+184
   \   000000F4   B01E81E3           ORR      R1,R1,#0xB00
   \   000000F8   C80200EF           SWI      +712
   \   000000FC   04D08DE2           ADD      SP,SP,#+4
   \                     ??KeyCode_KeyHook_2:
   \   00000100   8CD08DE2           ADD      SP,SP,#+140      ;; stack cleaning
   \   00000104   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??KeyCode_KeyHook_1:
   \   00000108   ........           DC32     KBD_SHORT_PRESS
   \   0000010C   ........           DC32     `?<Constant "elfpackdata">` + 12
     33                  }
     34          }
     35          

   \                                 In segment CODE, align 4, keep-with-next
     36          void KeyCode_OnClose( BOOK* bk )
     37          {
   \                     ??KeyCode_OnClose:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     38          	MyBOOK* mbk = (MyBOOK*) bk;
     39          	FREE_GUI( mbk->key_input );
   \   00000008   3C0094E5           LDR      R0,[R4, #+60]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      ??KeyCode_OnClose_1
   \   00000014   CE0100EF           SWI      +462
   \   00000018   3C0084E5           STR      R0,[R4, #+60]
     40          	BookObj_ReturnPage( bk, PREVIOUS_EVENT );
   \                     ??KeyCode_OnClose_1:
   \   0000001C   0C009FE5           LDR      R0,??KeyCode_OnClose_2  ;; PREVIOUS_EVENT
   \   00000020   001090E5           LDR      R1,[R0, #+0]
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   2E0100EF           SWI      +302
     41          }
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??KeyCode_OnClose_2:
   \   00000030   ........           DC32     PREVIOUS_EVENT
     42          

   \                                 In segment CODE, align 4, keep-with-next
     43          int KeyCode_OnEnter( void* , BOOK* bk )
     44          {
   \                     ??KeyCode_OnEnter:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   8CD04DE2           SUB      SP,SP,#+140
     45          	MyBOOK* mbk = (MyBOOK*) bk;
     46          	wchar_t ustr[64];
     47          	int key;
     48          	TEXTID sid[3];
     49          	mbk->key_input = TextFeedbackWindow( mbk, 0 );
     50          
     51          	key = mbk->cur_hp.key->keycode;
     52          
     53          	snwprintf( ustr, MAXELEMS( ustr )-1, L"\n\nHEX: 0x%02X\nDEC: %d", key, key );
   \   00000008   ........           LDR      R6,??DataTable2  ;; `?<Constant "elfpackdata">`
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   C50200EF           SWI      +709
   \   0000001C   3C0084E5           STR      R0,[R4, #+60]
   \   00000020   540094E5           LDR      R0,[R4, #+84]
   \   00000024   182086E2           ADD      R2,R6,#+24
   \   00000028   2C5090E5           LDR      R5,[R0, #+44]
   \   0000002C   3F10A0E3           MOV      R1,#+63
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   01002DE9           PUSH     {R0}
   \   00000038   0530A0E1           MOV      R3,R5
     54          
     55          	sid[0] = TextID_Create( L"Current key:\n\n", ENC_UCS2, TEXTID_ANY_LEN );
   \   0000003C   FF70A0E3           MOV      R7,#+255
   \   00000040   FF7C87E3           ORR      R7,R7,#0xFF00
   \   00000044   10008DE2           ADD      R0,SP,#+16
   \   00000048   150100EF           SWI      +277
   \   0000004C   0720A0E1           MOV      R2,R7
   \   00000050   0010A0E3           MOV      R1,#+0
   \   00000054   440086E2           ADD      R0,R6,#+68
   \   00000058   5D0100EF           SWI      +349
   \   0000005C   04008DE5           STR      R0,[SP, #+4]
     56          	sid[1] = KeyCode2Name( key );
   \   00000060   0500A0E1           MOV      R0,R5
   \   00000064   CB0200EF           SWI      +715
   \   00000068   08008DE5           STR      R0,[SP, #+8]
     57          	sid[2] = TextID_Create( ustr, ENC_UCS2, TEXTID_ANY_LEN );
   \   0000006C   0720A0E1           MOV      R2,R7
   \   00000070   0010A0E3           MOV      R1,#+0
   \   00000074   10008DE2           ADD      R0,SP,#+16
   \   00000078   5D0100EF           SWI      +349
   \   0000007C   0C008DE5           STR      R0,[SP, #+12]
     58          
     59          	Feedback_SetTextExtended( mbk->key_input, TextID_Create( sid, ENC_TEXTID, 3 ), 0 );
   \   00000080   0320A0E3           MOV      R2,#+3
   \   00000084   0510A0E3           MOV      R1,#+5
   \   00000088   04008DE2           ADD      R0,SP,#+4
   \   0000008C   5D0100EF           SWI      +349
   \   00000090   0020A0E3           MOV      R2,#+0
   \   00000094   0010A0E1           MOV      R1,R0
   \   00000098   3C0094E5           LDR      R0,[R4, #+60]
   \   0000009C   C90200EF           SWI      +713
     60          	GUIObject_SetStyle( mbk->key_input, 1 );
   \   000000A0   3C0094E5           LDR      R0,[R4, #+60]
   \   000000A4   0110A0E3           MOV      R1,#+1
   \   000000A8   360100EF           SWI      +310
     61          	Feedback_SetKeyHook( mbk->key_input, KeyCode_KeyHook );
   \   000000AC   34109FE5           LDR      R1,??KeyCode_OnEnter_1  ;; ??KeyCode_KeyHook
   \   000000B0   3C0094E5           LDR      R0,[R4, #+60]
   \   000000B4   C60200EF           SWI      +710
     62          	Feedback_SetOnClose( mbk->key_input, KeyCode_OnClose );
   \   000000B8   2C109FE5           LDR      R1,??KeyCode_OnEnter_1+0x4  ;; ??KeyCode_OnClose
   \   000000BC   3C0094E5           LDR      R0,[R4, #+60]
   \   000000C0   C70200EF           SWI      +711
     63          	Feedback_SetTimeout( mbk->key_input, 3000 );
   \   000000C4   3C0094E5           LDR      R0,[R4, #+60]
   \   000000C8   B810A0E3           MOV      R1,#+184
   \   000000CC   B01E81E3           ORR      R1,R1,#0xB00
   \   000000D0   C80200EF           SWI      +712
     64          	GUIObject_Show( mbk->key_input );
   \   000000D4   3C0094E5           LDR      R0,[R4, #+60]
   \   000000D8   340100EF           SWI      +308
     65          	return 1;
   \   000000DC   0100A0E3           MOV      R0,#+1
   \   000000E0   90D08DE2           ADD      SP,SP,#+144
   \   000000E4   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??KeyCode_OnEnter_1:
   \   000000E8   ........           DC32     ??KeyCode_KeyHook
   \   000000EC   ........           DC32     ??KeyCode_OnClose
     66          }
     67          

   \                                 In segment CODE, align 4, keep-with-next
     68          int KeyCode_OnExit( void* , BOOK* bk )
     69          {
   \                     ??KeyCode_OnExit:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
     70          	MyBOOK* mbk = (MyBOOK*) bk;
     71          	int key;
     72          	key = mbk->cur_hp.key->keycode;
     73          	ListMenu_SetItemSecondLineText( mbk->key_sel_list, 0, KeyCode2Name( key ) );
   \   00000008   540094E5           LDR      R0,[R4, #+84]
   \   0000000C   2C0090E5           LDR      R0,[R0, #+44]
   \   00000010   CB0200EF           SWI      +715
   \   00000014   0020A0E1           MOV      R2,R0
   \   00000018   400094E5           LDR      R0,[R4, #+64]
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   A60200EF           SWI      +678
     74          	return 1;
   \   00000024   0100A0E3           MOV      R0,#+1
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
     75          }
     76          

   \                                 In segment DYN_PAGE, align 4, align-sorted
     77          const PAGE_MSG bk_msglst_keycodeinput[] @ "DYN_PAGE" =
   \                     bk_msglst_keycodeinput:
   \   00000000   42000000....       DC32 66, ??KeyCode_OnEnter, 67, ??KeyCode_OnExit, 89, 0H, 97, 0H, 95
   \              ....43000000
   \              ........5900
   \              000000000000
   \              610000000000
   \              00005F000000
   \   00000024   000000006000       DC32 0H, 96, 0H, 284, 0H, 282, 0H, 121, 0H, 122, 0H, 281, 0H, 86, 0H
   \              000000000000
   \              1C0100000000
   \              00001A010000
   \              000000007900
   \              000000000000
   \              7A0000000000
   \              000019010000
   \              000000005600
   \              000000000000
   \   00000060   660000000000       DC32 102, 0H, 103, 0H, 64, 0H
   \              000067000000
   \              000000004000
   \              000000000000
     78          {
     79          	PAGE_ENTER_EVENT_TAG, KeyCode_OnEnter,
     80          	PAGE_EXIT_EVENT_TAG, KeyCode_OnExit,
     81          	FLIP_OPEN_EVENT_TAG, NULL,
     82          	PHF_PRESSED_EVENT_TAG, NULL,
     83          	CAMERA_LENSCOVER_OPEN_EVENT_TAG, NULL,
     84          	CAMERA_LENSCOVER_CLOSE_EVENT_TAG, NULL,
     85          	MEDIAPLAYERKEY_PRESSED_EVENT_TAG, NULL,
     86          	GOMUSICKEY_PRESSED_EVENT_TAG, NULL,
     87          	MULTIKEY_PRESSED_EVENT_TAG, NULL,
     88          	LAMPKEY_PRESSED_EVENT_TAG, NULL,
     89          	ONOFFKEY_SHORT_PRESS_EVENT_TAG, NULL,
     90          	ONOFFKEY_LONG_PRESS_EVENT_TAG, NULL,
     91          	LOCKKEY_EVENT_TAG, NULL,
     92          	OPERATORKEY_PRESSED_EVENT_TAG, NULL,
     93          	NIL_EVENT_TAG, NULL
     94          };
     95          

   \                                 In segment DATA_C, align 4, align-sorted
     96          const PAGE_DESC bk_keycode_input = { "BcfgEdit_KeyCodeInput_Page", 0, bk_msglst_keycodeinput };
   \                     bk_keycode_input:
   \   00000000   ........0000       DC32 `?<Constant "BcfgEdit_KeyCodeInput...">`, 0H
   \              0000        
   \   00000008   ........           DC32 bk_msglst_keycodeinput
     97          
     98          //----------------------
     99          

   \                                 In segment DATA_I, align 4, align-sorted
    100          const wchar_t* modes[] =
   \                     modes:
   \   00000000                      DS8 20
   \   00000014                      REQUIRE `?<Initializer for modes>`
    101          {
    102          	L"Short Press",
    103          	L"Long Press",
    104          	L"Repeat",
    105          	L"Short Release",
    106          	L"Long Release"
    107          };
    108          

   \                                 In segment CODE, align 4, keep-with-next
    109          TEXTID GetKeyModeName( int mode )
    110          {
   \                     ??GetKeyModeName:
   \   00000000   00402DE9           PUSH     {LR}
    111          	return mode < MAXELEMS( modes ) ? TextID_Create( modes[mode], ENC_UCS2, TEXTID_ANY_LEN ) : EMPTY_TEXTID;
   \   00000004   050050E3           CMP      R0,#+5
   \   00000008   0600002A           BCS      ??GetKeyModeName_1
   \   0000000C   ........           LDR      R3,??DataTable8  ;; modes
   \   00000010   FF20A0E3           MOV      R2,#+255
   \   00000014   000193E7           LDR      R0,[R3, +R0, LSL #+2]
   \   00000018   FF2C82E3           ORR      R2,R2,#0xFF00
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   5D0100EF           SWI      +349
   \   00000024   0080BDE8           POP      {PC}
   \                     ??GetKeyModeName_1:
   \   00000028   9004E0E3           MVN      R0,#-1879048192
   \   0000002C   0080BDE8           POP      {PC}             ;; return
    112          }
    113          

   \                                 In segment CODE, align 4, keep-with-next
    114          void KeyModeSelect_OnCloseCBoxGui( BOOK* bk, GUI* )
    115          {
   \                     ??KeyModeSelect_OnCloseCBoxGui:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    116          	MyBOOK* myBook = (MyBOOK*) bk;
    117          	FREE_GUI( myBook->keymode_sel_list );
   \   00000008   440094E5           LDR      R0,[R4, #+68]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD08           POPEQ    {R4,PC}
   \   00000014   CE0100EF           SWI      +462
   \   00000018   440084E5           STR      R0,[R4, #+68]
    118          }
   \   0000001C   1080BDE8           POP      {R4,PC}          ;; return
    119          

   \                                 In segment CODE, align 4, keep-with-next
    120          void KeyModeSelect_OnSelectCBoxGui( BOOK* bk, GUI* )
    121          {
   \                     ??KeyModeSelect_OnSelectCBoxGui:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    122          	MyBOOK* myBook = (MyBOOK*) bk;
    123          	int item = OneOfMany_GetSelected( myBook->keymode_sel_list );
   \   00000008   440094E5           LDR      R0,[R4, #+68]
   \   0000000C   490100EF           SWI      +329
    124          
    125          	myBook->cur_hp.key->keymode = item;
   \   00000010   541094E5           LDR      R1,[R4, #+84]
    126          
    127          	ListMenu_SetItemSecondLineText( myBook->key_sel_list, 1, TextID_Create( modes[item], ENC_UCS2, TEXTID_ANY_LEN ) );
   \   00000014   ........           LDR      R3,??DataTable8  ;; modes
   \   00000018   300081E5           STR      R0,[R1, #+48]
   \   0000001C   000193E7           LDR      R0,[R3, +R0, LSL #+2]
   \   00000020   FF20A0E3           MOV      R2,#+255
   \   00000024   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   5D0100EF           SWI      +349
   \   00000030   0020A0E1           MOV      R2,R0
   \   00000034   400094E5           LDR      R0,[R4, #+64]
   \   00000038   0110A0E3           MOV      R1,#+1
   \   0000003C   A60200EF           SWI      +678
    128          	FREE_GUI( myBook->keymode_sel_list );
   \   00000040   440094E5           LDR      R0,[R4, #+68]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   1080BD08           POPEQ    {R4,PC}
   \   0000004C   CE0100EF           SWI      +462
   \   00000050   440084E5           STR      R0,[R4, #+68]
    129          }
   \   00000054   1080BDE8           POP      {R4,PC}          ;; return
    130          

   \                                 In segment CODE, align 4, keep-with-next
    131          void KeyModeSelect_CreateCBoxGui( MyBOOK* myBook )
    132          {
   \                     ??KeyModeSelect_CreateCBoxGui:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   94D04DE2           SUB      SP,SP,#+148
   \   00000008   0040A0E1           MOV      R4,R0
    133          	TEXTID strid[MAXELEMS( modes )];
    134          	GUI_ONEOFMANY* om = CreateOneOfMany( myBook );
    135          	myBook->keymode_sel_list = om;
    136          
    137          	wchar_t ustr[64];
    138          	win12512unicode( ustr, myBook->cur_hp.key->name, MAXELEMS( ustr )-1 );
    139          	GUIObject_SetTitleText( om, TextID_Create( ustr, ENC_UCS2, TEXTID_ANY_LEN ) );
    140          
    141          	for ( int i = 0; i<MAXELEMS( modes ); i++ )
   \   0000000C   0060A0E3           MOV      R6,#+0
   \   00000010   450100EF           SWI      +325
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   445084E5           STR      R5,[R4, #+68]
   \   0000001C   540094E5           LDR      R0,[R4, #+84]
   \   00000020   3F20A0E3           MOV      R2,#+63
   \   00000024   041080E2           ADD      R1,R0,#+4
   \   00000028   14008DE2           ADD      R0,SP,#+20
   \   0000002C   ........           _BLF     ??win12512unicode,??win12512unicode??rA
   \   00000030   FF20A0E3           MOV      R2,#+255
   \   00000034   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   14008DE2           ADD      R0,SP,#+20
   \   00000040   5D0100EF           SWI      +349
   \   00000044   0010A0E1           MOV      R1,R0
   \   00000048   0500A0E1           MOV      R0,R5
   \   0000004C   330100EF           SWI      +307
   \   00000050   040000EA           B        ??KeyModeSelect_CreateCBoxGui_1
    142          		strid[i] = GetKeyModeName( i );
   \                     ??KeyModeSelect_CreateCBoxGui_2:
   \   00000054   0600A0E1           MOV      R0,R6
   \   00000058   ........           BL       ??GetKeyModeName
   \   0000005C   0D10A0E1           MOV      R1,SP
   \   00000060   060181E7           STR      R0,[R1, +R6, LSL #+2]
   \   00000064   016086E2           ADD      R6,R6,#+1
   \                     ??KeyModeSelect_CreateCBoxGui_1:
   \   00000068   050056E3           CMP      R6,#+5
   \   0000006C   F8FFFF3A           BCC      ??KeyModeSelect_CreateCBoxGui_2
    143          
    144          	OneOfMany_SetTexts( om, strid, MAXELEMS( modes ) );
   \   00000070   0520A0E3           MOV      R2,#+5
   \   00000074   0D10A0E1           MOV      R1,SP
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   480100EF           SWI      +328
    145          	OneOfMany_SetChecked( om, myBook->cur_hp.key->keymode );
   \   00000080   540094E5           LDR      R0,[R4, #+84]
   \   00000084   301090E5           LDR      R1,[R0, #+48]
   \   00000088   0500A0E1           MOV      R0,R5
   \   0000008C   470100EF           SWI      +327
    146          	GUIObject_SoftKeys_SetAction( om, ACTION_BACK, KeyModeSelect_OnCloseCBoxGui );
   \   00000090   ........           LDR      R0,??DataTable10  ;; ACTION_BACK
   \   00000094   3C209FE5           LDR      R2,??KeyModeSelect_CreateCBoxGui_3  ;; ??KeyModeSelect_OnCloseCBoxGui
   \   00000098   001090E5           LDR      R1,[R0, #+0]
   \   0000009C   0500A0E1           MOV      R0,R5
   \   000000A0   0118A0E1           MOV      R1,R1, LSL #+16
   \   000000A4   2118A0E1           MOV      R1,R1, LSR #+16
   \   000000A8   4B0100EF           SWI      +331
    147          	GUIObject_SoftKeys_SetAction( om, ACTION_SELECT1, KeyModeSelect_OnSelectCBoxGui );
   \   000000AC   ........           LDR      R0,??DataTable9  ;; ACTION_SELECT1
   \   000000B0   24209FE5           LDR      R2,??KeyModeSelect_CreateCBoxGui_3+0x4  ;; ??KeyModeSelect_OnSelectCBoxGui
   \   000000B4   001090E5           LDR      R1,[R0, #+0]
   \   000000B8   0500A0E1           MOV      R0,R5
   \   000000BC   0118A0E1           MOV      R1,R1, LSL #+16
   \   000000C0   2118A0E1           MOV      R1,R1, LSR #+16
   \   000000C4   4B0100EF           SWI      +331
    148          	GUIObject_Show( om );
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   340100EF           SWI      +308
    149          }
   \   000000D0   94D08DE2           ADD      SP,SP,#+148
   \   000000D4   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??KeyModeSelect_CreateCBoxGui_3:
   \   000000D8   ........           DC32     ??KeyModeSelect_OnCloseCBoxGui
   \   000000DC   ........           DC32     ??KeyModeSelect_OnSelectCBoxGui
    150          
    151          

   \                                 In segment CODE, align 4, keep-with-next
    152          void KeyCodeSelect_onEnterPressed( BOOK* bk, GUI* )
    153          {
   \                     ??KeyCodeSelect_onEnterPressed:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    154          	MyBOOK* mbk = (MyBOOK*) bk;
    155          
    156          	int item = ListMenu_GetSelectedItem( mbk->key_sel_list );
    157          	switch ( item )
   \   00000008   400094E5           LDR      R0,[R4, #+64]
   \   0000000C   3E0100EF           SWI      +318
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0200000A           BEQ      ??KeyCodeSelect_onEnterPressed_1
   \   00000018   010050E2           SUBS     R0,R0,#+1
   \   0000001C   0400000A           BEQ      ??KeyCodeSelect_onEnterPressed_2
   \   00000020   1080BDE8           POP      {R4,PC}
    158          	{
    159          	case 0:
    160          		BookObj_CallPage( mbk, &bk_keycode_input );
   \                     ??KeyCodeSelect_onEnterPressed_1:
   \   00000024   14109FE5           LDR      R1,??KeyCodeSelect_onEnterPressed_3  ;; bk_keycode_input
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   B80200EF           SWI      +696
   \   00000030   1080BDE8           POP      {R4,PC}
    161          		break;
    162          	case 1:
    163          
    164          		KeyModeSelect_CreateCBoxGui( mbk );
   \                     ??KeyCodeSelect_onEnterPressed_2:
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   1040BDE8           POP      {R4,LR}          ;; Pop
   \   0000003C   ........           B        ??KeyModeSelect_CreateCBoxGui  ;; tailcall
   \                     ??KeyCodeSelect_onEnterPressed_3:
   \   00000040   ........           DC32     bk_keycode_input
    165          		break;
    166          	}
    167          }
    168          

   \                                 In segment CODE, align 4, keep-with-next
    169          void KeyCodeSelect_OnBack( BOOK* bk, GUI* )
    170          {
   \                     ??KeyCodeSelect_OnBack:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    171          	MyBOOK* myBook = (MyBOOK*) bk;
    172          	FREE_GUI( myBook->key_sel_list );
   \   00000008   400094E5           LDR      R0,[R4, #+64]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      ??KeyCodeSelect_OnBack_1
   \   00000014   CE0100EF           SWI      +462
   \   00000018   400084E5           STR      R0,[R4, #+64]
    173          
    174                  BookObj_ReturnPage( bk, ACCEPT_EVENT );
   \                     ??KeyCodeSelect_OnBack_1:
   \   0000001C   0C009FE5           LDR      R0,??KeyCodeSelect_OnBack_2  ;; ACCEPT_EVENT
   \   00000020   001090E5           LDR      R1,[R0, #+0]
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   2E0100EF           SWI      +302
    175          }
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??KeyCodeSelect_OnBack_2:
   \   00000030   ........           DC32     ACCEPT_EVENT
    176          

   \                                 In segment CODE, align 4, keep-with-next
    177          void KeyCodeSelect_OnDelete( BOOK* bk, GUI* )
    178          {
   \                     ??KeyCodeSelect_OnDelete:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    179          	MyBOOK* mbk = (MyBOOK*) bk;
    180          
    181          	switch ( ListMenu_GetSelectedItem( mbk->key_sel_list ) )
   \   00000008   400094E5           LDR      R0,[R4, #+64]
   \   0000000C   3E0100EF           SWI      +318
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0200000A           BEQ      ??KeyCodeSelect_OnDelete_1
   \   00000018   010050E2           SUBS     R0,R0,#+1
   \   0000001C   0A00000A           BEQ      ??KeyCodeSelect_OnDelete_2
   \   00000020   1080BDE8           POP      {R4,PC}
    182          	{
    183          	case 0:
    184          		mbk->cur_hp.key->keycode = 0;
   \                     ??KeyCodeSelect_OnDelete_1:
   \   00000024   540094E5           LDR      R0,[R4, #+84]
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   2C1080E5           STR      R1,[R0, #+44]
    185          		ListMenu_SetItemSecondLineText( mbk->key_sel_list, 0, KeyCode2Name( 0 ) );
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   CB0200EF           SWI      +715
   \   00000038   0020A0E1           MOV      R2,R0
   \   0000003C   400094E5           LDR      R0,[R4, #+64]
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   A60200EF           SWI      +678
   \   00000048   1080BDE8           POP      {R4,PC}
    186          		break;
    187          	case 1:
    188          		mbk->cur_hp.key->keymode = 0;
   \                     ??KeyCodeSelect_OnDelete_2:
   \   0000004C   540094E5           LDR      R0,[R4, #+84]
   \   00000050   0010A0E3           MOV      R1,#+0
   \   00000054   301080E5           STR      R1,[R0, #+48]
    189          		ListMenu_SetItemSecondLineText( mbk->key_sel_list, 1, TextID_Create( modes[ 0 ], ENC_UCS2, TEXTID_ANY_LEN ) );
   \   00000058   ........           LDR      R0,??DataTable8  ;; modes
   \   0000005C   FF20A0E3           MOV      R2,#+255
   \   00000060   000090E5           LDR      R0,[R0, #+0]
   \   00000064   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000068   5D0100EF           SWI      +349
   \   0000006C   0020A0E1           MOV      R2,R0
   \   00000070   400094E5           LDR      R0,[R4, #+64]
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   A60200EF           SWI      +678
    190          		break;
    191          	}
    192          }
   \   0000007C   1080BDE8           POP      {R4,PC}          ;; return
    193          

   \                                 In segment CODE, align 4, keep-with-next
    194          int KeyCodeSelect_OnEnter( void* , BOOK* bk )
    195          {
   \                     ??KeyCodeSelect_OnEnter:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    196          	MyBOOK* mbk = (MyBOOK*) bk;
    197          
    198          	wchar_t ustr[64];
    199          	GUI_LIST* lo;
    200          	TEXTID strid[2];
    201          
    202          	strid[0] = TextID_Create( L"Select key", ENC_UCS2, TEXTID_ANY_LEN );
   \   00000004   5C419FE5           LDR      R4,??KeyCodeSelect_OnEnter_1  ;; `?<Constant L"\\x53\\x65\\x6c\\x65\\x63\\x74\\x20\\x6b\\`
   \   00000008   88D04DE2           SUB      SP,SP,#+136
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   FF60A0E3           MOV      R6,#+255
   \   00000014   FF6C86E3           ORR      R6,R6,#0xFF00
   \   00000018   0620A0E1           MOV      R2,R6
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   5D0100EF           SWI      +349
   \   00000028   00008DE5           STR      R0,[SP, #+0]
    203          	strid[1] = TextID_Create( L"Key mode", ENC_UCS2, TEXTID_ANY_LEN );
   \   0000002C   0620A0E1           MOV      R2,R6
   \   00000030   0010A0E3           MOV      R1,#+0
   \   00000034   180084E2           ADD      R0,R4,#+24
   \   00000038   5D0100EF           SWI      +349
   \   0000003C   04008DE5           STR      R0,[SP, #+4]
    204          	lo = CreateListMenu( mbk, 0 );
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   C00100EF           SWI      +448
   \   0000004C   0040A0E1           MOV      R4,R0
    205          	mbk->key_sel_list = lo;
   \   00000050   404085E5           STR      R4,[R5, #+64]
    206          
    207          
    208          	win12512unicode( ustr, mbk->cur_hp.key->name, MAXELEMS( ustr )-1 );
   \   00000054   540095E5           LDR      R0,[R5, #+84]
   \   00000058   3F20A0E3           MOV      R2,#+63
   \   0000005C   041080E2           ADD      R1,R0,#+4
   \   00000060   08008DE2           ADD      R0,SP,#+8
   \   00000064   ........           _BLF     ??win12512unicode,??win12512unicode??rA
    209          	GUIObject_SetTitleText( lo, TextID_Create( ustr, ENC_UCS2, TEXTID_ANY_LEN ) );
   \   00000068   0620A0E1           MOV      R2,R6
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   08008DE2           ADD      R0,SP,#+8
   \   00000074   5D0100EF           SWI      +349
   \   00000078   0010A0E1           MOV      R1,R0
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   330100EF           SWI      +307
    210          	ListMenu_SetItemCount( lo, 2 );
   \   00000084   0210A0E3           MOV      R1,#+2
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   C10100EF           SWI      +449
    211          	OneOfMany_SetTexts( lo, strid, 2 );
   \   00000090   0220A0E3           MOV      R2,#+2
   \   00000094   0D10A0E1           MOV      R1,SP
   \   00000098   0400A0E1           MOV      R0,R4
   \   0000009C   480100EF           SWI      +328
    212          
    213          	ListMenu_SetItemSecondLineText( lo, 0, KeyCode2Name( mbk->cur_hp.key->keycode ) );
   \   000000A0   540095E5           LDR      R0,[R5, #+84]
   \   000000A4   2C0090E5           LDR      R0,[R0, #+44]
   \   000000A8   CB0200EF           SWI      +715
   \   000000AC   0020A0E1           MOV      R2,R0
   \   000000B0   0010A0E3           MOV      R1,#+0
   \   000000B4   0400A0E1           MOV      R0,R4
   \   000000B8   A60200EF           SWI      +678
    214          	ListMenu_SetItemSecondLineText( lo, 1, TextID_Create( modes[ mbk->cur_hp.key->keymode ], ENC_UCS2, TEXTID_ANY_LEN ) );
   \   000000BC   540095E5           LDR      R0,[R5, #+84]
   \   000000C0   ........           LDR      R3,??DataTable8  ;; modes
   \   000000C4   300090E5           LDR      R0,[R0, #+48]
   \   000000C8   0620A0E1           MOV      R2,R6
   \   000000CC   000193E7           LDR      R0,[R3, +R0, LSL #+2]
   \   000000D0   0010A0E3           MOV      R1,#+0
   \   000000D4   5D0100EF           SWI      +349
   \   000000D8   0020A0E1           MOV      R2,R0
   \   000000DC   0110A0E3           MOV      R1,#+1
   \   000000E0   0400A0E1           MOV      R0,R4
   \   000000E4   A60200EF           SWI      +678
    215          
    216          	ListMenu_SetCursorToItem( lo, 0 );
   \   000000E8   0010A0E3           MOV      R1,#+0
   \   000000EC   0400A0E1           MOV      R0,R4
   \   000000F0   350100EF           SWI      +309
    217          	ListMenu_SetItemStyle( lo, 1 );
   \   000000F4   0110A0E3           MOV      R1,#+1
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   3F0100EF           SWI      +319
    218          	GUIObject_SoftKeys_SetAction( lo, ACTION_SELECT1, KeyCodeSelect_onEnterPressed );
   \   00000100   ........           LDR      R0,??DataTable9  ;; ACTION_SELECT1
   \   00000104   60209FE5           LDR      R2,??KeyCodeSelect_OnEnter_1+0x4  ;; ??KeyCodeSelect_onEnterPressed
   \   00000108   001090E5           LDR      R1,[R0, #+0]
   \   0000010C   0400A0E1           MOV      R0,R4
   \   00000110   0118A0E1           MOV      R1,R1, LSL #+16
   \   00000114   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000118   4B0100EF           SWI      +331
    219          	GUIObject_SoftKeys_SetAction( lo, ACTION_BACK, KeyCodeSelect_OnBack );
   \   0000011C   ........           LDR      R0,??DataTable10  ;; ACTION_BACK
   \   00000120   48209FE5           LDR      R2,??KeyCodeSelect_OnEnter_1+0x8  ;; ??KeyCodeSelect_OnBack
   \   00000124   001090E5           LDR      R1,[R0, #+0]
   \   00000128   0400A0E1           MOV      R0,R4
   \   0000012C   0118A0E1           MOV      R1,R1, LSL #+16
   \   00000130   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000134   4B0100EF           SWI      +331
    220          	GUIObject_SoftKeys_SetAction( lo, ACTION_DELETE, KeyCodeSelect_OnDelete );
   \   00000138   34009FE5           LDR      R0,??KeyCodeSelect_OnEnter_1+0xC  ;; ACTION_DELETE
   \   0000013C   34209FE5           LDR      R2,??KeyCodeSelect_OnEnter_1+0x10  ;; ??KeyCodeSelect_OnDelete
   \   00000140   001090E5           LDR      R1,[R0, #+0]
   \   00000144   0400A0E1           MOV      R0,R4
   \   00000148   0118A0E1           MOV      R1,R1, LSL #+16
   \   0000014C   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000150   4B0100EF           SWI      +331
    221          	GUIObject_Show( lo );
   \   00000154   0400A0E1           MOV      R0,R4
   \   00000158   340100EF           SWI      +308
    222          	return 1;
   \   0000015C   0100A0E3           MOV      R0,#+1
   \   00000160   88D08DE2           ADD      SP,SP,#+136
   \   00000164   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??KeyCodeSelect_OnEnter_1:
   \   00000168   ........           DC32     `?<Constant L"\\x53\\x65\\x6c\\x65\\x63\\x74\\x20\\x6b\\`
   \   0000016C   ........           DC32     ??KeyCodeSelect_onEnterPressed
   \   00000170   ........           DC32     ??KeyCodeSelect_OnBack
   \   00000174   ........           DC32     ACTION_DELETE
   \   00000178   ........           DC32     ??KeyCodeSelect_OnDelete
    223          }
    224          
    225          

   \                                 In segment CODE, align 4, keep-with-next
    226          int KeyCodeSelect_OnExit( void* , BOOK* bk )
    227          {
    228          	return 1;
   \                     ??KeyCodeSelect_OnExit:
   \   00000000   0100A0E3           MOV      R0,#+1
   \   00000004   1EFF2FE1           BX       LR               ;; return
    229          }
    230          

   \                                 In segment DYN_PAGE, align 4, align-sorted
    231          const PAGE_MSG bk_msglst_keycodeselect[] @ "DYN_PAGE" =
   \                     bk_msglst_keycodeselect:
   \   00000000   42000000....       DC32 66, ??KeyCodeSelect_OnEnter, 67, ??KeyCodeSelect_OnExit, 64, 0H
   \              ....43000000
   \              ........4000
   \              000000000000
    232          {
    233          	PAGE_ENTER_EVENT_TAG, KeyCodeSelect_OnEnter,
    234          	PAGE_EXIT_EVENT_TAG, KeyCodeSelect_OnExit,
    235          	NIL_EVENT_TAG, NULL
    236          };
    237          

   \                                 In segment DATA_C, align 4, align-sorted
    238          const PAGE_DESC bk_keycode_select = { "BcfgEdit_KeyCodeSelect_Page", 0, bk_msglst_keycodeselect };
   \                     bk_keycode_select:
   \   00000000   ........0000       DC32 `?<Constant "BcfgEdit_KeyCodeSelec...">`, 0H
   \              0000        
   \   00000008   ........           DC32 bk_msglst_keycodeselect

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     `?<Constant "elfpackdata">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     modes

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     ACTION_SELECT1

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     ACTION_BACK

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for modes>`:
   \   00000000   ........           DC32 `?<Constant L"\\x53\\x68\\x6f\\x72\\x74\\x20\\x50\\x72\\`
   \   00000004   ........           DC32 `?<Constant L"\\x4c\\x6f\\x6e\\x67\\x20\\x50\\x72\\x65\\`
   \   00000008   ........           DC32 `?<Constant L"\\x52\\x65\\x70\\x65\\x61\\x74">`
   \   0000000C   ........           DC32 `?<Constant L"\\x53\\x68\\x6f\\x72\\x74\\x20\\x52\\x65\\`
   \   00000010   ........           DC32 `?<Constant L"\\x4c\\x6f\\x6e\\x67\\x20\\x52\\x65\\x6c\\`

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "BcfgEdit_KeyCodeInput...">`:
   \   00000000   426366674564       DC8 "BcfgEdit_KeyCodeInput_Page"
   \              69745F4B6579
   \              436F6465496E
   \              7075745F5061
   \              676500      
   \   0000001B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x53\\x68\\x6f\\x72\\x74\\x20\\x50\\x72\\`:
   \   00000000   530068006F00       DC8 53H, 0, 68H, 0, 6FH, 0, 72H, 0
   \              7200        
   \   00000008   740020005000       DC8 74H, 0, 20H, 0, 50H, 0, 72H, 0
   \              7200        
   \   00000010   650073007300       DC8 65H, 0, 73H, 0, 73H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x4c\\x6f\\x6e\\x67\\x20\\x50\\x72\\x65\\`:
   \   00000000   4C006F006E00       DC8 4CH, 0, 6FH, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000008   200050007200       DC8 20H, 0, 50H, 0, 72H, 0, 65H, 0
   \              6500        
   \   00000010   730073000000       DC8 73H, 0, 73H, 0, 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x52\\x65\\x70\\x65\\x61\\x74">`:
   \   00000000   520065007000       DC8 52H, 0, 65H, 0, 70H, 0, 65H, 0
   \              6500        
   \   00000008   610074000000       DC8 61H, 0, 74H, 0, 0, 0
   \   0000000E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x53\\x68\\x6f\\x72\\x74\\x20\\x52\\x65\\`:
   \   00000000   530068006F00       DC8 53H, 0, 68H, 0, 6FH, 0, 72H, 0
   \              7200        
   \   00000008   740020005200       DC8 74H, 0, 20H, 0, 52H, 0, 65H, 0
   \              6500        
   \   00000010   6C0065006100       DC8 6CH, 0, 65H, 0, 61H, 0, 73H, 0
   \              7300        
   \   00000018   65000000           DC8 65H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x4c\\x6f\\x6e\\x67\\x20\\x52\\x65\\x6c\\`:
   \   00000000   4C006F006E00       DC8 4CH, 0, 6FH, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000008   200052006500       DC8 20H, 0, 52H, 0, 65H, 0, 6CH, 0
   \              6C00        
   \   00000010   650061007300       DC8 65H, 0, 61H, 0, 73H, 0, 65H, 0
   \              6500        
   \   00000018   0000               DC8 0, 0
   \   0000001A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "BcfgEdit_KeyCodeSelec...">`:
   \   00000000   426366674564       DC8 "BcfgEdit_KeyCodeSelect_Page"
   \              69745F4B6579
   \              436F64655365
   \              6C6563745F50
   \              61676500    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "elfpackdata">`:
   \   00000000   656C66706163       DC8 "elfpackdata"
   \              6B6461746100
   \   0000000C   4B657920626C       DC8 "Key blocked"
   \              6F636B656400
   \   00000018   0A000A004800       DC8 0AH, 0, 0AH, 0, 48H, 0, 45H, 0
   \              4500        
   \   00000020   58003A002000       DC8 58H, 0, 3AH, 0, 20H, 0, 30H, 0
   \              3000        
   \   00000028   780025003000       DC8 78H, 0, 25H, 0, 30H, 0, 32H, 0
   \              3200        
   \   00000030   58000A004400       DC8 58H, 0, 0AH, 0, 44H, 0, 45H, 0
   \              4500        
   \   00000038   43003A002000       DC8 43H, 0, 3AH, 0, 20H, 0, 25H, 0
   \              2500        
   \   00000040   64000000           DC8 64H, 0, 0, 0
   \   00000044   430075007200       DC8 43H, 0, 75H, 0, 72H, 0, 72H, 0
   \              7200        
   \   0000004C   65006E007400       DC8 65H, 0, 6EH, 0, 74H, 0, 20H, 0
   \              2000        
   \   00000054   6B0065007900       DC8 6BH, 0, 65H, 0, 79H, 0, 3AH, 0
   \              3A00        
   \   0000005C   0A000A000000       DC8 0AH, 0, 0AH, 0, 0, 0
   \   00000062   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x53\\x65\\x6c\\x65\\x63\\x74\\x20\\x6b\\`:
   \   00000000   530065006C00       DC8 53H, 0, 65H, 0, 6CH, 0, 65H, 0
   \              6500        
   \   00000008   630074002000       DC8 63H, 0, 74H, 0, 20H, 0, 6BH, 0
   \              6B00        
   \   00000010   650079000000       DC8 65H, 0, 79H, 0, 0, 0
   \   00000016   0000               DC8 0, 0
   \   00000018   4B0065007900       DC8 4BH, 0, 65H, 0, 79H, 0, 20H, 0
   \              2000        
   \   00000020   6D006F006400       DC8 6DH, 0, 6FH, 0, 64H, 0, 65H, 0
   \              6500        
   \   00000028   0000               DC8 0, 0
   \   0000002A   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     GetKeyModeName(int)                4
     KeyCodeSelect_OnBack(BOOK *, GUI *)
                                        8
     KeyCodeSelect_OnDelete(BOOK *, GUI *)
                                        8
     KeyCodeSelect_OnEnter(void *, BOOK *)
                                      152
     KeyCodeSelect_OnExit(void *, BOOK *)
                                        0
     KeyCodeSelect_onEnterPressed(BOOK *, GUI *)
                                        8
     KeyCode_KeyHook(BOOK *, int, int, int)
                                      164
     KeyCode_OnClose(BOOK *)            8
     KeyCode_OnEnter(void *, BOOK *)
                                      164
     KeyCode_OnExit(void *, BOOK *)     8
     KeyModeSelect_CreateCBoxGui(MyBOOK *)
                                      164
     KeyModeSelect_OnCloseCBoxGui(BOOK *, GUI *)
                                        8
     KeyModeSelect_OnSelectCBoxGui(BOOK *, GUI *)
                                        8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     KeyCode_KeyHook(BOOK *, int, int, int)
                                     272
     KeyCode_OnClose(BOOK *)          52
     KeyCode_OnEnter(void *, BOOK *)
                                     240
     KeyCode_OnExit(void *, BOOK *)   44
     bk_msglst_keycodeinput          120
     bk_keycode_input                 12
     modes                            20
     GetKeyModeName(int)              48
     KeyModeSelect_OnCloseCBoxGui(BOOK *, GUI *)
                                      32
     KeyModeSelect_OnSelectCBoxGui(BOOK *, GUI *)
                                      88
     KeyModeSelect_CreateCBoxGui(MyBOOK *)
                                     224
     KeyCodeSelect_onEnterPressed(BOOK *, GUI *)
                                      68
     KeyCodeSelect_OnBack(BOOK *, GUI *)
                                      52
     KeyCodeSelect_OnDelete(BOOK *, GUI *)
                                     128
     KeyCodeSelect_OnEnter(void *, BOOK *)
                                     380
     KeyCodeSelect_OnExit(void *, BOOK *)
                                       8
     bk_msglst_keycodeselect          24
     bk_keycode_select                12
     ??DataTable2                      4
     ??DataTable8                      4
     ??DataTable9                      4
     ??DataTable10                     4
     ?<Initializer for modes>         20
     ?<Constant "BcfgEdit_KeyCodeInput...">
                                      28
     ?<Constant L"\x53\x68\x6f\x72\x74\x20\x50\x72\
                                      24
     ?<Constant L"\x4c\x6f\x6e\x67\x20\x50\x72\x65\
                                      24
     ?<Constant L"\x52\x65\x70\x65\x61\x74">
                                      16
     ?<Constant L"\x53\x68\x6f\x72\x74\x20\x52\x65\
                                      28
     ?<Constant L"\x4c\x6f\x6e\x67\x20\x52\x65\x6c\
                                      28
     ?<Constant "BcfgEdit_KeyCodeSelec...">
                                      28
     ?<Constant "elfpackdata">       100
     ?<Constant L"\x53\x65\x6c\x65\x63\x74\x20\x6b\
                                      44
      Others                          76

 
 1 716 bytes in segment CODE
   344 bytes in segment DATA_C
    20 bytes in segment DATA_I
    20 bytes in segment DATA_ID
   144 bytes in segment DYN_PAGE
    12 bytes in segment INITTAB
 
 1 652 bytes of CODE  memory (+ 76 bytes shared)
   508 bytes of CONST memory
    20 bytes of DATA  memory

Errors: none
Warnings: none
