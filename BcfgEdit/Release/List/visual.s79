//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:42:55 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\visu /
//                       al.cpp                                              /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\visu /
//                       al.cpp -D NDEBUG -lCN Z:\home\perk11\www\perk11.inf /
//                       o\svn\SE\BcfgEdit\Release\List\ -la                 /
//                       Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\Rele /
//                       ase\List\ -o Z:\home\perk11\www\perk11.info\svn\SE\ /
//                       BcfgEdit\Release\Obj\ -s9 --no_unroll               /
//                       --no_code_motion --cpu_mode arm --endian little     /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --enable_multibytes --fpu None --eec++              /
//                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl /
//                       8n.h -I Z:\home\perk11\IAR2\arm\INC\                /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\Rele /
//                       ase\List\visual.s79                                 /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME visual

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ??div32_a

        PUBWEAK `?*?DATA_ID`
        PUBLIC ??AddToFList
        FUNCTION ??AddToFList,0203H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??AddToFList??rT
        PUBLIC ??CheckStringVisibility
        FUNCTION ??CheckStringVisibility,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??CheckStringVisibility??rT
        PUBLIC ??ColorGuiOnClose
        FUNCTION ??ColorGuiOnClose,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??ColorGuiOnClose??rT
        PUBLIC ??ColorGuiOnCreate
        FUNCTION ??ColorGuiOnCreate,0603H
        MULTWEAK ??ColorGuiOnCreate??rT
        PUBLIC ??ColorGuiOnKey
        FUNCTION ??ColorGuiOnKey,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??ColorGuiOnKey??rT
        PUBLIC ??ColorGuiOnRedraw
        FUNCTION ??ColorGuiOnRedraw,0603H
        LOCFRAME CSTACK, 152, STACK
        MULTWEAK ??ColorGuiOnRedraw??rT
        PUBLIC ??CoordinatesGuiOnClose
        FUNCTION ??CoordinatesGuiOnClose,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??CoordinatesGuiOnClose??rT
        PUBLIC ??CoordinatesGuiOnCreate
        FUNCTION ??CoordinatesGuiOnCreate,0603H
        MULTWEAK ??CoordinatesGuiOnCreate??rT
        PUBLIC ??CoordinatesGuiOnKey
        FUNCTION ??CoordinatesGuiOnKey,0603H
        LOCFRAME CSTACK, 24, STACK
        MULTWEAK ??CoordinatesGuiOnKey??rT
        PUBLIC ??CoordinatesGuiOnRedraw
        FUNCTION ??CoordinatesGuiOnRedraw,0603H
        LOCFRAME CSTACK, 148, STACK
        MULTWEAK ??CoordinatesGuiOnRedraw??rT
        PUBLIC ??CreateEditColorGUI
        FUNCTION ??CreateEditColorGUI,0203H
        LOCFRAME CSTACK, 96, STACK
        MULTWEAK ??CreateEditColorGUI??rT
        PUBLIC ??CreateEditCoordinatesGUI
        FUNCTION ??CreateEditCoordinatesGUI,0203H
        LOCFRAME CSTACK, 28, STACK
        MULTWEAK ??CreateEditCoordinatesGUI??rT
        PUBLIC ??CreateFileFolderSelect
        FUNCTION ??CreateFileFolderSelect,0203H
        LOCFRAME CSTACK, 24, STACK
        MULTWEAK ??CreateFileFolderSelect??rT
        PUBLIC ??CreateFontSelectGUI
        FUNCTION ??CreateFontSelectGUI,0203H
        LOCFRAME CSTACK, 160, STACK
        MULTWEAK ??CreateFontSelectGUI??rT
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable10 EQU 0
??DataTable11 EQU 0
??DataTable15 EQU 0
??DataTable16 EQU 0
??DataTable19 EQU 0
??DataTable2 EQU 0
??DataTable20 EQU 0
??DataTable22 EQU 0
??DataTable23 EQU 0
??DataTable25 EQU 0
??DataTable27 EQU 0
??DataTable28 EQU 0
??DataTable3 EQU 0
??DataTable32 EQU 0
??DataTable33 EQU 0
??DataTable34 EQU 0
??DataTable36 EQU 0
??DataTable4 EQU 0
??DataTable40 EQU 0
??DataTable43 EQU 0
??DataTable44 EQU 0
??DataTable45 EQU 0
??DataTable47 EQU 0
??DataTable48 EQU 0
??DataTable49 EQU 0
??DataTable5 EQU 0
??DataTable50 EQU 0
??DataTable51 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
??DataTable9 EQU 0
        PUBLIC ??DrawArrow
        FUNCTION ??DrawArrow,0203H
        LOCFRAME CSTACK, 68, STACK
        MULTWEAK ??DrawArrow??rT
        PUBLIC ??DrawOwnRect
        FUNCTION ??DrawOwnRect,0203H
        LOCFRAME CSTACK, 40, STACK
        MULTWEAK ??DrawOwnRect??rT
        PUBLIC ??EditColorGui_constr
        FUNCTION ??EditColorGui_constr,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??EditColorGui_constr??rT
        PUBLIC ??EditColorGui_destr
        FUNCTION ??EditColorGui_destr,0603H
        MULTWEAK ??EditColorGui_destr??rT
        PUBLIC ??EditCoordinatesGui_constr
        FUNCTION ??EditCoordinatesGui_constr,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??EditCoordinatesGui_constr??rT
        PUBLIC ??EditCoordinatesGui_destr
        FUNCTION ??EditCoordinatesGui_destr,0603H
        MULTWEAK ??EditCoordinatesGui_destr??rT
        PUBLIC ??FindFLISTtByN
        FUNCTION ??FindFLISTtByN,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??FindFLISTtByN??rT
        PUBLIC ??FindFLISTtByNS
        FUNCTION ??FindFLISTtByNS,0203H
        MULTWEAK ??FindFLISTtByNS??rT
        PUBLIC ??FindFiles
        FUNCTION ??FindFiles,0203H
        LOCFRAME CSTACK, 80, STACK
        MULTWEAK ??FindFiles??rT
        PUBLIC ??FontSelectGuiOnClose
        FUNCTION ??FontSelectGuiOnClose,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??FontSelectGuiOnClose??rT
        PUBLIC ??FontSelectGuiOnCreate
        FUNCTION ??FontSelectGuiOnCreate,0603H
        LOCFRAME CSTACK, 144, STACK
        MULTWEAK ??FontSelectGuiOnCreate??rT
        PUBLIC ??FontSelectGuiOnKey
        FUNCTION ??FontSelectGuiOnKey,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??FontSelectGuiOnKey??rT
        PUBLIC ??FontSelectGuiOnRedraw
        FUNCTION ??FontSelectGuiOnRedraw,0603H
        LOCFRAME CSTACK, 88, STACK
        MULTWEAK ??FontSelectGuiOnRedraw??rT
        PUBLIC ??FontSelectGui_constr
        FUNCTION ??FontSelectGui_constr,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??FontSelectGui_constr??rT
        PUBLIC ??FontSelectGui_destr
        FUNCTION ??FontSelectGui_destr,0603H
        MULTWEAK ??FontSelectGui_destr??rT
        PUBLIC ??Font_GetNameByFontId
        FUNCTION ??Font_GetNameByFontId,0203H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??Font_GetNameByFontId??rT
        PUBLIC ??Free_FLIST
        FUNCTION ??Free_FLIST,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??Free_FLIST??rT
        PUBLIC ??GetIdByFontId
        FUNCTION ??GetIdByFontId,0203H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??GetIdByFontId??rT
        PUBLIC ??OnBackColorEdit
        FUNCTION ??OnBackColorEdit,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnBackColorEdit??rT
        PUBLIC ??OnBackCoordinatesEdit
        FUNCTION ??OnBackCoordinatesEdit,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnBackCoordinatesEdit??rT
        PUBLIC ??OnBackFontSelect
        FUNCTION ??OnBackFontSelect,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnBackFontSelect??rT
        PUBLIC ??OnBackManualFontSelect
        FUNCTION ??OnBackManualFontSelect,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnBackManualFontSelect??rT
        PUBLIC ??OnManualFontSelect
        FUNCTION ??OnManualFontSelect,0603H
        LOCFRAME CSTACK, 48, STACK
        MULTWEAK ??OnManualFontSelect??rT
        PUBLIC ??OnMessage
        FUNCTION ??OnMessage,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnMessage??rT
        PUBLIC ??OnOkColorEdit
        FUNCTION ??OnOkColorEdit,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnOkColorEdit??rT
        PUBLIC ??OnOkCoordinatesEdit
        FUNCTION ??OnOkCoordinatesEdit,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnOkCoordinatesEdit??rT
        PUBLIC ??OnOkFontSelect
        FUNCTION ??OnOkFontSelect,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??OnOkFontSelect??rT
        PUBLIC ??OnOkManualFontSelect
        FUNCTION ??OnOkManualFontSelect,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??OnOkManualFontSelect??rT
        PUBLIC ??OnOrientationChangeCoordinatesEdit
        FUNCTION ??OnOrientationChangeCoordinatesEdit,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnOrientationChangeCoordinatesEdit??rT
        MULTWEAK ??RefreshEdList??rA
        PUBLIC ??Self_OnBack
        FUNCTION ??Self_OnBack,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??Self_OnBack??rT
        PUBLIC ??Self_onEnterPressed
        FUNCTION ??Self_onEnterPressed,0603H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??Self_onEnterPressed??rT
        PUBLIC ??Self_onSelectPressed
        FUNCTION ??Self_onSelectPressed,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??Self_onSelectPressed??rT
        PUBLIC ??isdir
        FUNCTION ??isdir,0203H
        LOCFRAME CSTACK, 44, STACK
        MULTWEAK ??isdir??rT
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new??rA`
        MULTWEAK `??operator new[]??rA`
        MULTWEAK ??rA??div32_a
        MULTWEAK ??win12512unicode??rA
        PUBWEAK ?init?tab?DATA_I
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC colors
        PUBLIC fltop
        PUBLIC font_step
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        






??AddToFList??rT    SYMBOL "??rT", ??AddToFList

??CheckStringVisibility??rT SYMBOL "??rT", ??CheckStringVisibility

??ColorGuiOnClose??rT SYMBOL "??rT", ??ColorGuiOnClose

??ColorGuiOnCreate??rT SYMBOL "??rT", ??ColorGuiOnCreate

??ColorGuiOnKey??rT SYMBOL "??rT", ??ColorGuiOnKey

??ColorGuiOnRedraw??rT SYMBOL "??rT", ??ColorGuiOnRedraw

??CoordinatesGuiOnClose??rT SYMBOL "??rT", ??CoordinatesGuiOnClose

??CoordinatesGuiOnCreate??rT SYMBOL "??rT", ??CoordinatesGuiOnCreate

??CoordinatesGuiOnKey??rT SYMBOL "??rT", ??CoordinatesGuiOnKey

??CoordinatesGuiOnRedraw??rT SYMBOL "??rT", ??CoordinatesGuiOnRedraw

??CreateEditColorGUI??rT SYMBOL "??rT", ??CreateEditColorGUI

??CreateEditCoordinatesGUI??rT SYMBOL "??rT", ??CreateEditCoordinatesGUI

??CreateFileFolderSelect??rT SYMBOL "??rT", ??CreateFileFolderSelect

??CreateFontSelectGUI??rT SYMBOL "??rT", ??CreateFontSelectGUI

??DrawArrow??rT     SYMBOL "??rT", ??DrawArrow

??DrawOwnRect??rT   SYMBOL "??rT", ??DrawOwnRect

??EditColorGui_constr??rT SYMBOL "??rT", ??EditColorGui_constr

??EditColorGui_destr??rT SYMBOL "??rT", ??EditColorGui_destr

??EditCoordinatesGui_constr??rT SYMBOL "??rT", ??EditCoordinatesGui_constr

??EditCoordinatesGui_destr??rT SYMBOL "??rT", ??EditCoordinatesGui_destr

??FindFLISTtByN??rT SYMBOL "??rT", ??FindFLISTtByN

??FindFLISTtByNS??rT SYMBOL "??rT", ??FindFLISTtByNS

??FindFiles??rT     SYMBOL "??rT", ??FindFiles

??FontSelectGuiOnClose??rT SYMBOL "??rT", ??FontSelectGuiOnClose

??FontSelectGuiOnCreate??rT SYMBOL "??rT", ??FontSelectGuiOnCreate

??FontSelectGuiOnKey??rT SYMBOL "??rT", ??FontSelectGuiOnKey

??FontSelectGuiOnRedraw??rT SYMBOL "??rT", ??FontSelectGuiOnRedraw

??FontSelectGui_constr??rT SYMBOL "??rT", ??FontSelectGui_constr

??FontSelectGui_destr??rT SYMBOL "??rT", ??FontSelectGui_destr

??Font_GetNameByFontId??rT SYMBOL "??rT", ??Font_GetNameByFontId

??Free_FLIST??rT    SYMBOL "??rT", ??Free_FLIST

??GetIdByFontId??rT SYMBOL "??rT", ??GetIdByFontId

??OnBackColorEdit??rT SYMBOL "??rT", ??OnBackColorEdit

??OnBackCoordinatesEdit??rT SYMBOL "??rT", ??OnBackCoordinatesEdit

??OnBackFontSelect??rT SYMBOL "??rT", ??OnBackFontSelect

??OnBackManualFontSelect??rT SYMBOL "??rT", ??OnBackManualFontSelect

??OnManualFontSelect??rT SYMBOL "??rT", ??OnManualFontSelect

??OnMessage??rT     SYMBOL "??rT", ??OnMessage

??OnOkColorEdit??rT SYMBOL "??rT", ??OnOkColorEdit

??OnOkCoordinatesEdit??rT SYMBOL "??rT", ??OnOkCoordinatesEdit

??OnOkFontSelect??rT SYMBOL "??rT", ??OnOkFontSelect

??OnOkManualFontSelect??rT SYMBOL "??rT", ??OnOkManualFontSelect

??OnOrientationChangeCoordinatesEdit??rT SYMBOL "??rT", ??OnOrientationChangeCoordinatesEdit
??RefreshEdList??rA SYMBOL "??rA", ??RefreshEdList

??Self_OnBack??rT   SYMBOL "??rT", ??Self_OnBack

??Self_onEnterPressed??rT SYMBOL "??rT", ??Self_onEnterPressed

??Self_onSelectPressed??rT SYMBOL "??rT", ??Self_onSelectPressed

??isdir??rT         SYMBOL "??rT", ??isdir
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new??rA` SYMBOL "??rA", `??operator new`
`??operator new[]??rA` SYMBOL "??rA", `??operator new[]`
??win12512unicode??rA SYMBOL "??rA", ??win12512unicode

        EXTERN ??RefreshEdList
        FUNCTION ??RefreshEdList,0202H
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new`
        FUNCTION `??operator new`,0202H
        EXTERN `??operator new[]`
        FUNCTION `??operator new[]`,0202H
        EXTERN ??win12512unicode
        FUNCTION ??win12512unicode,0202H
        EXTERN ACTION_BACK
        EXTERN ACTION_SELECT1
        EXTERN FONT_E_20R
        EXTERN KBD_LONG_RELEASE
        EXTERN KBD_REPEAT
        EXTERN KBD_SHORT_RELEASE
        EXTERN KEY_DEL
        EXTERN KEY_DIGITAL_0
        EXTERN KEY_DOWN
        EXTERN KEY_ENTER
        EXTERN KEY_ESC
        EXTERN KEY_LEFT
        EXTERN KEY_LEFT_SOFT
        EXTERN KEY_RIGHT
        EXTERN KEY_RIGHT_SOFT
        EXTERN KEY_UP
        EXTERN VAR_ARG_BOOK
        EXTERN VAR_ARG_CALL_BACK_OK
        EXTERN VAR_ARG_CALL_BACK_PREV_ACT
        EXTERN VAR_ARG_HTEXT
        EXTERN VAR_ARG_STRINP_EMPTY_STR_EN
        EXTERN VAR_ARG_STRINP_MODE


        RSEG DATA_I:DATA:SORT:NOROOT(2)
colors:
        DS8 16
        REQUIRE `?<Initializer for colors>`

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
font_step:
        DS8 4

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??ColorGuiOnCreate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??ColorGuiOnCreate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??ColorGuiOnCreate
        ARM
??ColorGuiOnCreate:
        MVN      R1,#-1879048192
        STR      R1,[R0, #+388]
        MOV      R1,#+1
        STR      R1,[R0, #+392]
        MOV      R2,#+0
        STR      R2,[R0, #+384]
        STR      R1,[R0, #+396]
        MOV      R0,#+1
        BX       LR               ;; return
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??ColorGuiOnClose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??ColorGuiOnClose

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??ColorGuiOnClose
        ARM
??ColorGuiOnClose:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R0,[R0, #+388]
        SWI      +353
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??ColorGuiOnRedraw??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??ColorGuiOnRedraw

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??ColorGuiOnRedraw
        ARM
??ColorGuiOnRedraw:
        PUSH     {R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+36
        MOV      R4,R0
        LDR      R0,??DataTable14  ;; FONT_E_20R
        SUB      SP,SP,#+92
        CFI CFA R13+128
        LDR      R9,[R0, #+0]
        SWI      +485
        MOV      R6,R0
        ADD      R1,SP,#+12
        SWI      +487
        MOV      R0,R6
        SWI      +488
        STR      R0,[SP, #+20]
        MOV      R1,#+1
        MOV      R0,R6
        SWI      +489
        LDRH     R7,[SP, #+12]
        LDRH     R1,[SP, #+14]
        LDRH     R8,[SP, #+16]
        SUB      R1,R1,R7
        STR      R1,[SP, #+4]
        LDRH     R0,[SP, #+18]
        SUB      R11,R0,R8
        MOV      R0,R9
        SWI      +497
        LDR      R2,??ColorGuiOnRedraw_1  ;; 0x38e38e39
        STR      R0,[SP, #+24]
        LDR      R1,[SP, #+4]
        MVN      R0,#+0
        SMULL    R3,R9,R2,R1
        ADD      R3,R11,R8
        ASR      R9,R9,#+1
        ADD      R1,R9,R1, LSR #+31
        STR      R1,[SP, #+0]
        PUSH     {R0}
        CFI CFA R13+132
        PUSH     {R0}
        CFI CFA R13+136
        LDR      R0,[SP, #+12]
        MOV      R1,R8
        ADD      R2,R0,R7
        MOV      R0,R7
        SWI      +492
        LDR      R0,[R4, #+392]
        SUB      R10,R11,#+40
        CMP      R0,#+0
        ADD      SP,SP,#+8
        CFI CFA R13+128
        BEQ      ??ColorGuiOnRedraw_2
        LDR      R0,[R4, #+376]
        LDR      R2,??ColorGuiOnRedraw_1+0x4  ;; `?<Constant L"\\x25\\x30\\x32\\x58\\x2c\\x20\\x25\\x30\\`
        PUSH     {R0}
        CFI CFA R13+132
        LDR      R0,[R4, #+372]
        MOV      R1,#+31
        PUSH     {R0}
        CFI CFA R13+136
        LDR      R0,[R4, #+368]
        PUSH     {R0}
        CFI CFA R13+140
        LDR      R3,[R4, #+364]
        ADD      R0,SP,#+40
        SWI      +277
        LDR      R0,[R4, #+388]
        SWI      +353
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,SP,#+40
        SWI      +349
        STR      R0,[R4, #+388]
        MOV      R0,#+0
        STR      R0,[R4, #+392]
        ADD      SP,SP,#+12
        CFI CFA R13+128
??ColorGuiOnRedraw_2:
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+132
        ADD      R3,R8,#+1
        ADD      R2,R7,#+1
        MOV      R1,#+0
        MOV      R0,#-16777216
        PUSH     {R0}
        CFI CFA R13+136
        MOV      R9,#+0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+140
        PUSH     {R0}
        CFI CFA R13+144
        ADD      R0,R8,#+22
        PUSH     {R0}
        CFI CFA R13+148
        LDR      R0,[SP, #+24]
        ADD      R0,R0,R7
        SUB      R0,R0,#+30
        PUSH     {R0}
        CFI CFA R13+152
        LDR      R0,[R4, #+388]
        SWI      +493
        ADD      SP,SP,#+24
        CFI CFA R13+128
??ColorGuiOnRedraw_3:
        LDR      R1,[SP, #+0]
        ADD      R10,R10,#+1
        MOV      R2,R1
        MUL      R3,R2,R9
        ADD      R1,R1,R3, LSL #+1
        STR      R1,[SP, #+8]
        LDR      R0,[R4, #+384]
        CMP      R0,R9
        BNE      ??ColorGuiOnRedraw_4
        ADD      R0,R1,R7
        MVN      R1,#+0
        PUSH     {R1}
        CFI CFA R13+132
        MOV      R1,#-16777216
        PUSH     {R1}
        CFI CFA R13+136
        ADD      R1,R10,R8
        ADD      R3,R1,#+25
        ADD      R1,R2,R0
        ADD      R2,R1,#+2
        ADD      R1,R8,#+21
        SUB      R0,R0,#+2
        SWI      +492
        ADD      SP,SP,#+8
        CFI CFA R13+128
??ColorGuiOnRedraw_4:
        LDR      R1,??ColorGuiOnRedraw_1+0x8  ;; colors
        LDR      R0,[SP, #+8]
        LDR      R1,[R1, +R9, LSL #+2]
        ADD      R0,R0,R7
        PUSH     {R1}
        CFI CFA R13+132
        MOV      R1,#-16777216
        PUSH     {R1}
        CFI CFA R13+136
        ADD      R1,R10,R8
        ADD      R3,R1,#+23
        LDR      R1,[SP, #+8]
        SUB      R10,R10,#+1
        ADD      R2,R1,R0
        ADD      R1,R8,#+23
        SWI      +492
        MOVS     R0,R9
        ADD      SP,SP,#+8
        CFI CFA R13+128
        BEQ      ??ColorGuiOnRedraw_5
        SUBS     R0,R9,#+1
        BEQ      ??ColorGuiOnRedraw_6
        SUBS     R0,R0,#+1
        BEQ      ??ColorGuiOnRedraw_7
        SUBS     R0,R0,#+1
        BEQ      ??ColorGuiOnRedraw_8
        B        ??ColorGuiOnRedraw_9
??ColorGuiOnRedraw_5:
        LDR      R1,[R4, #+364]
??ColorGuiOnRedraw_10:
        ADD      R0,R10,#+23
        LDR      R2,??ColorGuiOnRedraw_1+0xC  ;; 0xffffffff80808081
        MUL      R1,R10,R1
??ColorGuiOnRedraw_11:
        SMULL    R3,R5,R2,R1
        ADD      R5,R5,R1
        ASR      R5,R5,#+7
        ADD      R1,R5,R1, LSR #+31
        SUB      R5,R0,R1
        B        ??ColorGuiOnRedraw_9
??ColorGuiOnRedraw_6:
        LDR      R1,[R4, #+368]
        B        ??ColorGuiOnRedraw_10
??ColorGuiOnRedraw_7:
        LDR      R1,[R4, #+372]
        LDR      R2,??ColorGuiOnRedraw_1+0xC  ;; 0xffffffff80808081
        MUL      R1,R10,R1
        ADD      R0,R10,#+23
        B        ??ColorGuiOnRedraw_11
??ColorGuiOnRedraw_8:
        LDR      R0,[R4, #+380]
        ADD      R2,R10,#+23
        CMP      R0,#+0
        LDR      R0,[R4, #+376]
        MOVEQ    R1,#+100
        MOVNE    R1,#+255
        MUL      R0,R10,R0
        _BLF     ??div32_a,??rA??div32_a
        SUB      R5,R2,R1
??ColorGuiOnRedraw_9:
        MOV      R0,R6
        SWI      +607
        MOV      R11,R0
        MOV      R1,#-16777216
        MOV      R0,R6
        SWI      +608
        LDR      R0,[SP, #+8]
        ADD      R2,R5,R8
        MOV      R1,R2
        PUSH     {R1}
        CFI CFA R13+132
        LDR      R1,[SP, #+4]
        ADD      R0,R0,R7
        ADD      R9,R9,#+1
        ADD      R1,R1,R0
        SUB      R3,R1,#+1
        MOV      R1,R0
        MOV      R0,R6
        SWI      +610
        MOV      R1,R11
        MOV      R0,R6
        SWI      +608
        CMP      R9,#+4
        ADD      SP,SP,#+4
        CFI CFA R13+128
        BNE      ??ColorGuiOnRedraw_3
        LDR      R0,[R4, #+380]
        CMP      R0,#+0
        LDR      R0,[R4, #+376]
        BNE      ??ColorGuiOnRedraw_12
        LDR      R1,??ColorGuiOnRedraw_1+0x10  ;; 0x51eb851f
        RSB      R0,R0,R0, LSL #+8
        SMULL    R2,R3,R1,R0
        ASR      R3,R3,#+5
        ADD      R0,R3,R0, LSR #+31
        B        ??ColorGuiOnRedraw_13
??ColorGuiOnRedraw_12:
        LSL      R0,R0,#+24
??ColorGuiOnRedraw_13:
        LDR      R1,[R4, #+364]
        LDR      R2,[R4, #+368]
        ADD      R3,R8,#+24
        LSL      R2,R2,#+8
        ORR      R1,R2,R1, LSL #+16
        LDR      R2,[R4, #+372]
        ORR      R1,R2,R1
        ORR      R0,R0,R1
        LDR      R1,[SP, #+4]
        PUSH     {R0}
        CFI CFA R13+132
        ADD      R4,R1,R7
        SUB      R2,R4,#+1
        ADD      R1,R8,#+1
        MOV      R0,#-16777216
        PUSH     {R0}
        CFI CFA R13+136
        SUB      R0,R4,#+24
        SWI      +492
        LDR      R0,[SP, #+32]
        SWI      +497
        LDR      R1,[SP, #+28]
        MOV      R0,R6
        SWI      +489
        ADD      SP,SP,#+100
        CFI CFA R13+36
        POP      {R4-R11,PC}      ;; return
        DATA
??ColorGuiOnRedraw_1:
        DC32     0x38e38e39
        DC32     `?<Constant L"\\x25\\x30\\x32\\x58\\x2c\\x20\\x25\\x30\\`
        DC32     colors
        DC32     0xffffffff80808081
        DC32     0x51eb851f
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??ColorGuiOnKey??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??ColorGuiOnKey

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??ColorGuiOnKey
        ARM
??ColorGuiOnKey:
        LDR      R12,??DataTable17  ;; KBD_SHORT_RELEASE
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R2,[SP, #+4]
        LDR      R12,[R12, #+0]
        CMP      R2,R12
        BEQ      ??ColorGuiOnKey_1
        LDR      R12,??DataTable18  ;; KBD_REPEAT
        LDR      R12,[R12, #+0]
        CMP      R2,R12
        BNE      ??ColorGuiOnKey_2
        CMP      R3,#+11
        BLT      ??ColorGuiOnKey_3
        MOV      R3,#+8
??ColorGuiOnKey_4:
        STR      R3,[R0, #+396]
??ColorGuiOnKey_3:
        LDR      R3,??DataTable21  ;; KEY_UP
        LDR      R3,[R3, #+0]
        CMP      R1,R3
        BEQ      ??ColorGuiOnKey_5
        LDR      R3,??DataTable30  ;; KEY_DIGITAL_0
        LDR      R3,[R3, #+0]
        ADD      R3,R3,#+2
        CMP      R1,R3
        BNE      ??ColorGuiOnKey_6
??ColorGuiOnKey_5:
        LDR      R1,[R0, #+384]
        CMP      R1,#+0
        BEQ      ??ColorGuiOnKey_7
        SUBS     R1,R1,#+1
        BEQ      ??ColorGuiOnKey_8
        SUBS     R1,R1,#+1
        BEQ      ??ColorGuiOnKey_9
        SUBS     R1,R1,#+1
        BEQ      ??ColorGuiOnKey_10
        B        ??ColorGuiOnKey_11
??ColorGuiOnKey_7:
        LDR      R1,[R0, #+364]
        LDR      R3,[R0, #+396]
        ADD      R1,R3,R1
        STR      R1,[R0, #+364]
        CMP      R1,#+256
        BLT      ??ColorGuiOnKey_11
        MOV      R1,#+0
??ColorGuiOnKey_12:
        STR      R1,[R0, #+364]
        B        ??ColorGuiOnKey_11
??ColorGuiOnKey_1:
        MOV      R3,#+1
        B        ??ColorGuiOnKey_4
??ColorGuiOnKey_8:
        LDR      R1,[R0, #+368]
        LDR      R3,[R0, #+396]
        ADD      R1,R3,R1
        STR      R1,[R0, #+368]
        CMP      R1,#+256
        BLT      ??ColorGuiOnKey_11
        MOV      R1,#+0
??ColorGuiOnKey_13:
        STR      R1,[R0, #+368]
        B        ??ColorGuiOnKey_11
??ColorGuiOnKey_9:
        LDR      R1,[R0, #+372]
        LDR      R3,[R0, #+396]
        ADD      R1,R3,R1
        STR      R1,[R0, #+372]
        CMP      R1,#+256
        BLT      ??ColorGuiOnKey_11
        MOV      R1,#+0
??ColorGuiOnKey_14:
        STR      R1,[R0, #+372]
        B        ??ColorGuiOnKey_11
??ColorGuiOnKey_10:
        LDR      R1,[R0, #+380]
        LDR      R3,[R0, #+396]
        LDR      R12,[R0, #+376]
        CMP      R1,#+0
        MOVEQ    R1,#+100
        MOVNE    R1,#+255
        ADD      R3,R3,R12
        STR      R3,[R0, #+376]
        CMP      R1,R3
        BGE      ??ColorGuiOnKey_11
        MOV      R1,#+0
??ColorGuiOnKey_15:
        STR      R1,[R0, #+376]
??ColorGuiOnKey_11:
        MOV      R1,#+1
        STR      R1,[R0, #+392]
        B        ??ColorGuiOnKey_2
??ColorGuiOnKey_6:
        LDR      R3,??DataTable29  ;; KEY_DOWN
        LDR      R3,[R3, #+0]
        CMP      R1,R3
        BEQ      ??ColorGuiOnKey_16
        LDR      R3,??DataTable30  ;; KEY_DIGITAL_0
        LDR      R3,[R3, #+0]
        ADD      R3,R3,#+8
        CMP      R1,R3
        BNE      ??ColorGuiOnKey_17
??ColorGuiOnKey_16:
        LDR      R1,[R0, #+384]
        CMP      R1,#+0
        BEQ      ??ColorGuiOnKey_18
        SUBS     R1,R1,#+1
        BEQ      ??ColorGuiOnKey_19
        SUBS     R1,R1,#+1
        BEQ      ??ColorGuiOnKey_20
        SUBS     R1,R1,#+1
        BEQ      ??ColorGuiOnKey_21
        B        ??ColorGuiOnKey_11
??ColorGuiOnKey_18:
        LDR      R1,[R0, #+364]
        LDR      R3,[R0, #+396]
        SUBS     R1,R1,R3
        STR      R1,[R0, #+364]
        BPL      ??ColorGuiOnKey_11
        MOV      R1,#+255
        B        ??ColorGuiOnKey_12
??ColorGuiOnKey_19:
        LDR      R1,[R0, #+368]
        LDR      R3,[R0, #+396]
        SUBS     R1,R1,R3
        STR      R1,[R0, #+368]
        BPL      ??ColorGuiOnKey_11
        MOV      R1,#+255
        B        ??ColorGuiOnKey_13
??ColorGuiOnKey_20:
        LDR      R1,[R0, #+372]
        LDR      R3,[R0, #+396]
        SUBS     R1,R1,R3
        STR      R1,[R0, #+372]
        BPL      ??ColorGuiOnKey_11
        MOV      R1,#+255
        B        ??ColorGuiOnKey_14
??ColorGuiOnKey_21:
        LDR      R3,[R0, #+396]
        LDR      R12,[R0, #+376]
        SUBS     R1,R12,R3
        STR      R1,[R0, #+376]
        BPL      ??ColorGuiOnKey_11
        LDR      R1,[R0, #+380]
        CMP      R1,#+0
        MOVNE    R1,#+255
        MOVEQ    R1,#+100
        B        ??ColorGuiOnKey_15
??ColorGuiOnKey_17:
        LDR      R3,??DataTable24  ;; KEY_LEFT
        LDR      R3,[R3, #+0]
        CMP      R1,R3
        BEQ      ??ColorGuiOnKey_22
        LDR      R3,??DataTable30  ;; KEY_DIGITAL_0
        LDR      R3,[R3, #+0]
        ADD      R3,R3,#+4
        CMP      R1,R3
        BNE      ??ColorGuiOnKey_23
??ColorGuiOnKey_22:
        LDR      R1,[R0, #+384]
        SUBS     R1,R1,#+1
        STR      R1,[R0, #+384]
        BPL      ??ColorGuiOnKey_2
        MOV      R1,#+3
        B        ??ColorGuiOnKey_24
??ColorGuiOnKey_23:
        LDR      R3,??DataTable26  ;; KEY_RIGHT
        LDR      R3,[R3, #+0]
        CMP      R1,R3
        BEQ      ??ColorGuiOnKey_25
        LDR      R3,??DataTable30  ;; KEY_DIGITAL_0
        LDR      R3,[R3, #+0]
        ADD      R3,R3,#+6
        CMP      R1,R3
        BNE      ??ColorGuiOnKey_2
??ColorGuiOnKey_25:
        LDR      R1,[R0, #+384]
        ADD      R1,R1,#+1
        STR      R1,[R0, #+384]
        CMP      R1,#+4
        BLT      ??ColorGuiOnKey_2
        MOV      R1,#+0
??ColorGuiOnKey_24:
        STR      R1,[R0, #+384]
??ColorGuiOnKey_2:
        LDR      R1,??DataTable31  ;; KBD_LONG_RELEASE
        LDR      R1,[R1, #+0]
        CMP      R2,R1
        MOVEQ    R1,#+1
        STREQ    R1,[R0, #+396]
        MOV      R1,#+0
        SWI      +495
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??EditColorGui_constr??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??EditColorGui_constr

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??EditColorGui_constr
        ARM
??EditColorGui_constr:
        LDR      R1,??EditColorGui_constr_1  ;; EditColorGuiName
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        SWI      +544
        MOV      R1,#+400
        MOV      R0,R4
        SWI      +546
        LDR      R1,??EditColorGui_constr_1+0x4  ;; ??ColorGuiOnCreate
        MOV      R0,R4
        SWI      +548
        LDR      R1,??EditColorGui_constr_1+0x8  ;; ??ColorGuiOnClose
        MOV      R0,R4
        SWI      +550
        LDR      R1,??EditColorGui_constr_1+0xC  ;; ??ColorGuiOnRedraw
        MOV      R0,R4
        SWI      +552
        LDR      R1,??EditColorGui_constr_1+0x10  ;; ??ColorGuiOnKey
        MOV      R0,R4
        SWI      +554
        POP      {R4,PC}          ;; return
        DATA
??EditColorGui_constr_1:
        DC32     EditColorGuiName
        DC32     ??ColorGuiOnCreate
        DC32     ??ColorGuiOnClose
        DC32     ??ColorGuiOnRedraw
        DC32     ??ColorGuiOnKey
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??EditColorGui_destr??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??EditColorGui_destr

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??EditColorGui_destr
        ARM
??EditColorGui_destr:
        BX       LR               ;; return
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnBackColorEdit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??OnBackColorEdit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??OnBackColorEdit
        ARM
??OnBackColorEdit:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+40]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+40]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnOkColorEdit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??OnOkColorEdit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??OnOkColorEdit
        ARM
??OnOkColorEdit:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+40]
        SWI      +360
        LDR      R1,[R0, #+380]
        LDR      R2,[R0, #+364]
        CMP      R1,#+0
        LDR      R1,[R4, #+84]
        BNE      ??OnOkColorEdit_1
        STRB     R2,[R1, #+44]
        LDR      R1,[R4, #+84]
        LDR      R2,[R0, #+368]
        STRB     R2,[R1, #+45]
        LDR      R1,[R4, #+84]
        LDR      R2,[R0, #+372]
        STRB     R2,[R1, #+46]
        LDR      R1,[R4, #+84]
        LDR      R0,[R0, #+376]
        STRB     R0,[R1, #+47]
        B        ??OnOkColorEdit_2
??OnOkColorEdit_1:
        LDR      R3,[R0, #+368]
        LSL      R3,R3,#+8
        ORR      R2,R3,R2, LSL #+16
        LDR      R3,[R0, #+372]
        LDR      R0,[R0, #+376]
        ORR      R2,R3,R2
        ORR      R0,R2,R0, LSL #+24
        STR      R0,[R1, #+44]
??OnOkColorEdit_2:
        LDR      R0,[R4, #+40]
        CMP      R0,#+0
        BEQ      ??OnOkColorEdit_3
        SWI      +462
        STR      R0,[R4, #+40]
??OnOkColorEdit_3:
        MOV      R0,R4
        _BLF     ??RefreshEdList,??RefreshEdList??rA
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateEditColorGUI??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE ??CreateEditColorGUI

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function ??CreateEditColorGUI
        ARM
??CreateEditColorGUI:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        SUB      SP,SP,#+64
        CFI CFA R13+84
        MOV      R4,R0
        MOV      R6,R1
        MOV      R0,#+144
        _BLF     `??operator new`,`??operator new??rA`
        LDR      R2,??CreateEditColorGUI_1  ;; ??EditColorGui_constr
        LDR      R1,??CreateEditColorGUI_1+0x4  ;; ??EditColorGui_destr
        MOV      R5,R0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+88
        PUSH     {R0}
        CFI CFA R13+92
        PUSH     {R0}
        CFI CFA R13+96
        MOV      R3,R4
        MOV      R0,R5
        SWI      +496
        CMP      R0,#+0
        ADD      SP,SP,#+12
        CFI CFA R13+84
        BNE      ??CreateEditColorGUI_2
        MOV      R0,#+0
        STR      R0,[R4, #+40]
        MOV      R0,R5
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,#+0
        ADD      SP,SP,#+64
        CFI CFA R13+20
        POP      {R4-R7,PC}
        CFI CFA R13+84
??CreateEditColorGUI_2:
        MOV      R0,R5
        SWI      +360
        LDR      R1,[R4, #+84]
        CMP      R6,#+0
        BNE      ??CreateEditColorGUI_3
        LDRB     R1,[R1, #+44]
        STR      R1,[R0, #+364]
        LDR      R1,[R4, #+84]
        LDRB     R1,[R1, #+45]
        STR      R1,[R0, #+368]
        LDR      R1,[R4, #+84]
        LDRB     R1,[R1, #+46]
        STR      R1,[R0, #+372]
        LDR      R1,[R4, #+84]
        LDRB     R1,[R1, #+47]
        B        ??CreateEditColorGUI_4
??CreateEditColorGUI_3:
        LDR      R1,[R1, #+44]
        MOV      R2,#+255
        AND      R2,R2,R1, LSR #+16
        STR      R2,[R0, #+364]
        MOV      R2,#+255
        AND      R2,R2,R1, LSR #+8
        STR      R2,[R0, #+368]
        AND      R2,R1,#0xFF
        STR      R2,[R0, #+372]
        LSR      R1,R1,#+24
??CreateEditColorGUI_4:
        CMP      R4,#+0
        STR      R1,[R0, #+376]
        STR      R6,[R0, #+380]
        STR      R5,[R4, #+40]
        BEQ      ??CreateEditColorGUI_5
        MOV      R1,R5
        MOV      R0,R4
        SWI      +491
??CreateEditColorGUI_5:
        LDR      R0,[R4, #+84]
        MOV      R2,#+31
        ADD      R1,R0,#+4
        MOV      R0,SP
        _BLF     ??win12512unicode,??win12512unicode??rA
        MOV      R6,#+255
        ORR      R6,R6,#0xFF00
        MOV      R2,R6
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        MOV      R1,R0
        LDR      R0,[R4, #+40]
        SWI      +307
        LDR      R0,[R4, #+40]
        MOV      R1,#+3
        SWI      +641
        LDR      R0,??DataTable12  ;; ACTION_BACK
        LDR      R2,??CreateEditColorGUI_1+0x8  ;; ??OnBackColorEdit
        LDR      R1,[R0, #+0]
        LDR      R0,[R4, #+40]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??DataTable13  ;; ACTION_SELECT1
        LDR      R2,??CreateEditColorGUI_1+0xC  ;; ??OnOkColorEdit
        LDR      R7,[R0, #+0]
        LDR      R0,[R4, #+40]
        MOV      R1,R7, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??CreateEditColorGUI_1+0x10  ;; `?<Constant L"\\x4f\\x4b">`
        MOV      R2,R6
        MOV      R1,#+0
        SWI      +349
        MOV      R2,R0
        LDR      R0,[R4, #+40]
        MOV      R1,R7, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +332
        LDR      R0,[R4, #+40]
        SWI      +308
        MOV      R0,R5
        ADD      SP,SP,#+64
        CFI CFA R13+20
        POP      {R4-R7,PC}       ;; return
        DATA
??CreateEditColorGUI_1:
        DC32     ??EditColorGui_constr
        DC32     ??EditColorGui_destr
        DC32     ??OnBackColorEdit
        DC32     ??OnOkColorEdit
        DC32     `?<Constant L"\\x4f\\x4b">`
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable12:
        DC32     ACTION_BACK

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable13:
        DC32     ACTION_SELECT1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??CoordinatesGuiOnCreate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE ??CoordinatesGuiOnCreate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function ??CoordinatesGuiOnCreate
        ARM
??CoordinatesGuiOnCreate:
        MVN      R1,#-1879048192
        STR      R1,[R0, #+396]
        MOV      R1,#+1
        STR      R1,[R0, #+400]
        MOV      R2,#+0
        STR      R2,[R0, #+384]
        STR      R1,[R0, #+404]
        MOV      R0,#+1
        BX       LR               ;; return
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??CoordinatesGuiOnClose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE ??CoordinatesGuiOnClose

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function ??CoordinatesGuiOnClose
        ARM
??CoordinatesGuiOnClose:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R0,[R0, #+396]
        SWI      +353
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrawOwnRect??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock22
        REQUIRE ??DrawOwnRect

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI Function ??DrawOwnRect
        ARM
??DrawOwnRect:
        PUSH     {R4-R10,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R10 Frame(CFA, -8)
        CFI R9 Frame(CFA, -12)
        CFI R8 Frame(CFA, -16)
        CFI R7 Frame(CFA, -20)
        CFI R6 Frame(CFA, -24)
        CFI R5 Frame(CFA, -28)
        CFI R4 Frame(CFA, -32)
        CFI CFA R13+32
        LDR      R6,[SP, #+32]
        LDR      R7,[SP, #+36]
        MOV      R4,R0
        MOV      R5,R1
        CMP      R4,R2
        BGE      ??DrawOwnRect_1
        MOV      R8,R4
??DrawOwnRect_2:
        MOV      R4,R2
??DrawOwnRect_3:
        CMP      R5,R3
        BGE      ??DrawOwnRect_4
        MOV      R9,R5
??DrawOwnRect_5:
        MOV      R5,R3
        CMP      R9,R5
        BEQ      ??DrawOwnRect_6
??DrawOwnRect_7:
        CMP      R8,R4
        BNE      ??DrawOwnRect_8
??DrawOwnRect_6:
        SWI      +485
        MOV      R10,R0
        MOV      R1,R6
        SWI      +608
        MOV      R1,R7
        MOV      R0,R10
        SWI      +702
        PUSH     {R5}
        CFI CFA R13+36
        MOV      R3,R4
        MOV      R2,R9
        MOV      R1,R8
        MOV      R0,R10
        SWI      +610
        ADD      SP,SP,#+4
        CFI CFA R13+32
        POP      {R4-R10,PC}
??DrawOwnRect_1:
        MOV      R8,R2
        CMP      R2,R4
        BGE      ??DrawOwnRect_2
        B        ??DrawOwnRect_3
??DrawOwnRect_4:
        MOV      R9,R3
        CMP      R3,R5
        BGE      ??DrawOwnRect_5
        B        ??DrawOwnRect_7
??DrawOwnRect_8:
        PUSH     {R7}
        CFI CFA R13+36
        PUSH     {R6}
        CFI CFA R13+40
        MOV      R3,R5
        MOV      R2,R4
        MOV      R1,R9
        MOV      R0,R8
        SWI      +492
        ADD      SP,SP,#+8
        CFI CFA R13+32
        POP      {R4-R10,PC}      ;; return
        CFI EndBlock cfiBlock23

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrawArrow??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock24
        REQUIRE ??DrawArrow

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI Function ??DrawArrow
        ARM
??DrawArrow:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        MOV      R4,R0
        MOV      R0,#-16777216
        PUSH     {R0}
        CFI CFA R13+32
        PUSH     {R0}
        CFI CFA R13+36
        MOV      R5,R1
        ADD      R6,R4,#+13
        ADD      R7,R5,#+2
        MOV      R3,R7
        MOV      R2,R6
        MOV      R0,R4
        BL       ??DrawOwnRect
        MOV      R0,#-16777216
        PUSH     {R0}
        CFI CFA R13+40
        PUSH     {R0}
        CFI CFA R13+44
        ADD      R8,R4,#+11
        ADD      R9,R5,#+6
        MOV      R3,R9
        MOV      R2,R6
        MOV      R1,R7
        MOV      R0,R8
        BL       ??DrawOwnRect
        MOV      R0,#-16777216
        PUSH     {R0}
        CFI CFA R13+48
        PUSH     {R0}
        CFI CFA R13+52
        MOV      R3,R9
        ADD      R2,R4,#+16
        ADD      R1,R5,#+5
        ADD      R0,R4,#+8
        BL       ??DrawOwnRect
        MOV      R0,#-16777216
        PUSH     {R0}
        CFI CFA R13+56
        PUSH     {R0}
        CFI CFA R13+60
        ADD      R7,R5,#+7
        MOV      R3,R7
        ADD      R2,R4,#+15
        MOV      R1,R9
        ADD      R0,R4,#+9
        BL       ??DrawOwnRect
        MOV      R0,#-16777216
        PUSH     {R0}
        CFI CFA R13+64
        PUSH     {R0}
        CFI CFA R13+68
        ADD      R9,R5,#+8
        MOV      R3,R9
        ADD      R2,R4,#+14
        MOV      R1,R7
        ADD      R0,R4,#+10
        BL       ??DrawOwnRect
        ADD      SP,SP,#+40
        CFI CFA R13+28
        MOV      R0,#-16777216
        PUSH     {R0}
        CFI CFA R13+32
        PUSH     {R0}
        CFI CFA R13+36
        ADD      R3,R5,#+9
        MOV      R2,R6
        MOV      R1,R9
        MOV      R0,R8
        BL       ??DrawOwnRect
        POP      {R0,R1,R4-R9,PC}  ;; return
        CFI EndBlock cfiBlock25

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock26 Using cfiCommon0
        CFI NoFunction
        THUMB
??CoordinatesGuiOnRedraw??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock26
        REQUIRE ??CoordinatesGuiOnRedraw

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock27 Using cfiCommon1
        CFI Function ??CoordinatesGuiOnRedraw
        ARM
??CoordinatesGuiOnRedraw:
        PUSH     {R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+36
        MOV      R9,R0
        LDR      R0,??DataTable14  ;; FONT_E_20R
        SUB      SP,SP,#+80
        CFI CFA R13+116
        LDR      R8,[R0, #+0]
        SWI      +485
        MOV      R4,R0
        MOV      R0,#+0
        SWI      +601
        MOV      R5,R0
        MOV      R0,#+0
        SWI      +600
        MOV      R6,R0
        ADD      R1,SP,#+8
        MOV      R0,R4
        SWI      +487
        MOV      R0,R4
        SWI      +488
        MOV      R7,R0
        MOV      R1,#+1
        MOV      R0,R4
        SWI      +489
        MOV      R0,#+0
        STRH     R0,[SP, #+0]
        STRH     R5,[SP, #+2]
        STRH     R0,[SP, #+4]
        STRH     R6,[SP, #+6]
        MOV      R1,SP
        MOV      R0,R4
        SWI      +490
        MOV      R0,R8
        SWI      +497
        MOV      R8,R0
        MVN      R0,#+0
        PUSH     {R0}
        CFI CFA R13+120
        PUSH     {R0}
        CFI CFA R13+124
        MOV      R3,R6
        MOV      R2,R5
        MOV      R1,#+0
        MOV      R0,#+0
        SWI      +492
        MOV      R0,R4
        SWI      +607
        MOV      R10,R0
        LDR      R0,??CoordinatesGuiOnRedraw_1  ;; colors + 12
        MOV      R11,#+0
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        SWI      +608
        CMP      R6,#+1
        ADD      SP,SP,#+8
        CFI CFA R13+116
        BGE      ??CoordinatesGuiOnRedraw_2
        B        ??CoordinatesGuiOnRedraw_3
??CoordinatesGuiOnRedraw_4:
        MOV      R0,R11
        PUSH     {R0}
        CFI CFA R13+120
        MOV      R3,R5
        MOV      R2,R11
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +610
        ADD      R11,R11,#+10
        ADD      SP,SP,#+4
        CFI CFA R13+116
??CoordinatesGuiOnRedraw_2:
        CMP      R11,R6
        BLT      ??CoordinatesGuiOnRedraw_4
??CoordinatesGuiOnRedraw_3:
        MOV      R11,#+0
        CMP      R5,#+1
        BGE      ??CoordinatesGuiOnRedraw_5
        B        ??CoordinatesGuiOnRedraw_6
??CoordinatesGuiOnRedraw_7:
        MOV      R0,R6
        PUSH     {R0}
        CFI CFA R13+120
        MOV      R3,R11
        MOV      R2,#+0
        MOV      R1,R11
        MOV      R0,R4
        SWI      +610
        ADD      R11,R11,#+10
        ADD      SP,SP,#+4
        CFI CFA R13+116
??CoordinatesGuiOnRedraw_5:
        CMP      R11,R5
        BLT      ??CoordinatesGuiOnRedraw_7
??CoordinatesGuiOnRedraw_6:
        MOV      R1,R10
        MOV      R0,R4
        SWI      +608
        ADD      R0,R9,#+364
        LDR      R0,[R0, #+16]
        CMP      R0,#+0
        BEQ      ??CoordinatesGuiOnRedraw_8
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+120
        LDR      R0,??CoordinatesGuiOnRedraw_1+0x4  ;; 0xffffffffc0808080
        ADD      R10,R9,#+364
        PUSH     {R0}
        CFI CFA R13+124
        LDRH     R3,[R10, #+30]
        LDRH     R2,[R10, #+26]
        LDRH     R1,[R10, #+28]
        LDRH     R0,[R10, #+24]
        BL       ??DrawOwnRect
        LDR      R0,[R10, #+20]
        ADD      SP,SP,#+8
        CFI CFA R13+116
        CMP      R0,#+0
        BEQ      ??CoordinatesGuiOnRedraw_9
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+120
        MOV      R0,#-16777216
        PUSH     {R0}
        CFI CFA R13+124
        LDR      R3,[R10, #+12]
        LDR      R2,[R10, #+8]
        LDR      R1,[R10, #+4]
        LDR      R0,[R10, #+0]
        BL       ??DrawOwnRect
        LDR      R0,[R10, #+36]
        ADD      SP,SP,#+8
        CFI CFA R13+116
        CMP      R0,#+0
        BEQ      ??CoordinatesGuiOnRedraw_10
        LDR      R0,[R10, #+4]
        PUSH     {R0}
        CFI CFA R13+120
        LDR      R0,[R10, #+0]
        PUSH     {R0}
        CFI CFA R13+124
        LDR      R0,[R10, #+12]
        PUSH     {R0}
        CFI CFA R13+128
        LDR      R3,[R10, #+8]
??CoordinatesGuiOnRedraw_11:
        LDR      R2,??CoordinatesGuiOnRedraw_1+0x8  ;; `?<Constant L"\\x25\\x64\\x2c\\x20\\x25\\x64\\x2c\\x20\\`
        MOV      R1,#+31
        ADD      R0,SP,#+28
        SWI      +277
        LDR      R0,[R10, #+32]
        SWI      +353
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,SP,#+28
        SWI      +349
        STR      R0,[R10, #+32]
        MOV      R0,#+0
        STR      R0,[R10, #+36]
        ADD      SP,SP,#+12
        CFI CFA R13+116
        B        ??CoordinatesGuiOnRedraw_10
??CoordinatesGuiOnRedraw_9:
        ADD      R0,R9,#+364
        LDR      R0,[R0, #+36]
        CMP      R0,#+0
        BEQ      ??CoordinatesGuiOnRedraw_10
        LDR      R0,[R10, #+12]
        PUSH     {R0}
        CFI CFA R13+120
        LDR      R0,[R10, #+8]
        PUSH     {R0}
        CFI CFA R13+124
        LDR      R0,[R10, #+4]
        PUSH     {R0}
        CFI CFA R13+128
        LDR      R3,[R10, #+0]
        B        ??CoordinatesGuiOnRedraw_11
        CFI CFA R13+116
??CoordinatesGuiOnRedraw_8:
        ADD      R0,R9,#+364
        LDR      R0,[R0, #+36]
        CMP      R0,#+0
        BEQ      ??CoordinatesGuiOnRedraw_10
        LDR      R2,??CoordinatesGuiOnRedraw_1+0xC  ;; `?<Constant L"\\x25\\x64\\x2c\\x20\\x25\\x64\\x2c\\x20\\` + 32
        ADD      R10,R9,#+364
        LDR      R0,[R10, #+4]
        MOV      R1,#+31
        PUSH     {R0}
        CFI CFA R13+120
        LDR      R3,[R10, #+0]
        ADD      R0,SP,#+20
        SWI      +277
        LDR      R0,[R10, #+32]
        SWI      +353
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,SP,#+20
        SWI      +349
        STR      R0,[R10, #+32]
        MOV      R0,#+0
        STR      R0,[R10, #+36]
        ADD      SP,SP,#+4
        CFI CFA R13+116
??CoordinatesGuiOnRedraw_10:
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+120
        ADD      R10,R9,#+364
        SUB      R3,R6,#+22
        MOV      R2,#+3
        MOV      R0,#-16777216
        PUSH     {R0}
        CFI CFA R13+124
        MOV      R1,#+0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+128
        PUSH     {R0}
        CFI CFA R13+132
        SUB      R0,R6,#+1
        PUSH     {R0}
        CFI CFA R13+136
        SUB      R0,R5,#+4
        PUSH     {R0}
        CFI CFA R13+140
        LDR      R0,[R10, #+32]
        SWI      +493
        MOV      R0,R4
        SWI      +607
        MOV      R9,R0
        MOV      R1,#-16777216
        MOV      R0,R4
        SWI      +608
        LDR      R2,[R10, #+4]
        LDR      R0,[R10, #+0]
        MOV      R1,R2
        PUSH     {R1}
        CFI CFA R13+144
        ADD      R3,R0,#+3
        SUB      R1,R0,#+3
        MOV      R0,R4
        SWI      +610
        LDR      R0,[R10, #+4]
        LDR      R1,[R10, #+0]
        ADD      R2,R0,#+3
        PUSH     {R2}
        CFI CFA R13+148
        MOV      R3,R1
        SUB      R2,R0,#+3
        MOV      R0,R4
        SWI      +610
        LDR      R0,[R10, #+44]
        SWI      +793
        CMP      R0,#+0
        ADD      SP,SP,#+32
        CFI CFA R13+116
        MOV      R2,#-16777216
        SUBEQ    R1,R6,#+13
        MOVNE    R1,#+3
        SUB      R0,R5,#+19
        BL       ??DrawArrow
        MOV      R1,R9
        MOV      R0,R4
        SWI      +608
        ADD      R1,SP,#+8
        MOV      R0,R4
        SWI      +490
        MOV      R0,R8
        SWI      +497
        MOV      R1,R7
        MOV      R0,R4
        SWI      +489
        ADD      SP,SP,#+80
        CFI CFA R13+36
        POP      {R4-R11,PC}      ;; return
        DATA
??CoordinatesGuiOnRedraw_1:
        DC32     colors + 12
        DC32     0xffffffffc0808080
        DC32     `?<Constant L"\\x25\\x64\\x2c\\x20\\x25\\x64\\x2c\\x20\\`
        DC32     `?<Constant L"\\x25\\x64\\x2c\\x20\\x25\\x64\\x2c\\x20\\` + 32
        CFI EndBlock cfiBlock27

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable14:
        DC32     FONT_E_20R

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock28 Using cfiCommon0
        CFI NoFunction
        THUMB
??CoordinatesGuiOnKey??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock28
        REQUIRE ??CoordinatesGuiOnKey

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock29 Using cfiCommon1
        CFI Function ??CoordinatesGuiOnKey
        ARM
??CoordinatesGuiOnKey:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        LDR      R6,[SP, #+24]
        MOV      R4,R0
        LDR      R0,??DataTable17  ;; KBD_SHORT_RELEASE
        MOV      R5,R1
        LDR      R0,[R0, #+0]
        MOV      R7,R3
        CMP      R6,R0
        BEQ      ??CoordinatesGuiOnKey_1
        LDR      R0,??DataTable18  ;; KBD_REPEAT
        LDR      R0,[R0, #+0]
        CMP      R6,R0
        BNE      ??CoordinatesGuiOnKey_2
??CoordinatesGuiOnKey_1:
        MOV      R0,#+0
        SWI      +601
        MOV      R8,R0
        MOV      R0,#+0
        SWI      +600
        LDR      R1,??DataTable17  ;; KBD_SHORT_RELEASE
        LDR      R1,[R1, #+0]
        CMP      R6,R1
        MOVEQ    R1,#+1
        BEQ      ??CoordinatesGuiOnKey_3
        LDR      R1,??DataTable18  ;; KBD_REPEAT
        LDR      R1,[R1, #+0]
        CMP      R6,R1
        BNE      ??CoordinatesGuiOnKey_4
        CMP      R7,#+11
        BLT      ??CoordinatesGuiOnKey_4
        MOV      R1,#+8
??CoordinatesGuiOnKey_3:
        STR      R1,[R4, #+404]
??CoordinatesGuiOnKey_4:
        LDR      R1,??DataTable30  ;; KEY_DIGITAL_0
        LDR      R1,[R1, #+0]
        ADD      R1,R1,#+1
        CMP      R5,R1
        BNE      ??CoordinatesGuiOnKey_5
        LDR      R1,[R4, #+404]
        LDR      R2,[R4, #+364]
        SUBS     R1,R2,R1
        STR      R1,[R4, #+364]
        MOVMI    R0,#+0
        STRMI    R0,[R4, #+364]
??CoordinatesGuiOnKey_6:
        LDR      R2,[R4, #+368]
        LDR      R1,[R4, #+404]
        SUBS     R0,R2,R1
        STR      R0,[R4, #+368]
        BPL      ??CoordinatesGuiOnKey_7
        MOV      R0,#+0
        B        ??CoordinatesGuiOnKey_8
??CoordinatesGuiOnKey_5:
        LDR      R1,??DataTable30  ;; KEY_DIGITAL_0
        LDR      R1,[R1, #+0]
        ADD      R1,R1,#+2
        CMP      R5,R1
        BEQ      ??CoordinatesGuiOnKey_6
        LDR      R1,??DataTable21  ;; KEY_UP
        LDR      R1,[R1, #+0]
        CMP      R5,R1
        BNE      ??CoordinatesGuiOnKey_9
??CoordinatesGuiOnKey_10:
        B        ??CoordinatesGuiOnKey_6
??CoordinatesGuiOnKey_9:
        LDR      R1,??DataTable30  ;; KEY_DIGITAL_0
        LDR      R1,[R1, #+0]
        ADD      R1,R1,#+3
        CMP      R5,R1
        BNE      ??CoordinatesGuiOnKey_11
        LDR      R1,[R4, #+404]
        LDR      R2,[R4, #+364]
        ADD      R1,R1,R2
        STR      R1,[R4, #+364]
        CMP      R8,R1
        STRLT    R8,[R4, #+364]
        LDR      R2,[R4, #+368]
        LDR      R1,[R4, #+404]
        SUBS     R0,R2,R1
        STR      R0,[R4, #+368]
        BPL      ??CoordinatesGuiOnKey_7
        MOV      R0,#+0
        B        ??CoordinatesGuiOnKey_8
??CoordinatesGuiOnKey_11:
        LDR      R1,??DataTable30  ;; KEY_DIGITAL_0
        LDR      R1,[R1, #+0]
        ADD      R1,R1,#+4
        CMP      R5,R1
        BEQ      ??CoordinatesGuiOnKey_12
        LDR      R1,??DataTable24  ;; KEY_LEFT
        LDR      R1,[R1, #+0]
        CMP      R5,R1
        BNE      ??CoordinatesGuiOnKey_13
??CoordinatesGuiOnKey_12:
        LDR      R1,[R4, #+404]
        LDR      R2,[R4, #+364]
        SUBS     R1,R2,R1
        STR      R1,[R4, #+364]
        BPL      ??CoordinatesGuiOnKey_7
        MOV      R0,#+0
        STR      R0,[R4, #+364]
        B        ??CoordinatesGuiOnKey_7
??CoordinatesGuiOnKey_13:
        LDR      R1,??DataTable30  ;; KEY_DIGITAL_0
        LDR      R1,[R1, #+0]
        ADD      R1,R1,#+6
        CMP      R5,R1
        BEQ      ??CoordinatesGuiOnKey_14
        LDR      R1,??DataTable26  ;; KEY_RIGHT
        LDR      R1,[R1, #+0]
        CMP      R5,R1
        BNE      ??CoordinatesGuiOnKey_15
??CoordinatesGuiOnKey_14:
        LDR      R1,[R4, #+404]
        LDR      R2,[R4, #+364]
        ADD      R1,R1,R2
        STR      R1,[R4, #+364]
        CMP      R8,R1
        BGE      ??CoordinatesGuiOnKey_7
        STR      R8,[R4, #+364]
        B        ??CoordinatesGuiOnKey_7
??CoordinatesGuiOnKey_15:
        LDR      R1,??DataTable30  ;; KEY_DIGITAL_0
        LDR      R1,[R1, #+0]
        ADD      R1,R1,#+7
        CMP      R5,R1
        BNE      ??CoordinatesGuiOnKey_16
        LDR      R1,[R4, #+404]
        LDR      R2,[R4, #+364]
        SUBS     R1,R2,R1
        STR      R1,[R4, #+364]
        MOVMI    R1,#+0
        STRMI    R1,[R4, #+364]
??CoordinatesGuiOnKey_17:
        LDR      R2,[R4, #+368]
        LDR      R1,[R4, #+404]
        ADD      R1,R1,R2
        STR      R1,[R4, #+368]
        CMP      R0,R1
        BGE      ??CoordinatesGuiOnKey_7
        B        ??CoordinatesGuiOnKey_8
??CoordinatesGuiOnKey_16:
        LDR      R1,??DataTable30  ;; KEY_DIGITAL_0
        LDR      R1,[R1, #+0]
        ADD      R1,R1,#+8
        CMP      R5,R1
        BEQ      ??CoordinatesGuiOnKey_17
        LDR      R1,??DataTable29  ;; KEY_DOWN
        LDR      R1,[R1, #+0]
        CMP      R5,R1
        BNE      ??CoordinatesGuiOnKey_18
??CoordinatesGuiOnKey_19:
        B        ??CoordinatesGuiOnKey_17
??CoordinatesGuiOnKey_18:
        LDR      R1,??DataTable30  ;; KEY_DIGITAL_0
        LDR      R1,[R1, #+0]
        ADD      R1,R1,#+9
        CMP      R5,R1
        BNE      ??CoordinatesGuiOnKey_7
        LDR      R1,[R4, #+404]
        LDR      R2,[R4, #+364]
        ADD      R1,R1,R2
        STR      R1,[R4, #+364]
        CMP      R8,R1
        STRLT    R8,[R4, #+364]
        LDR      R2,[R4, #+368]
        LDR      R1,[R4, #+404]
        ADD      R1,R1,R2
        STR      R1,[R4, #+368]
        CMP      R0,R1
        BGE      ??CoordinatesGuiOnKey_7
??CoordinatesGuiOnKey_8:
        STR      R0,[R4, #+368]
??CoordinatesGuiOnKey_7:
        MOV      R0,#+1
        STR      R0,[R4, #+400]
        LDR      R0,??CoordinatesGuiOnKey_20  ;; KEY_ENTER
        LDR      R0,[R0, #+0]
        CMP      R5,R0
        BEQ      ??CoordinatesGuiOnKey_21
        LDR      R0,??CoordinatesGuiOnKey_20+0x4  ;; KEY_LEFT_SOFT
        LDR      R0,[R0, #+0]
        CMP      R5,R0
        BNE      ??CoordinatesGuiOnKey_22
??CoordinatesGuiOnKey_21:
        LDR      R0,[R4, #+408]
        MOV      R1,#+0
        BL       ??OnOkCoordinatesEdit
??CoordinatesGuiOnKey_22:
        LDR      R0,??CoordinatesGuiOnKey_20+0x8  ;; KEY_ESC
        LDR      R0,[R0, #+0]
        CMP      R5,R0
        BNE      ??CoordinatesGuiOnKey_23
        LDR      R0,[R4, #+408]
        MOV      R1,#+0
        BL       ??OnBackCoordinatesEdit
??CoordinatesGuiOnKey_23:
        LDR      R0,??CoordinatesGuiOnKey_20+0xC  ;; KEY_RIGHT_SOFT
        LDR      R0,[R0, #+0]
        CMP      R5,R0
        BNE      ??CoordinatesGuiOnKey_2
        LDR      R0,[R4, #+408]
        MOV      R1,#+0
        BL       ??OnOrientationChangeCoordinatesEdit
??CoordinatesGuiOnKey_2:
        LDR      R0,??DataTable31  ;; KBD_LONG_RELEASE
        MOV      R1,#+0
        LDR      R0,[R0, #+0]
        CMP      R6,R0
        MOVEQ    R0,#+1
        STREQ    R0,[R4, #+404]
        MOV      R0,R4
        SWI      +495
        POP      {R4-R8,PC}       ;; return
        DATA
??CoordinatesGuiOnKey_20:
        DC32     KEY_ENTER
        DC32     KEY_LEFT_SOFT
        DC32     KEY_ESC
        DC32     KEY_RIGHT_SOFT
        CFI EndBlock cfiBlock29

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable17:
        DC32     KBD_SHORT_RELEASE

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable18:
        DC32     KBD_REPEAT

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable21:
        DC32     KEY_UP

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable24:
        DC32     KEY_LEFT

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable26:
        DC32     KEY_RIGHT

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable29:
        DC32     KEY_DOWN

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable30:
        DC32     KEY_DIGITAL_0

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable31:
        DC32     KBD_LONG_RELEASE

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock30 Using cfiCommon0
        CFI NoFunction
        THUMB
??EditCoordinatesGui_constr??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock30
        REQUIRE ??EditCoordinatesGui_constr

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock31 Using cfiCommon1
        CFI Function ??EditCoordinatesGui_constr
        ARM
??EditCoordinatesGui_constr:
        LDR      R1,??EditCoordinatesGui_constr_1  ;; CooordinatesGuiName
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        SWI      +544
        MOV      R1,#+412
        MOV      R0,R4
        SWI      +546
        LDR      R1,??EditCoordinatesGui_constr_1+0x4  ;; ??CoordinatesGuiOnCreate
        MOV      R0,R4
        SWI      +548
        LDR      R1,??EditCoordinatesGui_constr_1+0x8  ;; ??CoordinatesGuiOnClose
        MOV      R0,R4
        SWI      +550
        LDR      R1,??EditCoordinatesGui_constr_1+0xC  ;; ??CoordinatesGuiOnRedraw
        MOV      R0,R4
        SWI      +552
        LDR      R1,??EditCoordinatesGui_constr_1+0x10  ;; ??CoordinatesGuiOnKey
        MOV      R0,R4
        SWI      +554
        POP      {R4,PC}          ;; return
        DATA
??EditCoordinatesGui_constr_1:
        DC32     CooordinatesGuiName
        DC32     ??CoordinatesGuiOnCreate
        DC32     ??CoordinatesGuiOnClose
        DC32     ??CoordinatesGuiOnRedraw
        DC32     ??CoordinatesGuiOnKey
        CFI EndBlock cfiBlock31

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock32 Using cfiCommon0
        CFI NoFunction
        THUMB
??EditCoordinatesGui_destr??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock32
        REQUIRE ??EditCoordinatesGui_destr

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock33 Using cfiCommon1
        CFI Function ??EditCoordinatesGui_destr
        ARM
??EditCoordinatesGui_destr:
        BX       LR               ;; return
        CFI EndBlock cfiBlock33

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock34 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnOrientationChangeCoordinatesEdit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock34
        REQUIRE ??OnOrientationChangeCoordinatesEdit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock35 Using cfiCommon1
        CFI Function ??OnOrientationChangeCoordinatesEdit
        ARM
??OnOrientationChangeCoordinatesEdit:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        SWI      +793
        CMP      R0,#+0
        MOVNE    R1,#+0
        MOVEQ    R1,#+1
        MOV      R0,R4
        SWI      +794
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock35

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock36 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnBackCoordinatesEdit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock36
        REQUIRE ??OnBackCoordinatesEdit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock37 Using cfiCommon1
        CFI Function ??OnBackCoordinatesEdit
        ARM
??OnBackCoordinatesEdit:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+44]
        SWI      +360
        LDR      R1,[R0, #+380]
        CMP      R1,#+0
        LDRNE    R1,[R0, #+384]
        CMPNE    R1,#+0
        BEQ      ??OnBackCoordinatesEdit_1
        MOV      R1,#+0
        STR      R1,[R0, #+384]
        SWI      +495
        POP      {R4,PC}
??OnBackCoordinatesEdit_1:
        MOV      R0,R4
        SWI      +794
        LDR      R0,[R4, #+44]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+44]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock37

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock38 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnOkCoordinatesEdit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock38
        REQUIRE ??OnOkCoordinatesEdit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock39 Using cfiCommon1
        CFI Function ??OnOkCoordinatesEdit
        ARM
??OnOkCoordinatesEdit:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+44]
        SWI      +360
        LDR      R1,[R0, #+380]
        CMP      R1,#+0
        BEQ      ??OnOkCoordinatesEdit_1
        LDR      R1,[R0, #+384]
        CMP      R1,#+0
        BNE      ??OnOkCoordinatesEdit_2
        LDR      R1,[R0, #+364]
        STR      R1,[R0, #+372]
        LDR      R1,[R0, #+368]
        STR      R1,[R0, #+376]
        MOV      R1,#+1
        STR      R1,[R0, #+384]
        POP      {R4,PC}
??OnOkCoordinatesEdit_2:
        LDR      R1,[R0, #+372]
        LDR      R2,[R0, #+364]
        CMP      R1,R2
        MOVGE    R1,R2
        LDR      R2,[R4, #+84]
        STRH     R1,[R2, #+44]
        LDR      R1,[R0, #+376]
        LDR      R2,[R0, #+368]
        CMP      R1,R2
        MOVGE    R1,R2
        LDR      R2,[R4, #+84]
        STRH     R1,[R2, #+48]
        LDR      R1,[R0, #+364]
        LDR      R2,[R0, #+372]
        CMP      R1,R2
        MOVLT    R1,R2
        LDR      R2,[R4, #+84]
        STRH     R1,[R2, #+46]
        LDR      R1,[R0, #+368]
        LDR      R2,[R0, #+376]
        CMP      R1,R2
        MOVGE    R0,R1
        LDR      R1,[R4, #+84]
        MOVLT    R0,R2
        STRH     R0,[R1, #+50]
        B        ??OnOkCoordinatesEdit_3
??OnOkCoordinatesEdit_1:
        LDR      R1,[R4, #+84]
        LDR      R2,[R0, #+364]
        STR      R2,[R1, #+44]
        LDR      R1,[R4, #+84]
        LDR      R0,[R0, #+368]
        STR      R0,[R1, #+48]
??OnOkCoordinatesEdit_3:
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +794
        LDR      R0,[R4, #+44]
        CMP      R0,#+0
        BEQ      ??OnOkCoordinatesEdit_4
        SWI      +462
        STR      R0,[R4, #+44]
??OnOkCoordinatesEdit_4:
        MOV      R0,R4
        _BLF     ??RefreshEdList,??RefreshEdList??rA
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock39

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock40 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateEditCoordinatesGUI??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock40
        REQUIRE ??CreateEditCoordinatesGUI

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock41 Using cfiCommon1
        CFI Function ??CreateEditCoordinatesGUI
        ARM
??CreateEditCoordinatesGUI:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R4,R0
        MOV      R5,R1
        MOV      R0,#+144
        _BLF     `??operator new`,`??operator new??rA`
        LDR      R2,??CreateEditCoordinatesGUI_1  ;; ??EditCoordinatesGui_constr
        LDR      R1,??CreateEditCoordinatesGUI_1+0x4  ;; ??EditCoordinatesGui_destr
        MOV      R6,R0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+20
        PUSH     {R0}
        CFI CFA R13+24
        PUSH     {R0}
        CFI CFA R13+28
        MOV      R3,R4
        MOV      R0,R6
        SWI      +496
        CMP      R0,#+0
        ADD      SP,SP,#+12
        CFI CFA R13+16
        MOV      R0,R6
        BNE      ??CreateEditCoordinatesGUI_2
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,#+0
        POP      {R4-R6,PC}
??CreateEditCoordinatesGUI_2:
        SWI      +360
        CMP      R5,#+0
        BNE      ??CreateEditCoordinatesGUI_3
        LDR      R2,[R4, #+84]
        ADD      R1,R0,#+364
        LDR      R2,[R2, #+44]
        STR      R2,[R1, #+0]
        LDR      R2,[R4, #+84]
        LDR      R2,[R2, #+48]
        STR      R2,[R1, #+4]
        B        ??CreateEditCoordinatesGUI_4
??CreateEditCoordinatesGUI_3:
        LDR      R1,[R4, #+84]
        LDRH     R2,[R1, #+44]
        ADD      R1,R0,#+364
        STR      R2,[R1, #+0]
        STRH     R2,[R1, #+24]
        LDR      R2,[R4, #+84]
        LDRH     R2,[R2, #+48]
        STR      R2,[R1, #+4]
        STRH     R2,[R1, #+28]
        LDR      R2,[R4, #+84]
        LDRH     R2,[R2, #+46]
        STR      R2,[R1, #+8]
        STRH     R2,[R1, #+26]
        LDR      R2,[R4, #+84]
        LDRH     R2,[R2, #+50]
        STR      R2,[R1, #+12]
        STRH     R2,[R1, #+30]
??CreateEditCoordinatesGUI_4:
        STR      R5,[R1, #+16]
        STR      R4,[R1, #+44]
        STR      R6,[R4, #+44]
        CMP      R4,#+0
        BEQ      ??CreateEditCoordinatesGUI_5
        MOV      R1,R6
        MOV      R0,R4
        SWI      +491
??CreateEditCoordinatesGUI_5:
        LDR      R0,[R4, #+44]
        MOV      R1,#+4
        SWI      +310
        LDR      R0,[R4, #+44]
        MOV      R1,#+1
        SWI      +641
        LDR      R0,[R4, #+44]
        SWI      +673
        LDR      R0,[R4, #+44]
        SWI      +308
        MOV      R0,R6
        POP      {R4-R6,PC}       ;; return
        DATA
??CreateEditCoordinatesGUI_1:
        DC32     ??EditCoordinatesGui_constr
        DC32     ??EditCoordinatesGui_destr
        CFI EndBlock cfiBlock41

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock42 Using cfiCommon0
        CFI NoFunction
        THUMB
??Font_GetNameByFontId??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock42
        REQUIRE ??Font_GetNameByFontId

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock43 Using cfiCommon1
        CFI Function ??Font_GetNameByFontId
        ARM
??Font_GetNameByFontId:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        LDR      R7,??Font_GetNameByFontId_1  ;; `?<Constant L"\\x55\\x6e\\x64\\x65\\x66\\x69\\x6e\\x65\\`
        MOV      R6,R0
        MOV      R5,#+0
        SWI      +33467
        MOV      R4,R0
        SWI      +33468
        LDR      R0,[R0, #+0]
        B        ??Font_GetNameByFontId_2
??Font_GetNameByFontId_3:
        ADD      R5,R5,#+1
??Font_GetNameByFontId_2:
        CMP      R5,R0
        BGE      ??Font_GetNameByFontId_4
        MOV      R1,#+22
        MLA      R2,R1,R5,R4
        LDRH     R1,[R2, #+0]
        CMP      R6,R1
        BNE      ??Font_GetNameByFontId_3
        MOV      R0,#+22
        MLA      R1,R0,R5,R4
        ADD      R7,R1,#+2
??Font_GetNameByFontId_4:
        MOV      R0,R7
        POP      {R4-R7,PC}       ;; return
        DATA
??Font_GetNameByFontId_1:
        DC32     `?<Constant L"\\x55\\x6e\\x64\\x65\\x66\\x69\\x6e\\x65\\`
        CFI EndBlock cfiBlock43

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock44 Using cfiCommon0
        CFI NoFunction
        THUMB
??GetIdByFontId??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock44
        REQUIRE ??GetIdByFontId

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock45 Using cfiCommon1
        CFI Function ??GetIdByFontId
        ARM
??GetIdByFontId:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOV      R4,R0
        MOV      R5,#+0
        MOV      R7,#+0
        SWI      +33467
        MOV      R6,R0
        SWI      +33468
        LDR      R0,[R0, #+0]
        B        ??GetIdByFontId_1
??GetIdByFontId_2:
        ADD      R7,R7,#+1
??GetIdByFontId_1:
        CMP      R7,R0
        BGE      ??GetIdByFontId_3
        MOV      R1,#+22
        MLA      R2,R1,R7,R6
        LDRH     R1,[R2, #+0]
        CMP      R4,R1
        BNE      ??GetIdByFontId_2
        MOV      R5,R7
??GetIdByFontId_3:
        MOV      R0,R5
        POP      {R4-R7,PC}       ;; return
        CFI EndBlock cfiBlock45

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock46 Using cfiCommon0
        CFI NoFunction
        THUMB
??FontSelectGuiOnCreate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock46
        REQUIRE ??FontSelectGuiOnCreate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock47 Using cfiCommon1
        CFI Function ??FontSelectGuiOnCreate
        ARM
??FontSelectGuiOnCreate:
        LDR      R1,??FontSelectGuiOnCreate_1  ;; test_str
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        SUB      SP,SP,#+128
        CFI CFA R13+144
        MOV      R4,R0
        MOV      R2,#+15
        MOV      R0,SP
        _BLF     ??win12512unicode,??win12512unicode??rA
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        STR      R0,[R4, #+380]
        SWI      +590
        AND      R0,R0,#0xFE00
        CMP      R0,#+55296
        CMPNE    R0,#+59392
        CMPNE    R0,#+61440
        MOVEQ    R0,#+1
        MOVNE    R0,#+0
        STR      R0,[R4, #+392]
        CMP      R0,#+0
        BEQ      ??FontSelectGuiOnCreate_2
        LDR      R1,??DataTable46  ;; font_step
        MOV      R0,#+100
        LDR      R1,[R1, #+0]
        _BLF     ??div32_a,??rA??div32_a
        STR      R1,[R4, #+376]
        LSL      R0,R1,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        STR      R0,[R4, #+384]
        LDR      R1,[R4, #+376]
        MOV      R0,#+0
        CMP      R1,#+1
        BLT      ??FontSelectGuiOnCreate_3
??FontSelectGuiOnCreate_4:
        LDR      R1,[R4, #+376]
        CMP      R0,R1
        BGE      ??FontSelectGuiOnCreate_3
        LDR      R3,??DataTable46  ;; font_step
        LDR      R1,[R4, #+384]
        LDR      R3,[R3, #+0]
        ADD      R2,R0,#+1
        MUL      R2,R3,R2
        ADD      R1,R1,R0, LSL #+1
        STRH     R2,[R1, #+0]
        ADD      R0,R0,#+1
        B        ??FontSelectGuiOnCreate_4
??FontSelectGuiOnCreate_2:
        SWI      +33468
        LDR      R0,[R0, #+0]
        MOV      R6,#+0
        STR      R0,[R4, #+376]
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        STR      R0,[R4, #+384]
        LDR      R0,??DataTable35  ;; FONT_E_20R
        LDR      R0,[R0, #+0]
        SWI      +497
        MOV      R5,R0
        LDR      R0,[R4, #+376]
        CMP      R0,#+1
        BGE      ??FontSelectGuiOnCreate_5
        B        ??FontSelectGuiOnCreate_6
??FontSelectGuiOnCreate_7:
        SWI      +33467
        MOV      R1,#+22
        MLA      R0,R1,R6,R0
        LDRH     R0,[R0, #+0]
        SWI      +497
        MOV      R0,#+32
        SWI      +660
        LDR      R1,[R4, #+384]
        ADD      R1,R1,R6, LSL #+1
        STRH     R0,[R1, #+0]
        ADD      R6,R6,#+1
??FontSelectGuiOnCreate_5:
        LDR      R0,[R4, #+376]
        CMP      R6,R0
        BLT      ??FontSelectGuiOnCreate_7
??FontSelectGuiOnCreate_6:
        MOV      R0,R5
        SWI      +497
??FontSelectGuiOnCreate_3:
        MOV      R0,#+0
        STR      R0,[R4, #+368]
        MOV      R0,#+1
        STR      R0,[R4, #+388]
        ADD      SP,SP,#+128
        CFI CFA R13+16
        POP      {R4-R6,PC}       ;; return
        DATA
??FontSelectGuiOnCreate_1:
        DC32     test_str
        CFI EndBlock cfiBlock47

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock48 Using cfiCommon0
        CFI NoFunction
        THUMB
??FontSelectGuiOnClose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock48
        REQUIRE ??FontSelectGuiOnClose

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock49 Using cfiCommon1
        CFI Function ??FontSelectGuiOnClose
        ARM
??FontSelectGuiOnClose:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+380]
        SWI      +353
        MVN      R0,#-1879048192
        STR      R0,[R4, #+380]
        LDR      R0,[R4, #+384]
        POP      {R4,LR}          ;; Pop
        CFI R4 SameValue
        CFI ?RET R14
        CFI CFA R13+0
        _BF      `??operator delete`,`??operator delete??rA`  ;; tailcall
        CFI EndBlock cfiBlock49

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock50 Using cfiCommon0
        CFI NoFunction
        THUMB
??CheckStringVisibility??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock50
        REQUIRE ??CheckStringVisibility

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock51 Using cfiCommon1
        CFI Function ??CheckStringVisibility
        ARM
??CheckStringVisibility:
        PUSH     {R4-R6}
        CFI R6 Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        LDR      R1,[SP, #+12]
        LDR      R3,[R0, #+372]
        LDR      R4,[R0, #+368]
        LDR      R2,[SP, #+16]
        CMP      R3,R4
        MOVLT    R1,R3
        STRLT    R1,[R0, #+368]
        BLT      ??CheckStringVisibility_1
        MOV      R3,#+0
??CheckStringVisibility_2:
        LDR      R4,[R0, #+368]
        MOV      R12,R2
        MOV      R5,#+0
        B        ??CheckStringVisibility_3
??CheckStringVisibility_4:
        ADD      R4,R4,#+1
??CheckStringVisibility_3:
        LDR      R6,[R0, #+376]
        CMP      R4,R6
        BGE      ??CheckStringVisibility_5
        LDR      R6,[R0, #+372]
        CMP      R6,R4
        LDR      R6,[R0, #+384]
        MOVEQ    R5,#+1
        ADD      R6,R6,R4, LSL #+1
        LDRH     R6,[R6, #+0]
        ADD      R6,R6,R12
        ADD      R12,R6,#+2
        ADD      R6,R12,#+1
        CMP      R6,R1
        BGE      ??CheckStringVisibility_6
        CMP      R5,#+0
        MOVNE    R3,#+1
??CheckStringVisibility_6:
        CMP      R1,R12
        BGE      ??CheckStringVisibility_4
??CheckStringVisibility_5:
        CMP      R3,#+0
        BNE      ??CheckStringVisibility_1
        LDR      R4,[R0, #+368]
        ADD      R4,R4,#+1
        STR      R4,[R0, #+368]
        LDR      R5,[R0, #+376]
        CMP      R4,R5
        BLT      ??CheckStringVisibility_2
??CheckStringVisibility_1:
        POP      {R4-R6}
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI CFA R13+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock51

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock52 Using cfiCommon0
        CFI NoFunction
        THUMB
??FontSelectGuiOnRedraw??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock52
        REQUIRE ??FontSelectGuiOnRedraw

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock53 Using cfiCommon1
        CFI Function ??FontSelectGuiOnRedraw
        ARM
??FontSelectGuiOnRedraw:
        PUSH     {R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+36
        SUB      SP,SP,#+28
        CFI CFA R13+64
        MOV      R4,R0
        MOV      R8,R2
        SWI      +485
        MOV      R5,R0
        SWI      +488
        STR      R0,[SP, #+0]
        MOV      R1,#+1
        MOV      R0,R5
        SWI      +489
        LDRH     R10,[R8, #+4]
        LDR      R0,[R4, #+388]
        LDRH     R6,[R8, #+0]
        LDRH     R7,[R8, #+2]
        LDRH     R8,[R8, #+6]
        ADD      R9,R10,#+22
        CMP      R0,#+0
        BEQ      ??FontSelectGuiOnRedraw_1
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+68
        MOV      R3,R7
        MOV      R2,R10
        MOV      R1,R6
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+72
        MOV      R0,R4
        BL       ??CheckStringVisibility
        MOV      R0,#+0
        STR      R0,[R4, #+388]
        ADD      SP,SP,#+8
        CFI CFA R13+64
??FontSelectGuiOnRedraw_1:
        LDR      R0,??DataTable35  ;; FONT_E_20R
        LDR      R0,[R0, #+0]
        SWI      +497
        STR      R0,[SP, #+4]
        MOV      R0,#-16777216
        PUSH     {R0}
        CFI CFA R13+68
        PUSH     {R0}
        CFI CFA R13+72
        MOV      R3,R8
        MOV      R2,R7
        MOV      R1,R10
        MOV      R0,R6
        SWI      +492
        LDR      R0,[R4, #+392]
        ADD      SP,SP,#+8
        CFI CFA R13+64
        CMP      R0,#+0
        BEQ      ??FontSelectGuiOnRedraw_2
        LDR      R1,??DataTable46  ;; font_step
        LDR      R0,[R4, #+372]
        LDR      R1,[R1, #+0]
        ADD      R0,R0,#+1
        MUL      R0,R1,R0
        MOV      R11,#+1
        SWI      +348
        STR      R0,[SP, #+8]
        LDR      R0,[R4, #+396]
        CMP      R0,#+0
        BEQ      ??FontSelectGuiOnRedraw_3
        MOV      R1,#+95
        ORR      R1,R1,#0x78000000
        STR      R1,[SP, #+12]
        BIC      R1,R1,#0x1D
        STR      R1,[SP, #+16]
        MOV      R11,#+3
??FontSelectGuiOnRedraw_3:
        LDR      R0,[R4, #+400]
        CMP      R0,#+0
        BEQ      ??FontSelectGuiOnRedraw_4
        ADD      R0,SP,#+8
        ADD      R0,R0,R11, LSL #+2
        MOV      R1,#+95
        ORR      R1,R1,#0x78000000
        STR      R1,[R0, #+0]
        BIC      R1,R1,#0x16
        STR      R1,[R0, #+4]
        ADD      R11,R11,#+2
??FontSelectGuiOnRedraw_4:
        MOV      R2,R11
        MOV      R1,#+5
        ADD      R0,SP,#+8
        B        ??FontSelectGuiOnRedraw_5
??FontSelectGuiOnRedraw_2:
        SWI      +33467
        LDR      R3,[R4, #+372]
        MOV      R11,#+22
        MLA      R0,R11,R3,R0
        MOV      R2,#+9
        MOV      R1,#+0
        ADD      R0,R0,#+2
??FontSelectGuiOnRedraw_5:
        SWI      +349
        MOV      R11,R0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+68
        ADD      R3,R10,#+1
        ADD      R2,R6,#+3
        MOV      R1,#+0
        MVN      R0,#+16711680
        BIC      R0,R0,#0x7F00
        PUSH     {R0}
        CFI CFA R13+72
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+76
        PUSH     {R0}
        CFI CFA R13+80
        SUB      R0,R9,#+1
        PUSH     {R0}
        CFI CFA R13+84
        SUB      R0,R7,#+2
        PUSH     {R0}
        CFI CFA R13+88
        MOV      R0,R11
        SWI      +493
        MOV      R0,R11
        SWI      +353
        LDR      R10,[R4, #+368]
        ADD      SP,SP,#+24
        CFI CFA R13+64
        B        ??FontSelectGuiOnRedraw_6
??FontSelectGuiOnRedraw_7:
        ADD      R10,R10,#+1
??FontSelectGuiOnRedraw_6:
        LDR      R0,[R4, #+376]
        CMP      R10,R0
        BGE      ??FontSelectGuiOnRedraw_8
        LDR      R0,[R4, #+384]
        ADD      R0,R0,R10, LSL #+1
        LDRH     R11,[R0, #+0]
        LDR      R0,[R4, #+392]
        CMP      R0,#+0
        BEQ      ??FontSelectGuiOnRedraw_9
        LDR      R0,[R4, #+396]
        LDR      R1,[R4, #+400]
        ADD      R0,R11,R0, LSL #+8
        ADD      R0,R0,R1, LSL #+9
        B        ??FontSelectGuiOnRedraw_10
??FontSelectGuiOnRedraw_9:
        MOV      R0,#+22
        PUSH     {R0}
        CFI CFA R13+68
        SWI      +33467
        POP      {R1}
        CFI CFA R13+64
        MLA      R0,R1,R10,R0
        LDRH     R0,[R0, #+0]
??FontSelectGuiOnRedraw_10:
        SWI      +497
        LDR      R0,[R4, #+372]
        CMP      R10,R0
        BNE      ??FontSelectGuiOnRedraw_11
        LDR      R0,??FontSelectGuiOnRedraw_12  ;; 0xffffffffff408000
        SUB      R2,R7,#+1
        PUSH     {R0}
        CFI CFA R13+68
        MOV      R1,R9
        MOV      R0,#-16777216
        ORR      R0,R0,#0xFF00
        PUSH     {R0}
        CFI CFA R13+72
        ADD      R0,R11,R9
        ADD      R3,R0,#+2
        ADD      R0,R6,#+1
        SWI      +492
        ADD      SP,SP,#+8
        CFI CFA R13+64
??FontSelectGuiOnRedraw_11:
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+68
        ADD      R3,R9,#+1
        ADD      R2,R6,#+2
        MOV      R1,#+0
        MVN      R0,R0
        PUSH     {R0}
        CFI CFA R13+72
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+76
        PUSH     {R0}
        CFI CFA R13+80
        ADD      R0,R11,R9
        ADD      R0,R0,#+1
        PUSH     {R0}
        CFI CFA R13+84
        SUB      R0,R7,#+2
        PUSH     {R0}
        CFI CFA R13+88
        LDR      R0,[R4, #+380]
        SWI      +493
        ADD      R0,R11,#+2
        ADD      R9,R0,R9
        CMP      R8,R9
        ADD      SP,SP,#+24
        CFI CFA R13+64
        BGE      ??FontSelectGuiOnRedraw_7
??FontSelectGuiOnRedraw_8:
        LDR      R0,[SP, #+4]
        SWI      +497
        LDR      R1,[SP, #+0]
        MOV      R0,R5
        SWI      +489
        ADD      SP,SP,#+28
        CFI CFA R13+36
        POP      {R4-R11,PC}      ;; return
        DATA
??FontSelectGuiOnRedraw_12:
        DC32     0xffffffffff408000
        CFI EndBlock cfiBlock53

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable35:
        DC32     FONT_E_20R

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock54 Using cfiCommon0
        CFI NoFunction
        THUMB
??FontSelectGuiOnKey??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock54
        REQUIRE ??FontSelectGuiOnKey

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock55 Using cfiCommon1
        CFI Function ??FontSelectGuiOnKey
        ARM
??FontSelectGuiOnKey:
        LDR      R3,??DataTable37  ;; KBD_SHORT_RELEASE
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R2,[SP, #+4]
        LDR      R3,[R3, #+0]
        CMP      R2,R3
        BEQ      ??FontSelectGuiOnKey_1
        LDR      R3,??DataTable38  ;; KBD_REPEAT
        LDR      R3,[R3, #+0]
        CMP      R2,R3
        POPNE    {PC}
??FontSelectGuiOnKey_1:
        LDR      R2,??DataTable39  ;; KEY_UP
        LDR      R2,[R2, #+0]
        CMP      R1,R2
        BEQ      ??FontSelectGuiOnKey_2
        LDR      R2,??DataTable42  ;; KEY_DIGITAL_0
        LDR      R2,[R2, #+0]
        ADD      R2,R2,#+2
        CMP      R1,R2
        BNE      ??FontSelectGuiOnKey_3
??FontSelectGuiOnKey_2:
        LDR      R2,[R0, #+372]
        SUBS     R2,R2,#+1
        STR      R2,[R0, #+372]
        BPL      ??FontSelectGuiOnKey_4
        LDR      R2,[R0, #+376]
        SUB      R2,R2,#+1
        B        ??FontSelectGuiOnKey_5
??FontSelectGuiOnKey_3:
        LDR      R2,??DataTable41  ;; KEY_DOWN
        LDR      R2,[R2, #+0]
        CMP      R1,R2
        BEQ      ??FontSelectGuiOnKey_6
        LDR      R2,??DataTable42  ;; KEY_DIGITAL_0
        LDR      R2,[R2, #+0]
        ADD      R2,R2,#+8
        CMP      R1,R2
        BNE      ??FontSelectGuiOnKey_4
??FontSelectGuiOnKey_6:
        LDR      R2,[R0, #+372]
        ADD      R2,R2,#+1
        STR      R2,[R0, #+372]
        LDR      R3,[R0, #+376]
        CMP      R2,R3
        BLT      ??FontSelectGuiOnKey_4
        MOV      R2,#+0
??FontSelectGuiOnKey_5:
        STR      R2,[R0, #+372]
??FontSelectGuiOnKey_4:
        LDR      R2,??FontSelectGuiOnKey_7  ;; KEY_DEL
        LDR      R2,[R2, #+0]
        CMP      R1,R2
        BNE      ??FontSelectGuiOnKey_8
        LDR      R1,[R0, #+396]
        CMP      R1,#+0
        MOVEQ    R1,#+1
        STREQ    R1,[R0, #+396]
        BEQ      ??FontSelectGuiOnKey_8
        LDR      R1,[R0, #+400]
        CMP      R1,#+0
        MOV      R1,#+0
        STR      R1,[R0, #+396]
        MOVEQ    R1,#+1
        STR      R1,[R0, #+400]
??FontSelectGuiOnKey_8:
        MOV      R1,#+1
        STR      R1,[R0, #+388]
        MOV      R1,#+0
        SWI      +495
        POP      {PC}             ;; return
        DATA
??FontSelectGuiOnKey_7:
        DC32     KEY_DEL
        CFI EndBlock cfiBlock55

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable37:
        DC32     KBD_SHORT_RELEASE

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable38:
        DC32     KBD_REPEAT

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable39:
        DC32     KEY_UP

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable41:
        DC32     KEY_DOWN

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable42:
        DC32     KEY_DIGITAL_0

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock56 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnBackFontSelect??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock56
        REQUIRE ??OnBackFontSelect

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock57 Using cfiCommon1
        CFI Function ??OnBackFontSelect
        ARM
??OnBackFontSelect:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+56]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+56]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock57

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock58 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnOkFontSelect??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock58
        REQUIRE ??OnOkFontSelect

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock59 Using cfiCommon1
        CFI Function ??OnOkFontSelect
        ARM
??OnOkFontSelect:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
        LDR      R0,[R4, #+56]
        SWI      +360
        MOV      R5,R0
        LDR      R0,[R5, #+392]
        CMP      R0,#+0
        BEQ      ??OnOkFontSelect_1
        LDR      R2,??DataTable46  ;; font_step
        LDR      R1,[R5, #+372]
        LDR      R2,[R2, #+0]
        LDR      R0,[R4, #+84]
        ADD      R1,R1,#+1
        MUL      R1,R2,R1
        LDR      R2,[R5, #+396]
        ADD      R1,R1,R2, LSL #+8
        LDR      R2,[R5, #+400]
        ADD      R1,R1,R2, LSL #+9
        STR      R1,[R0, #+44]
        B        ??OnOkFontSelect_2
??OnOkFontSelect_1:
        SWI      +33467
        LDR      R2,[R5, #+372]
        LDR      R1,[R4, #+84]
        MOV      R3,#+22
        MLA      R0,R3,R2,R0
        LDRH     R0,[R0, #+0]
        STR      R0,[R1, #+44]
??OnOkFontSelect_2:
        LDR      R0,[R4, #+56]
        CMP      R0,#+0
        BEQ      ??OnOkFontSelect_3
        SWI      +462
        STR      R0,[R4, #+56]
??OnOkFontSelect_3:
        MOV      R0,R4
        _BLF     ??RefreshEdList,??RefreshEdList??rA
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock59

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock60 Using cfiCommon0
        CFI NoFunction
        THUMB
??FontSelectGui_constr??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock60
        REQUIRE ??FontSelectGui_constr

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock61 Using cfiCommon1
        CFI Function ??FontSelectGui_constr
        ARM
??FontSelectGui_constr:
        LDR      R1,??FontSelectGui_constr_1  ;; FontSelectGuiName
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        SWI      +544
        MOV      R1,#+404
        MOV      R0,R4
        SWI      +546
        LDR      R1,??FontSelectGui_constr_1+0x4  ;; ??FontSelectGuiOnCreate
        MOV      R0,R4
        SWI      +548
        LDR      R1,??FontSelectGui_constr_1+0x8  ;; ??FontSelectGuiOnClose
        MOV      R0,R4
        SWI      +550
        LDR      R1,??FontSelectGui_constr_1+0xC  ;; ??FontSelectGuiOnRedraw
        MOV      R0,R4
        SWI      +552
        LDR      R1,??FontSelectGui_constr_1+0x10  ;; ??FontSelectGuiOnKey
        MOV      R0,R4
        SWI      +554
        POP      {R4,PC}          ;; return
        DATA
??FontSelectGui_constr_1:
        DC32     FontSelectGuiName
        DC32     ??FontSelectGuiOnCreate
        DC32     ??FontSelectGuiOnClose
        DC32     ??FontSelectGuiOnRedraw
        DC32     ??FontSelectGuiOnKey
        CFI EndBlock cfiBlock61

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock62 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnOkManualFontSelect??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock62
        REQUIRE ??OnOkManualFontSelect

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock63 Using cfiCommon1
        CFI Function ??OnOkManualFontSelect
        ARM
??OnOkManualFontSelect:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+4
        CFI CFA R13+12
        MOV      R4,R0
        MOV      R0,R1
        MOV      R1,R2
        MOV      R2,SP
        SWI      +667
        LDR      R0,[R4, #+56]
        CMP      R0,#+0
        BEQ      ??OnOkManualFontSelect_1
        SWI      +462
        STR      R0,[R4, #+56]
??OnOkManualFontSelect_1:
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        BEQ      ??OnOkManualFontSelect_2
        SWI      +462
        STR      R0,[R4, #+32]
??OnOkManualFontSelect_2:
        LDR      R1,[SP, #+0]
        MOV      R0,R4
        BL       ??CreateFontSelectGUI
        POP      {R0,R4,PC}       ;; return
        CFI EndBlock cfiBlock63

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock64 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnBackManualFontSelect??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock64
        REQUIRE ??OnBackManualFontSelect

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock65 Using cfiCommon1
        CFI Function ??OnBackManualFontSelect
        ARM
??OnBackManualFontSelect:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+32]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock65

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock66 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnManualFontSelect??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock66
        REQUIRE ??OnManualFontSelect

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock67 Using cfiCommon1
        CFI Function ??OnManualFontSelect
        ARM
??OnManualFontSelect:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R4,R0
        LDR      R0,??OnManualFontSelect_1  ;; `?<Constant L"\\x412\\x432\\x435\\x434\\x438\\x442\\x4`
        MOV      R1,#+0
        SWI      +349
        LDR      R3,??OnManualFontSelect_1+0x4  ;; VAR_ARG_HTEXT
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+12
        LDR      R1,??OnManualFontSelect_1+0x8  ;; ??OnOkManualFontSelect
        MOV      R2,R4
        PUSH     {R1}
        CFI CFA R13+16
        LDR      R1,??OnManualFontSelect_1+0xC  ;; VAR_ARG_CALL_BACK_OK
        PUSH     {R1}
        CFI CFA R13+20
        LDR      R1,??OnManualFontSelect_1+0x10  ;; ??OnBackManualFontSelect
        PUSH     {R1}
        CFI CFA R13+24
        LDR      R1,??OnManualFontSelect_1+0x14  ;; VAR_ARG_CALL_BACK_PREV_ACT
        PUSH     {R1}
        CFI CFA R13+28
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+32
        LDR      R1,??OnManualFontSelect_1+0x18  ;; VAR_ARG_STRINP_EMPTY_STR_EN
        PUSH     {R1}
        CFI CFA R13+36
        MOV      R1,#+9
        PUSH     {R1}
        CFI CFA R13+40
        LDR      R1,??OnManualFontSelect_1+0x1C  ;; VAR_ARG_STRINP_MODE
        PUSH     {R1}
        CFI CFA R13+44
        LDR      R1,??OnManualFontSelect_1+0x20  ;; VAR_ARG_BOOK
        PUSH     {R0}
        CFI CFA R13+48
        MOV      R0,#+0
        SWI      +324
        ADD      SP,SP,#+40
        CFI CFA R13+8
        STR      R0,[R4, #+32]
        POP      {R4,PC}          ;; return
        DATA
??OnManualFontSelect_1:
        DC32     `?<Constant L"\\x412\\x432\\x435\\x434\\x438\\x442\\x4`
        DC32     VAR_ARG_HTEXT
        DC32     ??OnOkManualFontSelect
        DC32     VAR_ARG_CALL_BACK_OK
        DC32     ??OnBackManualFontSelect
        DC32     VAR_ARG_CALL_BACK_PREV_ACT
        DC32     VAR_ARG_STRINP_EMPTY_STR_EN
        DC32     VAR_ARG_STRINP_MODE
        DC32     VAR_ARG_BOOK
        CFI EndBlock cfiBlock67

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock68 Using cfiCommon0
        CFI NoFunction
        THUMB
??FontSelectGui_destr??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock68
        REQUIRE ??FontSelectGui_destr

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock69 Using cfiCommon1
        CFI Function ??FontSelectGui_destr
        ARM
??FontSelectGui_destr:
        BX       LR               ;; return
        CFI EndBlock cfiBlock69

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock70 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateFontSelectGUI??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock70
        REQUIRE ??CreateFontSelectGUI

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock71 Using cfiCommon1
        CFI Function ??CreateFontSelectGUI
        ARM
??CreateFontSelectGUI:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        SUB      SP,SP,#+132
        CFI CFA R13+148
        MOV      R4,R0
        MOV      R6,R1
        MOV      R0,#+144
        _BLF     `??operator new`,`??operator new??rA`
        LDR      R2,??CreateFontSelectGUI_1  ;; ??FontSelectGui_constr
        LDR      R1,??CreateFontSelectGUI_1+0x4  ;; ??FontSelectGui_destr
        MOV      R5,R0
        LDR      R0,??DataTable46  ;; font_step
        MOV      R3,R4
        STR      R6,[R0, #+0]
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+152
        PUSH     {R0}
        CFI CFA R13+156
        PUSH     {R0}
        CFI CFA R13+160
        MOV      R0,R5
        SWI      +496
        CMP      R0,#+0
        ADD      SP,SP,#+12
        CFI CFA R13+148
        MOV      R0,R5
        BNE      ??CreateFontSelectGUI_2
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,#+0
        ADD      SP,SP,#+132
        CFI CFA R13+16
        POP      {R4-R6,PC}
        CFI CFA R13+148
??CreateFontSelectGUI_2:
        SWI      +360
        MOV      R6,R0
        LDR      R0,[R6, #+392]
        CMP      R0,#+0
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+44]
        BEQ      ??CreateFontSelectGUI_3
        LDR      R1,??DataTable46  ;; font_step
        AND      R0,R0,#0xFF
        LDR      R1,[R1, #+0]
        CMP      R0,R1
        BLT      ??CreateFontSelectGUI_4
        LDR      R0,[R4, #+84]
        LDR      R1,??DataTable46  ;; font_step
        LDR      R0,[R0, #+44]
        LDR      R1,[R1, #+0]
        AND      R0,R0,#0xFF
        _BLF     ??div32_a,??rA??div32_a
        SUB      R0,R1,#+1
        B        ??CreateFontSelectGUI_5
??CreateFontSelectGUI_4:
        MOV      R0,#+0
??CreateFontSelectGUI_5:
        STR      R0,[R6, #+372]
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+44]
        ASR      R0,R0,#+8
        AND      R1,R0,#0x1
        STR      R1,[R6, #+396]
        AND      R0,R0,#0x2
        ASR      R0,R0,#+1
        STR      R0,[R6, #+400]
        B        ??CreateFontSelectGUI_6
??CreateFontSelectGUI_3:
        BL       ??GetIdByFontId
        STR      R0,[R6, #+372]
??CreateFontSelectGUI_6:
        STR      R5,[R4, #+56]
        CMP      R4,#+0
        BEQ      ??CreateFontSelectGUI_7
        MOV      R1,R5
        MOV      R0,R4
        SWI      +491
??CreateFontSelectGUI_7:
        LDR      R0,[R4, #+84]
        MOV      R2,#+63
        ADD      R1,R0,#+4
        ADD      R0,SP,#+4
        _BLF     ??win12512unicode,??win12512unicode??rA
        MOV      R6,#+255
        ORR      R6,R6,#0xFF00
        MOV      R2,R6
        MOV      R1,#+0
        ADD      R0,SP,#+4
        SWI      +349
        MOV      R1,R0
        LDR      R0,[R4, #+56]
        SWI      +307
        LDR      R0,[R4, #+56]
        MOV      R1,#+3
        SWI      +641
        LDR      R0,??DataTable54  ;; ACTION_BACK
        LDR      R2,??CreateFontSelectGUI_1+0x8  ;; ??OnBackFontSelect
        LDR      R1,[R0, #+0]
        LDR      R0,[R4, #+56]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??DataTable53  ;; ACTION_SELECT1
        LDR      R2,??CreateFontSelectGUI_1+0xC  ;; ??OnOkFontSelect
        LDR      R1,[R0, #+0]
        LDR      R0,[R4, #+56]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,[R4, #+56]
        SWI      +308
        LDR      R0,??CreateFontSelectGUI_1+0x10  ;; `?<Constant L"\\x4d\\x50\\x5f\\x4d\\x41\\x4e\\x55\\x41\\`
        MVN      R1,#-1879048192
        STR      R1,[SP, #+0]
        MOV      R2,SP
        MOV      R1,R6
        SWI      +647
        LDR      R2,??CreateFontSelectGUI_1+0x14  ;; ??OnManualFontSelect
        LDR      R0,[R4, #+56]
        MOV      R1,#+0
        SWI      +331
        LDR      R2,[SP, #+0]
        LDR      R0,[R4, #+56]
        MOV      R1,#+0
        SWI      +332
        MOV      R0,R5
        ADD      SP,SP,#+132
        CFI CFA R13+16
        POP      {R4-R6,PC}       ;; return
        DATA
??CreateFontSelectGUI_1:
        DC32     ??FontSelectGui_constr
        DC32     ??FontSelectGui_destr
        DC32     ??OnBackFontSelect
        DC32     ??OnOkFontSelect
        DC32     `?<Constant L"\\x4d\\x50\\x5f\\x4d\\x41\\x4e\\x55\\x41\\`
        DC32     ??OnManualFontSelect
        CFI EndBlock cfiBlock71

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable46:
        DC32     font_step

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock72 Using cfiCommon0
        CFI NoFunction
        THUMB
??Free_FLIST??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock72
        REQUIRE ??Free_FLIST

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
fltop:
        DS8 4

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x25\\x30\\x32\\x58\\x2c\\x20\\x25\\x30\\`:
        DATA
        DC8 25H, 0, 30H, 0, 32H, 0, 58H, 0
        DC8 2CH, 0, 20H, 0, 25H, 0, 30H, 0
        DC8 32H, 0, 58H, 0, 2CH, 0, 20H, 0
        DC8 25H, 0, 30H, 0, 32H, 0, 58H, 0
        DC8 2CH, 0, 20H, 0, 25H, 0, 30H, 0
        DC8 32H, 0, 58H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4f\\x4b">`:
        DATA
        DC8 4FH, 0, 4BH, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x25\\x64\\x2c\\x20\\x25\\x64\\x2c\\x20\\`:
        DATA
        DC8 25H, 0, 64H, 0, 2CH, 0, 20H, 0
        DC8 25H, 0, 64H, 0, 2CH, 0, 20H, 0
        DC8 25H, 0, 64H, 0, 2CH, 0, 20H, 0
        DC8 25H, 0, 64H, 0, 0, 0
        DC8 0, 0
        DC8 25H, 0, 64H, 0, 2CH, 0, 20H, 0
        DC8 25H, 0, 64H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x55\\x6e\\x64\\x65\\x66\\x69\\x6e\\x65\\`:
        DATA
        DC8 55H, 0, 6EH, 0, 64H, 0, 65H, 0
        DC8 66H, 0, 69H, 0, 6EH, 0, 65H, 0
        DC8 64H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x432\\x435\\x434\\x438\\x442\\x4`:
        DATA
        DC8 12H, 4, 32H, 4, 35H, 4, 34H, 4
        DC8 38H, 4, 42H, 4, 35H, 4, 20H, 0
        DC8 48H, 4, 30H, 4, 33H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4d\\x50\\x5f\\x4d\\x41\\x4e\\x55\\x41\\`:
        DATA
        DC8 4DH, 0, 50H, 0, 5FH, 0, 4DH, 0
        DC8 41H, 0, 4EH, 0, 55H, 0, 41H, 0
        DC8 4CH, 0, 5FH, 0, 53H, 0, 4BH, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x5b\\x25\\x6c\\x73\\x5d">`:
        DATA
        DC8 5BH, 0, 25H, 0, 6CH, 0, 73H, 0
        DC8 5DH, 0, 0, 0
        DC8 2EH, 0, 2EH, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x53\\x65\\x6c\\x65\\x63\\x74\\x20\\x66\\`:
        DATA
        DC8 53H, 0, 65H, 0, 6CH, 0, 65H, 0
        DC8 63H, 0, 74H, 0, 20H, 0, 66H, 0
        DC8 6FH, 0, 6CH, 0, 64H, 0, 65H, 0
        DC8 72H, 0, 0, 0
        DC8 53H, 0, 65H, 0, 6CH, 0, 65H, 0
        DC8 63H, 0, 74H, 0, 20H, 0, 66H, 0
        DC8 69H, 0, 6CH, 0, 65H, 0, 0, 0
        DC8 4FH, 0, 70H, 0, 65H, 0, 6EH, 0
        DC8 0, 0
        DC8 0, 0
        DC8 53H, 0, 65H, 0, 6CH, 0, 65H, 0
        DC8 63H, 0, 74H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 2FH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
EditColorGuiName:
        DATA
        DC8 "Gui_EditColor"
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
CooordinatesGuiName:
        DATA
        DC8 "Gui_Coordinates"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
FontSelectGuiName:
        DATA
        DC8 "Gui_FontSelect"
        DC8 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
test_str:
        DATA
        DC8 "Test string 123"

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock73 Using cfiCommon1
        CFI Function ??Free_FLIST
        ARM
??Free_FLIST:
        LDR      R0,??DataTable52  ;; fltop
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        LDR      R4,[R0, #+0]
        MOV      R1,#+0
        STR      R1,[R0, #+0]
        CMP      R4,#+0
        POPEQ    {R4-R6,PC}
??Free_FLIST_1:
        MOV      R5,R4
        ADD      R6,R5,#+8
        LDR      R0,[R6, #+0]
        _BLF     `??operator delete`,`??operator delete??rA`
        LDR      R0,[R6, #+4]
        _BLF     `??operator delete`,`??operator delete??rA`
        LDR      R4,[R4, #+0]
        MOV      R0,R5
        _BLF     `??operator delete`,`??operator delete??rA`
        CMP      R4,#+0
        BNE      ??Free_FLIST_1
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock73

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock74 Using cfiCommon0
        CFI NoFunction
        THUMB
??AddToFList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock74
        REQUIRE ??AddToFList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock75 Using cfiCommon1
        CFI Function ??AddToFList
        ARM
??AddToFList:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOV      R5,R0
        MOV      R6,R1
        MOV      R7,R2
        MOV      R0,#+16
        _BLF     `??operator new`,`??operator new??rA`
        MOV      R4,R0
        MOV      R0,R5
        SWI      +343
        ADD      R0,R0,#+1
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        STR      R0,[R4, #+8]
        MOV      R0,R6
        SWI      +343
        ADD      R0,R0,#+1
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        STR      R0,[R4, #+12]
        LDR      R0,[R4, #+8]
        MOV      R1,R5
        SWI      +338
        LDR      R0,[R4, #+12]
        MOV      R1,R6
        SWI      +338
        STR      R7,[R4, #+4]
        MOV      R0,#+0
        STR      R0,[R4, #+0]
        LDR      R0,??DataTable52  ;; fltop
        LDR      R5,[R0, #+0]
        CMP      R5,#+0
        BEQ      ??AddToFList_1
        LDR      R6,??DataTable52  ;; fltop
??AddToFList_2:
        LDR      R0,[R5, #+12]
        LDR      R1,[R4, #+12]
        SWI      +671
        CMP      R0,#+0
        BPL      ??AddToFList_3
        MOV      R6,R5
        LDR      R5,[R5, #+0]
        CMP      R5,#+0
        BNE      ??AddToFList_2
??AddToFList_3:
        STR      R5,[R4, #+0]
        STR      R4,[R6, #+0]
        MOV      R0,R4
        POP      {R4-R7,PC}
??AddToFList_1:
        STR      R4,[R0, #+0]
        MOV      R0,R4
        POP      {R4-R7,PC}       ;; return
        CFI EndBlock cfiBlock75

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock76 Using cfiCommon0
        CFI NoFunction
        THUMB
??FindFiles??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock76
        REQUIRE ??FindFiles

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock77 Using cfiCommon1
        CFI Function ??FindFiles
        ARM
??FindFiles:
        PUSH     {R1,R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+40
        SUB      SP,SP,#+40
        CFI CFA R13+80
        MOV      R4,R0
        MOV      R5,#+0
        BL       ??Free_FLIST
        MOV      R0,#+512
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R6,R0
        MOV      R0,#+128
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R8,R0
        MOV      R7,#+0
        MOV      R1,R4
        B        ??FindFiles_1
??FindFiles_2:
        STRH     R2,[R0, #+0]
        CMP      R2,#+47
        BNE      ??FindFiles_3
        LDRH     R2,[R1, #+0]
        CMP      R2,#+0
        MOVNE    R7,R0
??FindFiles_3:
        ADD      R0,R0,#+2
??FindFiles_1:
        LDRH     R2,[R1], #+2
        CMP      R2,#+0
        BNE      ??FindFiles_2
        CMP      R7,#+0
        BEQ      ??FindFiles_4
        LDR      R1,??FindFiles_5  ;; `?<Constant L"\\x5b\\x25\\x6c\\x73\\x5d">` + 12
        CMP      R7,R8
        MOV      R0,#+0
        STRHEQ   R0,[R7, #+2]
        STRHNE   R0,[R7, #+0]
        MOV      R0,R8
        BL       ??AddToFList
        MOV      R5,#+1
??FindFiles_4:
        MOV      R0,R4
        SWI      +812
        MOVS     R9,R0
        BEQ      ??FindFiles_6
        MOV      R0,R4
        SWI      +759
        B        ??FindFiles_7
??FindFiles_8:
        LDR      R2,??FindFiles_5+0x4  ;; `?<Constant L"\\x5b\\x25\\x6c\\x73\\x5d">`
        MOV      R3,R10
        MOV      R1,#+63
        MOV      R0,R8
        SWI      +277
        MOV      R2,#+1
        MOV      R1,R8
??FindFiles_9:
        MOV      R0,R6
        BL       ??AddToFList
        ADD      R5,R5,#+1
??FindFiles_7:
        MOV      R0,R9
        SWI      +813
        MOVS     R10,R0
        BEQ      ??FindFiles_10
        MOV      R1,SP
        SWI      +761
        MOV      R0,R4
        SWI      +343
        MOV      R11,R0
        MOV      R1,R4
        MOV      R0,R6
        SWI      +338
        CMP      R7,#+0
        BEQ      ??FindFiles_11
        ADD      R0,R6,R11, LSL #+1
        MOV      R1,#+47
        STRH     R1,[R0, #+0]
        ADD      R11,R11,#+1
??FindFiles_11:
        MOV      R1,R10
        ADD      R0,R6,R11, LSL #+1
        SWI      +338
        LDR      R0,[SP, #+0]
        TST      R0,#0x4000
        BNE      ??FindFiles_8
        LDR      R0,[SP, #+40]
        CMP      R0,#+1
        BNE      ??FindFiles_7
        MOV      R2,#+2
        MOV      R1,R10
        B        ??FindFiles_9
??FindFiles_10:
        MOV      R0,R9
        SWI      +814
??FindFiles_6:
        MOV      R0,R8
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,R6
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,R5
        ADD      SP,SP,#+44
        CFI CFA R13+36
        POP      {R4-R11,PC}      ;; return
        DATA
??FindFiles_5:
        DC32     `?<Constant L"\\x5b\\x25\\x6c\\x73\\x5d">` + 12
        DC32     `?<Constant L"\\x5b\\x25\\x6c\\x73\\x5d">`
        CFI EndBlock cfiBlock77

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock78 Using cfiCommon0
        CFI NoFunction
        THUMB
??FindFLISTtByNS??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock78
        REQUIRE ??FindFLISTtByNS

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock79 Using cfiCommon1
        CFI Function ??FindFLISTtByNS
        ARM
??FindFLISTtByNS:
        LDR      R2,??DataTable52  ;; fltop
        B        ??FindFLISTtByNS_1
??FindFLISTtByNS_2:
        SUB      R3,R3,#+1
        STR      R3,[R0, #+0]
??FindFLISTtByNS_1:
        LDR      R2,[R2, #+0]
        CMP      R2,#+0
        BEQ      ??FindFLISTtByNS_3
        LDR      R3,[R2, #+4]
        CMP      R3,R1
        BNE      ??FindFLISTtByNS_1
        LDR      R3,[R0, #+0]
        CMP      R3,#+0
        BNE      ??FindFLISTtByNS_2
        MOV      R0,R2
        BX       LR
??FindFLISTtByNS_3:
        MOV      R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock79

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable52:
        DC32     fltop

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock80 Using cfiCommon0
        CFI NoFunction
        THUMB
??FindFLISTtByN??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock80
        REQUIRE ??FindFLISTtByN

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock81 Using cfiCommon1
        CFI Function ??FindFLISTtByN
        ARM
??FindFLISTtByN:
        PUSH     {R0,LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+8
        MOV      R1,#+0
        MOV      R0,SP
        BL       ??FindFLISTtByNS
        LDR      R1,[SP, #+0]
        CMP      R1,#+0
        BNE      ??FindFLISTtByN_1
        CMP      R0,#+0
        POPNE    {R1,PC}
??FindFLISTtByN_1:
        MOV      R1,#+1
        MOV      R0,SP
        BL       ??FindFLISTtByNS
        LDR      R1,[SP, #+0]
        CMP      R1,#+0
        BNE      ??FindFLISTtByN_2
        CMP      R0,#+0
        POPNE    {R1,PC}
??FindFLISTtByN_2:
        MOV      R1,#+2
        MOV      R0,SP
        BL       ??FindFLISTtByNS
        POP      {R1,PC}
        CFI EndBlock cfiBlock81

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock82 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnMessage??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock82
        REQUIRE ??OnMessage

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock83 Using cfiCommon1
        CFI Function ??OnMessage
        ARM
??OnMessage:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        SWI      +884
        CMP      R0,#+1
        BNE      ??OnMessage_1
        MOV      R0,R4
        SWI      +311
        BL       ??FindFLISTtByN
        LDR      R0,[R0, #+12]
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +312
??OnMessage_1:
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock83

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock84 Using cfiCommon0
        CFI NoFunction
        THUMB
??Self_OnBack??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock84
        REQUIRE ??Self_OnBack

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock85 Using cfiCommon1
        CFI Function ??Self_OnBack
        ARM
??Self_OnBack:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        BL       ??Free_FLIST
        LDR      R0,[R4, #+72]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+72]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock85

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock86 Using cfiCommon0
        CFI NoFunction
        THUMB
??Self_onEnterPressed??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock86
        REQUIRE ??Self_onEnterPressed

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock87 Using cfiCommon1
        CFI Function ??Self_onEnterPressed
        ARM
??Self_onEnterPressed:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R5,R0
        LDR      R0,[R5, #+72]
        SWI      +318
        BL       ??FindFLISTtByN
        MOVS     R6,R0
        POPEQ    {R4-R6,PC}
        MOV      R0,#+512
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R4,R0
        LDR      R0,[R6, #+4]
        CMP      R0,#+1
        CMPNE    R0,#+0
        BNE      ??Self_onEnterPressed_1
        LDR      R1,[R6, #+8]
        MOV      R2,#+255
        MOV      R0,R4
        SWI      +339
        BL       ??Free_FLIST
        LDR      R0,[R5, #+72]
        CMP      R0,#+0
        BEQ      ??Self_onEnterPressed_2
        SWI      +462
        STR      R0,[R5, #+72]
??Self_onEnterPressed_2:
        MOV      R1,R4
        MOV      R0,R5
        BL       ??CreateFileFolderSelect
        B        ??Self_onEnterPressed_3
??Self_onEnterPressed_1:
        LDR      R0,[R6, #+8]
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R6,R0
        LDR      R0,[R5, #+32]
        SWI      +360
        MOV      R1,R6
        SWI      +786
        BL       ??Free_FLIST
        LDR      R0,[R5, #+72]
        CMP      R0,#+0
        BEQ      ??Self_onEnterPressed_4
        SWI      +462
??Self_onEnterPressed_3:
        STR      R0,[R5, #+72]
??Self_onEnterPressed_4:
        MOV      R0,R4
        _BLF     `??operator delete`,`??operator delete??rA`
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock87

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock88 Using cfiCommon0
        CFI NoFunction
        THUMB
??Self_onSelectPressed??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock88
        REQUIRE ??Self_onSelectPressed

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock89 Using cfiCommon1
        CFI Function ??Self_onSelectPressed
        ARM
??Self_onSelectPressed:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
        LDR      R0,[R4, #+72]
        SWI      +318
        BL       ??FindFLISTtByN
        CMP      R0,#+0
        POPEQ    {R4,R5,PC}
        LDR      R1,[R0, #+4]
        CMP      R1,#+1
        BNE      ??Self_onSelectPressed_1
        LDR      R1,[R4, #+76]
        CMP      R1,#+0
        B        ??Self_onSelectPressed_2
??Self_onSelectPressed_1:
        CMP      R1,#+2
??Self_onSelectPressed_2:
        POPNE    {R4,R5,PC}
        LDR      R0,[R0, #+8]
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R5,R0
        LDR      R0,[R4, #+32]
        SWI      +360
        MOV      R1,R5
        SWI      +786
        BL       ??Free_FLIST
        LDR      R0,[R4, #+72]
        CMP      R0,#+0
        POPEQ    {R4,R5,PC}
        SWI      +462
        STR      R0,[R4, #+72]
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock89

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock90 Using cfiCommon0
        CFI NoFunction
        THUMB
??isdir??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock90
        REQUIRE ??isdir

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock91 Using cfiCommon1
        CFI Function ??isdir
        ARM
??isdir:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SUB      SP,SP,#+40
        CFI CFA R13+44
        MOV      R1,SP
        SWI      +761
        CMN      R0,#+1
        LDRNE    R0,[SP, #+0]
        ADD      SP,SP,#+40
        CFI CFA R13+4
        ANDNE    R0,R0,#0x4000
        MOVEQ    R0,#+0
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock91

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock92 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateFileFolderSelect??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock92
        REQUIRE ??CreateFileFolderSelect

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock93 Using cfiCommon1
        CFI Function ??CreateFileFolderSelect
        ARM
??CreateFileFolderSelect:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        MOV      R6,R0
        MOV      R7,R1
        MOV      R0,#+512
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R4,R0
        LDR      R0,[R6, #+76]
        MOV      R2,#+255
        CMP      R0,#+0
        LDREQ    R0,??CreateFileFolderSelect_1+0x4  ;; `?<Constant L"\\x53\\x65\\x6c\\x65\\x63\\x74\\x20\\x66\\`
        ORR      R2,R2,#0xFF00
        LDRNE    R0,??CreateFileFolderSelect_1+0x8  ;; `?<Constant L"\\x53\\x65\\x6c\\x65\\x63\\x74\\x20\\x66\\` + 28
        MOV      R1,#+0
        SWI      +349
        MOV      R8,R0
        MOV      R1,#+0
        MOV      R0,R6
        SWI      +448
        MOV      R5,R0
        MOV      R1,R8
        SWI      +307
        MOV      R1,R7
        MOV      R0,R4
        SWI      +338
        MOV      R7,R4
        B        ??CreateFileFolderSelect_2
??CreateFileFolderSelect_3:
        MOV      R1,#+0
        STRH     R1,[R0, #+0]
??CreateFileFolderSelect_2:
        MOV      R0,R4
        BL       ??isdir
        CMP      R0,#+0
        BNE      ??CreateFileFolderSelect_4
        MOV      R1,#+47
        MOV      R0,R4
        SWI      +430
        CMP      R0,R4
        CMPNE    R0,#+0
        BNE      ??CreateFileFolderSelect_3
        ADR      R7,??CreateFileFolderSelect_1  ;; 0x2F, 0x00, 0x00, 0x00
??CreateFileFolderSelect_4:
        LDR      R1,[R6, #+76]
        LDR      R8,??CreateFileFolderSelect_1+0x4  ;; `?<Constant L"\\x53\\x65\\x6c\\x65\\x63\\x74\\x20\\x66\\`
        MOV      R0,R7
        BL       ??FindFiles
        MOV      R1,R0
        MOV      R0,R5
        SWI      +449
        MOV      R1,#+0
        MOV      R0,R5
        SWI      +309
        LDR      R1,??CreateFileFolderSelect_1+0xC  ;; ??OnMessage
        MOV      R0,R5
        SWI      +372
        LDR      R0,??DataTable53  ;; ACTION_SELECT1
        LDR      R2,??CreateFileFolderSelect_1+0x10  ;; ??Self_onEnterPressed
        LDR      R6,[R0, #+0]
        MOV      R0,R5
        MOV      R1,R6, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        MOV      R7,#+255
        ORR      R7,R7,#0xFF00
        MOV      R2,R7
        MOV      R1,#+0
        ADD      R0,R8,#+52
        SWI      +349
        MOV      R2,R0
        MOV      R1,R6, LSL #+16
        MOV      R1,R1, LSR #+16
        MOV      R0,R5
        SWI      +332
        LDR      R0,??DataTable54  ;; ACTION_BACK
        LDR      R2,??CreateFileFolderSelect_1+0x14  ;; ??Self_OnBack
        LDR      R1,[R0, #+0]
        MOV      R0,R5
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R2,??CreateFileFolderSelect_1+0x18  ;; ??Self_onSelectPressed
        MOV      R1,#+1
        MOV      R0,R5
        SWI      +331
        MOV      R2,R7
        MOV      R1,#+0
        ADD      R0,R8,#+64
        SWI      +349
        MOV      R2,R0
        MOV      R1,#+1
        MOV      R0,R5
        SWI      +332
        MOV      R0,R5
        SWI      +308
        MOV      R0,R4
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,R5
        POP      {R4-R8,PC}       ;; return
        DATA
??CreateFileFolderSelect_1:
        DC8      0x2F, 0x00, 0x00, 0x00
        DC32     `?<Constant L"\\x53\\x65\\x6c\\x65\\x63\\x74\\x20\\x66\\`
        DC32     `?<Constant L"\\x53\\x65\\x6c\\x65\\x63\\x74\\x20\\x66\\` + 28
        DC32     ??OnMessage
        DC32     ??Self_onEnterPressed
        DC32     ??Self_OnBack
        DC32     ??Self_onSelectPressed
        CFI EndBlock cfiBlock93

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable53:
        DC32     ACTION_SELECT1

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable54:
        DC32     ACTION_BACK

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock94 Using cfiCommon1
        CFI NoFunction
        ARM
??rA??div32_a:
        LDR      R12,??Subroutine47_0  ;; ??div32_a
        MOV      PC,R12
        DATA
??Subroutine47_0:
        DC32     ??div32_a
        CFI EndBlock cfiBlock94

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock95 Using cfiCommon1
        CFI NoFunction
        ARM
??RefreshEdList??rA:
        LDR      R12,??Subroutine48_0  ;; ??RefreshEdList
        BX       R12
        DATA
??Subroutine48_0:
        DC32     ??RefreshEdList
        CFI EndBlock cfiBlock95

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock96 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new??rA`:
        LDR      R12,??Subroutine49_0  ;; `??operator new`
        BX       R12
        DATA
??Subroutine49_0:
        DC32     `??operator new`
        CFI EndBlock cfiBlock96

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock97 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine50_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine50_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock97

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock98 Using cfiCommon1
        CFI NoFunction
        ARM
??win12512unicode??rA:
        LDR      R12,??Subroutine51_0  ;; ??win12512unicode
        BX       R12
        DATA
??Subroutine51_0:
        DC32     ??win12512unicode
        CFI EndBlock cfiBlock98

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock99 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new[]??rA`:
        LDR      R12,??Subroutine52_0  ;; `??operator new[]`
        BX       R12
        DATA
??Subroutine52_0:
        DC32     `??operator new[]`
        CFI EndBlock cfiBlock99

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for colors>`:
        DATA
        DC32 -65536, -16711936, -16776961, -2134463825

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        END
// 
// 10 032 bytes in segment CODE
//    344 bytes in segment DATA_C
//     16 bytes in segment DATA_I
//     16 bytes in segment DATA_ID
//      8 bytes in segment DATA_Z
//     24 bytes in segment INITTAB
// 
// 9 772 bytes of CODE  memory (+ 284 bytes shared)
//   360 bytes of CONST memory
//    24 bytes of DATA  memory
//
//Errors: none
//Warnings: none
