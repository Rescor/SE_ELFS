//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:42:38 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\main /
//                       .cpp                                                /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\main /
//                       .cpp -D NDEBUG -lCN Z:\home\perk11\www\perk11.info\ /
//                       svn\SE\BcfgEdit\Release\List\ -la                   /
//                       Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\Rele /
//                       ase\List\ -o Z:\home\perk11\www\perk11.info\svn\SE\ /
//                       BcfgEdit\Release\Obj\ -s9 --no_unroll               /
//                       --no_code_motion --cpu_mode arm --endian little     /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --enable_multibytes --fpu None --eec++              /
//                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl /
//                       8n.h -I Z:\home\perk11\IAR2\arm\INC\                /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\BcfgEdit\Rele /
//                       ase\List\main.s79                                   /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME main

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)
        RSEG ELFBEGIN:DATA:REORDER:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??Crc32
        FUNCTION ??Crc32,0203H
        LOCFRAME CSTACK, 1028, STACK
        MULTWEAK ??Crc32??rT
        PUBLIC ??CreateCBoxGui
        FUNCTION ??CreateCBoxGui,0203H
        LOCFRAME CSTACK, 148, STACK
        MULTWEAK ??CreateCBoxGui??rT
        FUNCTION ??CreateEdPageOnCreate,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??CreateEditColorGUI??rA
        MULTWEAK ??CreateEditCoordinatesGUI??rA
        MULTWEAK ??CreateFileFolderSelect??rA
        MULTWEAK ??CreateFontSelectGUI??rA
        PUBLIC ??CreateGuiList
        FUNCTION ??CreateGuiList,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??CreateGuiList??rT
        PUBLIC ??CreateSignedNumberInput
        FUNCTION ??CreateSignedNumberInput,0203H
        LOCFRAME CSTACK, 192, STACK
        MULTWEAK ??CreateSignedNumberInput??rT
        PUBLIC ??CreateUnicodeSI
        FUNCTION ??CreateUnicodeSI,0203H
        LOCFRAME CSTACK, 100, STACK
        MULTWEAK ??CreateUnicodeSI??rT
        PUBLIC ??CreateUnsignedNumberInput
        FUNCTION ??CreateUnsignedNumberInput,0203H
        LOCFRAME CSTACK, 200, STACK
        MULTWEAK ??CreateUnsignedNumberInput??rT
        PUBLIC ??CreateWinOrPassSI
        FUNCTION ??CreateWinOrPassSI,0203H
        LOCFRAME CSTACK, 92, STACK
        MULTWEAK ??CreateWinOrPassSI??rT
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable10 EQU 0
??DataTable11 EQU 0
??DataTable12 EQU 0
??DataTable13 EQU 0
??DataTable14 EQU 0
??DataTable15 EQU 0
??DataTable16 EQU 0
??DataTable17 EQU 0
??DataTable18 EQU 0
??DataTable19 EQU 0
??DataTable20 EQU 0
??DataTable21 EQU 0
??DataTable22 EQU 0
??DataTable23 EQU 0
??DataTable24 EQU 0
??DataTable25 EQU 0
??DataTable26 EQU 0
??DataTable27 EQU 0
??DataTable28 EQU 0
??DataTable29 EQU 0
??DataTable4 EQU 0
??DataTable43 EQU 0
??DataTable45 EQU 0
??DataTable47 EQU 0
??DataTable48 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
??DataTable9 EQU 0
        MULTWEAK ??Font_GetNameByFontId??rA
        MULTWEAK ??Free_FLIST??rA
        MULTWEAK ??GetKeyModeName??rA
        PUBLIC ??GetParentName
        FUNCTION ??GetParentName,0203H
        LOCFRAME CSTACK, 76, STACK
        MULTWEAK ??GetParentName??rT
        PUBLIC ??GetSubItemText
        FUNCTION ??GetSubItemText,0203H
        LOCFRAME CSTACK, 184, STACK
        MULTWEAK ??GetSubItemText??rT
        PUBLIC ??LoadCfg
        FUNCTION ??LoadCfg,0203H
        LOCFRAME CSTACK, 60, STACK
        MULTWEAK ??LoadCfg??rT
        FUNCTION ??MainPageOnCreate,0603H
        LOCFRAME CSTACK, 16, STACK
        PUBLIC ??OnBackBcfgGui
        FUNCTION ??OnBackBcfgGui,0603H
        LOCFRAME CSTACK, 28, STACK
        MULTWEAK ??OnBackBcfgGui??rT
        PUBLIC ??OnBackCreateTextInputGui
        FUNCTION ??OnBackCreateTextInputGui,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnBackCreateTextInputGui??rT
        PUBLIC ??OnBackExitGui
        FUNCTION ??OnBackExitGui,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnBackExitGui??rT
        PUBLIC ??OnCloseCBoxGui
        FUNCTION ??OnCloseCBoxGui,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnCloseCBoxGui??rT
        PUBLIC ??OnNoExitGui
        FUNCTION ??OnNoExitGui,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??OnNoExitGui??rT
        PUBLIC ??OnOkCreateSignedNumberGui
        FUNCTION ??OnOkCreateSignedNumberGui,0603H
        LOCFRAME CSTACK, 152, STACK
        MULTWEAK ??OnOkCreateSignedNumberGui??rT
        PUBLIC ??OnOkCreateUnicodeGui
        FUNCTION ??OnOkCreateUnicodeGui,0603H
        LOCFRAME CSTACK, 152, STACK
        MULTWEAK ??OnOkCreateUnicodeGui??rT
        PUBLIC ??OnOkCreateUnsignedNumberGui
        FUNCTION ??OnOkCreateUnsignedNumberGui,0603H
        LOCFRAME CSTACK, 152, STACK
        MULTWEAK ??OnOkCreateUnsignedNumberGui??rT
        PUBLIC ??OnOkCreateWinOrPassGui
        FUNCTION ??OnOkCreateWinOrPassGui,0603H
        LOCFRAME CSTACK, 152, STACK
        MULTWEAK ??OnOkCreateWinOrPassGui??rT
        PUBLIC ??OnSelect1GuiBcfg
        FUNCTION ??OnSelect1GuiBcfg,0603H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??OnSelect1GuiBcfg??rT
        PUBLIC ??OnSelectCBoxGui
        FUNCTION ??OnSelectCBoxGui,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnSelectCBoxGui??rT
        PUBLIC ??OnYesExitGui
        FUNCTION ??OnYesExitGui,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??OnYesExitGui??rT
        FUNCTION ??RecreateEdPage,0603H
        LOCFRAME CSTACK, 4, STACK
        PUBLIC ??RefreshEdList
        FUNCTION ??RefreshEdList,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??RefreshEdList??rT
        PUBLIC ??SaveCfg
        FUNCTION ??SaveCfg,0203H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??SaveCfg??rT
        FUNCTION ??SelBcfgPageOnAccept,0603H
        LOCFRAME CSTACK, 16, STACK
        FUNCTION ??SelBcfgPageOnCancel,0603H
        LOCFRAME CSTACK, 4, STACK
        FUNCTION ??SelBcfgPageOnCreate,0603H
        LOCFRAME CSTACK, 24, STACK
        PUBLIC ??SelBcfg_BcfgFilter
        FUNCTION ??SelBcfg_BcfgFilter,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??SelBcfg_BcfgFilter??rT
        PUBLIC ??SendReconfigEvent
        FUNCTION ??SendReconfigEvent,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??SendReconfigEvent??rT
        FUNCTION ??ShowAuthorInfo,0603H
        LOCFRAME CSTACK, 144, STACK
        FUNCTION ??TerminateElf,0603H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC ??UnicodeOnSelFile
        FUNCTION ??UnicodeOnSelFile,0603H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??UnicodeOnSelFile??rT
        PUBLIC ??UnicodeOnSelFolder
        FUNCTION ??UnicodeOnSelFolder,0603H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??UnicodeOnSelFolder??rT
        MULTWEAK ??_Geterrno??rA
        PUBLIC ??create_ed
        FUNCTION ??create_ed,0203H
        LOCFRAME CSTACK, 108, STACK
        MULTWEAK ??create_ed??rT
        PUBLIC ??elf_exit
        FUNCTION ??elf_exit,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??elf_exit??rT
        PUBLIC ??getnumwidth
        FUNCTION ??getnumwidth,0203H
        MULTWEAK ??getnumwidth??rT
        PUBLIC ??isBcfgEditBook
        FUNCTION ??isBcfgEditBook,0603H
        MULTWEAK ??isBcfgEditBook??rT
        MULTWEAK ??kill_data??rA
        MULTWEAK ??main??rT
        PUBLIC ??onLBMessage
        FUNCTION ??onLBMessage,0603H
        LOCFRAME CSTACK, 84, STACK
        MULTWEAK ??onLBMessage??rT
        FUNCTION ??onMyBookClose,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new??rA`
        MULTWEAK `??operator new[]??rA`
        PUBLIC ??unicode2win1251
        FUNCTION ??unicode2win1251,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??unicode2win1251??rT
        MULTWEAK ??wcstol??rA
        MULTWEAK ??wcstoul??rA
        PUBLIC ??win12512unicode
        FUNCTION ??win12512unicode,0203H
        MULTWEAK ??win12512unicode??rT
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC main
        FUNCTION main,0a03H
        LOCFRAME CSTACK, 28, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        










_Geterrno           SYMBOL "_Geterrno"
kill_data           SYMBOL "kill_data"
wcstol              SYMBOL "wcstol"
wcstoul             SYMBOL "wcstoul"

??Crc32??rT         SYMBOL "??rT", ??Crc32

??CreateCBoxGui??rT SYMBOL "??rT", ??CreateCBoxGui
??CreateEditColorGUI??rA SYMBOL "??rA", ??CreateEditColorGUI
??CreateEditCoordinatesGUI??rA SYMBOL "??rA", ??CreateEditCoordinatesGUI
??CreateFileFolderSelect??rA SYMBOL "??rA", ??CreateFileFolderSelect
??CreateFontSelectGUI??rA SYMBOL "??rA", ??CreateFontSelectGUI

??CreateGuiList??rT SYMBOL "??rT", ??CreateGuiList

??CreateSignedNumberInput??rT SYMBOL "??rT", ??CreateSignedNumberInput

??CreateUnicodeSI??rT SYMBOL "??rT", ??CreateUnicodeSI

??CreateUnsignedNumberInput??rT SYMBOL "??rT", ??CreateUnsignedNumberInput

??CreateWinOrPassSI??rT SYMBOL "??rT", ??CreateWinOrPassSI
??Font_GetNameByFontId??rA SYMBOL "??rA", ??Font_GetNameByFontId
??Free_FLIST??rA    SYMBOL "??rA", ??Free_FLIST
??GetKeyModeName??rA SYMBOL "??rA", ??GetKeyModeName

??GetParentName??rT SYMBOL "??rT", ??GetParentName

??GetSubItemText??rT SYMBOL "??rT", ??GetSubItemText

??LoadCfg??rT       SYMBOL "??rT", ??LoadCfg

??OnBackBcfgGui??rT SYMBOL "??rT", ??OnBackBcfgGui

??OnBackCreateTextInputGui??rT SYMBOL "??rT", ??OnBackCreateTextInputGui

??OnBackExitGui??rT SYMBOL "??rT", ??OnBackExitGui

??OnCloseCBoxGui??rT SYMBOL "??rT", ??OnCloseCBoxGui

??OnNoExitGui??rT   SYMBOL "??rT", ??OnNoExitGui

??OnOkCreateSignedNumberGui??rT SYMBOL "??rT", ??OnOkCreateSignedNumberGui

??OnOkCreateUnicodeGui??rT SYMBOL "??rT", ??OnOkCreateUnicodeGui

??OnOkCreateUnsignedNumberGui??rT SYMBOL "??rT", ??OnOkCreateUnsignedNumberGui

??OnOkCreateWinOrPassGui??rT SYMBOL "??rT", ??OnOkCreateWinOrPassGui

??OnSelect1GuiBcfg??rT SYMBOL "??rT", ??OnSelect1GuiBcfg

??OnSelectCBoxGui??rT SYMBOL "??rT", ??OnSelectCBoxGui

??OnYesExitGui??rT  SYMBOL "??rT", ??OnYesExitGui

??RefreshEdList??rT SYMBOL "??rT", ??RefreshEdList

??SaveCfg??rT       SYMBOL "??rT", ??SaveCfg

??SelBcfg_BcfgFilter??rT SYMBOL "??rT", ??SelBcfg_BcfgFilter

??SendReconfigEvent??rT SYMBOL "??rT", ??SendReconfigEvent

??UnicodeOnSelFile??rT SYMBOL "??rT", ??UnicodeOnSelFile

??UnicodeOnSelFolder??rT SYMBOL "??rT", ??UnicodeOnSelFolder
??_Geterrno??rA     SYMBOL "??rA", _Geterrno

??create_ed??rT     SYMBOL "??rT", ??create_ed

??elf_exit??rT      SYMBOL "??rT", ??elf_exit

??getnumwidth??rT   SYMBOL "??rT", ??getnumwidth

??isBcfgEditBook??rT SYMBOL "??rT", ??isBcfgEditBook
??kill_data??rA     SYMBOL "??rA", kill_data
main                SYMBOL "main"
??main??rT          SYMBOL "??rT", main

??onLBMessage??rT   SYMBOL "??rT", ??onLBMessage
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new??rA` SYMBOL "??rA", `??operator new`
`??operator new[]??rA` SYMBOL "??rA", `??operator new[]`

??unicode2win1251??rT SYMBOL "??rT", ??unicode2win1251
??wcstol??rA        SYMBOL "??rA", wcstol
??wcstoul??rA       SYMBOL "??rA", wcstoul

??win12512unicode??rT SYMBOL "??rT", ??win12512unicode

        EXTERN ??CreateEditColorGUI
        FUNCTION ??CreateEditColorGUI,0202H
        EXTERN ??CreateEditCoordinatesGUI
        FUNCTION ??CreateEditCoordinatesGUI,0202H
        EXTERN ??CreateFileFolderSelect
        FUNCTION ??CreateFileFolderSelect,0202H
        EXTERN ??CreateFontSelectGUI
        FUNCTION ??CreateFontSelectGUI,0202H
        EXTERN ??Font_GetNameByFontId
        FUNCTION ??Font_GetNameByFontId,0202H
        EXTERN ??Free_FLIST
        FUNCTION ??Free_FLIST,0202H
        EXTERN ??GetKeyModeName
        FUNCTION ??GetKeyModeName,0202H
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new`
        FUNCTION `??operator new`,0202H
        EXTERN `??operator new[]`
        FUNCTION `??operator new[]`,0202H
        EXTERN ACTION_BACK
        EXTERN ACTION_LONG_BACK
        EXTERN ACTION_NO
        EXTERN ACTION_SELECT1
        EXTERN ACTION_YES
        EXTERN DB_CMD_DELETE
        EXTERN DB_CMD_LAST
        EXTERN TERMINATE_SESSION_EVENT
        EXTERN VAR_ARG_BOOK
        EXTERN VAR_ARG_CALL_BACK_OK
        EXTERN VAR_ARG_CALL_BACK_PREV_ACT
        EXTERN VAR_ARG_HTEXT
        EXTERN VAR_ARG_STRINP_EMPTY_STR_EN
        EXTERN VAR_ARG_STRINP_IS_PASS_MODE
        EXTERN VAR_ARG_STRINP_MAX_INT_VAL
        EXTERN VAR_ARG_STRINP_MAX_LEN
        EXTERN VAR_ARG_STRINP_MIN_INT_VAL
        EXTERN VAR_ARG_STRINP_MIN_LEN
        EXTERN VAR_ARG_STRINP_MODE
        EXTERN VAR_ARG_STRINP_SET_INT_VAL
        EXTERN VAR_ARG_STRINP_TEXT
        EXTERN VAR_ARG_YESNO_PRE_QUESTION
        EXTERN VAR_ARG_YESNO_QUESTION
        EXTERN _Geterrno
        FUNCTION _Geterrno,010202H
        EXTERN bk_date_input
        EXTERN bk_keycode_select
        EXTERN bk_time_input
        EXTERN kill_data
        FUNCTION kill_data,0202H
        EXTERN wcstol
        FUNCTION wcstol,0202H
        EXTERN wcstoul
        FUNCTION wcstoul,0202H


        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
bk_msglst_base:
        DATA
        DC32 997, ??TerminateElf, 998, ??ShowAuthorInfo, 64, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??elf_exit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??elf_exit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??elf_exit
        ARM
??elf_exit:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +33028
        MOV      R1,R0
        LDR      R0,??elf_exit_1  ;; SFB(ELFBEGIN)
        POP      {LR}             ;; Pop
        CFI ?RET R14
        CFI CFA R13+0
        _BF      kill_data,??kill_data??rA  ;; tailcall
        DATA
??elf_exit_1:
        DC32     SFB(ELFBEGIN)
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??Crc32??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??Crc32

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??Crc32
        ARM
??Crc32:
        PUSH     {R4}
        CFI R4 Frame(CFA, -4)
        CFI CFA R13+4
        SUB      SP,SP,#+1024
        CFI CFA R13+1028
        MOV      R2,#+0
??Crc32_1:
        LDR      R4,??Crc32_2     ;; 0xffffffffedb88320
        MOV      R3,R2
        MOV      R12,#+0
??Crc32_3:
        TST      R3,#0x1
        EORNE    R3,R4,R3, LSR #+1
        LSREQ    R3,R3,#+1
        ADD      R12,R12,#+1
        CMP      R12,#+8
        BLT      ??Crc32_3
        MOV      R4,SP
        STR      R3,[R4, +R2, LSL #+2]
        ADD      R2,R2,#+1
        CMP      R2,#+256
        BLT      ??Crc32_1
        MVN      R2,#+0
        B        ??Crc32_4
??Crc32_5:
        LDRB     R3,[R0], #+1
        EOR      R3,R3,R2
        AND      R3,R3,#0xFF
        LDR      R3,[R4, +R3, LSL #+2]
        EOR      R2,R3,R2, LSR #+8
??Crc32_4:
        MOV      R3,R1
        SUB      R1,R3,#+1
        CMP      R3,#+0
        BNE      ??Crc32_5
        ADD      SP,SP,#+1024
        CFI CFA R13+4
        POP      {R4}
        CFI R4 SameValue
        CFI CFA R13+0
        MVN      R0,#+0
        EOR      R0,R0,R2
        BX       LR               ;; return
        DATA
??Crc32_2:
        DC32     0xffffffffedb88320
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??win12512unicode??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??win12512unicode

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??win12512unicode
        ARM
??win12512unicode:
        B        ??win12512unicode_1
??win12512unicode_2:
        CMP      R3,#+192
        BLT      ??win12512unicode_3
        CMP      R3,#+256
        ADDLT    R3,R3,#+848
??win12512unicode_3:
        STRH     R3,[R0], #+2
??win12512unicode_1:
        LDRB     R3,[R1], #+1
        CMP      R3,#+0
        BEQ      ??win12512unicode_4
        MOV      R12,R2
        SUB      R2,R12,#+1
        CMP      R12,#+1
        BLT      ??win12512unicode_4
        CMP      R3,#+168
        BNE      ??win12512unicode_5
        MOV      R3,#+1
??win12512unicode_6:
        ORR      R3,R3,#0x400
        B        ??win12512unicode_3
??win12512unicode_5:
        CMP      R3,#+170
        MOVEQ    R3,#+4
        BEQ      ??win12512unicode_6
        CMP      R3,#+175
        BNE      ??win12512unicode_7
        MOV      R3,#+7
??win12512unicode_8:
        B        ??win12512unicode_6
??win12512unicode_7:
        CMP      R3,#+184
        MOVEQ    R3,#+81
        BEQ      ??win12512unicode_6
        CMP      R3,#+186
        MOVEQ    R3,#+84
        BEQ      ??win12512unicode_6
        CMP      R3,#+191
        BNE      ??win12512unicode_2
        MOV      R3,#+87
        B        ??win12512unicode_6
??win12512unicode_4:
        MOV      R1,#+0
        STRH     R1,[R0, #+0]
        BX       LR               ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??unicode2win1251??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??unicode2win1251

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??unicode2win1251
        ARM
??unicode2win1251:
        PUSH     {R4}
        CFI R4 Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R3,R0
        B        ??unicode2win1251_1
??unicode2win1251_2:
        CMP      R12,#+1040
        BLT      ??unicode2win1251_3
        CMP      R12,#+1104
        MVNLT    R4,#+79
        BICLT    R4,R4,#0x300
        ADDLT    R12,R4,R12
??unicode2win1251_3:
        STRB     R12,[R0], #+1
??unicode2win1251_1:
        LDRH     R12,[R1], #+2
        CMP      R12,#+0
        BEQ      ??unicode2win1251_4
        MOV      R4,R2
        SUB      R2,R4,#+1
        CMP      R4,#+1
        BLT      ??unicode2win1251_4
        MOV      R4,#+1
        ORR      R4,R4,#0x400
        CMP      R12,R4
        MOVEQ    R12,#+168
        BEQ      ??unicode2win1251_3
        ADD      R4,R4,#+3
        CMP      R12,R4
        MOVEQ    R12,#+170
        BEQ      ??unicode2win1251_3
        ORR      R4,R4,#0x3
        CMP      R12,R4
        MOVEQ    R12,#+175
        BEQ      ??unicode2win1251_3
        ADD      R4,R4,#+74
        CMP      R12,R4
        MOVEQ    R12,#+184
        BEQ      ??unicode2win1251_3
        ADD      R4,R4,#+3
        CMP      R12,R4
        MOVEQ    R12,#+186
        BEQ      ??unicode2win1251_3
        ORR      R4,R4,#0x3
        CMP      R12,R4
        BNE      ??unicode2win1251_2
        MOV      R12,#+191
        B        ??unicode2win1251_3
??unicode2win1251_4:
        MOV      R1,#+0
        STRB     R1,[R0, #+0]
        POP      {R4}
        CFI R4 SameValue
        CFI CFA R13+0
        MOV      R0,R3
        BX       LR               ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??getnumwidth??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??getnumwidth

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??getnumwidth
        ARM
??getnumwidth:
        LDR      R2,??getnumwidth_1  ;; 0xffffffffcccccccd
        MOV      R1,#+1
        CMP      R0,#+10
        BCC      ??getnumwidth_2
??getnumwidth_3:
        UMULL    R3,R12,R2,R0
        ADD      R1,R1,#+1
        LSR      R12,R12,#+3
        MOV      R0,R12
        CMP      R0,#+10
        BCS      ??getnumwidth_3
??getnumwidth_2:
        MOV      R0,R1
        BX       LR               ;; return
        DATA
??getnumwidth_1:
        DC32     0xffffffffcccccccd
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??SaveCfg??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??SaveCfg

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??SaveCfg
        ARM
??SaveCfg:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R4,R0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+20
        MOV      R5,#+0
        MOV      R3,#+384
        MOV      R2,#+516
        ADD      R1,R4,#+256
        MOV      R0,R4
        SWI      +278
        MOVS     R6,R0
        ADD      SP,SP,#+4
        CFI CFA R13+16
        BMI      ??SaveCfg_1
        LDR      R2,[R4, #+516]
        LDR      R1,[R4, #+512]
        SWI      +281
        LDR      R1,[R4, #+516]
        CMP      R0,R1
        MOVEQ    R5,#+1
        MOV      R0,R6
        SWI      +279
??SaveCfg_1:
        MOV      R0,R5
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??LoadCfg??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??LoadCfg

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??LoadCfg
        ARM
??LoadCfg:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        SUB      SP,SP,#+28
        CFI CFA R13+52
        MOV      R5,R0
        LDR      R0,[R5, #+512]
        MOV      R4,#+0
        CMP      R0,#+0
        BEQ      ??LoadCfg_1
        _BLF     `??operator delete`,`??operator delete??rA`
??LoadCfg_1:
        CMP      R5,#+0
        BEQ      ??LoadCfg_2
        MOV      R2,SP
        ADD      R1,R5,#+256
        MOV      R0,R5
        SWI      +284
        CMN      R0,#+1
        BEQ      ??LoadCfg_2
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+56
        MOV      R3,#+384
        MOV      R2,#+1
        ADD      R1,R5,#+256
        MOV      R0,R5
        SWI      +278
        MOVS     R6,R0
        ADD      SP,SP,#+4
        CFI CFA R13+52
        BMI      ??LoadCfg_2
        LDR      R0,[SP, #+8]
        STR      R0,[R5, #+516]
        CMP      R0,#+1
        BGE      ??LoadCfg_3
        LDR      R0,??LoadCfg_4   ;; ??isBcfgEditBook
        MOV      R7,#+255
        SWI      +304
        MOV      R5,R0
        LDR      R0,??LoadCfg_4+0x4  ;; `?<Constant L"\\x5a\\x65\\x72\\x6f\\x20\\x6c\\x65\\x6e\\`
        ORR      R7,R7,#0xFF00
        MOV      R2,R7
        MOV      R1,#+0
        SWI      +349
        PUSH     {R5}
        CFI CFA R13+56
        MOV      R1,#+248
        ORR      R1,R1,#0x2A00
        PUSH     {R1}
        CFI CFA R13+60
        MOV      R3,#+1
        MOV      R2,R7
        MOV      R1,R0
        MVN      R0,#-1879048192
        SWI      +599
??LoadCfg_5:
        ADD      SP,SP,#+8        ;; stack cleaning
        CFI CFA R13+52
        B        ??LoadCfg_6
??LoadCfg_3:
        ADD      R0,R0,#+3
        BIC      R0,R0,#0x3
        _BLF     `??operator new[]`,`??operator new[]??rA`
        STR      R0,[R5, #+512]
        LDR      R2,[R5, #+516]
        MOV      R1,R0
        MOV      R0,R6
        SWI      +280
        LDR      R1,[R5, #+516]
        CMP      R0,R1
        BEQ      ??LoadCfg_7
        LDR      R0,??LoadCfg_4   ;; ??isBcfgEditBook
        MOV      R7,#+255
        SWI      +304
        MOV      R8,R0
        LDR      R0,??LoadCfg_4+0x8  ;; `?<Constant L"\\x5a\\x65\\x72\\x6f\\x20\\x6c\\x65\\x6e\\` + 60
        ORR      R7,R7,#0xFF00
        MOV      R2,R7
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        PUSH     {R8}
        CFI CFA R13+56
        MOV      R0,#+248
        ORR      R0,R0,#0x2A00
        PUSH     {R0}
        CFI CFA R13+60
        MOV      R3,#+1
        MOV      R2,R7
        MVN      R0,#-1879048192
        SWI      +599
        LDR      R0,[R5, #+512]
        _BLF     `??operator delete`,`??operator delete??rA`
        MOV      R0,R4
        STR      R0,[R5, #+512]
        B        ??LoadCfg_5
        CFI CFA R13+52
??LoadCfg_7:
        MOV      R4,#+1
??LoadCfg_6:
        MOV      R0,R6
        SWI      +279
??LoadCfg_2:
        MOV      R0,R4
        ADD      SP,SP,#+28
        CFI CFA R13+24
        POP      {R4-R8,PC}       ;; return
        DATA
??LoadCfg_4:
        DC32     ??isBcfgEditBook
        DC32     `?<Constant L"\\x5a\\x65\\x72\\x6f\\x20\\x6c\\x65\\x6e\\`
        DC32     `?<Constant L"\\x5a\\x65\\x72\\x6f\\x20\\x6c\\x65\\x6e\\` + 60
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??SendReconfigEvent??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??SendReconfigEvent

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??SendReconfigEvent
        ARM
??SendReconfigEvent:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
        SWI      +343
        CMP      R0,#+64
        POPCS    {R4,R5,PC}
        ADD      R0,R4,#+256
        SWI      +343
        CMP      R0,#+64
        POPCS    {R4,R5,PC}
        MOV      R0,#+256
        SWI      +259
        MOV      R5,R0
        MOV      R1,R4
        SWI      +338
        ADD      R1,R4,#+256
        ADD      R0,R5,#+128
        SWI      +338
        SWI      +33028
        MOV      R2,R0
        MOV      R1,R5
        MOV      R0,#+996
        SWI      +425
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnYesExitGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE ??OnYesExitGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function ??OnYesExitGui
        ARM
??OnYesExitGui:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
        ADD      R5,R4,#+108
        MOV      R0,R5
        BL       ??SaveCfg
        MOV      R0,R5
        BL       ??SendReconfigEvent
        MOV      R0,R4
        SWI      +303
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnNoExitGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE ??OnNoExitGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function ??OnNoExitGui
        ARM
??OnNoExitGui:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +303
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnBackExitGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE ??OnBackExitGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function ??OnBackExitGui
        ARM
??OnBackExitGui:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+36]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+36]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnBackBcfgGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock22
        REQUIRE ??OnBackBcfgGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI Function ??OnBackBcfgGui
        ARM
??OnBackBcfgGui:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
        ADD      R0,R4,#+108
        LDR      R1,[R0, #+520]
        CMP      R1,#+0
        BEQ      ??OnBackBcfgGui_1
        ADD      R1,R0,R1, LSL #+2
        LDR      R5,[R1, #+524]
        LDR      R1,[R0, #+520]
        MOV      R2,#+0
        ADD      R1,R0,R1, LSL #+2
        STR      R2,[R1, #+524]
        LDR      R1,[R0, #+520]
        SUB      R1,R1,#+1
        STR      R1,[R0, #+520]
        LDR      R0,[R4, #+24]
        CMP      R0,#+0
        BEQ      ??OnBackBcfgGui_2
        SWI      +462
        STR      R0,[R4, #+24]
??OnBackBcfgGui_2:
        MOV      R1,R5
        MOV      R0,R4
        BL       ??create_ed
        POP      {R4,R5,PC}
??OnBackBcfgGui_1:
        LDR      R5,[R4, #+88]
        LDR      R1,[R0, #+516]
        LDR      R0,[R0, #+512]
        BL       ??Crc32
        CMP      R5,R0
        BNE      ??OnBackBcfgGui_3
        MOV      R0,R4
        SWI      +303
        POP      {R4,R5,PC}
??OnBackBcfgGui_3:
        LDR      R3,??OnBackBcfgGui_4  ;; VAR_ARG_YESNO_PRE_QUESTION
        LDR      R1,??DataTable37  ;; VAR_ARG_BOOK
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+16
        LDR      R0,[R4, #+104]
        MOV      R2,R4
        PUSH     {R0}
        CFI CFA R13+20
        LDR      R0,??OnBackBcfgGui_4+0x4  ;; VAR_ARG_YESNO_QUESTION
        PUSH     {R0}
        CFI CFA R13+24
        LDR      R0,[R4, #+100]
        PUSH     {R0}
        CFI CFA R13+28
        MOV      R0,#+0
        SWI      +677
        LDR      R2,??OnBackBcfgGui_4+0x8  ;; ??OnYesExitGui
        STR      R0,[R4, #+36]
        LDR      R0,??OnBackBcfgGui_4+0xC  ;; ACTION_YES
        LDR      R1,[R0, #+0]
        LDR      R0,[R4, #+36]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??OnBackBcfgGui_4+0x10  ;; ACTION_NO
        LDR      R2,??OnBackBcfgGui_4+0x14  ;; ??OnNoExitGui
        LDR      R1,[R0, #+0]
        LDR      R0,[R4, #+36]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??DataTable2  ;; ACTION_BACK
        LDR      R2,??OnBackBcfgGui_4+0x18  ;; ??OnBackExitGui
        LDR      R1,[R0, #+0]
        LDR      R0,[R4, #+36]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        ADD      SP,SP,#+16
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        DATA
??OnBackBcfgGui_4:
        DC32     VAR_ARG_YESNO_PRE_QUESTION
        DC32     VAR_ARG_YESNO_QUESTION
        DC32     ??OnYesExitGui
        DC32     ACTION_YES
        DC32     ACTION_NO
        DC32     ??OnNoExitGui
        DC32     ??OnBackExitGui
        CFI EndBlock cfiBlock23

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnCloseCBoxGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock24
        REQUIRE ??OnCloseCBoxGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI Function ??OnCloseCBoxGui
        ARM
??OnCloseCBoxGui:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+28]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+28]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock25

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock26 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnSelectCBoxGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock26
        REQUIRE ??OnSelectCBoxGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock27 Using cfiCommon1
        CFI Function ??OnSelectCBoxGui
        ARM
??OnSelectCBoxGui:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+28]
        SWI      +329
        LDR      R1,[R4, #+84]
        LDR      R1,[R1, #+40]
        CMP      R0,R1
        LDRCC    R1,[R4, #+84]
        STRCC    R0,[R1, #+44]
        LDR      R0,[R4, #+28]
        CMP      R0,#+0
        BEQ      ??OnSelectCBoxGui_1
        SWI      +462
        STR      R0,[R4, #+28]
??OnSelectCBoxGui_1:
        MOV      R0,R4
        POP      {R4,LR}          ;; Pop
        CFI R4 SameValue
        CFI ?RET R14
        CFI CFA R13+0
        B        ??RefreshEdList  ;; tailcall
        CFI EndBlock cfiBlock27

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock28 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateCBoxGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock28
        REQUIRE ??CreateCBoxGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock29 Using cfiCommon1
        CFI Function ??CreateCBoxGui
        ARM
??CreateCBoxGui:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        SUB      SP,SP,#+128
        CFI CFA R13+148
        MOV      R4,R0
        MOV      R7,#+0
        SWI      +325
        MOV      R5,R0
        STR      R5,[R4, #+28]
        LDR      R0,[R4, #+84]
        MOV      R2,#+63
        ADD      R1,R0,#+4
        MOV      R0,SP
        BL       ??win12512unicode
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        MOV      R1,R0
        MOV      R0,R5
        SWI      +307
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+40]
        LSL      R0,R0,#+2
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R6,R0
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+40]
        CMP      R0,#+0
        BNE      ??CreateCBoxGui_1
        B        ??CreateCBoxGui_2
??CreateCBoxGui_3:
        LDR      R0,[R4, #+84]
        MOV      R2,#+63
        ADD      R0,R0,R7, LSL #+5
        ADD      R1,R0,#+48
        MOV      R0,SP
        BL       ??win12512unicode
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        STR      R0,[R6, +R7, LSL #+2]
        ADD      R7,R7,#+1
??CreateCBoxGui_1:
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+40]
        CMP      R7,R0
        BCC      ??CreateCBoxGui_3
??CreateCBoxGui_2:
        LDR      R0,[R4, #+84]
        MOV      R1,R6
        LDR      R2,[R0, #+40]
        MOV      R0,R5
        SWI      +328
        MOV      R0,R6
        _BLF     `??operator delete`,`??operator delete??rA`
        LDR      R0,[R4, #+84]
        LDR      R1,[R0, #+44]
        MOV      R0,R5
        SWI      +327
        LDR      R0,??DataTable2  ;; ACTION_BACK
        LDR      R2,??CreateCBoxGui_4  ;; ??OnCloseCBoxGui
        LDR      R1,[R0, #+0]
        MOV      R0,R5
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??DataTable3  ;; ACTION_SELECT1
        LDR      R2,??CreateCBoxGui_4+0x4  ;; ??OnSelectCBoxGui
        LDR      R1,[R0, #+0]
        MOV      R0,R5
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        MOV      R0,R5
        SWI      +308
        ADD      SP,SP,#+128
        CFI CFA R13+20
        POP      {R4-R7,PC}       ;; return
        DATA
??CreateCBoxGui_4:
        DC32     ??OnCloseCBoxGui
        DC32     ??OnSelectCBoxGui
        CFI EndBlock cfiBlock29

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable2:
        DC32     ACTION_BACK

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable3:
        DC32     ACTION_SELECT1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock30 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnBackCreateTextInputGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock30
        REQUIRE ??OnBackCreateTextInputGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock31 Using cfiCommon1
        CFI Function ??OnBackCreateTextInputGui
        ARM
??OnBackCreateTextInputGui:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+32]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock31

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock32 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnOkCreateUnsignedNumberGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock32
        REQUIRE ??OnOkCreateUnsignedNumberGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock33 Using cfiCommon1
        CFI Function ??OnOkCreateUnsignedNumberGui
        ARM
??OnOkCreateUnsignedNumberGui:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+128
        CFI CFA R13+140
        MOV      R4,R0
        MOV      R5,R1
        _BLF     _Geterrno,??_Geterrno??rA
        MOV      R1,#+0
        STR      R1,[R0, #+0]
        MOV      R2,#+10
        MOV      R0,R5
        _BLF     wcstoul,??wcstoul??rA
        MOV      R5,R0
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+36]
        CMP      R5,R0
        BCC      ??OnOkCreateUnsignedNumberGui_1
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+40]
        CMP      R0,R5
        BCC      ??OnOkCreateUnsignedNumberGui_1
        _BLF     _Geterrno,??_Geterrno??rA
        LDR      R0,[R0, #+0]
        CMP      R0,#+34
        BNE      ??OnOkCreateUnsignedNumberGui_2
??OnOkCreateUnsignedNumberGui_1:
        LDR      R0,[R4, #+84]
        LDR      R2,??OnOkCreateUnsignedNumberGui_3  ;; `?<Constant L"\\x6d\\x69\\x6e\\x3a\\x20\\x25\\x75\\xa\\x`
        LDR      R0,[R0, #+40]
        MOV      R1,#+63
        PUSH     {R0}
        CFI CFA R13+144
        LDR      R0,[R4, #+84]
        MOV      R5,#+255
        LDR      R3,[R0, #+36]
        ADD      R0,SP,#+4
        SWI      +277
        ORR      R5,R5,#0xFF00
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,SP,#+4
        SWI      +349
        PUSH     {R4}
        CFI CFA R13+148
        MOV      R1,#+136
        ORR      R1,R1,#0x1300
        PUSH     {R1}
        CFI CFA R13+152
        MOV      R3,#+1
        MOV      R2,R5
        MOV      R1,R0
        MVN      R0,#-1879048192
        SWI      +599
        ADD      SP,SP,#+12
        CFI CFA R13+140
        ADD      SP,SP,#+128
        CFI CFA R13+12
        POP      {R4,R5,PC}
        CFI CFA R13+140
??OnOkCreateUnsignedNumberGui_2:
        LDR      R0,[R4, #+84]
        STR      R5,[R0, #+44]
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        BEQ      ??OnOkCreateUnsignedNumberGui_4
        SWI      +462
        STR      R0,[R4, #+32]
??OnOkCreateUnsignedNumberGui_4:
        MOV      R0,R4
        BL       ??RefreshEdList
        ADD      SP,SP,#+128
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        DATA
??OnOkCreateUnsignedNumberGui_3:
        DC32     `?<Constant L"\\x6d\\x69\\x6e\\x3a\\x20\\x25\\x75\\xa\\x`
        CFI EndBlock cfiBlock33

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock34 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateUnsignedNumberInput??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock34
        REQUIRE ??CreateUnsignedNumberInput

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock35 Using cfiCommon1
        CFI Function ??CreateUnsignedNumberInput
        ARM
??CreateUnsignedNumberInput:
        LDR      R2,??DataTable41  ;; `?<Constant L"\\x25\\x75">`
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        SUB      SP,SP,#+128
        CFI CFA R13+144
        MOV      R4,R0
        LDR      R0,[R4, #+84]
        MOV      R1,#+63
        LDR      R3,[R0, #+44]
        MOV      R0,SP
        SWI      +277
        MOV      R6,#+255
        ORR      R6,R6,#0xFF00
        MOV      R2,R6
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        MOV      R5,R0
        LDR      R0,[R4, #+84]
        MOV      R2,#+63
        ADD      R1,R0,#+4
        MOV      R0,SP
        BL       ??win12512unicode
        MOV      R2,R6
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        MOV      R6,R0
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+40]
        BL       ??getnumwidth
        LDR      R3,??DataTable39  ;; VAR_ARG_STRINP_MAX_LEN
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+148
        LDR      R1,??CreateUnsignedNumberInput_1  ;; ??OnOkCreateUnsignedNumberGui
        MOV      R2,R6
        PUSH     {R1}
        CFI CFA R13+152
        LDR      R1,??DataTable33  ;; VAR_ARG_CALL_BACK_OK
        PUSH     {R1}
        CFI CFA R13+156
        LDR      R1,??DataTable34  ;; ??OnBackCreateTextInputGui
        PUSH     {R1}
        CFI CFA R13+160
        LDR      R1,??DataTable35  ;; VAR_ARG_CALL_BACK_PREV_ACT
        PUSH     {R1}
        CFI CFA R13+164
        LDR      R1,??DataTable36  ;; VAR_ARG_STRINP_TEXT
        PUSH     {R5}
        CFI CFA R13+168
        PUSH     {R1}
        CFI CFA R13+172
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+176
        LDR      R1,??CreateUnsignedNumberInput_1+0x4  ;; VAR_ARG_STRINP_EMPTY_STR_EN
        PUSH     {R1}
        CFI CFA R13+180
        MOV      R1,R4
        PUSH     {R1}
        CFI CFA R13+184
        LDR      R1,??DataTable37  ;; VAR_ARG_BOOK
        PUSH     {R1}
        CFI CFA R13+188
        MOV      R1,#+9
        PUSH     {R1}
        CFI CFA R13+192
        LDR      R1,??DataTable38  ;; VAR_ARG_STRINP_MODE
        PUSH     {R1}
        CFI CFA R13+196
        LDR      R1,??DataTable40  ;; VAR_ARG_HTEXT
        PUSH     {R0}
        CFI CFA R13+200
        MOV      R0,#+0
        SWI      +324
        ADD      SP,SP,#+56
        CFI CFA R13+144
        STR      R0,[R4, #+32]
        ADD      SP,SP,#+128
        CFI CFA R13+16
        POP      {R4-R6,PC}       ;; return
        DATA
??CreateUnsignedNumberInput_1:
        DC32     ??OnOkCreateUnsignedNumberGui
        DC32     VAR_ARG_STRINP_EMPTY_STR_EN
        CFI EndBlock cfiBlock35

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock36 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnOkCreateSignedNumberGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock36
        REQUIRE ??OnOkCreateSignedNumberGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock37 Using cfiCommon1
        CFI Function ??OnOkCreateSignedNumberGui
        ARM
??OnOkCreateSignedNumberGui:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+128
        CFI CFA R13+140
        MOV      R4,R0
        MOV      R5,R1
        _BLF     _Geterrno,??_Geterrno??rA
        MOV      R1,#+0
        STR      R1,[R0, #+0]
        MOV      R2,#+10
        MOV      R0,R5
        _BLF     wcstol,??wcstol??rA
        MOV      R5,R0
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+36]
        CMP      R5,R0
        BLT      ??OnOkCreateSignedNumberGui_1
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+40]
        CMP      R0,R5
        BLT      ??OnOkCreateSignedNumberGui_1
        _BLF     _Geterrno,??_Geterrno??rA
        LDR      R0,[R0, #+0]
        CMP      R0,#+34
        BNE      ??OnOkCreateSignedNumberGui_2
??OnOkCreateSignedNumberGui_1:
        LDR      R0,[R4, #+84]
        LDR      R2,??OnOkCreateSignedNumberGui_3  ;; `?<Constant L"\\x6d\\x69\\x6e\\x3a\\x20\\x25\\x64\\xa\\x`
        LDR      R0,[R0, #+40]
        MOV      R1,#+63
        PUSH     {R0}
        CFI CFA R13+144
        LDR      R0,[R4, #+84]
        MOV      R5,#+255
        LDR      R3,[R0, #+36]
        ADD      R0,SP,#+4
        SWI      +277
        ORR      R5,R5,#0xFF00
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,SP,#+4
        SWI      +349
        PUSH     {R4}
        CFI CFA R13+148
        MOV      R1,#+136
        ORR      R1,R1,#0x1300
        PUSH     {R1}
        CFI CFA R13+152
        MOV      R3,#+1
        MOV      R2,R5
        MOV      R1,R0
        MVN      R0,#-1879048192
        SWI      +599
        ADD      SP,SP,#+12
        CFI CFA R13+140
        ADD      SP,SP,#+128
        CFI CFA R13+12
        POP      {R4,R5,PC}
        CFI CFA R13+140
??OnOkCreateSignedNumberGui_2:
        LDR      R0,[R4, #+84]
        STR      R5,[R0, #+44]
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        BEQ      ??OnOkCreateSignedNumberGui_4
        SWI      +462
        STR      R0,[R4, #+32]
??OnOkCreateSignedNumberGui_4:
        MOV      R0,R4
        BL       ??RefreshEdList
        ADD      SP,SP,#+128
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        DATA
??OnOkCreateSignedNumberGui_3:
        DC32     `?<Constant L"\\x6d\\x69\\x6e\\x3a\\x20\\x25\\x64\\xa\\x`
        CFI EndBlock cfiBlock37

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock38 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateSignedNumberInput??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock38
        REQUIRE ??CreateSignedNumberInput

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock39 Using cfiCommon1
        CFI Function ??CreateSignedNumberInput
        ARM
??CreateSignedNumberInput:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+128
        CFI CFA R13+136
        MOV      R2,#+63
        MOV      R4,R0
        LDR      R0,[R4, #+84]
        ADD      R1,R0,#+4
        MOV      R0,SP
        BL       ??win12512unicode
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        LDR      R1,[R4, #+84]
        LDR      R3,??DataTable38  ;; VAR_ARG_STRINP_MODE
        MOV      R2,#+0
        PUSH     {R2}
        CFI CFA R13+140
        LDR      R2,??CreateSignedNumberInput_1  ;; ??OnOkCreateSignedNumberGui
        PUSH     {R2}
        CFI CFA R13+144
        LDR      R2,??DataTable33  ;; VAR_ARG_CALL_BACK_OK
        PUSH     {R2}
        CFI CFA R13+148
        LDR      R2,??DataTable34  ;; ??OnBackCreateTextInputGui
        PUSH     {R2}
        CFI CFA R13+152
        LDR      R2,??DataTable35  ;; VAR_ARG_CALL_BACK_PREV_ACT
        PUSH     {R2}
        CFI CFA R13+156
        LDR      R2,[R1, #+44]
        PUSH     {R2}
        CFI CFA R13+160
        LDR      R2,??CreateSignedNumberInput_1+0x4  ;; VAR_ARG_STRINP_SET_INT_VAL
        PUSH     {R2}
        CFI CFA R13+164
        LDR      R2,[R1, #+40]
        PUSH     {R2}
        CFI CFA R13+168
        LDR      R2,??CreateSignedNumberInput_1+0x8  ;; VAR_ARG_STRINP_MAX_INT_VAL
        PUSH     {R2}
        CFI CFA R13+172
        LDR      R1,[R1, #+36]
        MOV      R2,R0
        PUSH     {R1}
        CFI CFA R13+176
        LDR      R1,??CreateSignedNumberInput_1+0xC  ;; VAR_ARG_STRINP_MIN_INT_VAL
        MOV      R0,#+0
        PUSH     {R1}
        CFI CFA R13+180
        MOV      R1,R4
        PUSH     {R1}
        CFI CFA R13+184
        LDR      R1,??DataTable37  ;; VAR_ARG_BOOK
        PUSH     {R1}
        CFI CFA R13+188
        MOV      R1,#+2
        PUSH     {R1}
        CFI CFA R13+192
        LDR      R1,??DataTable40  ;; VAR_ARG_HTEXT
        SWI      +324
        ADD      SP,SP,#+56
        CFI CFA R13+136
        STR      R0,[R4, #+32]
        ADD      SP,SP,#+128
        CFI CFA R13+8
        POP      {R4,PC}          ;; return
        DATA
??CreateSignedNumberInput_1:
        DC32     ??OnOkCreateSignedNumberGui
        DC32     VAR_ARG_STRINP_SET_INT_VAL
        DC32     VAR_ARG_STRINP_MAX_INT_VAL
        DC32     VAR_ARG_STRINP_MIN_INT_VAL
        CFI EndBlock cfiBlock39

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock40 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnOkCreateWinOrPassGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock40
        REQUIRE ??OnOkCreateWinOrPassGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock41 Using cfiCommon1
        CFI Function ??OnOkCreateWinOrPassGui
        ARM
??OnOkCreateWinOrPassGui:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+128
        CFI CFA R13+140
        MOV      R4,R0
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+36]
        CMP      R2,R0
        BCC      ??OnOkCreateWinOrPassGui_1
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+40]
        CMP      R0,R2
        BCS      ??OnOkCreateWinOrPassGui_2
??OnOkCreateWinOrPassGui_1:
        LDR      R0,[R4, #+84]
        LDR      R2,??DataTable30  ;; `?<Constant L"\\x6d\\x69\\x6e\\x5f\\x73\\x74\\x72\\x69\\`
        LDR      R0,[R0, #+40]
        MOV      R1,#+63
        PUSH     {R0}
        CFI CFA R13+144
        LDR      R0,[R4, #+84]
        MOV      R5,#+255
        LDR      R3,[R0, #+36]
        ADD      R0,SP,#+4
        SWI      +277
        ORR      R5,R5,#0xFF00
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,SP,#+4
        SWI      +349
        PUSH     {R4}
        CFI CFA R13+148
        MOV      R1,#+136
        ORR      R1,R1,#0x1300
        PUSH     {R1}
        CFI CFA R13+152
        MOV      R3,#+1
        MOV      R2,R5
        MOV      R1,R0
        MVN      R0,#-1879048192
        SWI      +599
        ADD      SP,SP,#+12
        CFI CFA R13+140
        ADD      SP,SP,#+128
        CFI CFA R13+12
        POP      {R4,R5,PC}
        CFI CFA R13+140
??OnOkCreateWinOrPassGui_2:
        LDR      R0,[R4, #+84]
        LDR      R2,[R0, #+40]
        ADD      R0,R0,#+44
        BL       ??unicode2win1251
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        BEQ      ??OnOkCreateWinOrPassGui_3
        SWI      +462
        STR      R0,[R4, #+32]
??OnOkCreateWinOrPassGui_3:
        MOV      R0,R4
        BL       ??RefreshEdList
        ADD      SP,SP,#+128
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock41

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock42 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateWinOrPassSI??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock42
        REQUIRE ??CreateWinOrPassSI

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock43 Using cfiCommon1
        CFI Function ??CreateWinOrPassSI
        ARM
??CreateWinOrPassSI:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        MOV      R4,R0
        LDR      R0,[R4, #+84]
        MOV      R5,R1
        LDR      R8,[R0, #+40]
        MOV      R9,#+255
        CMP      R8,#+63
        MOVLT    R8,#+63
        ADD      R0,R8,#+1
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R6,R0
        LDR      R0,[R4, #+84]
        MOV      R2,R8
        ADD      R1,R0,#+4
        MOV      R0,R6
        BL       ??win12512unicode
        ORR      R9,R9,#0xFF00
        MOV      R2,R9
        MOV      R1,#+0
        MOV      R0,R6
        SWI      +349
        MOV      R7,R0
        LDR      R0,[R4, #+84]
        MOV      R2,R8
        ADD      R1,R0,#+44
        MOV      R0,R6
        BL       ??win12512unicode
        MOV      R2,R9
        MOV      R1,#+0
        MOV      R0,R6
        SWI      +349
        LDR      R1,[R4, #+84]
        LDR      R3,??DataTable31  ;; VAR_ARG_STRINP_MIN_LEN
        MOV      R2,#+0
        PUSH     {R2}
        CFI CFA R13+32
        LDR      R2,??DataTable32  ;; VAR_ARG_STRINP_IS_PASS_MODE
        PUSH     {R5}
        CFI CFA R13+36
        PUSH     {R2}
        CFI CFA R13+40
        LDR      R2,??CreateWinOrPassSI_1  ;; ??OnOkCreateWinOrPassGui
        PUSH     {R2}
        CFI CFA R13+44
        LDR      R2,??DataTable33  ;; VAR_ARG_CALL_BACK_OK
        PUSH     {R2}
        CFI CFA R13+48
        LDR      R2,??DataTable34  ;; ??OnBackCreateTextInputGui
        PUSH     {R2}
        CFI CFA R13+52
        LDR      R2,??DataTable35  ;; VAR_ARG_CALL_BACK_PREV_ACT
        PUSH     {R2}
        CFI CFA R13+56
        PUSH     {R0}
        CFI CFA R13+60
        LDR      R0,??DataTable36  ;; VAR_ARG_STRINP_TEXT
        MOV      R2,R7
        PUSH     {R0}
        CFI CFA R13+64
        MOV      R0,R4
        PUSH     {R0}
        CFI CFA R13+68
        LDR      R0,??DataTable37  ;; VAR_ARG_BOOK
        PUSH     {R0}
        CFI CFA R13+72
        MOV      R0,#+1
        PUSH     {R0}
        CFI CFA R13+76
        LDR      R0,??DataTable38  ;; VAR_ARG_STRINP_MODE
        PUSH     {R0}
        CFI CFA R13+80
        LDR      R0,[R1, #+40]
        PUSH     {R0}
        CFI CFA R13+84
        LDR      R0,??DataTable39  ;; VAR_ARG_STRINP_MAX_LEN
        PUSH     {R0}
        CFI CFA R13+88
        LDR      R0,[R1, #+36]
        LDR      R1,??DataTable40  ;; VAR_ARG_HTEXT
        PUSH     {R0}
        CFI CFA R13+92
        MOV      R0,#+0
        SWI      +324
        ADD      SP,SP,#+64
        CFI CFA R13+28
        STR      R0,[R4, #+32]
        MOV      R0,R6
        _BLF     `??operator delete`,`??operator delete??rA`
        POP      {R4-R9,PC}       ;; return
        DATA
??CreateWinOrPassSI_1:
        DC32     ??OnOkCreateWinOrPassGui
        CFI EndBlock cfiBlock43

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock44 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnOkCreateUnicodeGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock44
        REQUIRE ??OnOkCreateUnicodeGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock45 Using cfiCommon1
        CFI Function ??OnOkCreateUnicodeGui
        ARM
??OnOkCreateUnicodeGui:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+128
        CFI CFA R13+140
        MOV      R4,R0
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+36]
        CMP      R2,R0
        BCC      ??OnOkCreateUnicodeGui_1
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+40]
        CMP      R0,R2
        BCS      ??OnOkCreateUnicodeGui_2
??OnOkCreateUnicodeGui_1:
        LDR      R0,[R4, #+84]
        LDR      R2,??DataTable30  ;; `?<Constant L"\\x6d\\x69\\x6e\\x5f\\x73\\x74\\x72\\x69\\`
        LDR      R0,[R0, #+40]
        MOV      R1,#+63
        PUSH     {R0}
        CFI CFA R13+144
        LDR      R0,[R4, #+84]
        MOV      R5,#+255
        LDR      R3,[R0, #+36]
        ADD      R0,SP,#+4
        SWI      +277
        ORR      R5,R5,#0xFF00
        MOV      R2,R5
        MOV      R1,#+0
        ADD      R0,SP,#+4
        SWI      +349
        PUSH     {R4}
        CFI CFA R13+148
        MOV      R1,#+136
        ORR      R1,R1,#0x1300
        PUSH     {R1}
        CFI CFA R13+152
        MOV      R3,#+1
        MOV      R2,R5
        MOV      R1,R0
        MVN      R0,#-1879048192
        SWI      +599
        ADD      SP,SP,#+12
        CFI CFA R13+140
        ADD      SP,SP,#+128
        CFI CFA R13+12
        POP      {R4,R5,PC}
        CFI CFA R13+140
??OnOkCreateUnicodeGui_2:
        LDR      R0,[R4, #+84]
        LDR      R0,[R0, #+40]
        SUB      R2,R0,#+1
        LDR      R0,[R4, #+84]
        ADD      R0,R0,#+44
        SWI      +339
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        BEQ      ??OnOkCreateUnicodeGui_3
        SWI      +462
        STR      R0,[R4, #+32]
??OnOkCreateUnicodeGui_3:
        MOV      R0,R4
        BL       ??RefreshEdList
        ADD      SP,SP,#+128
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock45

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable30:
        DC32     `?<Constant L"\\x6d\\x69\\x6e\\x5f\\x73\\x74\\x72\\x69\\`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock46 Using cfiCommon0
        CFI NoFunction
        THUMB
??UnicodeOnSelFile??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock46
        REQUIRE ??UnicodeOnSelFile

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock47 Using cfiCommon1
        CFI Function ??UnicodeOnSelFile
        ARM
??UnicodeOnSelFile:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+8
        CFI CFA R13+16
        ADD      R2,SP,#+4
        MOV      R4,R0
        MOV      R0,#+1
        STR      R0,[R4, #+76]
        LDR      R0,[R4, #+32]
        MOV      R1,SP
        SWI      +464
        LDR      R1,[SP, #+0]
        MOV      R0,R4
        _BLF     ??CreateFileFolderSelect,??CreateFileFolderSelect??rA
        STR      R0,[R4, #+72]
        POP      {R0,R1,R4,PC}    ;; return
        CFI EndBlock cfiBlock47

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock48 Using cfiCommon0
        CFI NoFunction
        THUMB
??UnicodeOnSelFolder??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock48
        REQUIRE ??UnicodeOnSelFolder

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock49 Using cfiCommon1
        CFI Function ??UnicodeOnSelFolder
        ARM
??UnicodeOnSelFolder:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+8
        CFI CFA R13+16
        ADD      R2,SP,#+4
        MOV      R4,R0
        MOV      R0,#+0
        STR      R0,[R4, #+76]
        LDR      R0,[R4, #+32]
        MOV      R1,SP
        SWI      +464
        LDR      R1,[SP, #+0]
        MOV      R0,R4
        _BLF     ??CreateFileFolderSelect,??CreateFileFolderSelect??rA
        STR      R0,[R4, #+72]
        POP      {R0,R1,R4,PC}    ;; return
        CFI EndBlock cfiBlock49

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock50 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateUnicodeSI??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock50
        REQUIRE ??CreateUnicodeSI

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock51 Using cfiCommon1
        CFI Function ??CreateUnicodeSI
        ARM
??CreateUnicodeSI:
        PUSH     {R4-R10,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R10 Frame(CFA, -8)
        CFI R9 Frame(CFA, -12)
        CFI R8 Frame(CFA, -16)
        CFI R7 Frame(CFA, -20)
        CFI R6 Frame(CFA, -24)
        CFI R5 Frame(CFA, -28)
        CFI R4 Frame(CFA, -32)
        CFI CFA R13+32
        SUB      SP,SP,#+4
        CFI CFA R13+36
        MOV      R4,R0
        MOV      R5,R1
        MVN      R1,#-1879048192
        STR      R1,[SP, #+0]
        LDR      R0,[R4, #+84]
        MOV      R9,#+255
        LDR      R8,[R0, #+40]
        ORR      R9,R9,#0xFF00
        CMP      R8,#+63
        MOVLT    R8,#+63
        ADD      R0,R8,#+1
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R6,R0
        LDR      R0,[R4, #+84]
        MOV      R2,R8
        ADD      R1,R0,#+4
        MOV      R0,R6
        BL       ??win12512unicode
        MOV      R2,R9
        MOV      R1,#+0
        MOV      R0,R6
        SWI      +349
        MOV      R7,R0
        LDR      R0,[R4, #+84]
        MOV      R2,R8
        ADD      R1,R0,#+44
        MOV      R0,R6
        SWI      +339
        MOV      R2,R9
        MOV      R1,#+0
        MOV      R0,R6
        SWI      +349
        MOV      R8,R0
        LDR      R0,??CreateUnicodeSI_1  ;; `?<Constant L"\\x57\\x41\\x50\\x5f\\x53\\x45\\x4c\\x45\\` + 40
        MOV      R2,SP
        MVN      R1,#+0
        SWI      +647
        LDR      R0,[SP, #+0]
        MVN      R1,#-1879048192
        CMP      R0,R1
        BNE      ??CreateUnicodeSI_2
        LDR      R0,??CreateUnicodeSI_1+0x4  ;; `?<Constant L"\\x57\\x41\\x50\\x5f\\x53\\x45\\x4c\\x45\\` + 116
        MOV      R2,R9
        MOV      R1,#+0
        SWI      +349
        STR      R0,[SP, #+0]
??CreateUnicodeSI_2:
        LDR      R9,[SP, #+0]
        LDR      R0,??CreateUnicodeSI_1+0x8  ;; `?<Constant L"\\x57\\x41\\x50\\x5f\\x53\\x45\\x4c\\x45\\`
        MOV      R2,SP
        MVN      R1,#+0
        SWI      +647
        LDR      R10,[SP, #+0]
        LDR      R0,[R4, #+84]
        LDR      R3,??DataTable31  ;; VAR_ARG_STRINP_MIN_LEN
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+40
        LDR      R1,??DataTable32  ;; VAR_ARG_STRINP_IS_PASS_MODE
        PUSH     {R5}
        CFI CFA R13+44
        PUSH     {R1}
        CFI CFA R13+48
        LDR      R1,??CreateUnicodeSI_1+0xC  ;; ??OnOkCreateUnicodeGui
        MOV      R2,R7
        PUSH     {R1}
        CFI CFA R13+52
        LDR      R1,??DataTable33  ;; VAR_ARG_CALL_BACK_OK
        PUSH     {R1}
        CFI CFA R13+56
        LDR      R1,??DataTable34  ;; ??OnBackCreateTextInputGui
        PUSH     {R1}
        CFI CFA R13+60
        LDR      R1,??DataTable35  ;; VAR_ARG_CALL_BACK_PREV_ACT
        PUSH     {R1}
        CFI CFA R13+64
        LDR      R1,??DataTable36  ;; VAR_ARG_STRINP_TEXT
        PUSH     {R8}
        CFI CFA R13+68
        PUSH     {R1}
        CFI CFA R13+72
        MOV      R1,R4
        PUSH     {R1}
        CFI CFA R13+76
        LDR      R1,??DataTable37  ;; VAR_ARG_BOOK
        PUSH     {R1}
        CFI CFA R13+80
        MOV      R1,#+1
        PUSH     {R1}
        CFI CFA R13+84
        LDR      R1,??DataTable38  ;; VAR_ARG_STRINP_MODE
        PUSH     {R1}
        CFI CFA R13+88
        LDR      R1,[R0, #+40]
        PUSH     {R1}
        CFI CFA R13+92
        LDR      R1,??DataTable39  ;; VAR_ARG_STRINP_MAX_LEN
        PUSH     {R1}
        CFI CFA R13+96
        LDR      R0,[R0, #+36]
        LDR      R1,??DataTable40  ;; VAR_ARG_HTEXT
        PUSH     {R0}
        CFI CFA R13+100
        MOV      R0,#+0
        SWI      +324
        LDR      R2,??CreateUnicodeSI_1+0x10  ;; ??UnicodeOnSelFolder
        ADD      SP,SP,#+64
        CFI CFA R13+36
        STR      R0,[R4, #+32]
        MOV      R1,#+1
        SWI      +331
        LDR      R0,[R4, #+32]
        MOV      R2,R9
        MOV      R1,#+1
        SWI      +332
        LDR      R0,[R4, #+32]
        MOV      R2,#+1
        MOV      R1,#+0
        SWI      +821
        LDR      R2,??CreateUnicodeSI_1+0x14  ;; ??UnicodeOnSelFile
        LDR      R0,[R4, #+32]
        MOV      R1,#+2
        SWI      +331
        LDR      R0,[R4, #+32]
        MOV      R2,R10
        MOV      R1,#+2
        SWI      +332
        LDR      R0,[R4, #+32]
        MOV      R2,#+2
        MOV      R1,#+0
        SWI      +821
        MOV      R0,R6
        _BLF     `??operator delete`,`??operator delete??rA`
        POP      {R0,R4-R10,PC}   ;; return
        DATA
??CreateUnicodeSI_1:
        DC32     `?<Constant L"\\x57\\x41\\x50\\x5f\\x53\\x45\\x4c\\x45\\` + 40
        DC32     `?<Constant L"\\x57\\x41\\x50\\x5f\\x53\\x45\\x4c\\x45\\` + 116
        DC32     `?<Constant L"\\x57\\x41\\x50\\x5f\\x53\\x45\\x4c\\x45\\`
        DC32     ??OnOkCreateUnicodeGui
        DC32     ??UnicodeOnSelFolder
        DC32     ??UnicodeOnSelFile
        CFI EndBlock cfiBlock51

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable31:
        DC32     VAR_ARG_STRINP_MIN_LEN

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable32:
        DC32     VAR_ARG_STRINP_IS_PASS_MODE

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable33:
        DC32     VAR_ARG_CALL_BACK_OK

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable34:
        DC32     ??OnBackCreateTextInputGui

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable35:
        DC32     VAR_ARG_CALL_BACK_PREV_ACT

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable36:
        DC32     VAR_ARG_STRINP_TEXT

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable37:
        DC32     VAR_ARG_BOOK

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable38:
        DC32     VAR_ARG_STRINP_MODE

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable39:
        DC32     VAR_ARG_STRINP_MAX_LEN

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable40:
        DC32     VAR_ARG_HTEXT

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock52 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnSelect1GuiBcfg??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock52
        REQUIRE ??OnSelect1GuiBcfg

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock53 Using cfiCommon1
        CFI Function ??OnSelect1GuiBcfg
        ARM
??OnSelect1GuiBcfg:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R4,R0
        LDR      R0,[R4, #+24]
        ADD      R5,R4,#+108
        SWI      +318
        MOV      R6,R0
        LDR      R0,[R4, #+80]
        MOV      R1,R6
        SWI      +429
        STR      R0,[R4, #+84]
        LDR      R0,[R0, #+0]
        SUB      R0,R0,#+1
        CMP      R0,#+17
        POPHI    {R4-R6,PC}
        ADR      R1,??OnSelect1GuiBcfg_1
        LDRB     R1,[R1, R0]
        ADD      PC,PC,R1, LSL #+2
        DATA
??OnSelect1GuiBcfg_1:
        DC8      +4,+84,+7,+10
        DC8      +14,+17,+21,+25
        DC8      +29,+84,+43,+59
        DC8      +61,+65,+69,+73
        DC8      +77,+81,+0,+0
        ARM
??OnSelect1GuiBcfg_2:
        MOV      R0,R4
        BL       ??CreateUnsignedNumberInput
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_3:
        MOV      R0,R4
        BL       ??CreateSignedNumberInput
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_4:
        MOV      R1,#+0
        MOV      R0,R4
        BL       ??CreateWinOrPassSI
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_5:
        MOV      R0,R4
        BL       ??CreateCBoxGui
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_6:
        MOV      R1,#+1
        MOV      R0,R4
        BL       ??CreateWinOrPassSI
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_7:
        MOV      R1,#+0
        MOV      R0,R4
        _BLF     ??CreateEditCoordinatesGUI,??CreateEditCoordinatesGUI??rA
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_8:
        MOV      R1,#+0
        MOV      R0,R4
        _BLF     ??CreateEditColorGUI,??CreateEditColorGUI??rA
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_9:
        LDR      R0,[R5, #+520]
        ADD      R0,R0,#+1
        STR      R0,[R5, #+520]
        LDR      R1,[R4, #+84]
        ADD      R0,R5,R0, LSL #+2
        STR      R1,[R0, #+524]
        LDR      R0,[R4, #+24]
        SWI      +462
        MOV      R0,#+0
        STR      R0,[R4, #+24]
        MOV      R1,#+0
        MOV      R0,R4
        BL       ??create_ed
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_10:
        LDR      R0,[R4, #+84]
        LDR      R1,[R4, #+84]
        LDR      R0,[R0, #+44]
        CMP      R0,#+0
        MOVEQ    R0,#+1
        MOVNE    R0,#+0
        STR      R0,[R1, #+44]
        LDR      R0,[R4, #+84]
        MOV      R1,R6
        LDR      R0,[R0, #+44]
        CMP      R0,#+0
        LDRNE    R2,[R4, #+96]
        LDR      R0,[R4, #+24]
        LDREQ    R2,[R4, #+92]
        SWI      +678
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_11:
        LDR      R1,??OnSelect1GuiBcfg_12  ;; bk_time_input
        B        ??OnSelect1GuiBcfg_13
??OnSelect1GuiBcfg_14:
        LDR      R1,??OnSelect1GuiBcfg_12+0x4  ;; bk_date_input
        MOV      R0,R4
        SWI      +696
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_15:
        MOV      R1,#+1
        MOV      R0,R4
        _BLF     ??CreateEditCoordinatesGUI,??CreateEditCoordinatesGUI??rA
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_16:
        MOV      R1,#+1
        MOV      R0,R4
        _BLF     ??CreateEditColorGUI,??CreateEditColorGUI??rA
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_17:
        MOV      R1,#+5
        MOV      R0,R4
        _BLF     ??CreateFontSelectGUI,??CreateFontSelectGUI??rA
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_18:
        LDR      R1,??OnSelect1GuiBcfg_12+0x8  ;; bk_keycode_select
??OnSelect1GuiBcfg_13:
        MOV      R0,R4
        SWI      +696
        POP      {R4-R6,PC}
??OnSelect1GuiBcfg_19:
        MOV      R1,#+0
        MOV      R0,R4
        BL       ??CreateUnicodeSI
??OnSelect1GuiBcfg_20:
        POP      {R4-R6,PC}       ;; return
        DATA
??OnSelect1GuiBcfg_12:
        DC32     bk_time_input
        DC32     bk_date_input
        DC32     bk_keycode_select
        CFI EndBlock cfiBlock53

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock54 Using cfiCommon0
        CFI NoFunction
        THUMB
??GetSubItemText??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock54
        REQUIRE ??GetSubItemText

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock55 Using cfiCommon1
        CFI Function ??GetSubItemText
        ARM
??GetSubItemText:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+160
        CFI CFA R13+172
        MOVS     R4,R1
        MVN      R1,#-1879048192
        BEQ      ??GetSubItemText_2
        LDR      R1,[R4, #+0]
        SUB      R1,R1,#+1
        CMP      R1,#+17
        BHI      ??GetSubItemText_3
        ADR      R2,??GetSubItemText_1
        LDRB     R2,[R2, R1]
        ADD      PC,PC,R2, LSL #+2
        DATA
??GetSubItemText_1:
        DC8      +4,+175,+7,+10
        DC8      +15,+20,+25,+40
        DC8      +51,+175,+54,+61
        DC8      +66,+83,+92,+116
        DC8      +157,+170,+0,+0
        ARM
??GetSubItemText_4:
        LDR      R3,[R4, #+44]
        LDR      R2,??DataTable41  ;; `?<Constant L"\\x25\\x75">`
        B        ??GetSubItemText_5
??GetSubItemText_6:
        LDR      R3,[R4, #+44]
        LDR      R2,??GetSubItemText_7  ;; `?<Constant L"\\x25\\x75">` + 8
        B        ??GetSubItemText_5
??GetSubItemText_8:
        MOV      R2,#+63
        ADD      R1,R4,#+44
??GetSubItemText_9:
        ADD      R0,SP,#+32
        BL       ??win12512unicode
        B        ??GetSubItemText_10
??GetSubItemText_11:
        LDR      R0,[R4, #+44]
        MOV      R2,#+63
        ADD      R0,R4,R0, LSL #+5
        ADD      R1,R0,#+48
        B        ??GetSubItemText_9
??GetSubItemText_12:
        LDR      R1,??GetSubItemText_7+0x4  ;; `?<Constant L"\\x25\\x75">` + 16
        MOV      R2,#+63
        ADD      R0,SP,#+32
        BL       ??win12512unicode
        B        ??GetSubItemText_10
??GetSubItemText_13:
        LDR      R0,[R4, #+48]
        LDR      R2,??GetSubItemText_7+0x8  ;; `?<Constant L"\\x25\\x75">` + 28
        PUSH     {R0}
        CFI CFA R13+176
        LDR      R3,[R4, #+44]
??GetSubItemText_14:
        MOV      R1,#+63
        ADD      R0,SP,#+36
        SWI      +277
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,SP,#+36
        SWI      +349
        MOV      R1,R0
        ADD      SP,SP,#+4
        CFI CFA R13+172
        B        ??GetSubItemText_15
??GetSubItemText_16:
        LDRB     R0,[R4, #+47]
        LDR      R2,??GetSubItemText_7+0xC  ;; `?<Constant L"\\x25\\x75">` + 52
        PUSH     {R0}
        CFI CFA R13+176
        LDRB     R0,[R4, #+46]
        PUSH     {R0}
        CFI CFA R13+180
        LDRB     R0,[R4, #+45]
        PUSH     {R0}
        CFI CFA R13+184
        LDRB     R3,[R4, #+44]
??GetSubItemText_17:
        MOV      R1,#+63
        ADD      R0,SP,#+44
        B        ??GetSubItemText_18
        CFI CFA R13+172
??GetSubItemText_19:
        LDR      R1,??GetSubItemText_7+0x10  ;; `?<Constant L"\\x25\\x75">` + 100
        MOV      R2,#+63
        B        ??GetSubItemText_9
??GetSubItemText_20:
        LDR      R1,[R4, #+44]
        CMP      R1,#+0
        LDREQ    R1,[R0, #+92]
        LDRNE    R1,[R0, #+96]
        ADD      SP,SP,#+160
        CFI CFA R13+12
        MOV      R0,R1
        POP      {R4,R5,PC}
        CFI CFA R13+172
??GetSubItemText_21:
        LDRB     R0,[R4, #+45]
        LDR      R2,??GetSubItemText_7+0x14  ;; `?<Constant L"\\x25\\x75">` + 108
        PUSH     {R0}
        CFI CFA R13+176
        LDRB     R3,[R4, #+44]
        B        ??GetSubItemText_14
        CFI CFA R13+172
??GetSubItemText_22:
        LDRH     R0,[R4, #+44]
        LDR      R2,??GetSubItemText_7+0x18  ;; `?<Constant L"\\x25\\x75">` + 128
        MOV      R1,#+63
        PUSH     {R0}
        CFI CFA R13+176
        LDRB     R0,[R4, #+46]
        PUSH     {R0}
        CFI CFA R13+180
        LDRB     R3,[R4, #+47]
        ADD      R0,SP,#+40
        SWI      +277
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,SP,#+40
        SWI      +349
        MOV      R1,R0
        ADD      SP,SP,#+8
        CFI CFA R13+172
        B        ??GetSubItemText_15
??GetSubItemText_23:
        LDRH     R0,[R4, #+50]
        LDR      R2,??GetSubItemText_7+0x1C  ;; `?<Constant L"\\x25\\x75">` + 160
        PUSH     {R0}
        CFI CFA R13+176
        LDRH     R0,[R4, #+46]
        PUSH     {R0}
        CFI CFA R13+180
        LDRH     R0,[R4, #+48]
        PUSH     {R0}
        CFI CFA R13+184
        LDRH     R3,[R4, #+44]
        B        ??GetSubItemText_17
        CFI CFA R13+172
??GetSubItemText_24:
        LDR      R0,[R4, #+44]
        LDR      R2,??GetSubItemText_7+0xC  ;; `?<Constant L"\\x25\\x75">` + 52
        LSR      R1,R0,#+24
        PUSH     {R1}
        CFI CFA R13+176
        AND      R1,R0,#0xFF
        PUSH     {R1}
        CFI CFA R13+180
        MOV      R1,#+255
        AND      R1,R1,R0, LSR #+8
        PUSH     {R1}
        CFI CFA R13+184
        MOV      R1,#+255
        AND      R3,R1,R0, LSR #+16
        ADD      R0,SP,#+44
        MOV      R1,#+63
??GetSubItemText_18:
        SWI      +277
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,SP,#+44
        SWI      +349
        MOV      R1,R0
        ADD      SP,SP,#+12
        CFI CFA R13+172
??GetSubItemText_15:
        MOV      R0,R1
        ADD      SP,SP,#+160
        CFI CFA R13+12
        POP      {R4,R5,PC}
        CFI CFA R13+172
??GetSubItemText_25:
        SWI      +590
        AND      R0,R0,#0xFE00
        CMP      R0,#+55296
        CMPNE    R0,#+59392
        CMPNE    R0,#+61440
        BNE      ??GetSubItemText_26
        LDR      R0,[R4, #+44]
        MOV      R5,#+1
        AND      R0,R0,#0xFF
        SWI      +348
        STR      R0,[SP, #+12]
        LDR      R0,[R4, #+44]
        ASR      R0,R0,#+8
        TST      R0,#0x1
        BEQ      ??GetSubItemText_27
        MOV      R2,#+95
        ORR      R2,R2,#0x78000000
        STR      R2,[SP, #+16]
        BIC      R2,R2,#0x1D
        STR      R2,[SP, #+20]
        MOV      R5,#+3
??GetSubItemText_27:
        TST      R0,#0x2
        BEQ      ??GetSubItemText_28
        ADD      R0,SP,#+12
        ADD      R0,R0,R5, LSL #+2
        MOV      R1,#+95
        ORR      R1,R1,#0x78000000
        STR      R1,[R0, #+0]
        BIC      R1,R1,#0x16
        STR      R1,[R0, #+4]
        ADD      R5,R5,#+2
??GetSubItemText_28:
        MOV      R2,R5
        MOV      R1,#+5
        ADD      R0,SP,#+12
        B        ??GetSubItemText_29
??GetSubItemText_26:
        LDR      R0,[R4, #+44]
        _BLF     ??Font_GetNameByFontId,??Font_GetNameByFontId??rA
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        B        ??GetSubItemText_29
??GetSubItemText_30:
        LDR      R0,[R4, #+44]
        SWI      +715
        STR      R0,[SP, #+0]
        MOV      R1,#+44
        ORR      R1,R1,#0x78000000
        STR      R1,[SP, #+4]
        LDR      R0,[R4, #+48]
        _BLF     ??GetKeyModeName,??GetKeyModeName??rA
        STR      R0,[SP, #+8]
        MOV      R2,#+3
        MOV      R1,#+5
        MOV      R0,SP
        B        ??GetSubItemText_29
??GetSubItemText_31:
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,R4,#+44
        B        ??GetSubItemText_29
??GetSubItemText_3:
        LDR      R3,[R4, #+0]
        LDR      R2,??GetSubItemText_7+0x20  ;; `?<Constant L"\\x25\\x75">` + 212
??GetSubItemText_5:
        MOV      R1,#+63
        ADD      R0,SP,#+32
        SWI      +277
??GetSubItemText_10:
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,SP,#+32
??GetSubItemText_29:
        SWI      +349
        MOV      R1,R0
??GetSubItemText_2:
        MOV      R0,R1
        ADD      SP,SP,#+160
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        DATA
??GetSubItemText_7:
        DC32     `?<Constant L"\\x25\\x75">` + 8
        DC32     `?<Constant L"\\x25\\x75">` + 16
        DC32     `?<Constant L"\\x25\\x75">` + 28
        DC32     `?<Constant L"\\x25\\x75">` + 52
        DC32     `?<Constant L"\\x25\\x75">` + 100
        DC32     `?<Constant L"\\x25\\x75">` + 108
        DC32     `?<Constant L"\\x25\\x75">` + 128
        DC32     `?<Constant L"\\x25\\x75">` + 160
        DC32     `?<Constant L"\\x25\\x75">` + 212
        CFI EndBlock cfiBlock55

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable41:
        DC32     `?<Constant L"\\x25\\x75">`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock56 Using cfiCommon0
        CFI NoFunction
        THUMB
??onLBMessage??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock56
        REQUIRE ??onLBMessage

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock57 Using cfiCommon1
        CFI Function ??onLBMessage
        ARM
??onLBMessage:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        SUB      SP,SP,#+64
        CFI CFA R13+84
        MOV      R4,R0
        SWI      +885
        MOV      R5,R0
        MOV      R0,R4
        SWI      +884
        CMP      R0,#+1
        BNE      ??onLBMessage_1
        MOV      R0,R4
        SWI      +311
        MOV      R1,R0
        LDR      R0,[R5, #+80]
        MOV      R7,#+255
        SWI      +429
        MOV      R6,R0
        MOV      R2,#+31
        ADD      R1,R6,#+4
        MOV      R0,SP
        BL       ??win12512unicode
        ORR      R7,R7,#0xFF00
        MOV      R2,R7
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +312
        MOV      R2,R7
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +314
        MOV      R1,R6
        MOV      R0,R5
        BL       ??GetSubItemText
        MVN      R1,#-1879048192
        CMP      R0,R1
        BNE      ??onLBMessage_2
        LDR      R0,??onLBMessage_3  ;; `?<Constant L"\\x425\\x440\\x435\\x43d\\x44c">`
        MOV      R2,R7
        MOV      R1,#+0
        SWI      +349
??onLBMessage_2:
        MOV      R1,R0
        MOV      R0,R4
        SWI      +313
??onLBMessage_1:
        MOV      R0,#+1
        ADD      SP,SP,#+64
        CFI CFA R13+20
        POP      {R4-R7,PC}       ;; return
        DATA
??onLBMessage_3:
        DC32     `?<Constant L"\\x425\\x440\\x435\\x43d\\x44c">`
        CFI EndBlock cfiBlock57

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock58 Using cfiCommon0
        CFI NoFunction
        THUMB
??GetParentName??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock58
        REQUIRE ??GetParentName

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock59 Using cfiCommon1
        CFI Function ??GetParentName
        ARM
??GetParentName:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+64
        CFI CFA R13+76
        MOV      R4,R0
        LDR      R0,[R4, #+520]
        CMP      R0,#+0
        BEQ      ??GetParentName_1
        ADD      R0,R4,R0, LSL #+2
        LDR      R0,[R0, #+524]
        MOV      R2,#+31
        ADD      R1,R0,#+4
        MOV      R0,SP
        BL       ??win12512unicode
        B        ??GetParentName_2
??GetParentName_1:
        MOV      R1,#+46
        ADD      R0,R4,#+256
        SWI      +430
        CMP      R0,#+0
        BEQ      ??GetParentName_3
        LSR      R0,R0,#+1
        ADD      R1,R4,#+256
        SUB      R5,R0,R1, LSR #+1
        B        ??GetParentName_4
??GetParentName_3:
        MOV      R5,#+31
??GetParentName_4:
        MOV      R2,R5
        ADD      R1,R4,#+256
        MOV      R0,SP
        SWI      +339
        MOV      R0,SP
        ADD      R0,R0,R5, LSL #+1
        MOV      R1,#+0
        STRH     R1,[R0, #+0]
??GetParentName_2:
        MOV      R2,#+31
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        ADD      SP,SP,#+64
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock59

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock60 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateGuiList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock60
        REQUIRE ??CreateGuiList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock61 Using cfiCommon1
        CFI Function ??CreateGuiList
        ARM
??CreateGuiList:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R4,R0
        MOV      R5,R1
        MOV      R1,#+0
        SWI      +448
        MOV      R6,R0
        STR      R6,[R4, #+24]
        ADD      R0,R4,#+108
        BL       ??GetParentName
        MOV      R1,R0
        MOV      R0,R6
        SWI      +307
        LDR      R0,[R4, #+80]
        LDR      R4,??CreateGuiList_1  ;; ??OnBackBcfgGui
        LDRH     R1,[R0, #+2]
        MOV      R0,R6
        SWI      +449
        LDR      R1,??CreateGuiList_1+0x4  ;; ??onLBMessage
        MOV      R0,R6
        SWI      +372
        MOV      R1,R5
        MOV      R0,R6
        SWI      +309
        MOV      R1,#+3
        MOV      R0,R6
        SWI      +319
        MOV      R1,#+1
        MOV      R0,R6
        SWI      +931
        LDR      R0,??DataTable42  ;; ACTION_BACK
        MOV      R2,R4
        LDR      R1,[R0, #+0]
        MOV      R0,R6
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??CreateGuiList_1+0x8  ;; ACTION_LONG_BACK
        MOV      R2,R4
        LDR      R1,[R0, #+0]
        MOV      R0,R6
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??DataTable44  ;; ACTION_SELECT1
        LDR      R2,??CreateGuiList_1+0xC  ;; ??OnSelect1GuiBcfg
        LDR      R1,[R0, #+0]
        MOV      R0,R6
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        MOV      R0,R6
        POP      {R4-R6,PC}       ;; return
        DATA
??CreateGuiList_1:
        DC32     ??OnBackBcfgGui
        DC32     ??onLBMessage
        DC32     ACTION_LONG_BACK
        DC32     ??OnSelect1GuiBcfg
        CFI EndBlock cfiBlock61

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable42:
        DC32     ACTION_BACK

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock62 Using cfiCommon0
        CFI NoFunction
        THUMB
??RefreshEdList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock62
        REQUIRE ??RefreshEdList

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock63 Using cfiCommon1
        CFI Function ??RefreshEdList
        ARM
??RefreshEdList:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
        LDR      R0,[R4, #+24]
        SWI      +318
        MOV      R5,R0
        LDR      R0,[R4, #+24]
        SWI      +955
        LDR      R0,[R4, #+80]
        LDRH     R1,[R0, #+2]
        LDR      R0,[R4, #+24]
        SWI      +449
        LDR      R0,[R4, #+24]
        MOV      R1,R5
        SWI      +309
        LDR      R0,??DataTable44  ;; ACTION_SELECT1
        MOV      R2,#+1
        LDR      R1,[R0, #+0]
        LDR      R0,[R4, #+24]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +336
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock63

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable44:
        DC32     ACTION_SELECT1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock64 Using cfiCommon0
        CFI NoFunction
        THUMB
??create_ed??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock64
        REQUIRE ??create_ed

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock65 Using cfiCommon1
        CFI Function ??create_ed
        ARM
??create_ed:
        PUSH     {R0,R1,R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+44
        SUB      SP,SP,#+64
        CFI CFA R13+108
        LDR      R8,[R0, #+80]
        ADD      R4,R0,#+108
        LDRH     R0,[R8, #+2]
        LDR      R5,[R4, #+512]
        LDR      R6,[R4, #+516]
        MOV      R7,#+0
        CMP      R0,#+0
        BEQ      ??create_ed_2
??create_ed_3:
        MOV      R1,#+0
        MOV      R0,R8
        SWI      +377
        LDRH     R0,[R8, #+2]
        CMP      R0,#+0
        BNE      ??create_ed_3
??create_ed_2:
        MOV      R10,#+0
        MOV      R9,R7
        B        ??create_ed_4
??create_ed_5:
        LDR      R0,[R11, #+40]
        ADD      R0,R1,R0, LSL #+1
??create_ed_6:
        BIC      R0,R0,#0x3
        ADD      R5,R0,R5
??create_ed_4:
        CMP      R6,#+44
        BCC      ??create_ed_7
        MOV      R11,R5
        LDR      R0,[R11, #+0]
        CMP      R0,#+9
        LDREQ    R0,[R11, #+36]
        CMPEQ    R0,#+0
        BNE      ??create_ed_8
        CMP      R9,#+0
        BEQ      ??create_ed_9
        MOV      R0,SP
        LDR      R10,[R0, +R9, LSL #+2]
        SUB      R9,R9,#+1
        B        ??create_ed_9
??create_ed_8:
        LDR      R0,[R4, #+520]
        CMP      R9,R0
        BNE      ??create_ed_9
        ADD      R0,R4,R0, LSL #+2
        LDR      R0,[R0, #+524]
        CMP      R10,R0
        BNE      ??create_ed_9
        MOV      R1,R11
        MOV      R0,R8
        SWI      +432
??create_ed_9:
        LDR      R0,[R11, #+0]
        SUB      R6,R6,#+44
        ADD      R5,R5,#+44
        SUB      R0,R0,#+1
        CMP      R0,#+17
        BHI      ??create_ed_7
        ADR      R1,??create_ed_1
        LDRB     R1,[R1, R0]
        ADD      PC,PC,R1, LSL #+2
        DATA
??create_ed_1:
        DC8      +4,+8,+4,+8
        DC8      +24,+8,+35,+4
        DC8      +39,+16,+4,+4
        DC8      +4,+35,+4,+4
        DC8      +35,+62,+0,+0
        ARM
??create_ed_10:
        SUBS     R6,R6,#+4
        BMI      ??create_ed_7
        ADD      R5,R5,#+4
        B        ??create_ed_4
??create_ed_11:
        LDR      R0,[R11, #+40]
        ADD      R0,R0,#+4
        BIC      R0,R0,#0x3
        SUBS     R6,R6,R0
        BMI      ??create_ed_7
        LDR      R0,[R11, #+40]
        ADD      R0,R0,#+4
        B        ??create_ed_6
??create_ed_12:
        LDR      R0,[R11, #+40]
        ADD      R0,R0,#+4
        BIC      R0,R0,#0x3
        SUBS     R6,R6,R0
        BMI      ??create_ed_7
        LDR      R0,[R11, #+40]
        ADD      R0,R0,#+4
        B        ??create_ed_6
??create_ed_13:
        LDR      R0,[R11, #+40]
        SUB      R0,R6,R0, LSL #+5
        SUBS     R6,R0,#+4
        BMI      ??create_ed_7
        LDR      R0,[R5, #+0]
        LDR      R1,[R11, #+40]
        CMP      R0,R1
        BCS      ??create_ed_7
        ADD      R0,R5,R1, LSL #+5
        ADD      R5,R0,#+4
        B        ??create_ed_4
??create_ed_14:
        SUBS     R6,R6,#+8
        BMI      ??create_ed_7
        ADD      R5,R5,#+8
        B        ??create_ed_4
??create_ed_15:
        CMP      R6,#+0
        BMI      ??create_ed_7
        LDR      R0,[R11, #+36]
        CMP      R0,#+0
        BEQ      ??create_ed_4
        LDR      R0,[R4, #+520]
        CMP      R9,R0
        BNE      ??create_ed_16
        ADD      R0,R4,R0, LSL #+2
        LDR      R0,[R0, #+524]
        CMP      R10,R0
        BNE      ??create_ed_16
        LDR      R0,[SP, #+68]
        CMP      R0,#+0
        BEQ      ??create_ed_16
        CMP      R0,R11
        LDRHEQ   R0,[R8, #+2]
        SUBEQ    R7,R0,#+1
??create_ed_16:
        ADD      R9,R9,#+1
        MOV      R0,SP
        STR      R10,[R0, +R9, LSL #+2]
        MOV      R10,R11
        B        ??create_ed_4
??create_ed_17:
        LDR      R0,[R11, #+40]
        MOV      R1,#+5
        ADD      R0,R1,R0, LSL #+1
        BIC      R0,R0,#0x3
        SUBS     R6,R6,R0
        BPL      ??create_ed_5
??create_ed_7:
        LDR      R0,[SP, #+64]
        MOV      R1,R7
        BL       ??CreateGuiList
        MOV      R4,R0
        SWI      +308
        MOV      R0,R4
        ADD      SP,SP,#+72
        CFI CFA R13+36
        POP      {R4-R11,PC}      ;; return
        CFI EndBlock cfiBlock65

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock66 Using cfiCommon0
        CFI NoFunction
        THUMB
??RecreateEdPage??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock66
        REQUIRE ??RecreateEdPage

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock67 Using cfiCommon1
        CFI Function ??RecreateEdPage
        ARM
??RecreateEdPage:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R0,R1
        BL       ??RefreshEdList
        MOV      R0,#+1
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock67

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock68 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateEdPageOnCreate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock68
        REQUIRE ??CreateEdPageOnCreate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock69 Using cfiCommon1
        CFI Function ??CreateEdPageOnCreate
        ARM
??CreateEdPageOnCreate:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R1
        ADD      R0,R4,#+108
        LDR      R1,[R0, #+516]
        LDR      R0,[R0, #+512]
        BL       ??Crc32
        STR      R0,[R4, #+88]
        MOV      R1,#+0
        MOV      R0,R4
        BL       ??create_ed
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock69

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock70 Using cfiCommon0
        CFI NoFunction
        THUMB
??TerminateElf??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock70
        REQUIRE ??TerminateElf

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
bk_msglst_editor:
        DATA
        DC32 66, ??CreateEdPageOnCreate, 76, ??RecreateEdPage, 64, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock71 Using cfiCommon1
        CFI Function ??TerminateElf
        ARM
??TerminateElf:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R1
        MOV      R0,R4
        SWI      +742
        MOV      R1,R0
        LDR      R0,??TerminateElf_1  ;; TERMINATE_SESSION_EVENT
        LDR      R0,[R0, #+0]
        SWI      +743
        MOV      R0,R4
        SWI      +303
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        DATA
??TerminateElf_1:
        DC32     TERMINATE_SESSION_EVENT
        CFI EndBlock cfiBlock71

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock72 Using cfiCommon0
        CFI NoFunction
        THUMB
??ShowAuthorInfo??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock72
        REQUIRE ??ShowAuthorInfo

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock73 Using cfiCommon1
        CFI Function ??ShowAuthorInfo
        ARM
??ShowAuthorInfo:
        LDR      R2,??ShowAuthorInfo_1  ;; `?<Constant L"\\xa\\x42\\x63\\x66\\x67\\x45\\x64\\x69\\x`
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+128
        CFI CFA R13+136
        MOV      R3,#+122
        MOV      R4,R0
        ORR      R3,R3,#0xE00
        MOV      R1,#+63
        MOV      R0,SP
        SWI      +277
        MOV      R2,#+63
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        LDR      R1,[R4, #+0]
        MOV      R3,#+1
        PUSH     {R1}
        CFI CFA R13+140
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+136
        ORR      R1,R1,#0x1300
        PUSH     {R1}
        CFI CFA R13+144
        MOV      R1,R0
        MVN      R0,#-1879048192
        SWI      +599
        MOV      R0,#+1
        ADD      SP,SP,#+136
        CFI CFA R13+8
        POP      {R4,PC}          ;; return
        DATA
??ShowAuthorInfo_1:
        DC32     `?<Constant L"\\xa\\x42\\x63\\x66\\x67\\x45\\x64\\x69\\x`
        CFI EndBlock cfiBlock73

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock74 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelBcfg_BcfgFilter??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock74
        REQUIRE ??SelBcfg_BcfgFilter

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock75 Using cfiCommon1
        CFI Function ??SelBcfg_BcfgFilter
        ARM
??SelBcfg_BcfgFilter:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +295
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock75

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock76 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelBcfgPageOnCreate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock76
        REQUIRE ??SelBcfgPageOnCreate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock77 Using cfiCommon1
        CFI Function ??SelBcfgPageOnCreate
        ARM
??SelBcfgPageOnCreate:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        LDR      R6,??SelBcfgPageOnCreate_1  ;; `?<Constant L"\\x43\\x6f\\x6e\\x66\\x69\\x67">`
        SUB      SP,SP,#+8
        CFI CFA R13+24
        MOV      R5,R1
        SWI      +287
        MOV      R4,R0
        MOV      R0,#+21
        SWI      +261
        STR      R0,[SP, #+0]
        MOV      R0,#+20
        SWI      +261
        STR      R0,[SP, #+4]
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        MOV      R0,R6
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +289
        MOV      R0,R5
        SWI      +506
        MOV      R1,R0
        MOV      R0,R4
        SWI      +685
        MOV      R1,SP
        MOV      R0,R4
        SWI      +290
        MOV      R1,#+2
        MOV      R0,R4
        SWI      +681
        MOV      R1,#+1
        MOV      R0,R4
        SWI      +683
        ADD      R1,R6,#+16
        MOV      R0,R4
        SWI      +689
        LDR      R1,??SelBcfgPageOnCreate_1+0x4  ;; ??SelBcfg_BcfgFilter
        MOV      R0,R4
        SWI      +686
        LDR      R0,??SelBcfgPageOnCreate_1+0x8  ;; DB_CMD_DELETE
        LDR      R1,??SelBcfgPageOnCreate_1+0xC  ;; ??actions
        LDR      R0,[R0, #+0]
        STRB     R0,[R1, #+0]
        LDR      R0,??SelBcfgPageOnCreate_1+0x10  ;; DB_CMD_LAST
        LDR      R0,[R0, #+0]
        STRB     R0,[R1, #+1]
        MOV      R0,R4
        SWI      +682
        MOV      R0,R4
        SWI      +292
        MOV      R0,R4
        SWI      +293
        MOV      R0,#+1
        POP      {R1,R2,R4-R6,PC}  ;; return
        DATA
??SelBcfgPageOnCreate_1:
        DC32     `?<Constant L"\\x43\\x6f\\x6e\\x66\\x69\\x67">`
        DC32     ??SelBcfg_BcfgFilter
        DC32     DB_CMD_DELETE
        DC32     ??actions
        DC32     DB_CMD_LAST
        CFI EndBlock cfiBlock77

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock78 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelBcfgPageOnAccept??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock78
        REQUIRE ??SelBcfgPageOnAccept

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
??actions:
        DS8 4

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock79 Using cfiCommon1
        CFI Function ??SelBcfgPageOnAccept
        ARM
??SelBcfgPageOnAccept:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R4,R0
        MOV      R5,R1
        ADD      R6,R5,#+108
        SWI      +723
        MOV      R2,#+128
        MOV      R1,R0
        MOV      R0,R6
        SWI      +339
        MOV      R0,R4
        SWI      +722
        MOV      R1,R0
        MOV      R2,#+128
        ADD      R0,R6,#+256
        SWI      +339
        MOV      R0,R6
        BL       ??LoadCfg
        CMP      R0,#+0
        BEQ      ??SelBcfgPageOnAccept_1
        LDR      R1,??DataTable46  ;; `?<Constant L"\\x48\\x50\\x42\\x5f\\x53\\x41\\x56\\x45\\` + 136
        MOV      R0,R5
        SWI      +301
        MOV      R0,#+1
        POP      {R4-R6,PC}
??SelBcfgPageOnAccept_1:
        MOV      R0,R5
        SWI      +303
        MOV      R0,#+1
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock79

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock80 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelBcfgPageOnCancel??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock80
        REQUIRE ??SelBcfgPageOnCancel

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock81 Using cfiCommon1
        CFI Function ??SelBcfgPageOnCancel
        ARM
??SelBcfgPageOnCancel:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R0,R1
        SWI      +303
        MOV      R0,#+1
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock81

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock82 Using cfiCommon0
        CFI NoFunction
        THUMB
??MainPageOnCreate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock82
        REQUIRE ??MainPageOnCreate

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
bk_msglst_selbcfg:
        DATA
        DC32 66, ??SelBcfgPageOnCreate, 76, ??SelBcfgPageOnAccept, 78
        DC32 ??SelBcfgPageOnCancel, 77, ??SelBcfgPageOnCancel, 64, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x57\\x41\\x50\\x5f\\x53\\x45\\x4c\\x45\\`:
        DATA
        DC8 57H, 0, 41H, 0, 50H, 0, 5FH, 0
        DC8 53H, 0, 45H, 0, 4CH, 0, 45H, 0
        DC8 43H, 0, 54H, 0, 5FH, 0, 46H, 0
        DC8 49H, 0, 4CH, 0, 45H, 0, 5FH, 0
        DC8 54H, 0, 58H, 0, 54H, 0, 0, 0
        DC8 4DH, 0, 53H, 0, 47H, 0, 5FH, 0
        DC8 55H, 0, 49H, 0, 5FH, 0, 4DH, 0
        DC8 4FH, 0, 56H, 0, 45H, 0, 5FH, 0
        DC8 4DH, 0, 45H, 0, 53H, 0, 53H, 0
        DC8 41H, 0, 47H, 0, 45H, 0, 5FH, 0
        DC8 53H, 0, 45H, 0, 4CH, 0, 45H, 0
        DC8 43H, 0, 54H, 0, 5FH, 0, 46H, 0
        DC8 4FH, 0, 4CH, 0, 44H, 0, 45H, 0
        DC8 52H, 0, 5FH, 0, 54H, 0, 58H, 0
        DC8 54H, 0, 0, 0
        DC8 53H, 0, 65H, 0, 6CH, 0, 65H, 0
        DC8 63H, 0, 74H, 0, 20H, 0, 66H, 0
        DC8 6FH, 0, 6CH, 0, 64H, 0, 65H, 0
        DC8 72H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\xa\\x42\\x63\\x66\\x67\\x45\\x64\\x69\\x`:
        DATA
        DC8 0AH, 0, 42H, 0, 63H, 0, 66H, 0
        DC8 67H, 0, 45H, 0, 64H, 0, 69H, 0
        DC8 74H, 0, 20H, 0, 76H, 0, 31H, 0
        DC8 2EH, 0, 30H, 0, 0AH, 0, 52H, 0
        DC8 65H, 0, 76H, 0, 69H, 0, 73H, 0
        DC8 69H, 0, 6FH, 0, 6EH, 0, 20H, 0
        DC8 25H, 0, 64H, 0, 0AH, 0, 28H, 0
        DC8 20H, 0, 63H, 0, 20H, 0, 29H, 0
        DC8 20H, 0, 52H, 0, 73H, 0, 74H, 0
        DC8 37H, 0, 2CH, 0, 20H, 0, 4BH, 0
        DC8 72H, 0, 65H, 0, 4EH, 0, 2CH, 0
        DC8 20H, 0, 48H, 0, 75H, 0, 73H, 0
        DC8 73H, 0, 65H, 0, 69H, 0, 6EH, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x43\\x6f\\x6e\\x66\\x69\\x67">`:
        DATA
        DC8 43H, 0, 6FH, 0, 6EH, 0, 66H, 0
        DC8 69H, 0, 67H, 0, 0, 0
        DC8 0, 0
        DC8 2AH, 0, 2EH, 0, 62H, 0, 63H, 0
        DC8 66H, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x48\\x50\\x42\\x5f\\x53\\x41\\x56\\x45\\`:
        DATA
        DC8 48H, 0, 50H, 0, 42H, 0, 5FH, 0
        DC8 53H, 0, 41H, 0, 56H, 0, 45H, 0
        DC8 5FH, 0, 42H, 0, 45H, 0, 46H, 0
        DC8 4FH, 0, 52H, 0, 45H, 0, 5FH, 0
        DC8 45H, 0, 58H, 0, 49H, 0, 54H, 0
        DC8 44H, 0, 5FH, 0, 54H, 0, 58H, 0
        DC8 54H, 0, 0, 0
        DC8 48H, 0, 50H, 0, 42H, 0, 5FH, 0
        DC8 53H, 0, 41H, 0, 56H, 0, 45H, 0
        DC8 5FH, 0, 42H, 0, 45H, 0, 46H, 0
        DC8 4FH, 0, 52H, 0, 45H, 0, 5FH, 0
        DC8 45H, 0, 58H, 0, 49H, 0, 54H, 0
        DC8 51H, 0, 5FH, 0, 54H, 0, 58H, 0
        DC8 54H, 0, 0, 0
        DC8 4FH, 0, 46H, 0, 46H, 0, 5FH, 0
        DC8 54H, 0, 58H, 0, 54H, 0, 0, 0
        DC8 4FH, 0, 4EH, 0, 5FH, 0, 54H, 0
        DC8 58H, 0, 54H, 0, 0, 0
        DC8 0, 0
        DC32 `?<Constant "BcfgEdit_CreateEditor...">`, 0H, bk_msglst_editor
        DC32 `?<Constant "BcfgEdit_SelectBcfg_Page">`, 0H, bk_msglst_selbcfg

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "BcfgEdit_Base_Page">`:
        DATA
        DC8 "BcfgEdit_Base_Page"
        DC8 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "BcfgEdit_CreateEditor...">`:
        DATA
        DC8 "BcfgEdit_CreateEditor_Page"
        DC8 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "BcfgEdit_SelectBcfg_Page">`:
        DATA
        DC8 "BcfgEdit_SelectBcfg_Page"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "BcfgEdit_Main_Page">`:
        DATA
        DC8 "BcfgEdit_Main_Page"
        DC8 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x5a\\x65\\x72\\x6f\\x20\\x6c\\x65\\x6e\\`:
        DATA
        DC8 5AH, 0, 65H, 0, 72H, 0, 6FH, 0
        DC8 20H, 0, 6CH, 0, 65H, 0, 6EH, 0
        DC8 67H, 0, 68H, 0, 74H, 0, 20H, 0
        DC8 6FH, 0, 66H, 0, 20H, 0, 2EH, 0
        DC8 62H, 0, 63H, 0, 66H, 0, 67H, 0
        DC8 20H, 0, 66H, 0, 69H, 0, 6CH, 0
        DC8 65H, 0, 20H, 0, 21H, 0, 20H, 0
        DC8 0, 0
        DC8 0, 0
        DC8 43H, 0, 61H, 0, 6EH, 0, 27H, 0
        DC8 74H, 0, 20H, 0, 72H, 0, 65H, 0
        DC8 61H, 0, 64H, 0, 20H, 0, 2EH, 0
        DC8 62H, 0, 63H, 0, 66H, 0, 67H, 0
        DC8 20H, 0, 66H, 0, 69H, 0, 6CH, 0
        DC8 65H, 0, 20H, 0, 21H, 0, 20H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x6d\\x69\\x6e\\x3a\\x20\\x25\\x75\\xa\\x`:
        DATA
        DC8 6DH, 0, 69H, 0, 6EH, 0, 3AH, 0
        DC8 20H, 0, 25H, 0, 75H, 0, 0AH, 0
        DC8 6DH, 0, 61H, 0, 78H, 0, 3AH, 0
        DC8 20H, 0, 25H, 0, 75H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x25\\x75">`:
        DATA
        DC8 25H, 0, 75H, 0, 0, 0
        DC8 0, 0
        DC8 25H, 0, 64H, 0, 0, 0
        DC8 0, 0
        DC8 "********"
        DC8 0, 0, 0
        DC8 25H, 0, 30H, 0, 33H, 0, 64H, 0
        DC8 2CH, 0, 20H, 0, 25H, 0, 30H, 0
        DC8 33H, 0, 64H, 0, 0, 0
        DC8 0, 0
        DC8 25H, 0, 30H, 0, 32H, 0, 58H, 0
        DC8 2CH, 0, 20H, 0, 25H, 0, 30H, 0
        DC8 32H, 0, 58H, 0, 2CH, 0, 20H, 0
        DC8 25H, 0, 30H, 0, 32H, 0, 58H, 0
        DC8 2CH, 0, 20H, 0, 25H, 0, 30H, 0
        DC8 32H, 0, 58H, 0, 0, 0
        DC8 0, 0
        DC8 "[Enter]"
        DC8 25H, 0, 30H, 0, 32H, 0, 64H, 0
        DC8 3AH, 0, 25H, 0, 30H, 0, 32H, 0
        DC8 64H, 0, 0, 0
        DC8 25H, 0, 30H, 0, 32H, 0, 64H, 0
        DC8 2EH, 0, 25H, 0, 30H, 0, 32H, 0
        DC8 64H, 0, 2EH, 0, 25H, 0, 30H, 0
        DC8 34H, 0, 64H, 0, 0, 0
        DC8 0, 0
        DC8 52H, 0, 43H, 0, 3AH, 0, 25H, 0
        DC8 30H, 0, 33H, 0, 64H, 0, 2CH, 0
        DC8 20H, 0, 25H, 0, 30H, 0, 33H, 0
        DC8 64H, 0, 2CH, 0, 20H, 0, 25H, 0
        DC8 30H, 0, 33H, 0, 64H, 0, 2CH, 0
        DC8 20H, 0, 25H, 0, 30H, 0, 33H, 0
        DC8 64H, 0, 0, 0
        DC8 54H, 0, 79H, 0, 70H, 0, 65H, 0
        DC8 20H, 0, 25H, 0, 64H, 0, 20H, 0
        DC8 69H, 0, 73H, 0, 20H, 0, 6EH, 0
        DC8 6FH, 0, 74H, 0, 20H, 0, 73H, 0
        DC8 75H, 0, 70H, 0, 70H, 0, 6FH, 0
        DC8 72H, 0, 74H, 0, 69H, 0, 6EH, 0
        DC8 67H, 0, 20H, 0, 79H, 0, 65H, 0
        DC8 74H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x6d\\x69\\x6e\\x3a\\x20\\x25\\x64\\xa\\x`:
        DATA
        DC8 6DH, 0, 69H, 0, 6EH, 0, 3AH, 0
        DC8 20H, 0, 25H, 0, 64H, 0, 0AH, 0
        DC8 6DH, 0, 61H, 0, 78H, 0, 3AH, 0
        DC8 20H, 0, 25H, 0, 64H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x6d\\x69\\x6e\\x5f\\x73\\x74\\x72\\x69\\`:
        DATA
        DC8 6DH, 0, 69H, 0, 6EH, 0, 5FH, 0
        DC8 73H, 0, 74H, 0, 72H, 0, 69H, 0
        DC8 6EH, 0, 67H, 0, 5FH, 0, 6CH, 0
        DC8 65H, 0, 6EH, 0, 3AH, 0, 20H, 0
        DC8 25H, 0, 64H, 0, 0AH, 0, 6DH, 0
        DC8 61H, 0, 78H, 0, 5FH, 0, 73H, 0
        DC8 74H, 0, 72H, 0, 69H, 0, 6EH, 0
        DC8 67H, 0, 5FH, 0, 6CH, 0, 65H, 0
        DC8 6EH, 0, 3AH, 0, 20H, 0, 25H, 0
        DC8 64H, 0, 0, 0

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock83 Using cfiCommon1
        CFI Function ??MainPageOnCreate
        ARM
??MainPageOnCreate:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        LDR      R6,??MainPageOnCreate_1  ;; `?<Constant L"\\x48\\x50\\x42\\x5f\\x53\\x41\\x56\\x45\\`
        MOV      R4,R1
        ADD      R5,R4,#+108
        SWI      +361
        STR      R0,[R4, #+80]
        ADD      R2,R4,#+100
        MVN      R1,#+0
        MOV      R0,R6
        SWI      +647
        ADD      R2,R4,#+104
        MVN      R1,#+0
        ADD      R0,R6,#+52
        SWI      +647
        ADD      R2,R4,#+92
        MVN      R1,#+0
        ADD      R0,R6,#+104
        SWI      +647
        ADD      R2,R4,#+96
        MVN      R1,#+0
        ADD      R0,R6,#+120
        SWI      +647
        LDRH     R0,[R5, #+0]
        CMP      R0,#+47
        BNE      ??MainPageOnCreate_2
        MOV      R0,R5
        BL       ??LoadCfg
        CMP      R0,#+0
        LDRNE    R1,??DataTable46  ;; `?<Constant L"\\x48\\x50\\x42\\x5f\\x53\\x41\\x56\\x45\\` + 136
        BNE      ??MainPageOnCreate_3
        MOV      R0,R4
        SWI      +303
        MOV      R0,#+1
        POP      {R4-R6,PC}
??MainPageOnCreate_2:
        LDR      R1,??MainPageOnCreate_1+0x4  ;; `?<Constant L"\\x48\\x50\\x42\\x5f\\x53\\x41\\x56\\x45\\` + 148
??MainPageOnCreate_3:
        MOV      R0,R4
        SWI      +301
        MOV      R0,#+1
        POP      {R4-R6,PC}       ;; return
        DATA
??MainPageOnCreate_1:
        DC32     `?<Constant L"\\x48\\x50\\x42\\x5f\\x53\\x41\\x56\\x45\\`
        DC32     `?<Constant L"\\x48\\x50\\x42\\x5f\\x53\\x41\\x56\\x45\\` + 148
        CFI EndBlock cfiBlock83

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable46:
        DC32     `?<Constant L"\\x48\\x50\\x42\\x5f\\x53\\x41\\x56\\x45\\` + 136

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock84 Using cfiCommon0
        CFI NoFunction
        THUMB
??onMyBookClose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock84
        REQUIRE ??onMyBookClose

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
bk_msglst_main:
        DATA
        DC32 66, ??MainPageOnCreate, 64, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "BcfgEdit">`:
        DATA
        DC8 "BcfgEdit"
        DC8 0, 0, 0
        DC32 `?<Constant "BcfgEdit_Base_Page">`, 0H, bk_msglst_base
        DC32 `?<Constant "BcfgEdit_Main_Page">`, 0H, bk_msglst_main

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x425\\x440\\x435\\x43d\\x44c">`:
        DATA
        DC8 25H, 4, 40H, 4, 35H, 4, 3DH, 4
        DC8 4CH, 4, 0, 0

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock85 Using cfiCommon1
        CFI Function ??onMyBookClose
        ARM
??onMyBookClose:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        _BLF     ??Free_FLIST,??Free_FLIST??rA
        LDR      R0,[R4, #+620]
        _BLF     `??operator delete`,`??operator delete??rA`
        LDR      R0,[R4, #+80]
        SWI      +362
        LDR      R0,??DataTable50  ;; ??elf_exit
        SWI      +264
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock85

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock86 Using cfiCommon0
        CFI NoFunction
        THUMB
??isBcfgEditBook??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock86
        REQUIRE ??isBcfgEditBook

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock87 Using cfiCommon1
        CFI Function ??isBcfgEditBook
        ARM
??isBcfgEditBook:
        LDR      R0,[R0, #+4]
        LDR      R1,??DataTable49  ;; ??onMyBookClose
        CMP      R0,R1
        MOVEQ    R0,#+1
        BXEQ     LR
        MOV      R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock87

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock88 Using cfiCommon0
        CFI NoFunction
        THUMB
??main??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock88
        REQUIRE main

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock89 Using cfiCommon1
        CFI Function main
        ARM
main:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOV      R4,R1
        MOV      R5,R2
        MOV      R0,#+696
        _BLF     `??operator new`,`??operator new??rA`
        MOV      R6,R0
        ADD      R7,R6,#+108
        MOV      R2,#+696
        MOV      R1,#+0
        SWI      +274
        CMP      R4,#+0
        CMPNE    R5,#+0
        BEQ      ??main_0
        MOV      R2,#+128
        MOV      R1,R4
        MOV      R0,R7
        SWI      +339
        MOV      R2,#+128
        MOV      R1,R5
        ADD      R0,R7,#+256
        SWI      +339
??main_0:
        LDR      R0,??main_1      ;; `?<Constant "BcfgEdit">`
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+24
        MOV      R3,R0
        ADD      R2,R0,#+12
        MOV      R0,R6
        MVN      R1,R1
        PUSH     {R1}
        CFI CFA R13+28
        LDR      R1,??DataTable49  ;; ??onMyBookClose
        SWI      +299
        CMP      R0,#+0
        ADD      SP,SP,#+8
        CFI CFA R13+20
        BNE      ??main_2
        MOV      R0,R6
        _BLF     `??operator delete`,`??operator delete??rA`
        LDR      R0,??DataTable50  ;; ??elf_exit
        SWI      +264
        MOV      R0,#+0
        POP      {R4-R7,PC}
??main_2:
        LDR      R1,??main_1+0x4  ;; `?<Constant "BcfgEdit">` + 24
        MOV      R0,R6
        SWI      +301
        MOV      R0,#+0
        POP      {R4-R7,PC}       ;; return
        DATA
??main_1:
        DC32     `?<Constant "BcfgEdit">`
        DC32     `?<Constant "BcfgEdit">` + 24
        CFI EndBlock cfiBlock89

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable49:
        DC32     ??onMyBookClose

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable50:
        DC32     ??elf_exit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock90 Using cfiCommon1
        CFI NoFunction
        ARM
??kill_data??rA:
        LDR      R12,??Subroutine45_0  ;; kill_data
        BX       R12
        DATA
??Subroutine45_0:
        DC32     kill_data
        CFI EndBlock cfiBlock90

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock91 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine46_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine46_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock91

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock92 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new[]??rA`:
        LDR      R12,??Subroutine47_0  ;; `??operator new[]`
        BX       R12
        DATA
??Subroutine47_0:
        DC32     `??operator new[]`
        CFI EndBlock cfiBlock92

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock93 Using cfiCommon1
        CFI NoFunction
        ARM
??_Geterrno??rA:
        LDR      R12,??Subroutine48_0  ;; _Geterrno
        BX       R12
        DATA
??Subroutine48_0:
        DC32     _Geterrno
        CFI EndBlock cfiBlock93

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock94 Using cfiCommon1
        CFI NoFunction
        ARM
??wcstoul??rA:
        LDR      R12,??Subroutine49_0  ;; wcstoul
        BX       R12
        DATA
??Subroutine49_0:
        DC32     wcstoul
        CFI EndBlock cfiBlock94

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock95 Using cfiCommon1
        CFI NoFunction
        ARM
??wcstol??rA:
        LDR      R12,??Subroutine50_0  ;; wcstol
        BX       R12
        DATA
??Subroutine50_0:
        DC32     wcstol
        CFI EndBlock cfiBlock95

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock96 Using cfiCommon1
        CFI NoFunction
        ARM
??CreateFileFolderSelect??rA:
        LDR      R12,??Subroutine51_0  ;; ??CreateFileFolderSelect
        BX       R12
        DATA
??Subroutine51_0:
        DC32     ??CreateFileFolderSelect
        CFI EndBlock cfiBlock96

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock97 Using cfiCommon1
        CFI NoFunction
        ARM
??CreateEditCoordinatesGUI??rA:
        LDR      R12,??Subroutine52_0  ;; ??CreateEditCoordinatesGUI
        BX       R12
        DATA
??Subroutine52_0:
        DC32     ??CreateEditCoordinatesGUI
        CFI EndBlock cfiBlock97

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock98 Using cfiCommon1
        CFI NoFunction
        ARM
??CreateEditColorGUI??rA:
        LDR      R12,??Subroutine53_0  ;; ??CreateEditColorGUI
        BX       R12
        DATA
??Subroutine53_0:
        DC32     ??CreateEditColorGUI
        CFI EndBlock cfiBlock98

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock99 Using cfiCommon1
        CFI NoFunction
        ARM
??CreateFontSelectGUI??rA:
        LDR      R12,??Subroutine54_0  ;; ??CreateFontSelectGUI
        BX       R12
        DATA
??Subroutine54_0:
        DC32     ??CreateFontSelectGUI
        CFI EndBlock cfiBlock99

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock100 Using cfiCommon1
        CFI NoFunction
        ARM
??Font_GetNameByFontId??rA:
        LDR      R12,??Subroutine55_0  ;; ??Font_GetNameByFontId
        BX       R12
        DATA
??Subroutine55_0:
        DC32     ??Font_GetNameByFontId
        CFI EndBlock cfiBlock100

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock101 Using cfiCommon1
        CFI NoFunction
        ARM
??GetKeyModeName??rA:
        LDR      R12,??Subroutine56_0  ;; ??GetKeyModeName
        BX       R12
        DATA
??Subroutine56_0:
        DC32     ??GetKeyModeName
        CFI EndBlock cfiBlock101

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock102 Using cfiCommon1
        CFI NoFunction
        ARM
??Free_FLIST??rA:
        LDR      R12,??Subroutine57_0  ;; ??Free_FLIST
        BX       R12
        DATA
??Subroutine57_0:
        DC32     ??Free_FLIST
        CFI EndBlock cfiBlock102

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock103 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new??rA`:
        LDR      R12,??Subroutine58_0  ;; `??operator new`
        BX       R12
        DATA
??Subroutine58_0:
        DC32     `??operator new`
        CFI EndBlock cfiBlock103

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        RSEG ELFBEGIN:DATA:REORDER:NOROOT(0)

        END
// 
// 8 184 bytes in segment CODE
// 1 112 bytes in segment DATA_C
//     4 bytes in segment DATA_Z
//   104 bytes in segment DYN_PAGE
//    12 bytes in segment INITTAB
// 
// 7 836 bytes of CODE  memory (+ 360 bytes shared)
// 1 216 bytes of CONST memory
//     4 bytes of DATA  memory
//
//Errors: none
//Warnings: none
