//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  23:05:14 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\SCalka\main.c /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\SCalka\main.c /
//                        -D NO_AP_ASSERT -D NDEBUG -D OLDFUNCTIONS -lCN     /
//                       Z:\home\perk11\www\perk11.info\svn\SE\SCalka\Releas /
//                       e\List\ -la Z:\home\perk11\www\perk11.info\svn\SE\S /
//                       Calka\Release\List\ -o Z:\home\perk11\www\perk11.in /
//                       fo\svn\SE\SCalka\Release\Obj\ -s9 --no_unroll       /
//                       --no_code_motion --cpu_mode arm --endian little     /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --fpu None --eec++ --dlib_config                    /
//                       Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.h -I        /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\SCalka\Releas /
//                       e\List\main.s79                                     /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME main

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)
        RSEG ELFBEGIN:DATA:REORDER:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??CloseMyBook
        FUNCTION ??CloseMyBook,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??CloseMyBook??rT
        MULTWEAK ??CreateCalkGUI??rA
??DataTable0 EQU 0
??DataTable1 EQU 0
        FUNCTION ??MainPageOnClose,0603H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION ??MainPageOnCreate,0603H
        LOCFRAME CSTACK, 12, STACK
        FUNCTION ??MainPageOnTerminate,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??ReadCalcSettings??rA
        MULTWEAK ??WriteCalcSettings??rA
        PUBLIC ??elf_exit
        FUNCTION ??elf_exit,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??elf_exit??rT
        PUBLIC ??isScalkaBook
        FUNCTION ??isScalkaBook,0203H
        MULTWEAK ??isScalkaBook??rT
        MULTWEAK ??kill_data??rA
        MULTWEAK ??main??rT
        FUNCTION ??onMyBookClose,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new??rA`
        PUBLIC ??unicode2win1251
        FUNCTION ??unicode2win1251,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??unicode2win1251??rT
        PUBLIC ??win12512unicode
        FUNCTION ??win12512unicode,0203H
        MULTWEAK ??win12512unicode??rT
        PUBLIC main
        FUNCTION main,0a03H
        LOCFRAME CSTACK, 16, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        





kill_data           SYMBOL "kill_data"

??CloseMyBook??rT   SYMBOL "??rT", ??CloseMyBook
??CreateCalkGUI??rA SYMBOL "??rA", ??CreateCalkGUI
??ReadCalcSettings??rA SYMBOL "??rA", ??ReadCalcSettings
??WriteCalcSettings??rA SYMBOL "??rA", ??WriteCalcSettings

??elf_exit??rT      SYMBOL "??rT", ??elf_exit

??isScalkaBook??rT  SYMBOL "??rT", ??isScalkaBook
??kill_data??rA     SYMBOL "??rA", kill_data
main                SYMBOL "main"
??main??rT          SYMBOL "??rT", main
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new??rA` SYMBOL "??rA", `??operator new`

??unicode2win1251??rT SYMBOL "??rT", ??unicode2win1251

??win12512unicode??rT SYMBOL "??rT", ??win12512unicode

        EXTERN ??CreateCalkGUI
        FUNCTION ??CreateCalkGUI,0202H
        EXTERN ??ReadCalcSettings
        FUNCTION ??ReadCalcSettings,0202H
        EXTERN ??WriteCalcSettings
        FUNCTION ??WriteCalcSettings,0202H
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new`
        FUNCTION `??operator new`,0202H
        EXTERN kill_data
        FUNCTION kill_data,0202H


        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
bk_msglst_base:
        DATA
        DC32 997, ??MainPageOnTerminate, 64, 0H

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
bk_msglst_main:
        DATA
        DC32 66, ??MainPageOnCreate, 67, ??MainPageOnClose, 64, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "SCalka_Base_Page">`:
        DATA
        DC8 "SCalka_Base_Page"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "SCalka_Main_Page">`:
        DATA
        DC8 "SCalka_Main_Page"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "SCalka">`:
        DATA
        DC8 "SCalka"
        DC8 0
        DC32 `?<Constant "SCalka_Base_Page">`, 0H, bk_msglst_base
        DC32 `?<Constant "SCalka_Main_Page">`, 0H, bk_msglst_main

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??elf_exit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??elf_exit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??elf_exit
        ARM
??elf_exit:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +33028
        MOV      R1,R0
        LDR      R0,??elf_exit_1  ;; SFB(ELFBEGIN)
        POP      {LR}             ;; Pop
        CFI ?RET R14
        CFI CFA R13+0
        _BF      kill_data,??kill_data??rA  ;; tailcall
        DATA
??elf_exit_1:
        DC32     SFB(ELFBEGIN)
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??win12512unicode??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??win12512unicode

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??win12512unicode
        ARM
??win12512unicode:
        B        ??win12512unicode_1
??win12512unicode_2:
        CMP      R3,#+192
        BLT      ??win12512unicode_3
        CMP      R3,#+256
        ADDLT    R3,R3,#+848
??win12512unicode_3:
        STRH     R3,[R0], #+2
??win12512unicode_1:
        LDRB     R3,[R1], #+1
        CMP      R3,#+0
        BEQ      ??win12512unicode_4
        MOV      R12,R2
        SUB      R2,R12,#+1
        CMP      R12,#+1
        BLT      ??win12512unicode_4
        CMP      R3,#+168
        BNE      ??win12512unicode_5
        MOV      R3,#+1
??win12512unicode_6:
        ORR      R3,R3,#0x400
        B        ??win12512unicode_3
??win12512unicode_5:
        CMP      R3,#+170
        MOVEQ    R3,#+4
        BEQ      ??win12512unicode_6
        CMP      R3,#+175
        BNE      ??win12512unicode_7
        MOV      R3,#+7
??win12512unicode_8:
        B        ??win12512unicode_6
??win12512unicode_7:
        CMP      R3,#+184
        MOVEQ    R3,#+81
        BEQ      ??win12512unicode_6
        CMP      R3,#+186
        MOVEQ    R3,#+84
        BEQ      ??win12512unicode_6
        CMP      R3,#+191
        BNE      ??win12512unicode_2
        MOV      R3,#+87
        B        ??win12512unicode_6
??win12512unicode_4:
        MOV      R1,#+0
        STRH     R1,[R0, #+0]
        BX       LR               ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??unicode2win1251??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??unicode2win1251

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??unicode2win1251
        ARM
??unicode2win1251:
        PUSH     {R4}
        CFI R4 Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R3,R0
        B        ??unicode2win1251_1
??unicode2win1251_2:
        CMP      R12,#+1040
        BLT      ??unicode2win1251_3
        CMP      R12,#+1104
        MVNLT    R4,#+79
        BICLT    R4,R4,#0x300
        ADDLT    R12,R4,R12
??unicode2win1251_3:
        STRB     R12,[R0], #+1
??unicode2win1251_1:
        LDRH     R12,[R1], #+2
        CMP      R12,#+0
        BEQ      ??unicode2win1251_4
        MOV      R4,R2
        SUB      R2,R4,#+1
        CMP      R4,#+1
        BLT      ??unicode2win1251_4
        MOV      R4,#+1
        ORR      R4,R4,#0x400
        CMP      R12,R4
        MOVEQ    R12,#+168
        BEQ      ??unicode2win1251_3
        ADD      R4,R4,#+3
        CMP      R12,R4
        MOVEQ    R12,#+170
        BEQ      ??unicode2win1251_3
        ORR      R4,R4,#0x3
        CMP      R12,R4
        MOVEQ    R12,#+175
        BEQ      ??unicode2win1251_3
        ADD      R4,R4,#+74
        CMP      R12,R4
        MOVEQ    R12,#+184
        BEQ      ??unicode2win1251_3
        ADD      R4,R4,#+3
        CMP      R12,R4
        MOVEQ    R12,#+186
        BEQ      ??unicode2win1251_3
        ORR      R4,R4,#0x3
        CMP      R12,R4
        BNE      ??unicode2win1251_2
        MOV      R12,#+191
        B        ??unicode2win1251_3
??unicode2win1251_4:
        MOV      R1,#+0
        STRB     R1,[R0, #+0]
        POP      {R4}
        CFI R4 SameValue
        CFI CFA R13+0
        MOV      R0,R3
        BX       LR               ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??onMyBookClose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??onMyBookClose

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??onMyBookClose
        ARM
??onMyBookClose:
        LDR      R0,??DataTable3  ;; ??elf_exit
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +264
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??isScalkaBook??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??isScalkaBook

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??isScalkaBook
        ARM
??isScalkaBook:
        LDR      R0,[R0, #+4]
        LDR      R1,??DataTable2  ;; ??onMyBookClose
        CMP      R0,R1
        MOVEQ    R0,#+1
        BXEQ     LR
        MOV      R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??CloseMyBook??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??CloseMyBook

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??CloseMyBook
        ARM
??CloseMyBook:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +303
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??MainPageOnCreate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??MainPageOnCreate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??MainPageOnCreate
        ARM
??MainPageOnCreate:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R1
        _BLF     ??ReadCalcSettings,??ReadCalcSettings??rA
        MOV      R0,R4
        _BLF     ??CreateCalkGUI,??CreateCalkGUI??rA
        MOV      R5,R0
        SWI      +308
        STR      R5,[R4, #+24]
        MOV      R0,#+1
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??MainPageOnClose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??MainPageOnClose

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??MainPageOnClose
        ARM
??MainPageOnClose:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R1
        _BLF     ??WriteCalcSettings,??WriteCalcSettings??rA
        LDR      R0,[R4, #+24]
        CMP      R0,#+0
        BEQ      ??MainPageOnClose_1
        SWI      +462
        STR      R0,[R4, #+24]
??MainPageOnClose_1:
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??MainPageOnTerminate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE ??MainPageOnTerminate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function ??MainPageOnTerminate
        ARM
??MainPageOnTerminate:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R0,R1
        SWI      +303
        MOV      R0,#+1
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??main??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE main

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function main
        ARM
main:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R0,#+52
        _BLF     `??operator new`,`??operator new??rA`
        MOV      R4,R0
        MOV      R2,#+52
        MOV      R1,#+0
        SWI      +274
        LDR      R0,??main_0      ;; `?<Constant "SCalka">`
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+12
        MOV      R3,R0
        ADD      R2,R0,#+8
        MOV      R0,R4
        MVN      R1,R1
        PUSH     {R1}
        CFI CFA R13+16
        LDR      R1,??DataTable2  ;; ??onMyBookClose
        SWI      +299
        CMP      R0,#+0
        ADD      SP,SP,#+8
        CFI CFA R13+8
        BNE      ??main_1
        MOV      R0,R4
        _BLF     `??operator delete`,`??operator delete??rA`
        LDR      R0,??DataTable3  ;; ??elf_exit
        SWI      +264
        MOV      R0,#+0
        POP      {R4,PC}
??main_1:
        LDR      R1,??main_0+0x4  ;; `?<Constant "SCalka">` + 20
        MOV      R0,R4
        SWI      +301
        MOV      R0,#+0
        POP      {R4,PC}          ;; return
        DATA
??main_0:
        DC32     `?<Constant "SCalka">`
        DC32     `?<Constant "SCalka">` + 20
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable2:
        DC32     ??onMyBookClose

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable3:
        DC32     ??elf_exit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon1
        CFI NoFunction
        ARM
??kill_data??rA:
        LDR      R12,??Subroutine10_0  ;; kill_data
        BX       R12
        DATA
??Subroutine10_0:
        DC32     kill_data
        CFI EndBlock cfiBlock20

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI NoFunction
        ARM
??ReadCalcSettings??rA:
        LDR      R12,??Subroutine11_0  ;; ??ReadCalcSettings
        BX       R12
        DATA
??Subroutine11_0:
        DC32     ??ReadCalcSettings
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon1
        CFI NoFunction
        ARM
??CreateCalkGUI??rA:
        LDR      R12,??Subroutine12_0  ;; ??CreateCalkGUI
        BX       R12
        DATA
??Subroutine12_0:
        DC32     ??CreateCalkGUI
        CFI EndBlock cfiBlock22

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI NoFunction
        ARM
??WriteCalcSettings??rA:
        LDR      R12,??Subroutine13_0  ;; ??WriteCalcSettings
        BX       R12
        DATA
??Subroutine13_0:
        DC32     ??WriteCalcSettings
        CFI EndBlock cfiBlock23

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new??rA`:
        LDR      R12,??Subroutine14_0  ;; `??operator new`
        BX       R12
        DATA
??Subroutine14_0:
        DC32     `??operator new`
        CFI EndBlock cfiBlock24

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine15_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine15_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock25

        RSEG ELFBEGIN:DATA:REORDER:NOROOT(0)

        END
// 
// 780 bytes in segment CODE
//  72 bytes in segment DATA_C
//  40 bytes in segment DYN_PAGE
// 
// 668 bytes of CODE  memory (+ 112 bytes shared)
// 112 bytes of CONST memory
//
//Errors: none
//Warnings: none
