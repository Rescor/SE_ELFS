//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  23:04:54 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\SCalka\calc_m /
//                       enu.cpp                                             /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\SCalka\calc_m /
//                       enu.cpp -D NO_AP_ASSERT -D NDEBUG -D OLDFUNCTIONS   /
//                       -lCN Z:\home\perk11\www\perk11.info\svn\SE\SCalka\R /
//                       elease\List\ -la Z:\home\perk11\www\perk11.info\svn /
//                       \SE\SCalka\Release\List\ -o                         /
//                       Z:\home\perk11\www\perk11.info\svn\SE\SCalka\Releas /
//                       e\Obj\ -s9 --no_unroll --no_code_motion --cpu_mode  /
//                       arm --endian little --cpu ARM926EJ-S --stack_align  /
//                       4 --interwork -e --fpu None --eec++ --dlib_config   /
//                       Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.h -I        /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\SCalka\Releas /
//                       e\List\calc_menu.s79                                /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME calc_menu

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBWEAK `?*?DATA_ID`
        PUBLIC ??AngleSelect_CreateCBoxGui
        FUNCTION ??AngleSelect_CreateCBoxGui,0203H
        LOCFRAME CSTACK, 24, STACK
        MULTWEAK ??AngleSelect_CreateCBoxGui??rT
        PUBLIC ??AngleSelect_OnCloseCBoxGui
        FUNCTION ??AngleSelect_OnCloseCBoxGui,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??AngleSelect_OnCloseCBoxGui??rT
        PUBLIC ??AngleSelect_OnSelectCBoxGui
        FUNCTION ??AngleSelect_OnSelectCBoxGui,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??AngleSelect_OnSelectCBoxGui??rT
        PUBLIC ??AutocalcSelect_CreateCBoxGui
        FUNCTION ??AutocalcSelect_CreateCBoxGui,0203H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??AutocalcSelect_CreateCBoxGui??rT
        PUBLIC ??AutocalcSelect_OnCloseCBoxGui
        FUNCTION ??AutocalcSelect_OnCloseCBoxGui,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??AutocalcSelect_OnCloseCBoxGui??rT
        PUBLIC ??AutocalcSelect_OnSelectCBoxGui
        FUNCTION ??AutocalcSelect_OnSelectCBoxGui,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??AutocalcSelect_OnSelectCBoxGui??rT
        PUBLIC ??CM_OnBack
        FUNCTION ??CM_OnBack,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??CM_OnBack??rT
        PUBLIC ??CM_onEnterPressed
        FUNCTION ??CM_onEnterPressed,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??CM_onEnterPressed??rT
        PUBLIC ??CS_OnBack
        FUNCTION ??CS_OnBack,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??CS_OnBack??rT
        PUBLIC ??CS_On_Msg
        FUNCTION ??CS_On_Msg,0603H
        LOCFRAME CSTACK, 28, STACK
        MULTWEAK ??CS_On_Msg??rT
        PUBLIC ??CS_onEnterPressed
        FUNCTION ??CS_onEnterPressed,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??CS_onEnterPressed??rT
        PUBLIC ??CreateCalcMenu
        FUNCTION ??CreateCalcMenu,0203H
        LOCFRAME CSTACK, 48, STACK
        MULTWEAK ??CreateCalcMenu??rT
        PUBLIC ??CreateCalcSettings
        FUNCTION ??CreateCalcSettings,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??CreateCalcSettings??rT
        PUBLIC ??CreateEditFmtStr
        FUNCTION ??CreateEditFmtStr,0203H
        LOCFRAME CSTACK, 104, STACK
        MULTWEAK ??CreateEditFmtStr??rT
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable10 EQU 0
??DataTable11 EQU 0
??DataTable13 EQU 0
??DataTable14 EQU 0
??DataTable15 EQU 0
??DataTable16 EQU 0
??DataTable17 EQU 0
??DataTable18 EQU 0
??DataTable2 EQU 0
??DataTable20 EQU 0
??DataTable21 EQU 0
??DataTable22 EQU 0
??DataTable24 EQU 0
??DataTable25 EQU 0
??DataTable26 EQU 0
??DataTable27 EQU 0
??DataTable3 EQU 0
??DataTable4 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
??DataTable9 EQU 0
        PUBLIC ??IV_OnBack
        FUNCTION ??IV_OnBack,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??IV_OnBack??rT
        PUBLIC ??IV_On_Msg
        FUNCTION ??IV_On_Msg,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??IV_On_Msg??rT
        PUBLIC ??IV_onEnterPressed
        FUNCTION ??IV_onEnterPressed,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??IV_onEnterPressed??rT
        PUBLIC ??InsertVar_CreateMenu
        FUNCTION ??InsertVar_CreateMenu,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??InsertVar_CreateMenu??rT
        PUBLIC ??OnBackEditFmtGui
        FUNCTION ??OnBackEditFmtGui,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnBackEditFmtGui??rT
        PUBLIC ??OnOkEditFmtGui
        FUNCTION ??OnOkEditFmtGui,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??OnOkEditFmtGui??rT
        PUBLIC ??ReadCalcSettings
        FUNCTION ??ReadCalcSettings,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??ReadCalcSettings??rT
        PUBLIC ??WriteCalcSettings
        FUNCTION ??WriteCalcSettings,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??WriteCalcSettings??rT
        MULTWEAK ??insert_operation??rA
        MULTWEAK ??unicode2win1251??rA
        MULTWEAK ??win12512unicode??rA
        PUBWEAK ?init?tab?DATA_I
        PUBLIC angle_names
        PUBLIC calc_set
        PUBLIC dis_ena
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        




??AngleSelect_CreateCBoxGui??rT SYMBOL "??rT", ??AngleSelect_CreateCBoxGui

??AngleSelect_OnCloseCBoxGui??rT SYMBOL "??rT", ??AngleSelect_OnCloseCBoxGui

??AngleSelect_OnSelectCBoxGui??rT SYMBOL "??rT", ??AngleSelect_OnSelectCBoxGui

??AutocalcSelect_CreateCBoxGui??rT SYMBOL "??rT", ??AutocalcSelect_CreateCBoxGui

??AutocalcSelect_OnCloseCBoxGui??rT SYMBOL "??rT", ??AutocalcSelect_OnCloseCBoxGui

??AutocalcSelect_OnSelectCBoxGui??rT SYMBOL "??rT", ??AutocalcSelect_OnSelectCBoxGui

??CM_OnBack??rT     SYMBOL "??rT", ??CM_OnBack

??CM_onEnterPressed??rT SYMBOL "??rT", ??CM_onEnterPressed

??CS_OnBack??rT     SYMBOL "??rT", ??CS_OnBack

??CS_On_Msg??rT     SYMBOL "??rT", ??CS_On_Msg

??CS_onEnterPressed??rT SYMBOL "??rT", ??CS_onEnterPressed

??CreateCalcMenu??rT SYMBOL "??rT", ??CreateCalcMenu

??CreateCalcSettings??rT SYMBOL "??rT", ??CreateCalcSettings

??CreateEditFmtStr??rT SYMBOL "??rT", ??CreateEditFmtStr

??IV_OnBack??rT     SYMBOL "??rT", ??IV_OnBack

??IV_On_Msg??rT     SYMBOL "??rT", ??IV_On_Msg

??IV_onEnterPressed??rT SYMBOL "??rT", ??IV_onEnterPressed

??InsertVar_CreateMenu??rT SYMBOL "??rT", ??InsertVar_CreateMenu

??OnBackEditFmtGui??rT SYMBOL "??rT", ??OnBackEditFmtGui

??OnOkEditFmtGui??rT SYMBOL "??rT", ??OnOkEditFmtGui

??ReadCalcSettings??rT SYMBOL "??rT", ??ReadCalcSettings

??WriteCalcSettings??rT SYMBOL "??rT", ??WriteCalcSettings
??insert_operation??rA SYMBOL "??rA", ??insert_operation
??unicode2win1251??rA SYMBOL "??rA", ??unicode2win1251
??win12512unicode??rA SYMBOL "??rA", ??win12512unicode

        EXTERN ??insert_operation
        FUNCTION ??insert_operation,0202H
        EXTERN ??isScalkaBook
        FUNCTION ??isScalkaBook,0602H
        EXTERN ??unicode2win1251
        FUNCTION ??unicode2win1251,0202H
        EXTERN ??win12512unicode
        FUNCTION ??win12512unicode,0202H
        EXTERN ACTION_BACK
        EXTERN ACTION_SELECT1
        EXTERN VAR_ARG_BOOK
        EXTERN VAR_ARG_CALL_BACK_OK
        EXTERN VAR_ARG_CALL_BACK_PREV_ACT
        EXTERN VAR_ARG_HTEXT
        EXTERN VAR_ARG_STRINP_MAX_LEN
        EXTERN VAR_ARG_STRINP_MIN_LEN
        EXTERN VAR_ARG_STRINP_MODE
        EXTERN VAR_ARG_STRINP_TEXT
        EXTERN d_answer


        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x44\\x65\\x67\\x72\\x65\\x65\\x73">`:
        DATA
        DC8 44H, 0, 65H, 0, 67H, 0, 72H, 0
        DC8 65H, 0, 65H, 0, 73H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x52\\x61\\x64\\x69\\x61\\x6e\\x73">`:
        DATA
        DC8 52H, 0, 61H, 0, 64H, 0, 69H, 0
        DC8 61H, 0, 6EH, 0, 73H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x47\\x72\\x61\\x64\\x73">`:
        DATA
        DC8 47H, 0, 72H, 0, 61H, 0, 64H, 0
        DC8 73H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x44\\x69\\x73\\x61\\x62\\x6c\\x65">`:
        DATA
        DC8 44H, 0, 69H, 0, 73H, 0, 61H, 0
        DC8 62H, 0, 6CH, 0, 65H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x45\\x6e\\x61\\x62\\x6c\\x65">`:
        DATA
        DC8 45H, 0, 6EH, 0, 61H, 0, 62H, 0
        DC8 6CH, 0, 65H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "%1.10lg">`:
        DATA
        DC8 "%1.10lg"
        DC8 53H, 0, 43H, 0, 61H, 0, 6CH, 0
        DC8 6BH, 0, 61H, 0, 2EH, 0, 63H, 0
        DC8 66H, 0, 67H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x53\\x65\\x74\\x74\\x69\\x6e\\x67\\x73"`:
        DATA
        DC8 53H, 0, 65H, 0, 74H, 0, 74H, 0
        DC8 69H, 0, 6EH, 0, 67H, 0, 73H, 0
        DC8 0, 0
        DC8 0, 0
        DC8 4DH, 0, 65H, 0, 6EH, 0, 75H, 0
        DC8 0, 0
        DC8 0, 0
        DC8 53H, 0, 65H, 0, 74H, 0, 20H, 0
        DC8 66H, 0, 6FH, 0, 72H, 0, 6DH, 0
        DC8 75H, 0, 6CH, 0, 61H, 0, 0, 0
        DC8 49H, 0, 6EH, 0, 73H, 0, 65H, 0
        DC8 72H, 0, 74H, 0, 20H, 0, 76H, 0
        DC8 61H, 0, 72H, 0, 0, 0
        DC8 0, 0
        DC8 41H, 0, 64H, 0, 64H, 0, 20H, 0
        DC8 66H, 0, 6FH, 0, 72H, 0, 6DH, 0
        DC8 75H, 0, 6CH, 0, 61H, 0, 0, 0
        DC8 56H, 0, 69H, 0, 65H, 0, 77H, 0
        DC8 20H, 0, 76H, 0, 61H, 0, 72H, 0
        DC8 73H, 0, 0, 0
        DC8 41H, 0, 6EH, 0, 73H, 0, 20H, 0
        DC8 54H, 0, 6FH, 0, 20H, 0, 58H, 0
        DC8 0, 0
        DC8 0, 0
        DC8 41H, 0, 6EH, 0, 73H, 0, 20H, 0
        DC8 54H, 0, 6FH, 0, 20H, 0, 59H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41\\x6e\\x67\\x6c\\x65\\x20\\x73\\x65\\`:
        DATA
        DC8 41H, 0, 6EH, 0, 67H, 0, 6CH, 0
        DC8 65H, 0, 20H, 0, 73H, 0, 65H, 0
        DC8 74H, 0, 75H, 0, 70H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "Edit format str">`:
        DATA
        DC8 "Edit format str"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x52\\x65\\x61\\x6c\\x74\\x69\\x6d\\x65\\`:
        DATA
        DC8 52H, 0, 65H, 0, 61H, 0, 6CH, 0
        DC8 74H, 0, 69H, 0, 6DH, 0, 65H, 0
        DC8 20H, 0, 63H, 0, 61H, 0, 6CH, 0
        DC8 63H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41\\x6e\\x67\\x6c\\x65">`:
        DATA
        DC8 41H, 0, 6EH, 0, 67H, 0, 6CH, 0
        DC8 65H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x46\\x6d\\x74\\x20\\x73\\x74\\x72">`:
        DATA
        DC8 46H, 0, 6DH, 0, 74H, 0, 20H, 0
        DC8 73H, 0, 74H, 0, 72H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x52\\x65\\x61\\x6c\\x2d\\x54\\x69\\x6d\\`:
        DATA
        DC8 52H, 0, 65H, 0, 61H, 0, 6CH, 0
        DC8 2DH, 0, 54H, 0, 69H, 0, 6DH, 0
        DC8 65H, 0, 20H, 0, 43H, 0, 61H, 0
        DC8 6CH, 0, 63H, 0, 75H, 0, 6CH, 0
        DC8 61H, 0, 74H, 0, 69H, 0, 6FH, 0
        DC8 6EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant {&L"\\x41\\x6e\\x67\\x6c\\x65", &L"\\x46\\`:
        DATA
        DC32 `?<Constant L"\\x41\\x6e\\x67\\x6c\\x65">`
        DC32 `?<Constant L"\\x46\\x6d\\x74\\x20\\x73\\x74\\x72">`
        DC32 `?<Constant L"\\x52\\x65\\x61\\x6c\\x2d\\x54\\x69\\x6d\\`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??ReadCalcSettings??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??ReadCalcSettings

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??ReadCalcSettings
        ARM
??ReadCalcSettings:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R0,#+20
        SWI      +261
        SWI      +759
        CMP      R0,#+0
        BNE      ??ReadCalcSettings_1
        LDR      R0,??DataTable5  ;; `?<Constant "%1.10lg">` + 8
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+1
        SWI      +760
        MOVS     R4,R0
        BPL      ??ReadCalcSettings_2
??ReadCalcSettings_1:
        MOV      R0,#+21
        SWI      +261
        SWI      +759
        CMP      R0,#+0
        BNE      ??ReadCalcSettings_3
        LDR      R0,??DataTable5  ;; `?<Constant "%1.10lg">` + 8
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+1
        SWI      +760
        MOV      R4,R0
??ReadCalcSettings_2:
        CMP      R4,#+0
        BMI      ??ReadCalcSettings_3
        MOV      R2,#+1
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +764
        CMP      R0,#+40
        BNE      ??ReadCalcSettings_4
        MOV      R2,#+2
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +764
        LDR      R1,??DataTable28  ;; calc_set
        MOV      R2,#+40
        MOV      R0,R4
        SWI      +763
??ReadCalcSettings_4:
        MOV      R0,R4
        SWI      +765
        POP      {R4,PC}
??ReadCalcSettings_3:
        LDR      R4,??DataTable28  ;; calc_set
        LDR      R1,??ReadCalcSettings_5  ;; `?<Constant "%1.10lg">`
        ADD      R0,R4,#+16
        SWI      +416
        MOV      R0,#+0
        STRB     R0,[R4, #+32]
        MOV      R1,#+0
        STR      R0,[R4, #+8]
        STR      R1,[R4, #+12]
        STM      R4,{R0,R1}
        POP      {R4,PC}          ;; return
        DATA
??ReadCalcSettings_5:
        DC32     `?<Constant "%1.10lg">`
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??WriteCalcSettings??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??WriteCalcSettings

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??WriteCalcSettings
        ARM
??WriteCalcSettings:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R0,#+20
        SWI      +261
        SWI      +759
        CMP      R0,#+0
        BNE      ??WriteCalcSettings_1
        LDR      R0,??DataTable5  ;; `?<Constant "%1.10lg">` + 8
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+74
        SWI      +760
        MOVS     R4,R0
        BPL      ??WriteCalcSettings_2
??WriteCalcSettings_1:
        MOV      R0,#+21
        SWI      +261
        SWI      +759
        CMP      R0,#+0
        POPNE    {R4,PC}
        LDR      R0,??DataTable5  ;; `?<Constant "%1.10lg">` + 8
        MOV      R3,#+0
        MOV      R2,#+255
        ORR      R2,R2,#0x100
        MOV      R1,#+74
        SWI      +760
        MOV      R4,R0
??WriteCalcSettings_2:
        CMP      R4,#+0
        POPMI    {R4,PC}
        LDR      R1,??DataTable28  ;; calc_set
        MOV      R2,#+40
        MOV      R0,R4
        SWI      +762
        MOV      R0,R4
        SWI      +765
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable5:
        DC32     `?<Constant "%1.10lg">` + 8

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??IV_OnBack??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??IV_OnBack

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??IV_OnBack
        ARM
??IV_OnBack:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+44]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+44]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??IV_onEnterPressed??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??IV_onEnterPressed

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??IV_onEnterPressed
        ARM
??IV_onEnterPressed:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+44]
        SWI      +318
        CMP      R0,#+26
        BGE      ??IV_onEnterPressed_1
        ADD      R0,R0,#+48
        _BLF     ??insert_operation,??insert_operation??rA
??IV_onEnterPressed_1:
        LDR      R0,[R4, #+44]
        CMP      R0,#+0
        BEQ      ??IV_onEnterPressed_2
        SWI      +462
        STR      R0,[R4, #+44]
??IV_onEnterPressed_2:
        LDR      R0,[R4, #+28]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+28]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??IV_On_Msg??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??IV_On_Msg

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??IV_On_Msg
        ARM
??IV_On_Msg:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        SWI      +884
        CMP      R0,#+1
        BNE      ??IV_On_Msg_1
        MOV      R0,R4
        SWI      +311
        CMP      R0,#+26
        BGE      ??IV_On_Msg_1
        ADD      R0,R0,#+97
        ORR      R1,R0,#0x78000000
        MOV      R0,R4
        SWI      +312
??IV_On_Msg_1:
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??InsertVar_CreateMenu??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??InsertVar_CreateMenu

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??InsertVar_CreateMenu
        ARM
??InsertVar_CreateMenu:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R1,#+0
        MOV      R4,R0
        SWI      +448
        MOV      R5,R0
        LDR      R0,??DataTable29  ;; `?<Constant L"\\x53\\x65\\x74\\x74\\x69\\x6e\\x67\\x73"`
        STR      R5,[R4, #+44]
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R5
        SWI      +307
        MOV      R1,#+26
        MOV      R0,R5
        SWI      +449
        MOV      R1,#+0
        MOV      R0,R5
        SWI      +309
        LDR      R1,??InsertVar_CreateMenu_1  ;; ??IV_On_Msg
        MOV      R0,R5
        SWI      +372
        LDR      R0,??DataTable30  ;; ACTION_SELECT1
        LDR      R2,??InsertVar_CreateMenu_1+0x4  ;; ??IV_onEnterPressed
        LDR      R1,[R0, #+0]
        MOV      R0,R5
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??DataTable31  ;; ACTION_BACK
        LDR      R2,??InsertVar_CreateMenu_1+0x8  ;; ??IV_OnBack
        LDR      R1,[R0, #+0]
        MOV      R0,R5
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        MOV      R0,R5
        SWI      +308
        POP      {R4,R5,PC}       ;; return
        DATA
??InsertVar_CreateMenu_1:
        DC32     ??IV_On_Msg
        DC32     ??IV_onEnterPressed
        DC32     ??IV_OnBack
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??AngleSelect_OnCloseCBoxGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??AngleSelect_OnCloseCBoxGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??AngleSelect_OnCloseCBoxGui
        ARM
??AngleSelect_OnCloseCBoxGui:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+36]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+36]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??AngleSelect_OnSelectCBoxGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??AngleSelect_OnSelectCBoxGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??AngleSelect_OnSelectCBoxGui
        ARM
??AngleSelect_OnSelectCBoxGui:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+36]
        SWI      +329
        LDR      R1,??DataTable12  ;; calc_set + 32
        STRB     R0,[R1, #+0]
        LDR      R0,[R4, #+36]
        CMP      R0,#+0
        BEQ      ??AngleSelect_OnSelectCBoxGui_1
        SWI      +462
        STR      R0,[R4, #+36]
??AngleSelect_OnSelectCBoxGui_1:
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        BEQ      ??AngleSelect_OnSelectCBoxGui_2
        SWI      +462
        STR      R0,[R4, #+32]
??AngleSelect_OnSelectCBoxGui_2:
        MOV      R0,R4
        POP      {R4,LR}          ;; Pop
        CFI R4 SameValue
        CFI ?RET R14
        CFI CFA R13+0
        B        ??CreateCalcSettings  ;; tailcall
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??AngleSelect_CreateCBoxGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE ??AngleSelect_CreateCBoxGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function ??AngleSelect_CreateCBoxGui
        ARM
??AngleSelect_CreateCBoxGui:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+12
        CFI CFA R13+24
        MOV      R5,R0
        SWI      +325
        MOV      R4,R0
        LDR      R0,??AngleSelect_CreateCBoxGui_1  ;; `?<Constant L"\\x41\\x6e\\x67\\x6c\\x65\\x20\\x73\\x65\\`
        STR      R4,[R5, #+36]
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +307
        MOV      R5,#+0
??AngleSelect_CreateCBoxGui_2:
        LDR      R0,??DataTable28  ;; calc_set
        MOV      R2,#+255
        ADD      R0,R0,R5, LSL #+2
        LDR      R0,[R0, #+40]
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,SP
        STR      R0,[R1, +R5, LSL #+2]
        ADD      R5,R5,#+1
        CMP      R5,#+3
        BLT      ??AngleSelect_CreateCBoxGui_2
        MOV      R2,#+3
        MOV      R0,R4
        SWI      +328
        LDR      R0,??DataTable12  ;; calc_set + 32
        LDRB     R1,[R0, #+0]
        MOV      R0,R4
        SWI      +327
        LDR      R0,??DataTable31  ;; ACTION_BACK
        LDR      R2,??AngleSelect_CreateCBoxGui_1+0x4  ;; ??AngleSelect_OnCloseCBoxGui
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??DataTable30  ;; ACTION_SELECT1
        LDR      R2,??AngleSelect_CreateCBoxGui_1+0x8  ;; ??AngleSelect_OnSelectCBoxGui
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        MOV      R0,R4
        SWI      +308
        POP      {R0-R2,R4,R5,PC}  ;; return
        DATA
??AngleSelect_CreateCBoxGui_1:
        DC32     `?<Constant L"\\x41\\x6e\\x67\\x6c\\x65\\x20\\x73\\x65\\`
        DC32     ??AngleSelect_OnCloseCBoxGui
        DC32     ??AngleSelect_OnSelectCBoxGui
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable12:
        DC32     calc_set + 32

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnBackEditFmtGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE ??OnBackEditFmtGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function ??OnBackEditFmtGui
        ARM
??OnBackEditFmtGui:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+48]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+48]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnOkEditFmtGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE ??OnOkEditFmtGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function ??OnOkEditFmtGui
        ARM
??OnOkEditFmtGui:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R2,#+15
        MOV      R4,R0
        LDR      R0,??DataTable23  ;; calc_set + 16
        _BLF     ??unicode2win1251,??unicode2win1251??rA
        LDR      R0,[R4, #+48]
        CMP      R0,#+0
        BEQ      ??OnOkEditFmtGui_1
        SWI      +462
        STR      R0,[R4, #+48]
??OnOkEditFmtGui_1:
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        BEQ      ??OnOkEditFmtGui_2
        SWI      +462
        STR      R0,[R4, #+32]
??OnOkEditFmtGui_2:
        MOV      R0,R4
        POP      {R4,LR}          ;; Pop
        CFI R4 SameValue
        CFI ?RET R14
        CFI CFA R13+0
        B        ??CreateCalcSettings  ;; tailcall
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateEditFmtStr??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock22
        REQUIRE ??CreateEditFmtStr

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI Function ??CreateEditFmtStr
        ARM
??CreateEditFmtStr:
        LDR      R1,??DataTable23  ;; calc_set + 16
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        SUB      SP,SP,#+32
        CFI CFA R13+48
        MOV      R4,R0
        MOV      R2,#+15
        MOV      R0,SP
        _BLF     ??win12512unicode,??win12512unicode??rA
        MOV      R5,#+255
        ORR      R5,R5,#0xFF00
        MOV      R2,R5
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        MOV      R6,R0
        LDR      R0,??CreateEditFmtStr_1  ;; `?<Constant "Edit format str">`
        MOV      R2,R5
        MOV      R1,#+6
        SWI      +349
        LDR      R3,??CreateEditFmtStr_1+0x4  ;; VAR_ARG_STRINP_MIN_LEN
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+52
        LDR      R1,??CreateEditFmtStr_1+0x8  ;; ??OnOkEditFmtGui
        MOV      R2,R0
        PUSH     {R1}
        CFI CFA R13+56
        LDR      R1,??CreateEditFmtStr_1+0xC  ;; VAR_ARG_CALL_BACK_OK
        MOV      R0,#+0
        PUSH     {R1}
        CFI CFA R13+60
        LDR      R1,??CreateEditFmtStr_1+0x10  ;; ??OnBackEditFmtGui
        PUSH     {R1}
        CFI CFA R13+64
        LDR      R1,??CreateEditFmtStr_1+0x14  ;; VAR_ARG_CALL_BACK_PREV_ACT
        PUSH     {R1}
        CFI CFA R13+68
        LDR      R1,??CreateEditFmtStr_1+0x18  ;; VAR_ARG_STRINP_TEXT
        PUSH     {R6}
        CFI CFA R13+72
        PUSH     {R1}
        CFI CFA R13+76
        MOV      R1,R4
        PUSH     {R1}
        CFI CFA R13+80
        LDR      R1,??CreateEditFmtStr_1+0x1C  ;; VAR_ARG_BOOK
        PUSH     {R1}
        CFI CFA R13+84
        MOV      R1,#+1
        PUSH     {R1}
        CFI CFA R13+88
        LDR      R1,??CreateEditFmtStr_1+0x20  ;; VAR_ARG_STRINP_MODE
        PUSH     {R1}
        CFI CFA R13+92
        MOV      R1,#+15
        PUSH     {R1}
        CFI CFA R13+96
        LDR      R1,??CreateEditFmtStr_1+0x24  ;; VAR_ARG_STRINP_MAX_LEN
        PUSH     {R1}
        CFI CFA R13+100
        MOV      R1,#+1
        PUSH     {R1}
        CFI CFA R13+104
        LDR      R1,??CreateEditFmtStr_1+0x28  ;; VAR_ARG_HTEXT
        SWI      +324
        ADD      SP,SP,#+56
        CFI CFA R13+48
        STR      R0,[R4, #+48]
        ADD      SP,SP,#+32
        CFI CFA R13+16
        POP      {R4-R6,PC}       ;; return
        DATA
??CreateEditFmtStr_1:
        DC32     `?<Constant "Edit format str">`
        DC32     VAR_ARG_STRINP_MIN_LEN
        DC32     ??OnOkEditFmtGui
        DC32     VAR_ARG_CALL_BACK_OK
        DC32     ??OnBackEditFmtGui
        DC32     VAR_ARG_CALL_BACK_PREV_ACT
        DC32     VAR_ARG_STRINP_TEXT
        DC32     VAR_ARG_BOOK
        DC32     VAR_ARG_STRINP_MODE
        DC32     VAR_ARG_STRINP_MAX_LEN
        DC32     VAR_ARG_HTEXT
        CFI EndBlock cfiBlock23

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon0
        CFI NoFunction
        THUMB
??AutocalcSelect_OnCloseCBoxGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock24
        REQUIRE ??AutocalcSelect_OnCloseCBoxGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI Function ??AutocalcSelect_OnCloseCBoxGui
        ARM
??AutocalcSelect_OnCloseCBoxGui:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+40]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+40]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock25

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock26 Using cfiCommon0
        CFI NoFunction
        THUMB
??AutocalcSelect_OnSelectCBoxGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock26
        REQUIRE ??AutocalcSelect_OnSelectCBoxGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock27 Using cfiCommon1
        CFI Function ??AutocalcSelect_OnSelectCBoxGui
        ARM
??AutocalcSelect_OnSelectCBoxGui:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+40]
        SWI      +329
        LDR      R1,??DataTable19  ;; calc_set + 33
        STRB     R0,[R1, #+0]
        LDR      R0,[R4, #+40]
        CMP      R0,#+0
        BEQ      ??AutocalcSelect_OnSelectCBoxGui_1
        SWI      +462
        STR      R0,[R4, #+40]
??AutocalcSelect_OnSelectCBoxGui_1:
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        BEQ      ??AutocalcSelect_OnSelectCBoxGui_2
        SWI      +462
        STR      R0,[R4, #+32]
??AutocalcSelect_OnSelectCBoxGui_2:
        MOV      R0,R4
        POP      {R4,LR}          ;; Pop
        CFI R4 SameValue
        CFI ?RET R14
        CFI CFA R13+0
        B        ??CreateCalcSettings  ;; tailcall
        CFI EndBlock cfiBlock27

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock28 Using cfiCommon0
        CFI NoFunction
        THUMB
??AutocalcSelect_CreateCBoxGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock28
        REQUIRE ??AutocalcSelect_CreateCBoxGui

        RSEG DATA_I:DATA:SORT:NOROOT(2)
calc_set:
        DS8 40
        REQUIRE `?<Initializer for calc_set>`
angle_names:
        DS8 12
        REQUIRE `?<Initializer for angle_names>`
dis_ena:
        DS8 8
        REQUIRE `?<Initializer for dis_ena>`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock29 Using cfiCommon1
        CFI Function ??AutocalcSelect_CreateCBoxGui
        ARM
??AutocalcSelect_CreateCBoxGui:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+8
        CFI CFA R13+20
        MOV      R5,R0
        SWI      +325
        MOV      R4,R0
        LDR      R0,??AutocalcSelect_CreateCBoxGui_1  ;; `?<Constant L"\\x52\\x65\\x61\\x6c\\x74\\x69\\x6d\\x65\\`
        STR      R4,[R5, #+40]
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +307
        MOV      R5,#+0
??AutocalcSelect_CreateCBoxGui_2:
        LDR      R0,??DataTable28  ;; calc_set
        MOV      R2,#+255
        ADD      R0,R0,R5, LSL #+2
        LDR      R0,[R0, #+52]
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,SP
        STR      R0,[R1, +R5, LSL #+2]
        ADD      R5,R5,#+1
        CMP      R5,#+2
        BLT      ??AutocalcSelect_CreateCBoxGui_2
        MOV      R2,#+2
        MOV      R0,R4
        SWI      +328
        LDR      R0,??DataTable19  ;; calc_set + 33
        LDRB     R1,[R0, #+0]
        MOV      R0,R4
        SWI      +327
        LDR      R0,??DataTable31  ;; ACTION_BACK
        LDR      R2,??AutocalcSelect_CreateCBoxGui_1+0x4  ;; ??AutocalcSelect_OnCloseCBoxGui
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??DataTable30  ;; ACTION_SELECT1
        LDR      R2,??AutocalcSelect_CreateCBoxGui_1+0x8  ;; ??AutocalcSelect_OnSelectCBoxGui
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        MOV      R0,R4
        SWI      +308
        POP      {R0,R1,R4,R5,PC}  ;; return
        DATA
??AutocalcSelect_CreateCBoxGui_1:
        DC32     `?<Constant L"\\x52\\x65\\x61\\x6c\\x74\\x69\\x6d\\x65\\`
        DC32     ??AutocalcSelect_OnCloseCBoxGui
        DC32     ??AutocalcSelect_OnSelectCBoxGui
        CFI EndBlock cfiBlock29

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable19:
        DC32     calc_set + 33

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock30 Using cfiCommon0
        CFI NoFunction
        THUMB
??CS_OnBack??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock30
        REQUIRE ??CS_OnBack

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock31 Using cfiCommon1
        CFI Function ??CS_OnBack
        ARM
??CS_OnBack:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+32]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock31

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock32 Using cfiCommon0
        CFI NoFunction
        THUMB
??CS_onEnterPressed??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock32
        REQUIRE ??CS_onEnterPressed

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock33 Using cfiCommon1
        CFI Function ??CS_onEnterPressed
        ARM
??CS_onEnterPressed:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+32]
        SWI      +318
        CMP      R0,#+0
        BEQ      ??CS_onEnterPressed_1
        SUBS     R0,R0,#+1
        BEQ      ??CS_onEnterPressed_2
        SUBS     R0,R0,#+1
        BEQ      ??CS_onEnterPressed_3
        B        ??CS_onEnterPressed_4
??CS_onEnterPressed_1:
        MOV      R0,R4
        BL       ??AngleSelect_CreateCBoxGui
        POP      {R4,PC}
??CS_onEnterPressed_2:
        MOV      R0,R4
        BL       ??CreateEditFmtStr
        POP      {R4,PC}
??CS_onEnterPressed_3:
        MOV      R0,R4
        BL       ??AutocalcSelect_CreateCBoxGui
        POP      {R4,PC}
??CS_onEnterPressed_4:
        LDR      R0,[R4, #+32]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+32]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock33

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock34 Using cfiCommon0
        CFI NoFunction
        THUMB
??CS_On_Msg??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock34
        REQUIRE ??CS_On_Msg

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock35 Using cfiCommon1
        CFI Function ??CS_On_Msg
        ARM
??CS_On_Msg:
        LDR      R1,??CS_On_Msg_1  ;; `?<Constant {&L"\\x41\\x6e\\x67\\x6c\\x65", &L"\\x46\\`
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        SUB      SP,SP,#+12
        CFI CFA R13+28
        LDM      R1,{R2,R3,R5}
        MOV      R4,R0
        MOV      R0,SP
        STM      R0,{R2,R3,R5}
        MOV      R0,R4
        SWI      +884
        CMP      R0,#+1
        BNE      ??CS_On_Msg_2
        MOV      R0,R4
        SWI      +311
        MOV      R5,R0
        CMP      R5,#+3
        BGE      ??CS_On_Msg_2
        MOV      R0,SP
        LDR      R0,[R0, +R5, LSL #+2]
        MVN      R6,#-1879048192
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +312
        CMP      R5,#+0
        BEQ      ??CS_On_Msg_3
        SUBS     R5,R5,#+1
        BEQ      ??CS_On_Msg_4
        SUBS     R5,R5,#+1
        BEQ      ??CS_On_Msg_5
        B        ??CS_On_Msg_6
??CS_On_Msg_3:
        LDR      R0,??DataTable28  ;; calc_set
        MOV      R2,#+255
        LDRB     R3,[R0, #+32]
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,R0,R3, LSL #+2
        LDR      R0,[R0, #+40]
        B        ??CS_On_Msg_7
??CS_On_Msg_4:
        LDR      R0,??DataTable23  ;; calc_set + 16
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+6
        B        ??CS_On_Msg_7
??CS_On_Msg_5:
        LDR      R0,??DataTable28  ;; calc_set
        MOV      R2,#+255
        LDRB     R3,[R0, #+33]
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,R0,R3, LSL #+2
        LDR      R0,[R0, #+52]
??CS_On_Msg_7:
        SWI      +349
        MOV      R6,R0
??CS_On_Msg_6:
        MOV      R1,R6
        MOV      R0,R4
        SWI      +313
??CS_On_Msg_2:
        MOV      R0,#+1
        POP      {R1-R6,PC}       ;; return
        DATA
??CS_On_Msg_1:
        DC32     `?<Constant {&L"\\x41\\x6e\\x67\\x6c\\x65", &L"\\x46\\`
        CFI EndBlock cfiBlock35

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable23:
        DC32     calc_set + 16

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock36 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateCalcSettings??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock36
        REQUIRE ??CreateCalcSettings

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock37 Using cfiCommon1
        CFI Function ??CreateCalcSettings
        ARM
??CreateCalcSettings:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R1,#+0
        MOV      R4,R0
        SWI      +448
        MOV      R5,R0
        LDR      R0,??DataTable29  ;; `?<Constant L"\\x53\\x65\\x74\\x74\\x69\\x6e\\x67\\x73"`
        STR      R5,[R4, #+32]
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R5
        SWI      +307
        MOV      R1,#+3
        MOV      R0,R5
        SWI      +449
        MOV      R1,#+0
        MOV      R0,R5
        SWI      +309
        MOV      R1,#+3
        MOV      R0,R5
        SWI      +319
        LDR      R1,??CreateCalcSettings_1  ;; ??CS_On_Msg
        MOV      R0,R5
        SWI      +372
        LDR      R0,??DataTable30  ;; ACTION_SELECT1
        LDR      R2,??CreateCalcSettings_1+0x4  ;; ??CS_onEnterPressed
        LDR      R1,[R0, #+0]
        MOV      R0,R5
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??DataTable31  ;; ACTION_BACK
        LDR      R2,??CreateCalcSettings_1+0x8  ;; ??CS_OnBack
        LDR      R1,[R0, #+0]
        MOV      R0,R5
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        MOV      R0,R5
        SWI      +308
        POP      {R4,R5,PC}       ;; return
        DATA
??CreateCalcSettings_1:
        DC32     ??CS_On_Msg
        DC32     ??CS_onEnterPressed
        DC32     ??CS_OnBack
        CFI EndBlock cfiBlock37

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock38 Using cfiCommon0
        CFI NoFunction
        THUMB
??CM_OnBack??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock38
        REQUIRE ??CM_OnBack

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock39 Using cfiCommon1
        CFI Function ??CM_OnBack
        ARM
??CM_OnBack:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+28]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+28]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock39

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock40 Using cfiCommon0
        CFI NoFunction
        THUMB
??CM_onEnterPressed??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock40
        REQUIRE ??CM_onEnterPressed

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock41 Using cfiCommon1
        CFI Function ??CM_onEnterPressed
        ARM
??CM_onEnterPressed:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+28]
        SWI      +318
        CMP      R0,#+6
        BHI      ??CM_onEnterPressed_2
        ADR      R1,??CM_onEnterPressed_1
        LDRB     R1,[R1, R0]
        ADD      PC,PC,R1, LSL #+2
        DATA
??CM_onEnterPressed_1:
        DC8      +25,+1,+25,+25
        DC8      +4,+6,+17,+0
        ARM
??CM_onEnterPressed_3:
        MOV      R0,R4
        BL       ??InsertVar_CreateMenu
        POP      {R4,PC}
??CM_onEnterPressed_4:
        LDR      R0,??DataTable28  ;; calc_set
        B        ??CM_onEnterPressed_5
??CM_onEnterPressed_6:
        LDR      R0,??CM_onEnterPressed_7  ;; calc_set + 8
??CM_onEnterPressed_5:
        LDR      R1,??CM_onEnterPressed_7+0x4  ;; d_answer
        LDM      R1,{R2,R3}
        STM      R0,{R2,R3}
        LDR      R0,[R4, #+28]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        LDR      R0,[R4, #+28]
        SWI      +462
        STR      R0,[R4, #+28]
        POP      {R4,PC}
??CM_onEnterPressed_8:
        MOV      R0,R4
        BL       ??CreateCalcSettings
        POP      {R4,PC}
??CM_onEnterPressed_2:
        LDR      R0,[R4, #+28]
        CMP      R0,#+0
        POPEQ    {R4,PC}
        SWI      +462
        STR      R0,[R4, #+28]
??CM_onEnterPressed_9:
        POP      {R4,PC}          ;; return
        DATA
??CM_onEnterPressed_7:
        DC32     calc_set + 8
        DC32     d_answer
        CFI EndBlock cfiBlock41

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable28:
        DC32     calc_set

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock42 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateCalcMenu??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock42
        REQUIRE ??CreateCalcMenu

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock43 Using cfiCommon1
        CFI Function ??CreateCalcMenu
        ARM
??CreateCalcMenu:
        LDR      R0,??CreateCalcMenu_1  ;; ??isScalkaBook
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        SUB      SP,SP,#+28
        CFI CFA R13+48
        SWI      +304
        MOVS     R5,R0
        BEQ      ??CreateCalcMenu_2
        MOV      R1,#+0
        SWI      +448
        MOV      R4,R0
        STR      R4,[R5, #+28]
        LDR      R5,??DataTable29  ;; `?<Constant L"\\x53\\x65\\x74\\x74\\x69\\x6e\\x67\\x73"`
        MOV      R6,#+255
        ORR      R6,R6,#0xFF00
        MOV      R2,R6
        MOV      R1,#+0
        ADD      R0,R5,#+20
        SWI      +349
        MOV      R7,R0
        MOV      R2,R6
        MOV      R1,#+0
        ADD      R0,R5,#+32
        SWI      +349
        STR      R0,[SP, #+0]
        MOV      R2,R6
        MOV      R1,#+0
        ADD      R0,R5,#+56
        SWI      +349
        STR      R0,[SP, #+4]
        MOV      R2,R6
        MOV      R1,#+0
        ADD      R0,R5,#+80
        SWI      +349
        STR      R0,[SP, #+8]
        MOV      R2,R6
        MOV      R1,#+0
        ADD      R0,R5,#+104
        SWI      +349
        STR      R0,[SP, #+12]
        MOV      R2,R6
        MOV      R1,#+0
        ADD      R0,R5,#+124
        SWI      +349
        STR      R0,[SP, #+16]
        MOV      R2,R6
        MOV      R1,#+0
        ADD      R0,R5,#+144
        SWI      +349
        STR      R0,[SP, #+20]
        MOV      R2,R6
        MOV      R1,#+0
        MOV      R0,R5
        SWI      +349
        STR      R0,[SP, #+24]
        MOV      R2,#+7
        MOV      R1,SP
        MOV      R0,R4
        SWI      +328
        MOV      R1,R7
        MOV      R0,R4
        SWI      +307
        MOV      R1,#+7
        MOV      R0,R4
        SWI      +449
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +309
        LDR      R0,??DataTable30  ;; ACTION_SELECT1
        LDR      R2,??CreateCalcMenu_1+0x4  ;; ??CM_onEnterPressed
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        LDR      R0,??DataTable31  ;; ACTION_BACK
        LDR      R2,??CreateCalcMenu_1+0x8  ;; ??CM_OnBack
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
        MOV      R0,R4
        SWI      +308
??CreateCalcMenu_2:
        ADD      SP,SP,#+28       ;; stack cleaning
        CFI CFA R13+20
        POP      {R4-R7,PC}       ;; return
        DATA
??CreateCalcMenu_1:
        DC32     ??isScalkaBook
        DC32     ??CM_onEnterPressed
        DC32     ??CM_OnBack
        CFI EndBlock cfiBlock43

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable29:
        DC32     `?<Constant L"\\x53\\x65\\x74\\x74\\x69\\x6e\\x67\\x73"`

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable30:
        DC32     ACTION_SELECT1

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable31:
        DC32     ACTION_BACK

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock44 Using cfiCommon1
        CFI NoFunction
        ARM
??insert_operation??rA:
        LDR      R12,??Subroutine22_0  ;; ??insert_operation
        BX       R12
        DATA
??Subroutine22_0:
        DC32     ??insert_operation
        CFI EndBlock cfiBlock44

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock45 Using cfiCommon1
        CFI NoFunction
        ARM
??unicode2win1251??rA:
        LDR      R12,??Subroutine23_0  ;; ??unicode2win1251
        BX       R12
        DATA
??Subroutine23_0:
        DC32     ??unicode2win1251
        CFI EndBlock cfiBlock45

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock46 Using cfiCommon1
        CFI NoFunction
        ARM
??win12512unicode??rA:
        LDR      R12,??Subroutine24_0  ;; ??win12512unicode
        BX       R12
        DATA
??Subroutine24_0:
        DC32     ??win12512unicode
        CFI EndBlock cfiBlock46

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for calc_set>`:
        DATA
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0
`?<Initializer for angle_names>`:
        DC32 `?<Constant L"\\x44\\x65\\x67\\x72\\x65\\x65\\x73">`
        DC32 `?<Constant L"\\x52\\x61\\x64\\x69\\x61\\x6e\\x73">`
        DC32 `?<Constant L"\\x47\\x72\\x61\\x64\\x73">`
`?<Initializer for dis_ena>`:
        DC32 `?<Constant L"\\x44\\x69\\x73\\x61\\x62\\x6c\\x65">`
        DC32 `?<Constant L"\\x45\\x6e\\x61\\x62\\x6c\\x65">`

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        END
// 
// 2 972 bytes in segment CODE
//   424 bytes in segment DATA_C
//    60 bytes in segment DATA_I
//    60 bytes in segment DATA_ID
//    12 bytes in segment INITTAB
// 
// 2 848 bytes of CODE  memory (+ 136 bytes shared)
//   484 bytes of CONST memory
//    60 bytes of DATA  memory
//
//Errors: none
//Warnings: none
