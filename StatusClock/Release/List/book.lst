##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  22:50:33 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\StatusClock\bo #
#                       ok.cpp                                               #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\StatusClock\bo #
#                       ok.cpp -D NDEBUG -D OLDFUNCTIONS -lC                 #
#                       Z:\home\perk11\www\perk11.info\svn\SE\StatusClock\Re #
#                       lease\List\ -lA Z:\home\perk11\www\perk11.info\svn\S #
#                       E\StatusClock\Release\List\ -o                       #
#                       Z:\home\perk11\www\perk11.info\svn\SE\StatusClock\Re #
#                       lease\Obj\ -s9 --cpu_mode arm --endian little --cpu  #
#                       ARM926EJ-S --stack_align 4 --interwork -e --fpu      #
#                       None --eec++ --dlib_config                           #
#                       Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.h -I         #
#                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2    #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\StatusClock\Re #
#                       lease\List\book.lst                                  #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\StatusClock\Re #
#                       lease\Obj\book.r79                                   #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\StatusClock\book.cpp
      1          #include "..\\include\Lib_Clara.h"
      2          #include "..\\include\Dir.h"
      3          #include "..\\include\cfg_items.h"
      4          #include "conf_loader.h"
      5          #define AuthorInfo L"StatusClock v1.0\n© UltraShot\n"
      6          
      7          extern DISP_OBJ_ONREDRAW_METHOD DREDRAW;
      8          extern u16 timer;
      9          void DispDraw(DISP_OBJ* DO,int a,int b,int c);
     10          void Send_REDRAW_RELEASE();
     11          
     12          typedef struct
     13          {
     14            BOOK * book;
     15          }MSG;
     16          

   \                                 In segment CODE, align 4, keep-with-next
     17          void elf_exit()
     18          {
   \                     ??elf_exit:
   \   00000000   00402DE9           PUSH     {LR}
     19            kill_data(&ELF_BEGIN, (void(*)(void*))mfree_adr());
   \   00000004   048100EF           SWI      +33028
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??elf_exit_1  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??elf_exit_1:
   \   00000018   ........           DC32     ELF_BEGIN
     20          };
     21          

   \                                 In segment CODE, align 4, keep-with-next
     22          int MyBook_OnTerminate(void * ,BOOK* book)
     23          {
   \                     ??MyBook_OnTerminate:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
     24            Send_REDRAW_RELEASE();
   \   00000008   ........           BL       ??Send_REDRAW_RELEASE
     25            FreeBook(book);
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   2F0100EF           SWI      +303
     26            return(1);
   \   00000014   0100A0E3           MOV      R0,#+1
   \   00000018   1080BDE8           POP      {R4,PC}          ;; return
     27          };
     28          

   \                                 In segment CODE, align 4, keep-with-next
     29          int MyBook_OnShowAuthorInfo(void *mess ,BOOK* book)
     30          {
   \                     ??MyBook_OnShowAuthorInfo:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     31            MSG * msg = (MSG*)mess;
     32            MessageBox(EMPTY_TEXTID,TextID_Create(AuthorInfo,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1 ,5000,msg->book);
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   3C009FE5           LDR      R0,??MyBook_OnShowAuthorInfo_1  ;; `?<Constant L"\\x53\\x74\\x61\\x74\\x75\\x73\\x43\\x6c\\`
   \   00000010   FF50A0E3           MOV      R5,#+255
   \   00000014   FF5C85E3           ORR      R5,R5,#0xFF00
   \   00000018   0520A0E1           MOV      R2,R5
   \   0000001C   5D0100EF           SWI      +349
   \   00000020   001094E5           LDR      R1,[R4, #+0]
   \   00000024   0130A0E3           MOV      R3,#+1
   \   00000028   02002DE9           PUSH     {R1}
   \   0000002C   0520A0E1           MOV      R2,R5
   \   00000030   8810A0E3           MOV      R1,#+136
   \   00000034   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000038   02002DE9           PUSH     {R1}
   \   0000003C   0010A0E1           MOV      R1,R0
   \   00000040   9004E0E3           MVN      R0,#-1879048192
   \   00000044   570200EF           SWI      +599
     33            return(1);
   \   00000048   0100A0E3           MOV      R0,#+1
   \   0000004C   3680BDE8           POP      {R1,R2,R4,R5,PC}  ;; return
   \                     ??MyBook_OnShowAuthorInfo_1:
   \   00000050   ........           DC32     `?<Constant L"\\x53\\x74\\x61\\x74\\x75\\x73\\x43\\x6c\\`
     34          };
     35          
     36          //--------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
     37          static int OnReconfig(void *mess ,BOOK *book)
     38          {
   \                     ??OnReconfig:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     39            
     40            RECONFIG_EVENT_DATA *reconf=(RECONFIG_EVENT_DATA *)mess;
     41            if (wstrcmpi(reconf->path,successed_config_path)==0 && wstrcmpi(reconf->name,successed_config_name)==0)
   \   00000008   4C009FE5           LDR      R0,??OnReconfig_1  ;; successed_config_path
   \   0000000C   001090E5           LDR      R1,[R0, #+0]
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   9F0200EF           SWI      +671
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0C00001A           BNE      ??OnReconfig_2
   \   00000020   38009FE5           LDR      R0,??OnReconfig_1+0x4  ;; successed_config_name
   \   00000024   001090E5           LDR      R1,[R0, #+0]
   \   00000028   800084E2           ADD      R0,R4,#+128
   \   0000002C   9F0200EF           SWI      +671
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0600001A           BNE      ??OnReconfig_2
     42            {
     43              InitConfig();
   \   00000038   ........           _BLF     ??InitConfig,??InitConfig??rA
     44              DispObject_InvalidateRect(*StatusRow_p(),0);
   \   0000003C   F28100EF           SWI      +33266
   \   00000040   000090E5           LDR      R0,[R0, #+0]
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   EF0100EF           SWI      +495
     45              return 1;
   \   0000004C   0100A0E3           MOV      R0,#+1
   \   00000050   1080BDE8           POP      {R4,PC}
     46            }
     47            return 0;
   \                     ??OnReconfig_2:
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??OnReconfig_1:
   \   0000005C   ........           DC32     successed_config_path
   \   00000060   ........           DC32     successed_config_name
     48          };
     49          //--------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
     50          void Send_REDRAW_RELEASE()
     51          {
   \                     ??Send_REDRAW_RELEASE:
   \   00000000   10402DE9           PUSH     {R4,LR}
     52            REDRAW_RELEASE_MESSAGE * sbm= new REDRAW_RELEASE_MESSAGE;
   \   00000004   1800A0E3           MOV      R0,#+24
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   0040A0E1           MOV      R4,R0
     53            memset(sbm,0,sizeof(REDRAW_RELEASE_MESSAGE));
   \   00000010   1820A0E3           MOV      R2,#+24
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   120100EF           SWI      +274
     54            sbm->SI_OldOnRedraw=DREDRAW;
   \   0000001C   ........           LDR      R0,??DataTable4  ;; DREDRAW
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   080084E5           STR      R0,[R4, #+8]
     55            sbm->SI_NewOnRedraw=DispDraw;
   \   00000028   ........           LDR      R0,??DataTable3  ;; ??DispDraw
   \   0000002C   0C0084E5           STR      R0,[R4, #+12]
     56            UI_Event_wData(SBY_REDRAW_RELEASE_EVENT ,sbm,(void (*)(void*))mfree_adr());
   \   00000030   048100EF           SWI      +33028
   \   00000034   0020A0E1           MOV      R2,R0
   \   00000038   0410A0E1           MOV      R1,R4
   \   0000003C   E300A0E3           MOV      R0,#+227
   \   00000040   C00F80E3           ORR      R0,R0,#0x300
   \   00000044   A90100EF           SWI      +425
     57          };
   \   00000048   1080BDE8           POP      {R4,PC}          ;; return
     58          

   \                                 In segment CODE, align 4, keep-with-next
     59          int onElfKilled(void *mess ,BOOK* book)
     60          {
   \                     ??onElfKilled:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
     61            REDRAW_RELEASE_MESSAGE * sbm=(REDRAW_RELEASE_MESSAGE*)mess;
     62            if (sbm->SK_NewOnRedraw==DREDRAW)
   \   00000004   ........           LDR      R5,??DataTable4  ;; DREDRAW
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   140094E5           LDR      R0,[R4, #+20]
   \   00000010   001095E5           LDR      R1,[R5, #+0]
   \   00000014   010050E1           CMP      R0,R1
   \   00000018   1A00001A           BNE      ??onElfKilled_1
     63            {
     64              REDRAW_RELEASE_MESSAGE * ms= new REDRAW_RELEASE_MESSAGE;
   \   0000001C   1800A0E3           MOV      R0,#+24
   \   00000020   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000024   0060A0E1           MOV      R6,R0
     65              memcpy(ms,sbm,sizeof(REDRAW_RELEASE_MESSAGE));
   \   00000028   1820A0E3           MOV      R2,#+24
   \   0000002C   0410A0E1           MOV      R1,R4
   \   00000030   130100EF           SWI      +275
     66              if (sbm->SK_OldOnRedraw!=EMPTY_REDRAW_METHOD) DREDRAW=sbm->SK_OldOnRedraw;
   \   00000034   100094E5           LDR      R0,[R4, #+16]
     67          
     68              DISP_DESC_SetOnRedraw(DispObject_GetDESC(*StatusRow_p()),DispDraw);
   \   00000038   ........           LDR      R4,??DataTable3  ;; ??DispDraw
   \   0000003C   0070E0E3           MVN      R7,#+0
   \   00000040   070050E1           CMP      R0,R7
   \   00000044   00008515           STRNE    R0,[R5, #+0]
   \   00000048   F28100EF           SWI      +33266
   \   0000004C   000090E5           LDR      R0,[R0, #+0]
   \   00000050   1F0200EF           SWI      +543
   \   00000054   0410A0E1           MOV      R1,R4
   \   00000058   280200EF           SWI      +552
     69          
     70              ms->SI_OldOnRedraw=EMPTY_REDRAW_METHOD;
   \   0000005C   087086E5           STR      R7,[R6, #+8]
     71              ms->SI_NewOnRedraw=DispDraw;
   \   00000060   0C4086E5           STR      R4,[R6, #+12]
     72          
     73              UI_Event_wData(SBY_REDRAW_RELEASE_EVENT ,ms,(void (*)(void*))mfree_adr());
   \   00000064   048100EF           SWI      +33028
   \   00000068   0020A0E1           MOV      R2,R0
   \   0000006C   0610A0E1           MOV      R1,R6
   \   00000070   E300A0E3           MOV      R0,#+227
   \   00000074   C00F80E3           ORR      R0,R0,#0x300
   \   00000078   A90100EF           SWI      +425
     74              return BLOCK_EVENT_GLOBALLY;
   \   0000007C   9A00A0E3           MOV      R0,#+154
   \   00000080   800F80E3           ORR      R0,R0,#0x200
   \   00000084   F080BDE8           POP      {R4-R7,PC}
     75            }
     76            return 0;
   \                     ??onElfKilled_1:
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   F080BDE8           POP      {R4-R7,PC}       ;; return
     77          };
     78          

   \                                 In segment CODE, align 4, keep-with-next
     79          void MyBook_OnClose(BOOK * book)
     80          {
   \                     ??MyBook_OnClose:
   \   00000000   00402DE9           PUSH     {LR}
     81            if (book)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0080BD08           POPEQ    {PC}
     82            {
     83              Timer_Kill(&timer);
   \   0000000C   24009FE5           LDR      R0,??MyBook_OnClose_1  ;; timer
   \   00000010   2A0100EF           SWI      +298
     84              DISP_OBJ *si=*StatusRow_p();
   \   00000014   F28100EF           SWI      +33266
   \   00000018   000090E5           LDR      R0,[R0, #+0]
     85              DISP_DESC_SetOnRedraw(DispObject_GetDESC(si), DREDRAW);
   \   0000001C   1F0200EF           SWI      +543
   \   00000020   ........           LDR      R1,??DataTable4  ;; DREDRAW
   \   00000024   001091E5           LDR      R1,[R1, #+0]
   \   00000028   280200EF           SWI      +552
     86              SUBPROC(elf_exit);
   \   0000002C   08009FE5           LDR      R0,??MyBook_OnClose_1+0x4  ;; ??elf_exit
   \   00000030   080100EF           SWI      +264
     87            }
     88          };
   \   00000034   0080BDE8           POP      {PC}             ;; return
   \                     ??MyBook_OnClose_1:
   \   00000038   ........           DC32     timer
   \   0000003C   ........           DC32     ??elf_exit
     89          

   \                                 In segment DYN_PAGE, align 4, align-sorted
     90          const PAGE_MSG HW_PageEvents[]@ "DYN_PAGE" ={
   \                     HW_PageEvents:
   \   00000000   E5030000....       DC32 997, ??MyBook_OnTerminate, 998, ??MyBook_OnShowAuthorInfo, 996
   \              ....E6030000
   \              ........E403
   \              0000        
   \   00000014   ........4000       DC32 ??OnReconfig, 64, 0H
   \              000000000000
     91            ELF_TERMINATE_EVENT , MyBook_OnTerminate,
     92            ELF_SHOW_INFO_EVENT  , MyBook_OnShowAuthorInfo,
     93            ELF_RECONFIG_EVENT,     OnReconfig,
     94            NIL_EVENT_TAG,            NULL
     95          };
     96          

   \                                 In segment DATA_I, align 4, align-sorted
     97          PAGE_DESC base_page ={"StatusClockPage",0,HW_PageEvents};
   \                     base_page:
   \   00000000                      DS8 12
   \   0000000C                      REQUIRE `?<Initializer for base_page>`
     98          

   \                                 In segment CODE, align 4, keep-with-next
     99          BOOK * MyBook_Create()
    100          {
   \                     ??MyBook_Create:
   \   00000000   10402DE9           PUSH     {R4,LR}
    101            BOOK * MyBook= new BOOK;
   \   00000004   1800A0E3           MOV      R0,#+24
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
    102            CreateBook(MyBook,MyBook_OnClose,&base_page,"StatusClock",-1,0);
   \   0000000C   28309FE5           LDR      R3,??MyBook_Create_1  ;; `?<Constant "StatusClock">`
   \   00000010   28209FE5           LDR      R2,??MyBook_Create_1+0x4  ;; base_page
   \   00000014   28109FE5           LDR      R1,??MyBook_Create_1+0x8  ;; ??MyBook_OnClose
   \   00000018   0040A0E1           MOV      R4,R0
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   01002DE9           PUSH     {R0}
   \   00000024   0000E0E1           MVN      R0,R0
   \   00000028   01002DE9           PUSH     {R0}
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   2B0100EF           SWI      +299
    103            return(MyBook);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   1680BDE8           POP      {R1,R2,R4,PC}    ;; return
   \                     ??MyBook_Create_1:
   \   0000003C   ........           DC32     `?<Constant "StatusClock">`
   \   00000040   ........           DC32     base_page
   \   00000044   ........           DC32     ??MyBook_OnClose
    104          };

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     ??DispDraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     DREDRAW

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for base_page>`:
   \   00000000   ........0000       DC32 `?<Constant "StatusClockPage">`, 0H, HW_PageEvents
   \              0000........

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "StatusClockPage">`:
   \   00000000   537461747573       DC8 "StatusClockPage"
   \              436C6F636B50
   \              61676500    

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x53\\x74\\x61\\x74\\x75\\x73\\x43\\x6c\\`:
   \   00000000   530074006100       DC8 53H, 0, 74H, 0, 61H, 0, 74H, 0
   \              7400        
   \   00000008   750073004300       DC8 75H, 0, 73H, 0, 43H, 0, 6CH, 0
   \              6C00        
   \   00000010   6F0063006B00       DC8 6FH, 0, 63H, 0, 6BH, 0, 20H, 0
   \              2000        
   \   00000018   760031002E00       DC8 76H, 0, 31H, 0, 2EH, 0, 30H, 0
   \              3000        
   \   00000020   0A00A9002000       DC8 0AH, 0, 0A9H, 0, 20H, 0, 55H, 0
   \              5500        
   \   00000028   6C0074007200       DC8 6CH, 0, 74H, 0, 72H, 0, 61H, 0
   \              6100        
   \   00000030   530068006F00       DC8 53H, 0, 68H, 0, 6FH, 0, 74H, 0
   \              7400        
   \   00000038   0A000000           DC8 0AH, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "StatusClock">`:
   \   00000000   537461747573       DC8 "StatusClock"
   \              436C6F636B00
    105          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     MyBook_Create()                   16
     MyBook_OnClose(BOOK *)             4
     MyBook_OnShowAuthorInfo(void *, BOOK *)
                                       20
     MyBook_OnTerminate(void *, BOOK *)
                                        8
     OnReconfig(void *, BOOK *)         8
     Send_REDRAW_RELEASE()              8
     elf_exit()                         4
     onElfKilled(void *, BOOK *)       20


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     elf_exit()                       28
     MyBook_OnTerminate(void *, BOOK *)
                                      28
     MyBook_OnShowAuthorInfo(void *, BOOK *)
                                      84
     OnReconfig(void *, BOOK *)      100
     Send_REDRAW_RELEASE()            76
     onElfKilled(void *, BOOK *)     144
     MyBook_OnClose(BOOK *)           64
     HW_PageEvents                    32
     base_page                        12
     MyBook_Create()                  72
     ??DataTable3                      4
     ??DataTable4                      4
     ?<Initializer for base_page>     12
     ?<Constant "StatusClockPage">    16
     ?<Constant L"\x53\x74\x61\x74\x75\x73\x43\x6c\
                                      60
     ?<Constant "StatusClock">        12
      Others                          80

 
 672 bytes in segment CODE
  88 bytes in segment DATA_C
  12 bytes in segment DATA_I
  12 bytes in segment DATA_ID
  32 bytes in segment DYN_PAGE
  12 bytes in segment INITTAB
 
 604 bytes of CODE  memory (+ 80 bytes shared)
 132 bytes of CONST memory
  12 bytes of DATA  memory

Errors: none
Warnings: none
