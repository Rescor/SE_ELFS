//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:50:39 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\StatusClock\c /
//                       onfig_data.c                                        /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\StatusClock\c /
//                       onfig_data.c -lC Z:\home\perk11\www\perk11.info\svn /
//                       \SE\StatusClock\Release\List\ -lA                   /
//                       Z:\home\perk11\www\perk11.info\svn\SE\StatusClock\R /
//                       elease\List\ -o Z:\home\perk11\www\perk11.info\svn\ /
//                       SE\StatusClock\Release\Obj\ -s9 --cpu_mode arm      /
//                       --endian little --cpu ARM926EJ-S --stack_align 4    /
//                       --interwork -e --fpu None --eec++ --dlib_config     /
//                       Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.h           /
//                       --segment data=CONFIG -I                            /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\StatusClock\R /
//                       elease\List\config_data.s79                         /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME config_data

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        PUBLIC cfg_bg
        PUBLIC cfg_border
        PUBLIC cfg_bordsize
        PUBLIC cfg_color
        PUBLIC cfg_ct
        PUBLIC cfg_font
        PUBLIC cfg_rect
        PUBLIC cfg_shad
        PUBLIC cfg_shadow
        PUBLIC cfg_x
        PUBLIC cfg_y
// Z:\home\perk11\www\perk11.info\svn\SE\StatusClock\config_data.c
//    1 #include "..\\include\cfg_items.h"
//    2 #include "config_data.h"
//    3 #include "..\\include\Colors.h"
//    4 #pragma diag_suppress=Pe177
//    5 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 7
        DC8 "Position"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//    6 __root const CFG_HDR cfghdr1={CFG_COORDINATES,"Position",0,0};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//    7 __root const int cfg_x=240;
cfg_x:
        DATA
        DC32 240

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//    8 __root const int cfg_y=0;
cfg_y:
        DATA
        DC32 0
//    9 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 16
        DC8 "Font"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//   10 __root const CFG_HDR cfghdr2={CFG_FONT,"Font",0,0};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   11 __root const int cfg_font=0x18;
cfg_font:
        DATA
        DC32 24
//   12 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 5
        DC8 "Centering"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 3
//   13 __root const CFG_HDR cfghdr3={CFG_CBOX,"Centering",0,3};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   14 __root const int cfg_ct=1;
cfg_ct:
        DATA
        DC32 1

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC8 "Left"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "Right"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 "Center"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0
//   15 __root const CFG_CBOX_ITEM cfgcbox5[3]={"Left","Right","Center"};
//   16 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 15
        DC8 "Color"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//   17 __root const CFG_HDR cfghdr4={CFG_COLOR_INT,"Color",0,0};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   18 __root const unsigned int cfg_color=clWhite;
cfg_color:
        DATA
        DC32 4294967295
//   19 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 15
        DC8 "Shadow Color"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//   20 __root const CFG_HDR cfghdr5={CFG_COLOR_INT,"Shadow Color",0,0};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   21 __root const unsigned int cfg_shadow=clBlack;
cfg_shadow:
        DATA
        DC32 4278190080
//   22 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 15
        DC8 "Border Color"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//   23 __root const CFG_HDR cfghdr6={CFG_COLOR_INT,"Border Color",0,0};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   24 __root const unsigned int cfg_border=0;
cfg_border:
        DATA
        DC32 0
//   25 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 3
        DC8 "Shadow offset"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 10
//   26 __root const CFG_HDR cfghdr7={CFG_INT,"Shadow offset",0,10};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   27 __root const int cfg_shad=1;
cfg_shad:
        DATA
        DC32 1
//   28 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 3
        DC8 "Border size"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 10
//   29 __root const CFG_HDR cfghdr8={CFG_INT,"Border size",0,10};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   30 __root const int cfg_bordsize=1;
cfg_bordsize:
        DATA
        DC32 1
//   31 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 15
        DC8 "BG color"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//   32 __root const CFG_HDR cfghdr9={CFG_COLOR_INT,"BG color",0,0};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   33 __root const unsigned int cfg_bg=0x9C000000;
cfg_bg:
        DATA
        DC32 2617245696
//   34 

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
        DATA
        DC32 14
        DC8 "BG rect"
        DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        DC8 0, 0, 0, 0, 0, 0, 0, 0
        DC32 0, 0
//   35 __root const CFG_HDR cfghdr10={CFG_RECT,"BG rect",0,0};

        RSEG CONFIG_C:CONST:SORT:ROOT(2)
//   36 __root const RECT cfg_rect={200,240,1,22};
cfg_rect:
        DATA
        DC16 200, 240, 1, 22

        END
// 
// 584 bytes in segment CONFIG_C
// 
// 584 bytes of CONST memory
//
//Errors: none
//Warnings: none
