//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:53:12 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\EventControl\ /
//                       gui.cpp                                             /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\EventControl\ /
//                       gui.cpp -D NDEBUG -D OLDFUNCTIONS -lC               /
//                       Z:\home\perk11\www\perk11.info\svn\SE\EventControl\ /
//                       Release\List\ -lA Z:\home\perk11\www\perk11.info\sv /
//                       n\SE\EventControl\Release\List\ -o                  /
//                       Z:\home\perk11\www\perk11.info\svn\SE\EventControl\ /
//                       Release\Obj\ -s9 --cpu_mode arm --endian little     /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --enable_multibytes --fpu None --eec++              /
//                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl /
//                       8n.h -I Z:\home\perk11\IAR2\arm\INC\                /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\EventControl\ /
//                       Release\List\gui.s79                                /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME gui

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBWEAK `?*?DATA_ID`
        PUBLIC ??CreateGuiList
        FUNCTION ??CreateGuiList,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??CreateGuiList??rT
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable2 EQU 0
??DataTable3 EQU 0
??DataTable4 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
        PUBLIC ??OnBackGui
        FUNCTION ??OnBackGui,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??OnBackGui??rT
        PUBLIC ??OnSelect1Gui
        FUNCTION ??OnSelect1Gui,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??OnSelect1Gui??rT
        PUBLIC ??OnSelect2Gui
        FUNCTION ??OnSelect2Gui,0603H
        LOCFRAME CSTACK, 2148, STACK
        MULTWEAK ??OnSelect2Gui??rT
        PUBLIC ??create_ed
        FUNCTION ??create_ed,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??create_ed??rT
        PUBLIC ??onLBMessage
        FUNCTION ??onLBMessage,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??onLBMessage??rT
        PUBWEAK ?init?tab?DATA_I
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC g
        PUBLIC items
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        

??CreateGuiList??rT SYMBOL "??rT", ??CreateGuiList

??OnBackGui??rT     SYMBOL "??rT", ??OnBackGui

??OnSelect1Gui??rT  SYMBOL "??rT", ??OnSelect1Gui

??OnSelect2Gui??rT  SYMBOL "??rT", ??OnSelect2Gui

??create_ed??rT     SYMBOL "??rT", ??create_ed

??onLBMessage??rT   SYMBOL "??rT", ??onLBMessage

        EXTERN ??action_processor
        FUNCTION ??action_processor,0602H
        EXTERN ACTION_BACK
        EXTERN ACTION_SELECT1
        EXTERN events
        EXTERN lng

// Z:\home\perk11\www\perk11.info\svn\SE\EventControl\gui.cpp
//    1 /*
//    2 *===========================================================================
//    3 *                       Модуль интерфейса проверки событий
//    4 *===========================================================================
//    5 */
//    6 #include "..\deleaker\mem2.h"
//    7 #include "..\include\Lib_Clara.h"
//    8 #include "..\include\Dir.h"
//    9 #include "header\structs.h"
//   10 #include "header\lng.h"
//   11 
//   12 extern LIST *events;
//   13 
//   14 #pragma swi_number=0x109
//   15 __swi __arm  void MMIPROC (void(*PROC)(EVENT *), EVENT *);
//   16 void SUBPROC_(void(*PROC)(EVENT *),EVENT *p1, void * p2);
//   17 
//   18 void action_processor(EVENT *ev);
//   19 

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
//   20 GUI_LIST *g=0;
g:
        DS8 4
//   21 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//   22 wchar_t *items[] = {
items:
        DS8 168
        REQUIRE `?<Initializer for items>`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??onLBMessage??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??onLBMessage
//   23   L"Сообщение",
//   24   L"Запуск эльфа",
//   25   L"Ярлык",
//   26   L"Java",
//   27   L"Выключение телефона",
//   28   L"Яркость", 
//   29   L"Фонарик: уст. яркость",
//   30   L"Профиль",
//   31   L"Рестарт",
//   32   L"Музыка: воспр.", 
//   33   L"Музыка: воспр. с громкостью",
//   34   L"Обои: установить",
//   35   L"Вибра",
//   36   L"ГЭ: уст. заметку",
//   37   L"ГЭ: уст. оператора",
//   38   L"Закрыть книгу",
//   39   L"Вкл. музыку/радио",
//   40   L"Поменять расписание",
//   41   L"Обновить",
//   42   L"Звук: выкл",
//   43   L"Звук: вкл", 
//   44   L"ИК: вкл",
//   45   L"ИК: выкл", 
//   46   L"ИК: мигнуть",
//   47   L"Фонарик: мигнуть",
//   48   L"(W580): отключить диоды",
//   49   L"(W580): включить диоды", 
//   50   L"Оранж.диод: мигнуть", 
//   51   L"Оранж.диод: вкл. ",
//   52   L"Оранж.диод: выкл",
//   53   L"Важное событие", 
//   54   L"Звонок: уст.громкость",
//   55   L"Звонок: вибрация",
//   56   L"Звонок: уст.файл", 
//   57   L"Звонок: способ приёма",
//   58   L"Звонок: вкл.нарастание",
//   59   L"Звонок: уст. приём вызовов",
//   60   L"Голосовой вызов",
//   61   L"Сменить тему",
//   62   0,0,0
//   63 };
//   64 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??onLBMessage
        ARM
//   65 int onLBMessage(GUI_MESSAGE * msg)
//   66 {
??onLBMessage:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
//   67   switch( GUIonMessage_GetMsg(msg) )
        SWI      +884
        CMP      R0,#+1
        BNE      ??onLBMessage_1
//   68   {
//   69   case 1:
//   70     int item=GUIonMessage_GetCreatedItemIndex(msg);
        MOV      R0,R4
        SWI      +311
//   71     EVENT* evt=(EVENT *)List_Get(events,item);
        MOV      R1,R0
        LDR      R0,??DataTable8  ;; events
        LDR      R0,[R0, #+0]
        SWI      +429
//   72     GUIonMessage_SetMenuItemText(msg,TextID_Create(items[evt->type],ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R0,[R0, #+80]
        LDR      R3,??onLBMessage_2  ;; items
        MOV      R2,#+255
        LDR      R0,[R3, +R0, LSL #+2]
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +312
//   73     break;
//   74   }
//   75   return(1);
??onLBMessage_1:
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        DATA
??onLBMessage_2:
        DC32     items
        CFI EndBlock cfiBlock1
//   76 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnSelect1Gui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??OnSelect1Gui
//   77 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??OnSelect1Gui
        ARM
//   78 void OnSelect1Gui(BOOK *bk, GUI* )
//   79 {
//   80   int item=ListMenu_GetSelectedItem(g);
??OnSelect1Gui:
        LDR      R0,??DataTable7  ;; g
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R0,[R0, #+0]
        SWI      +318
//   81   EVENT *ev=(EVENT*)List_Get(events,item);
        MOV      R1,R0
        LDR      R0,??DataTable8  ;; events
        LDR      R0,[R0, #+0]
        SWI      +429
//   82   MMIPROC(action_processor,ev);
        MOV      R1,R0
        LDR      R0,??OnSelect1Gui_1  ;; ??action_processor
        SWI      +265
//   83 };
        POP      {PC}             ;; return
        DATA
??OnSelect1Gui_1:
        DC32     ??action_processor
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnSelect2Gui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??OnSelect2Gui
//   84 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??OnSelect2Gui
        ARM
//   85 void OnSelect2Gui(BOOK *bk, GUI* )
//   86 {
//   87   int item=ListMenu_GetSelectedItem(g);
??OnSelect2Gui:
        LDR      R0,??DataTable7  ;; g
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+2048
        CFI CFA R13+2056
        LDR      R0,[R0, #+0]
//   88   wchar_t text[1024];
//   89   EVENT *ev=(EVENT*)List_Get(events,item);
//   90   snwprintf(text, 1023, L"%d-%d-%d-%d-%d-%d-%d\n\n%d-%d-%d-%d-%d-%d-%d\n\n%d-%d-%d-%d-%d-%d-%d\n%d:%d:%d", ev->days[0], ev->days[1], ev->days[2], ev->days[3], ev->days[4], ev->days[5], ev->days[6], ev->remdays[0], ev->remdays[1], ev->remdays[2], ev->remdays[3], ev->remdays[4], ev->remdays[5], ev->remdays[6], ev->remdays2[0], ev->remdays2[1], ev->remdays2[2], ev->remdays2[3], ev->remdays2[4], ev->remdays2[5], ev->remdays2[6], ev->tm_start, ev->ask_before, ev->ask_after);
//   91   MessageBox(EMPTY_TEXTID,TextID_Create(text,ENC_UCS2,TEXTID_ANY_LEN),NOIMAGE,1,0,0);
        MOV      R4,#+255
        SWI      +318
        MOV      R1,R0
        LDR      R0,??DataTable8  ;; events
        ORR      R4,R4,#0xFF00
        LDR      R0,[R0, #+0]
        SWI      +429
        LDR      R1,[R0, #+16]
        LDR      R2,??OnSelect2Gui_1  ;; `?<Constant L"\\x25\\x64\\x2d\\x25\\x64\\x2d\\x25\\x64\\`
        PUSH     {R1}
        CFI CFA R13+2060
        LDR      R1,[R0, #+12]
        PUSH     {R1}
        CFI CFA R13+2064
        LDR      R1,[R0, #+4]
        PUSH     {R1}
        CFI CFA R13+2068
        LDR      R1,[R0, #+72]
        PUSH     {R1}
        CFI CFA R13+2072
        LDR      R1,[R0, #+68]
        PUSH     {R1}
        CFI CFA R13+2076
        LDR      R1,[R0, #+64]
        PUSH     {R1}
        CFI CFA R13+2080
        LDR      R1,[R0, #+60]
        PUSH     {R1}
        CFI CFA R13+2084
        LDR      R1,[R0, #+56]
        PUSH     {R1}
        CFI CFA R13+2088
        LDR      R1,[R0, #+52]
        PUSH     {R1}
        CFI CFA R13+2092
        LDR      R1,[R0, #+48]
        PUSH     {R1}
        CFI CFA R13+2096
        LDR      R1,[R0, #+44]
        PUSH     {R1}
        CFI CFA R13+2100
        LDR      R1,[R0, #+40]
        PUSH     {R1}
        CFI CFA R13+2104
        LDR      R1,[R0, #+36]
        PUSH     {R1}
        CFI CFA R13+2108
        LDR      R1,[R0, #+32]
        PUSH     {R1}
        CFI CFA R13+2112
        LDR      R1,[R0, #+28]
        PUSH     {R1}
        CFI CFA R13+2116
        LDR      R1,[R0, #+24]
        PUSH     {R1}
        CFI CFA R13+2120
        LDR      R1,[R0, #+20]
        PUSH     {R1}
        CFI CFA R13+2124
        LDR      R1,[R0, #+136]
        PUSH     {R1}
        CFI CFA R13+2128
        LDR      R1,[R0, #+132]
        PUSH     {R1}
        CFI CFA R13+2132
        LDR      R1,[R0, #+128]
        PUSH     {R1}
        CFI CFA R13+2136
        LDR      R1,[R0, #+124]
        PUSH     {R1}
        CFI CFA R13+2140
        LDR      R1,[R0, #+120]
        PUSH     {R1}
        CFI CFA R13+2144
        LDR      R1,[R0, #+116]
        PUSH     {R1}
        CFI CFA R13+2148
        LDR      R3,[R0, #+112]
        ADD      R0,SP,#+92
        MOV      R1,#+255
        ORR      R1,R1,#0x300
        SWI      +277
        ADD      SP,SP,#+92
        CFI CFA R13+2056
        MOV      R2,R4
        MOV      R1,#+0
        MOV      R0,SP
        SWI      +349
        MOV      R1,R0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+2060
        PUSH     {R0}
        CFI CFA R13+2064
        MOV      R3,#+1
        MOV      R2,R4
        MVN      R0,#-1879048192
        SWI      +599
//   92 };
        ADD      SP,SP,#+8
        CFI CFA R13+2056
        ADD      SP,SP,#+2048
        CFI CFA R13+8
        POP      {R4,PC}          ;; return
        DATA
??OnSelect2Gui_1:
        DC32     `?<Constant L"\\x25\\x64\\x2d\\x25\\x64\\x2d\\x25\\x64\\`
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnBackGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??OnBackGui

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??OnBackGui
        ARM
//   93 void OnBackGui(BOOK * bk, GUI* )
//   94 {
??OnBackGui:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
//   95   GUIObject_Destroy(g);
        LDR      R5,??DataTable7  ;; g
        MOV      R4,R0
        LDR      R0,[R5, #+0]
        SWI      +462
//   96   g=0;
        MOV      R0,#+0
        STR      R0,[R5, #+0]
//   97   MyBOOK *mbk=(MyBOOK*)bk;
//   98   mbk->g_test=0;
        STR      R0,[R4, #+48]
//   99   BookObj_Hide(bk, 0);
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +369
//  100 };
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateGuiList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??CreateGuiList
//  101 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??CreateGuiList
        ARM
//  102 GUI_LIST * CreateGuiList(BOOK * book)
//  103 {
??CreateGuiList:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
//  104   GUI_LIST * lo=0;
//  105   if (lo=CreateListMenu(book,0))
        MOV      R1,#+0
        SWI      +448
        MOVS     R4,R0
        BEQ      ??CreateGuiList_1
//  106   {
//  107     ListMenu_SetItemCount(lo,events->FirstFree);
        LDR      R0,??DataTable8  ;; events
//  108     ListMenu_SetCursorToItem(lo,0);
//  109     ListMenu_SetOnMessage(lo,onLBMessage);
//  110     ListMenu_SetItemStyle(lo,3);
//  111     GUIObject_SetTitleText(lo,TextID_Create(lng[LNG_EVENTS_TEST],ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R5,??CreateGuiList_2  ;; lng
        LDR      R0,[R0, #+0]
        MOV      R6,#+255
        LDRH     R1,[R0, #+2]
        MOV      R0,R4
        ORR      R6,R6,#0xFF00
        SWI      +449
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +309
        LDR      R1,??CreateGuiList_2+0x4  ;; ??onLBMessage
        MOV      R0,R4
        SWI      +372
        MOV      R1,#+3
        MOV      R0,R4
        SWI      +319
        LDR      R0,[R5, #+4]
        MOV      R2,R6
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +307
//  112     GUIObject_SoftKeys_SetAction(lo,ACTION_BACK, OnBackGui);
        LDR      R0,??CreateGuiList_2+0x8  ;; ACTION_BACK
        LDR      R2,??CreateGuiList_2+0xC  ;; ??OnBackGui
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  113     GUIObject_SoftKeys_SetAction(lo,ACTION_SELECT1,OnSelect1Gui);
        LDR      R0,??CreateGuiList_2+0x10  ;; ACTION_SELECT1
        LDR      R2,??CreateGuiList_2+0x14  ;; ??OnSelect1Gui
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  114     GUIObject_SoftKeys_SetAction(lo,0,OnSelect2Gui);
        LDR      R2,??CreateGuiList_2+0x18  ;; ??OnSelect2Gui
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +331
//  115     GUIObject_SoftKeys_SetText(lo,0,TextID_Create(lng[LNG_INFO],ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R0,[R5, #+8]
        MOV      R2,R6
        MOV      R1,#+0
        SWI      +349
        MOV      R2,R0
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +332
//  116   }
//  117   return(lo);
??CreateGuiList_1:
        MOV      R0,R4
        POP      {R4-R6,PC}       ;; return
        DATA
??CreateGuiList_2:
        DC32     lng
        DC32     ??onLBMessage
        DC32     ACTION_BACK
        DC32     ??OnBackGui
        DC32     ACTION_SELECT1
        DC32     ??OnSelect1Gui
        DC32     ??OnSelect2Gui
        CFI EndBlock cfiBlock9
//  118 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??create_ed??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??create_ed
//  119 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??create_ed
        ARM
//  120 GUI_LIST *create_ed(BOOK *book)
//  121 {
??create_ed:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
//  122   if (events)
        LDR      R5,??DataTable7  ;; g
        MOV      R4,R0
        LDR      R0,??DataTable8  ;; events
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??create_ed_1
//  123   {
//  124     MyBOOK *mbk=(MyBOOK*)book;
//  125     g=CreateGuiList(book);
        MOV      R0,R4
        BL       ??CreateGuiList
        STR      R0,[R5, #+0]
//  126     mbk->g_test=g;
        STR      R0,[R4, #+48]
//  127     GUIObject_Show(g);
        LDR      R0,[R5, #+0]
        SWI      +308
//  128     BookObj_Show(book, 0);
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +370
//  129     BookObj_SetFocus(book, 0);
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +306
//  130   }
//  131   return(g);
??create_ed_1:
        LDR      R0,[R5, #+0]
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock11
//  132 };

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable7:
        DC32     g

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable8:
        DC32     events

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for items>`:
        DATA
        DC32 `?<Constant L"\\x421\\x43e\\x43e\\x431\\x449\\x435\\x4`
        DC32 `?<Constant L"\\x417\\x430\\x43f\\x443\\x441\\x43a\\x2`
        DC32 `?<Constant L"\\x42f\\x440\\x43b\\x44b\\x43a">`
        DC32 `?<Constant L"\\x4a\\x61\\x76\\x61">`
        DC32 `?<Constant L"\\x412\\x44b\\x43a\\x43b\\x44e\\x447\\x4`
        DC32 `?<Constant L"\\x42f\\x440\\x43a\\x43e\\x441\\x442\\x4`
        DC32 `?<Constant L"\\x424\\x43e\\x43d\\x430\\x440\\x438\\x4`
        DC32 `?<Constant L"\\x41f\\x440\\x43e\\x444\\x438\\x43b\\x4`
        DC32 `?<Constant L"\\x420\\x435\\x441\\x442\\x430\\x440\\x4`
        DC32 `?<Constant L"\\x41c\\x443\\x437\\x44b\\x43a\\x430\\x3`
        DC32 `?<Constant L"\\x41c\\x443\\x437\\x44b\\x43a\\x430\\x3_1`
        DC32 `?<Constant L"\\x41e\\x431\\x43e\\x438\\x3a\\x20\\x443`
        DC32 `?<Constant L"\\x412\\x438\\x431\\x440\\x430">`
        DC32 `?<Constant L"\\x413\\x42d\\x3a\\x20\\x443\\x441\\x442`
        DC32 `?<Constant L"\\x413\\x42d\\x3a\\x20\\x443\\x441\\x442_1`
        DC32 `?<Constant L"\\x417\\x430\\x43a\\x440\\x44b\\x442\\x4`
        DC32 `?<Constant L"\\x412\\x43a\\x43b\\x2e\\x20\\x43c\\x443`
        DC32 `?<Constant L"\\x41f\\x43e\\x43c\\x435\\x43d\\x44f\\x4`
        DC32 `?<Constant L"\\x41e\\x431\\x43d\\x43e\\x432\\x438\\x4`
        DC32 `?<Constant L"\\x417\\x432\\x443\\x43a\\x3a\\x20\\x432`
        DC32 `?<Constant L"\\x417\\x432\\x443\\x43a\\x3a\\x20\\x432_1`
        DC32 `?<Constant L"\\x418\\x41a\\x3a\\x20\\x432\\x43a\\x43b`
        DC32 `?<Constant L"\\x418\\x41a\\x3a\\x20\\x432\\x44b\\x43a`
        DC32 `?<Constant L"\\x418\\x41a\\x3a\\x20\\x43c\\x438\\x433`
        DC32 `?<Constant L"\\x424\\x43e\\x43d\\x430\\x440\\x438\\x4_1`
        DC32 `?<Constant L"\\x28\\x57\\x35\\x38\\x30\\x29\\x3a\\x20\\`
        DC32 `?<Constant L"\\x28\\x57\\x35\\x38\\x30\\x29\\x3a\\x20\\_1`
        DC32 `?<Constant L"\\x41e\\x440\\x430\\x43d\\x436\\x2e\\x43`
        DC32 `?<Constant L"\\x41e\\x440\\x430\\x43d\\x436\\x2e\\x43_1`
        DC32 `?<Constant L"\\x41e\\x440\\x430\\x43d\\x436\\x2e\\x43_2`
        DC32 `?<Constant L"\\x412\\x430\\x436\\x43d\\x43e\\x435\\x2`
        DC32 `?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3`
        DC32 `?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_1`
        DC32 `?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_2`
        DC32 `?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_3`
        DC32 `?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_4`
        DC32 `?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_5`
        DC32 `?<Constant L"\\x413\\x43e\\x43b\\x43e\\x441\\x43e\\x4`
        DC32 `?<Constant L"\\x421\\x43c\\x435\\x43d\\x438\\x442\\x4`, 0H, 0H
        DC32 0H

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4a\\x61\\x76\\x61">`:
        DATA
        DC8 4AH, 0, 61H, 0, 76H, 0, 61H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x421\\x43c\\x435\\x43d\\x438\\x442\\x4`:
        DATA
        DC8 21H, 4, 3CH, 4, 35H, 4, 3DH, 4
        DC8 38H, 4, 42H, 4, 4CH, 4, 20H, 0
        DC8 42H, 4, 35H, 4, 3CH, 4, 43H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x421\\x43e\\x43e\\x431\\x449\\x435\\x4`:
        DATA
        DC8 21H, 4, 3EH, 4, 3EH, 4, 31H, 4
        DC8 49H, 4, 35H, 4, 3DH, 4, 38H, 4
        DC8 35H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x430\\x43f\\x443\\x441\\x43a\\x2`:
        DATA
        DC8 17H, 4, 30H, 4, 3FH, 4, 43H, 4
        DC8 41H, 4, 3AH, 4, 20H, 0, 4DH, 4
        DC8 3BH, 4, 4CH, 4, 44H, 4, 30H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x42f\\x440\\x43b\\x44b\\x43a">`:
        DATA
        DC8 2FH, 4, 40H, 4, 3BH, 4, 4BH, 4
        DC8 3AH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x420\\x435\\x441\\x442\\x430\\x440\\x4`:
        DATA
        DC8 20H, 4, 35H, 4, 41H, 4, 42H, 4
        DC8 30H, 4, 40H, 4, 42H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x44b\\x43a\\x43b\\x44e\\x447\\x4`:
        DATA
        DC8 12H, 4, 4BH, 4, 3AH, 4, 3BH, 4
        DC8 4EH, 4, 47H, 4, 35H, 4, 3DH, 4
        DC8 38H, 4, 35H, 4, 20H, 0, 42H, 4
        DC8 35H, 4, 3BH, 4, 35H, 4, 44H, 4
        DC8 3EH, 4, 3DH, 4, 30H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x42f\\x440\\x43a\\x43e\\x441\\x442\\x4`:
        DATA
        DC8 2FH, 4, 40H, 4, 3AH, 4, 3EH, 4
        DC8 41H, 4, 42H, 4, 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x424\\x43e\\x43d\\x430\\x440\\x438\\x4`:
        DATA
        DC8 24H, 4, 3EH, 4, 3DH, 4, 30H, 4
        DC8 40H, 4, 38H, 4, 3AH, 4, 3AH, 0
        DC8 20H, 0, 43H, 4, 41H, 4, 42H, 4
        DC8 2EH, 0, 20H, 0, 4FH, 4, 40H, 4
        DC8 3AH, 4, 3EH, 4, 41H, 4, 42H, 4
        DC8 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x440\\x43e\\x444\\x438\\x43b\\x4`:
        DATA
        DC8 1FH, 4, 40H, 4, 3EH, 4, 44H, 4
        DC8 38H, 4, 3BH, 4, 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x25\\x64\\x2d\\x25\\x64\\x2d\\x25\\x64\\`:
        DATA
        DC8 25H, 0, 64H, 0, 2DH, 0, 25H, 0
        DC8 64H, 0, 2DH, 0, 25H, 0, 64H, 0
        DC8 2DH, 0, 25H, 0, 64H, 0, 2DH, 0
        DC8 25H, 0, 64H, 0, 2DH, 0, 25H, 0
        DC8 64H, 0, 2DH, 0, 25H, 0, 64H, 0
        DC8 0AH, 0, 0AH, 0, 25H, 0, 64H, 0
        DC8 2DH, 0, 25H, 0, 64H, 0, 2DH, 0
        DC8 25H, 0, 64H, 0, 2DH, 0, 25H, 0
        DC8 64H, 0, 2DH, 0, 25H, 0, 64H, 0
        DC8 2DH, 0, 25H, 0, 64H, 0, 2DH, 0
        DC8 25H, 0, 64H, 0, 0AH, 0, 0AH, 0
        DC8 25H, 0, 64H, 0, 2DH, 0, 25H, 0
        DC8 64H, 0, 2DH, 0, 25H, 0, 64H, 0
        DC8 2DH, 0, 25H, 0, 64H, 0, 2DH, 0
        DC8 25H, 0, 64H, 0, 2DH, 0, 25H, 0
        DC8 64H, 0, 2DH, 0, 25H, 0, 64H, 0
        DC8 0AH, 0, 25H, 0, 64H, 0, 3AH, 0
        DC8 25H, 0, 64H, 0, 3AH, 0, 25H, 0
        DC8 64H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41c\\x443\\x437\\x44b\\x43a\\x430\\x3`:
        DATA
        DC8 1CH, 4, 43H, 4, 37H, 4, 4BH, 4
        DC8 3AH, 4, 30H, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 3EH, 4, 41H, 4, 3FH, 4
        DC8 40H, 4, 2EH, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41c\\x443\\x437\\x44b\\x43a\\x430\\x3_1`:
        DATA
        DC8 1CH, 4, 43H, 4, 37H, 4, 4BH, 4
        DC8 3AH, 4, 30H, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 3EH, 4, 41H, 4, 3FH, 4
        DC8 40H, 4, 2EH, 0, 20H, 0, 41H, 4
        DC8 20H, 0, 33H, 4, 40H, 4, 3EH, 4
        DC8 3CH, 4, 3AH, 4, 3EH, 4, 41H, 4
        DC8 42H, 4, 4CH, 4, 4EH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x431\\x43e\\x438\\x3a\\x20\\x443`:
        DATA
        DC8 1EH, 4, 31H, 4, 3EH, 4, 38H, 4
        DC8 3AH, 0, 20H, 0, 43H, 4, 41H, 4
        DC8 42H, 4, 30H, 4, 3DH, 4, 3EH, 4
        DC8 32H, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x438\\x431\\x440\\x430">`:
        DATA
        DC8 12H, 4, 38H, 4, 31H, 4, 40H, 4
        DC8 30H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x413\\x42d\\x3a\\x20\\x443\\x441\\x442`:
        DATA
        DC8 13H, 4, 2DH, 4, 3AH, 0, 20H, 0
        DC8 43H, 4, 41H, 4, 42H, 4, 2EH, 0
        DC8 20H, 0, 37H, 4, 30H, 4, 3CH, 4
        DC8 35H, 4, 42H, 4, 3AH, 4, 43H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x413\\x42d\\x3a\\x20\\x443\\x441\\x442_1`:
        DATA
        DC8 13H, 4, 2DH, 4, 3AH, 0, 20H, 0
        DC8 43H, 4, 41H, 4, 42H, 4, 2EH, 0
        DC8 20H, 0, 3EH, 4, 3FH, 4, 35H, 4
        DC8 40H, 4, 30H, 4, 42H, 4, 3EH, 4
        DC8 40H, 4, 30H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x430\\x43a\\x440\\x44b\\x442\\x4`:
        DATA
        DC8 17H, 4, 30H, 4, 3AH, 4, 40H, 4
        DC8 4BH, 4, 42H, 4, 4CH, 4, 20H, 0
        DC8 3AH, 4, 3DH, 4, 38H, 4, 33H, 4
        DC8 43H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x43a\\x43b\\x2e\\x20\\x43c\\x443`:
        DATA
        DC8 12H, 4, 3AH, 4, 3BH, 4, 2EH, 0
        DC8 20H, 0, 3CH, 4, 43H, 4, 37H, 4
        DC8 4BH, 4, 3AH, 4, 43H, 4, 2FH, 0
        DC8 40H, 4, 30H, 4, 34H, 4, 38H, 4
        DC8 3EH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x43e\\x43c\\x435\\x43d\\x44f\\x4`:
        DATA
        DC8 1FH, 4, 3EH, 4, 3CH, 4, 35H, 4
        DC8 3DH, 4, 4FH, 4, 42H, 4, 4CH, 4
        DC8 20H, 0, 40H, 4, 30H, 4, 41H, 4
        DC8 3FH, 4, 38H, 4, 41H, 4, 30H, 4
        DC8 3DH, 4, 38H, 4, 35H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x431\\x43d\\x43e\\x432\\x438\\x4`:
        DATA
        DC8 1EH, 4, 31H, 4, 3DH, 4, 3EH, 4
        DC8 32H, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x443\\x43a\\x3a\\x20\\x432`:
        DATA
        DC8 17H, 4, 32H, 4, 43H, 4, 3AH, 4
        DC8 3AH, 0, 20H, 0, 32H, 4, 4BH, 4
        DC8 3AH, 4, 3BH, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x443\\x43a\\x3a\\x20\\x432_1`:
        DATA
        DC8 17H, 4, 32H, 4, 43H, 4, 3AH, 4
        DC8 3AH, 0, 20H, 0, 32H, 4, 3AH, 4
        DC8 3BH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x418\\x41a\\x3a\\x20\\x432\\x43a\\x43b`:
        DATA
        DC8 18H, 4, 1AH, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 3AH, 4, 3BH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x418\\x41a\\x3a\\x20\\x432\\x44b\\x43a`:
        DATA
        DC8 18H, 4, 1AH, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 4BH, 4, 3AH, 4, 3BH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x418\\x41a\\x3a\\x20\\x43c\\x438\\x433`:
        DATA
        DC8 18H, 4, 1AH, 4, 3AH, 0, 20H, 0
        DC8 3CH, 4, 38H, 4, 33H, 4, 3DH, 4
        DC8 43H, 4, 42H, 4, 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x424\\x43e\\x43d\\x430\\x440\\x438\\x4_1`:
        DATA
        DC8 24H, 4, 3EH, 4, 3DH, 4, 30H, 4
        DC8 40H, 4, 38H, 4, 3AH, 4, 3AH, 0
        DC8 20H, 0, 3CH, 4, 38H, 4, 33H, 4
        DC8 3DH, 4, 43H, 4, 42H, 4, 4CH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x28\\x57\\x35\\x38\\x30\\x29\\x3a\\x20\\`:
        DATA
        DC8 28H, 0, 57H, 0, 35H, 0, 38H, 0
        DC8 30H, 0, 29H, 0, 3AH, 0, 20H, 0
        DC8 3EH, 4, 42H, 4, 3AH, 4, 3BH, 4
        DC8 4EH, 4, 47H, 4, 38H, 4, 42H, 4
        DC8 4CH, 4, 20H, 0, 34H, 4, 38H, 4
        DC8 3EH, 4, 34H, 4, 4BH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x28\\x57\\x35\\x38\\x30\\x29\\x3a\\x20\\_1`:
        DATA
        DC8 28H, 0, 57H, 0, 35H, 0, 38H, 0
        DC8 30H, 0, 29H, 0, 3AH, 0, 20H, 0
        DC8 32H, 4, 3AH, 4, 3BH, 4, 4EH, 4
        DC8 47H, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 20H, 0, 34H, 4, 38H, 4, 3EH, 4
        DC8 34H, 4, 4BH, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x440\\x430\\x43d\\x436\\x2e\\x43`:
        DATA
        DC8 1EH, 4, 40H, 4, 30H, 4, 3DH, 4
        DC8 36H, 4, 2EH, 0, 34H, 4, 38H, 4
        DC8 3EH, 4, 34H, 4, 3AH, 0, 20H, 0
        DC8 3CH, 4, 38H, 4, 33H, 4, 3DH, 4
        DC8 43H, 4, 42H, 4, 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x440\\x430\\x43d\\x436\\x2e\\x43_1`:
        DATA
        DC8 1EH, 4, 40H, 4, 30H, 4, 3DH, 4
        DC8 36H, 4, 2EH, 0, 34H, 4, 38H, 4
        DC8 3EH, 4, 34H, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 3AH, 4, 3BH, 4, 2EH, 0
        DC8 20H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x440\\x430\\x43d\\x436\\x2e\\x43_2`:
        DATA
        DC8 1EH, 4, 40H, 4, 30H, 4, 3DH, 4
        DC8 36H, 4, 2EH, 0, 34H, 4, 38H, 4
        DC8 3EH, 4, 34H, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 4BH, 4, 3AH, 4, 3BH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x430\\x436\\x43d\\x43e\\x435\\x2`:
        DATA
        DC8 12H, 4, 30H, 4, 36H, 4, 3DH, 4
        DC8 3EH, 4, 35H, 4, 20H, 0, 41H, 4
        DC8 3EH, 4, 31H, 4, 4BH, 4, 42H, 4
        DC8 38H, 4, 35H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3`:
        DATA
        DC8 17H, 4, 32H, 4, 3EH, 4, 3DH, 4
        DC8 3EH, 4, 3AH, 4, 3AH, 0, 20H, 0
        DC8 43H, 4, 41H, 4, 42H, 4, 2EH, 0
        DC8 33H, 4, 40H, 4, 3EH, 4, 3CH, 4
        DC8 3AH, 4, 3EH, 4, 41H, 4, 42H, 4
        DC8 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_1`:
        DATA
        DC8 17H, 4, 32H, 4, 3EH, 4, 3DH, 4
        DC8 3EH, 4, 3AH, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 38H, 4, 31H, 4, 40H, 4
        DC8 30H, 4, 46H, 4, 38H, 4, 4FH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_2`:
        DATA
        DC8 17H, 4, 32H, 4, 3EH, 4, 3DH, 4
        DC8 3EH, 4, 3AH, 4, 3AH, 0, 20H, 0
        DC8 43H, 4, 41H, 4, 42H, 4, 2EH, 0
        DC8 44H, 4, 30H, 4, 39H, 4, 3BH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_3`:
        DATA
        DC8 17H, 4, 32H, 4, 3EH, 4, 3DH, 4
        DC8 3EH, 4, 3AH, 4, 3AH, 0, 20H, 0
        DC8 41H, 4, 3FH, 4, 3EH, 4, 41H, 4
        DC8 3EH, 4, 31H, 4, 20H, 0, 3FH, 4
        DC8 40H, 4, 38H, 4, 51H, 4, 3CH, 4
        DC8 30H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_4`:
        DATA
        DC8 17H, 4, 32H, 4, 3EH, 4, 3DH, 4
        DC8 3EH, 4, 3AH, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 3AH, 4, 3BH, 4, 2EH, 0
        DC8 3DH, 4, 30H, 4, 40H, 4, 30H, 4
        DC8 41H, 4, 42H, 4, 30H, 4, 3DH, 4
        DC8 38H, 4, 35H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_5`:
        DATA
        DC8 17H, 4, 32H, 4, 3EH, 4, 3DH, 4
        DC8 3EH, 4, 3AH, 4, 3AH, 0, 20H, 0
        DC8 43H, 4, 41H, 4, 42H, 4, 2EH, 0
        DC8 20H, 0, 3FH, 4, 40H, 4, 38H, 4
        DC8 51H, 4, 3CH, 4, 20H, 0, 32H, 4
        DC8 4BH, 4, 37H, 4, 3EH, 4, 32H, 4
        DC8 3EH, 4, 32H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x413\\x43e\\x43b\\x43e\\x441\\x43e\\x4`:
        DATA
        DC8 13H, 4, 3EH, 4, 3BH, 4, 3EH, 4
        DC8 41H, 4, 3EH, 4, 32H, 4, 3EH, 4
        DC8 39H, 4, 20H, 0, 32H, 4, 4BH, 4
        DC8 37H, 4, 3EH, 4, 32H, 4, 0, 0

        END
// 
//   888 bytes in segment CODE
// 1 392 bytes in segment DATA_C
//   168 bytes in segment DATA_I
//   168 bytes in segment DATA_ID
//     4 bytes in segment DATA_Z
//    24 bytes in segment INITTAB
// 
//   864 bytes of CODE  memory (+ 48 bytes shared)
// 1 560 bytes of CONST memory
//   172 bytes of DATA  memory
//
//Errors: none
//Warnings: none
