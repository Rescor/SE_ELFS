##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  22:53:04 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\EventControl\c #
#                       alc.cpp                                              #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\EventControl\c #
#                       alc.cpp -D NDEBUG -D OLDFUNCTIONS -lC                #
#                       Z:\home\perk11\www\perk11.info\svn\SE\EventControl\R #
#                       elease\List\ -lA Z:\home\perk11\www\perk11.info\svn\ #
#                       SE\EventControl\Release\List\ -o                     #
#                       Z:\home\perk11\www\perk11.info\svn\SE\EventControl\R #
#                       elease\Obj\ -s9 --cpu_mode arm --endian little       #
#                       --cpu ARM926EJ-S --stack_align 4 --interwork -e      #
#                       --enable_multibytes --fpu None --eec++               #
#                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8 #
#                       n.h -I Z:\home\perk11\IAR2\arm\INC\                  #
#                       --inline_threshold=2                                 #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\EventControl\R #
#                       elease\List\calc.lst                                 #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\EventControl\R #
#                       elease\Obj\calc.r79                                  #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\EventControl\calc.cpp
      1          /*
      2          ****************************************************************************
      3          *                    Модуль вычисления даты
      4          ****************************************************************************
      5          */
      6          #include "..\deleaker\mem2.h"
      7          #include "..\include\Lib_Clara.h" 
      8          #include "..\include\Dir.h" 
      9          
     10          #define IS_LARGE_YEAR(a) ((a%4==0 && a%100!=0) || a%400==0)
     11          

   \                                 In segment DATA_I, align 4, align-sorted
     12          static int mon_list[] = {31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
   \                     mon_list:
   \   00000000                      DS8 48
   \   00000030                      REQUIRE `?<Initializer for mon_list>`
     13          
     14          /*
     15          *===========================================================================
     16          *                   Вычисление даты...
     17          *===========================================================================
     18          * 1) в р0 необходимо отправить текущую дату, в р1 - на какое кол-во дней 
     19          *    надо увеличить дату
     20          * 2) в day, mon, year запишется день, месяц и год
     21          */

   \                                 In segment CODE, align 4, keep-with-next
     22          void date_increase(DATE date, int num, char *day, char *mon, u16 *year)
     23          {
   \                     ??date_increase:
   \   00000000   F1012DE9           PUSH     {R0,R4-R8}
     24            int dy=0,mn=0,yr=0;
     25            dy=date.day;
     26            mn=date.mon;
     27            yr=date.year;
   \   00000004   B040DDE1           LDRH     R4,[SP, #+0]
     28            dy+=num;
   \   00000008   0350DDE5           LDRB     R5,[SP, #+3]
   \   0000000C   18009DE5           LDR      R0,[SP, #+24]
   \   00000010   02C0DDE5           LDRB     R12,[SP, #+2]
   \   00000014   051081E0           ADD      R1,R1,R5
     29            if(IS_LARGE_YEAR(yr) == 0)
   \   00000018   D4509FE5           LDR      R5,??date_increase_1  ;; mon_list
   \   0000001C   C460A0E1           ASR      R6,R4,#+1
   \   00000020   266F84E0           ADD      R6,R4,R6, LSR #+30
   \   00000024   4661A0E1           ASR      R6,R6,#+2
   \   00000028   066154E0           SUBS     R6,R4,R6, LSL #+2
   \   0000002C   0600001A           BNE      ??date_increase_2
   \   00000030   C0609FE5           LDR      R6,??date_increase_1+0x4  ;; 0x51eb851f
   \   00000034   9476C8E0           SMULL    R7,R8,R4,R6
   \   00000038   6470A0E3           MOV      R7,#+100
   \   0000003C   C882A0E1           ASR      R8,R8,#+5
   \   00000040   970808E0           MUL      R8,R7,R8
   \   00000044   086054E0           SUBS     R6,R4,R8
   \   00000048   0600001A           BNE      ??date_increase_3
   \                     ??date_increase_2:
   \   0000004C   A4609FE5           LDR      R6,??date_increase_1+0x4  ;; 0x51eb851f
   \   00000050   9476C8E0           SMULL    R7,R8,R4,R6
   \   00000054   647FA0E3           MOV      R7,#+400
   \   00000058   C883A0E1           ASR      R8,R8,#+7
   \   0000005C   970808E0           MUL      R8,R7,R8
   \   00000060   086054E0           SUBS     R6,R4,R8
   \   00000064   0100001A           BNE      ??date_increase_4
     30            {
     31              mon_list[1] = 28;
     32            }
     33            else
     34            {
     35              mon_list[1] = 29;
   \                     ??date_increase_3:
   \   00000068   1D60A0E3           MOV      R6,#+29
   \   0000006C   000000EA           B        ??date_increase_5
     36            }
   \                     ??date_increase_4:
   \   00000070   1C60A0E3           MOV      R6,#+28
   \                     ??date_increase_5:
   \   00000074   046085E5           STR      R6,[R5, #+4]
     37            if (dy>mon_list[mn-1])
   \   00000078   0C6185E0           ADD      R6,R5,R12, LSL #+2
   \   0000007C   046016E5           LDR      R6,[R6, #-4]
   \   00000080   010056E1           CMP      R6,R1
   \   00000084   0B0000AA           BGE      ??date_increase_6
     38            {
     39            P_large_again:
     40              dy=dy-mon_list[mn-1];
   \                     ??date_increase_7:
   \   00000088   0C6185E0           ADD      R6,R5,R12, LSL #+2
   \   0000008C   046016E5           LDR      R6,[R6, #-4]
     41              mn++;
   \   00000090   01C08CE2           ADD      R12,R12,#+1
   \   00000094   061041E0           SUB      R1,R1,R6
     42              if (mn>12)
   \   00000098   0D005CE3           CMP      R12,#+13
     43              {
     44                yr++;
     45                mn=1;
   \   0000009C   01C0A0A3           MOVGE    R12,#+1
     46              }
     47              if (dy>mon_list[mn-1])goto P_large_again;
   \   000000A0   0C6185E0           ADD      R6,R5,R12, LSL #+2
   \   000000A4   046016E5           LDR      R6,[R6, #-4]
   \   000000A8   014084A2           ADDGE    R4,R4,#+1
   \   000000AC   010056E1           CMP      R6,R1
   \   000000B0   0A0000AA           BGE      ??date_increase_8
   \   000000B4   F3FFFFEA           B        ??date_increase_7
     48              goto P_go_away;
     49            }
     50            else if (dy<=1)
   \                     ??date_increase_6:
   \   000000B8   020051E3           CMP      R1,#+2
   \   000000BC   070000AA           BGE      ??date_increase_8
     51            {
     52            P_neg_again:
     53              mn--;
   \                     ??date_increase_9:
   \   000000C0   01C05CE2           SUBS     R12,R12,#+1
     54              if (mn==0)
     55              {
     56                mn=12;
   \   000000C4   0CC0A003           MOVEQ    R12,#+12
     57                yr--;
     58              }
     59              dy=mon_list[mn-1]+dy;
   \   000000C8   0C6185E0           ADD      R6,R5,R12, LSL #+2
   \   000000CC   046016E5           LDR      R6,[R6, #-4]
   \   000000D0   01404402           SUBEQ    R4,R4,#+1
   \   000000D4   011086E0           ADD      R1,R6,R1
     60              if (dy<1)goto P_neg_again;
   \   000000D8   010051E3           CMP      R1,#+1
   \   000000DC   F7FFFFBA           BLT      ??date_increase_9
     61              goto P_go_away;
     62            }
     63          P_go_away:
     64            day[0]=dy;
   \                     ??date_increase_8:
   \   000000E0   0010C2E5           STRB     R1,[R2, #+0]
     65            mon[0]=mn;
   \   000000E4   00C0C3E5           STRB     R12,[R3, #+0]
     66            year[0]=yr;
   \   000000E8   B040C0E1           STRH     R4,[R0, #+0]
     67          };
   \   000000EC   F101BDE8           POP      {R0,R4-R8}
   \   000000F0   1EFF2FE1           BX       LR               ;; return
   \                     ??date_increase_1:
   \   000000F4   ........           DC32     mon_list
   \   000000F8   1F85EB51           DC32     0x51eb851f

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for mon_list>`:
   \   00000000   1F0000001D00       DC32 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31
   \              00001F000000
   \              1E0000001F00
   \              00001E000000
   \              1F0000001F00
   \              00001E000000
   \              1F0000001E00
   \              00001F000000

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     date_increase(DATE, int, char *, char *, u16 *)
                                       24


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     mon_list                         48
     date_increase(DATE, int, char *, char *, u16 *)
                                     252
     ?<Initializer for mon_list>      48
      Others                          16

 
 256 bytes in segment CODE
  48 bytes in segment DATA_I
  48 bytes in segment DATA_ID
  12 bytes in segment INITTAB
 
 252 bytes of CODE  memory (+ 16 bytes shared)
  48 bytes of CONST memory
  48 bytes of DATA  memory

Errors: none
Warnings: none
