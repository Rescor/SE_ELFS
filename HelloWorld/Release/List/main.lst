##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  22:59:59 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\HelloWorld\mai #
#                       n.c                                                  #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\HelloWorld\mai #
#                       n.c -D NDEBUG -D OLDFUNCTIONS -lC                    #
#                       Z:\home\perk11\www\perk11.info\svn\SE\HelloWorld\Rel #
#                       ease\List\ -lA Z:\home\perk11\www\perk11.info\svn\SE #
#                       \HelloWorld\Release\List\ -o                         #
#                       Z:\home\perk11\www\perk11.info\svn\SE\HelloWorld\Rel #
#                       ease\Obj\ -s9 --no_unroll --no_inline --cpu_mode     #
#                       arm --endian little --cpu ARM926EJ-S --stack_align   #
#                       4 --interwork -e --fpu None --eec++ --dlib_config    #
#                       Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.h -I         #
#                       Z:\home\perk11\IAR2\arm\INC\                         #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\HelloWorld\Rel #
#                       ease\List\main.lst                                   #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\HelloWorld\Rel #
#                       ease\Obj\main.r79                                    #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\HelloWorld\main.c
      1          #include "..\\include\Lib_Clara.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs LPARAM::LPARAM(int)
   \                     ??LPARAM:
   \   00000000   001080E5           STR      R1,[R0, #+0]
   \   00000004   1EFF2FE1           BX       LR               ;; return
      2          #include "..\\include\Dir.h"
      3          

   \                                 In segment DATA_Z, align 4, align-sorted
      4          u16 timer; // ID таймера
   \                     timer:
   \   00000000                      DS8 2
   \   00000002                      DS8 2
      5          int lamp=0; // текуща€ €ркость лампы
   \                     lamp:
   \   00000004                      DS8 4
      6          BOOK * HWBook;
      7          

   \                                 In segment CODE, align 4, keep-with-next
      8          int TerminateElf(void * ,BOOK* book)
      9          {
   \                     ??TerminateElf:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0100A0E1           MOV      R0,R1
     10            FreeBook(book);
   \   00000008   2F0100EF           SWI      +303
     11            return(1);
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   0080BDE8           POP      {PC}             ;; return
     12          }
     13          
     14          typedef struct
     15          {
     16            BOOK * book;
     17          }MSG;
     18          

   \                                 In segment CODE, align 4, keep-with-next
     19          int ShowAuthorInfo(void *mess ,BOOK* book)
     20          {
   \                     ??ShowAuthorInfo:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     21            MSG * msg = (MSG*)mess;
     22            MessageBox(EMPTY_TEXTID,STR("Hello Wordl!\n\nExample elf.."), NOIMAGE, 1, 5000,msg->book);
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   3C009FE5           LDR      R0,??ShowAuthorInfo_1  ;; `?<Constant L"\\x48\\x65\\x6c\\x6c\\x6f\\x20\\x57\\x6f\\`
   \   00000010   FF50A0E3           MOV      R5,#+255
   \   00000014   FF5C85E3           ORR      R5,R5,#0xFF00
   \   00000018   0520A0E1           MOV      R2,R5
   \   0000001C   5D0100EF           SWI      +349
   \   00000020   001094E5           LDR      R1,[R4, #+0]
   \   00000024   0130A0E3           MOV      R3,#+1
   \   00000028   02002DE9           PUSH     {R1}
   \   0000002C   0520A0E1           MOV      R2,R5
   \   00000030   8810A0E3           MOV      R1,#+136
   \   00000034   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000038   02002DE9           PUSH     {R1}
   \   0000003C   0010A0E1           MOV      R1,R0
   \   00000040   9004E0E3           MVN      R0,#-1879048192
   \   00000044   570200EF           SWI      +599
     23            return(1);
   \   00000048   0100A0E3           MOV      R0,#+1
   \   0000004C   3680BDE8           POP      {R1,R2,R4,R5,PC}  ;; return
   \                     ??ShowAuthorInfo_1:
   \   00000050   ........           DC32     `?<Constant L"\\x48\\x65\\x6c\\x6c\\x6f\\x20\\x57\\x6f\\`
     24          }
     25          

   \                                 In segment DYN_PAGE, align 4, align-sorted
     26          const PAGE_MSG HW_PageEvents[]@ "DYN_PAGE" ={
   \                     HW_PageEvents:
   \   00000000   E5030000....       DC32 997, ??TerminateElf, 998, ??ShowAuthorInfo, 0, 0H
   \              ....E6030000
   \              ........0000
   \              000000000000

   \                                 In segment DATA_I, align 4, align-sorted
   \                     HWBook:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for HWBook>`
     27            ELF_TERMINATE_EVENT , TerminateElf,
     28            ELF_SHOW_INFO_EVENT  , ShowAuthorInfo,
     29            0,0
     30          };
     31          
     32          PAGE_DESC base_page ={"HW_BasePage",0,HW_PageEvents};
   \                     base_page:
   \   00000004                      DS8 12
   \   00000010                      REQUIRE `?<Initializer for base_page>`
     33          
     34          

   \                                 In segment CODE, align 4, keep-with-next
     35          void elf_exit(void)
     36          
     37          {
   \                     ??elf_exit:
   \   00000000   00402DE9           PUSH     {LR}
     38            kill_data(&ELF_BEGIN, (void(*)(void*))mfree_adr());
   \   00000004   048100EF           SWI      +33028
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??elf_exit_1  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??elf_exit_1:
   \   00000018   ........           DC32     ELF_BEGIN
     39          }
     40          
     41          
     42          

   \                                 In segment CODE, align 4, keep-with-next
     43          void onTimer (u16 unk , LPARAM)
     44          {
   \                     ??onTimer:
   \   00000000   10402DE9           PUSH     {R4,LR}
     45            {
     46              // перезапускаем таймер
     47              Timer_ReSet(&timer,500,onTimer,0);
   \   00000004   ........           LDR      R4,??DataTable4  ;; timer
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   ........           _BLF     ??LPARAM,??LPARAM??rA
   \   00000018   00309DE5           LDR      R3,[SP, #+0]
   \   0000001C   ........           LDR      R2,??DataTable3  ;; ??onTimer
   \   00000020   7D1FA0E3           MOV      R1,#+500
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   280100EF           SWI      +296
     48              // переключаем лампу
     49              SetLampLevel(lamp^=0x10);
   \   0000002C   040094E5           LDR      R0,[R4, #+4]
   \   00000030   100020E2           EOR      R0,R0,#0x10
   \   00000034   040084E5           STR      R0,[R4, #+4]
   \   00000038   780100EF           SWI      +376
     50            }
     51          }
   \   0000003C   1180BDE8           POP      {R0,R4,PC}       ;; return
     52          

   \                                 In segment CODE, align 4, keep-with-next
     53          void onCloseHWBook(BOOK * book)
     54          {
   \                     ??onCloseHWBook:
   \   00000000   00402DE9           PUSH     {LR}
     55            if (book)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0080BD08           POPEQ    {PC}
     56            {
     57              Timer_Kill(&timer);
   \   0000000C   ........           LDR      R0,??DataTable4  ;; timer
   \   00000010   2A0100EF           SWI      +298
     58              StatusIndication_ShowNotes(EMPTY_TEXTID);
   \   00000014   9004E0E3           MVN      R0,#-1879048192
   \   00000018   430100EF           SWI      +323
     59              SetLampLevel(0);
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   780100EF           SWI      +376
     60              SUBPROC(elf_exit);
   \   00000024   04009FE5           LDR      R0,??onCloseHWBook_1  ;; ??elf_exit
   \   00000028   080100EF           SWI      +264
     61            }
     62          }
   \   0000002C   0080BDE8           POP      {PC}             ;; return
   \                     ??onCloseHWBook_1:
   \   00000030   ........           DC32     ??elf_exit
     63          

   \                                 In segment CODE, align 4, keep-with-next
     64          BOOK * CreateHWBook()
     65          {
   \                     ??CreateHWBook:
   \   00000000   10402DE9           PUSH     {R4,LR}
     66            HWBook= new BOOK;
   \   00000004   34409FE5           LDR      R4,??CreateHWBook_1  ;; HWBook
   \   00000008   1800A0E3           MOV      R0,#+24
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
     67            CreateBook(HWBook,onCloseHWBook,&base_page,"Example",-1,0);
   \   00000010   2C309FE5           LDR      R3,??CreateHWBook_1+0x4  ;; `?<Constant "Example">`
   \   00000014   2C109FE5           LDR      R1,??CreateHWBook_1+0x8  ;; ??onCloseHWBook
   \   00000018   000084E5           STR      R0,[R4, #+0]
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   01002DE9           PUSH     {R0}
   \   00000024   042084E2           ADD      R2,R4,#+4
   \   00000028   0000E0E1           MVN      R0,R0
   \   0000002C   01002DE9           PUSH     {R0}
   \   00000030   000094E5           LDR      R0,[R4, #+0]
   \   00000034   2B0100EF           SWI      +299
     68            return(HWBook);
   \   00000038   000094E5           LDR      R0,[R4, #+0]
   \   0000003C   1680BDE8           POP      {R1,R2,R4,PC}    ;; return
   \                     ??CreateHWBook_1:
   \   00000040   ........           DC32     HWBook
   \   00000044   ........           DC32     `?<Constant "Example">`
   \   00000048   ........           DC32     ??onCloseHWBook
     69          }
     70          
     71          
     72          
     73          

   \                                 In segment CODE, align 4, keep-with-next
     74          int main (void)
     75          {
   \                     main:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
     76            CreateHWBook();
   \   00000008   ........           BL       ??CreateHWBook
     77            // выводим текст в "заметки" на StandBy
     78            StatusIndication_ShowNotes(STR("Hello World!"));
   \   0000000C   3C009FE5           LDR      R0,??main_0      ;; `?<Constant L"\\x48\\x65\\x6c\\x6c\\x6f\\x20\\x57\\x6f\\_1`
   \   00000010   FF20A0E3           MOV      R2,#+255
   \   00000014   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   5D0100EF           SWI      +349
   \   00000020   430100EF           SWI      +323
     79            // запускаем таймер на 0.5 сек.
     80            timer=Timer_Set(500,onTimer,0);
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   ........           _BLF     ??LPARAM,??LPARAM??rA
   \   00000030   00209DE5           LDR      R2,[SP, #+0]
   \   00000034   ........           LDR      R1,??DataTable3  ;; ??onTimer
   \   00000038   7D0FA0E3           MOV      R0,#+500
   \   0000003C   290100EF           SWI      +297
   \   00000040   ........           LDR      R1,??DataTable4  ;; timer
   \   00000044   B000C1E1           STRH     R0,[R1, #+0]
     81            return(0);
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   0280BDE8           POP      {R1,PC}          ;; return
   \                     ??main_0:
   \   00000050   ........           DC32     `?<Constant L"\\x48\\x65\\x6c\\x6c\\x6f\\x20\\x57\\x6f\\_1`
     82          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     ??onTimer

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     timer

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for HWBook>`:
   \   00000000   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for base_page>`:
   \   00000004   ........0000       DC32 `?<Constant "HW_BasePage">`, 0H, HW_PageEvents
   \              0000........

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "HW_BasePage">`:
   \   00000000   48575F426173       DC8 "HW_BasePage"
   \              655061676500

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x48\\x65\\x6c\\x6c\\x6f\\x20\\x57\\x6f\\`:
   \   00000000   480065006C00       DC8 48H, 0, 65H, 0, 6CH, 0, 6CH, 0
   \              6C00        
   \   00000008   6F0020005700       DC8 6FH, 0, 20H, 0, 57H, 0, 6FH, 0
   \              6F00        
   \   00000010   720064006C00       DC8 72H, 0, 64H, 0, 6CH, 0, 21H, 0
   \              2100        
   \   00000018   0A000A004500       DC8 0AH, 0, 0AH, 0, 45H, 0, 78H, 0
   \              7800        
   \   00000020   61006D007000       DC8 61H, 0, 6DH, 0, 70H, 0, 6CH, 0
   \              6C00        
   \   00000028   650020006500       DC8 65H, 0, 20H, 0, 65H, 0, 6CH, 0
   \              6C00        
   \   00000030   66002E002E00       DC8 66H, 0, 2EH, 0, 2EH, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Example">`:
   \   00000000   4578616D706C       DC8 "Example"
   \              6500        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x48\\x65\\x6c\\x6c\\x6f\\x20\\x57\\x6f\\_1`:
   \   00000000   480065006C00       DC8 48H, 0, 65H, 0, 6CH, 0, 6CH, 0
   \              6C00        
   \   00000008   6F0020005700       DC8 6FH, 0, 20H, 0, 57H, 0, 6FH, 0
   \              6F00        
   \   00000010   72006C006400       DC8 72H, 0, 6CH, 0, 64H, 0, 21H, 0
   \              2100        
   \   00000018   0000               DC8 0, 0
   \   0000001A   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     CreateHWBook()                    16
     LPARAM::LPARAM(int)                0
     ShowAuthorInfo(void *, BOOK *)    20
     TerminateElf(void *, BOOK *)       4
     elf_exit()                         4
     main()                             8
     onCloseHWBook(BOOK *)              4
     onTimer(u16, LPARAM)              12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     LPARAM::LPARAM(int)               8
     timer                             8
     TerminateElf(void *, BOOK *)     20
     ShowAuthorInfo(void *, BOOK *)   84
     HW_PageEvents                    24
     HWBook                           16
     elf_exit()                       28
     onTimer(u16, LPARAM)             64
     onCloseHWBook(BOOK *)            52
     CreateHWBook()                   76
     main()                           84
     ??DataTable3                      4
     ??DataTable4                      4
     ?<Initializer for HWBook>        16
     ?<Constant "HW_BasePage">        12
     ?<Constant L"\x48\x65\x6c\x6c\x6f\x20\x57\x6f\
                                      56
     ?<Constant "Example">             8
     ?<Constant L"\x48\x65\x6c\x6c\x6f\x20\x57\x6f\_1
                                      28
      Others                          88

 
 488 bytes in segment CODE
 104 bytes in segment DATA_C
  16 bytes in segment DATA_I
  16 bytes in segment DATA_ID
   8 bytes in segment DATA_Z
  24 bytes in segment DYN_PAGE
  24 bytes in segment INITTAB
 
 416 bytes of CODE  memory (+ 96 bytes shared)
 144 bytes of CONST memory
  24 bytes of DATA  memory

Errors: none
Warnings: none
