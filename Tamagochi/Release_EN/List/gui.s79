//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  23:07:54 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\gui /
//                       .c                                                  /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\gui /
//                       .c -D NDEBUG -D LANG_EN -D OLDFUNCTIONS -lC         /
//                       Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\Rel /
//                       ease_EN\List\ -lA Z:\home\perk11\www\perk11.info\sv /
//                       n\SE\Tamagochi\Release_EN\List\ -o                  /
//                       Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\Rel /
//                       ease_EN\Obj\ -s9 --no_unroll --no_inline            /
//                       --cpu_mode arm --endian little --cpu ARM926EJ-S     /
//                       --stack_align 4 --interwork -e --enable_multibytes  /
//                       --fpu None --eec++ --dlib_config                    /
//                       Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.h -I        /
//                       Z:\home\perk11\IAR2\arm\INC\                        /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\Rel /
//                       ease_EN\List\gui.s79                                /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME gui

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBWEAK `?*?DATA_ID`
        FUNCTION ??AboutDlg,0603H
        LOCFRAME CSTACK, 16, STACK
        PUBLIC ??CancelMenuList
        FUNCTION ??CancelMenuList,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??CancelMenuList??rT
        PUBLIC ??CloseMenu
        FUNCTION ??CloseMenu,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??CloseMenu??rT
        PUBLIC ??CreateMenuList
        FUNCTION ??CreateMenuList,0603H
        LOCFRAME CSTACK, 28, STACK
        MULTWEAK ??CreateMenuList??rT
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable3 EQU 0
??DataTable4 EQU 0
??DataTable5 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
        PUBLIC ??DestroyMenuList
        FUNCTION ??DestroyMenuList,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??DestroyMenuList??rT
        PUBLIC ??EditConfig
        FUNCTION ??EditConfig,0603H
        LOCFRAME CSTACK, 684, STACK
        MULTWEAK ??EditConfig??rT
        PUBLIC ??ExitMenuList
        FUNCTION ??ExitMenuList,0603H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??ExitMenuList??rT
        PUBLIC ??Menu_OnKey
        FUNCTION ??Menu_OnKey,0603H
        LOCFRAME CSTACK, 36, STACK
        MULTWEAK ??Menu_OnKey??rT
        PUBLIC ??Menu_onEnter
        FUNCTION ??Menu_onEnter,0603H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??Menu_onEnter??rT
        PUBLIC ??RoomCommand
        FUNCTION ??RoomCommand,0603H
        LOCFRAME CSTACK, 528, STACK
        MULTWEAK ??RoomCommand??rT
        PUBLIC ??ShowMenu
        FUNCTION ??ShowMenu,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??ShowMenu??rT
        MULTWEAK ??extractdir??rA
        MULTWEAK ??getdir??rA
        PUBLIC ??isAnyDeath
        FUNCTION ??isAnyDeath,0203H
        MULTWEAK ??isAnyDeath??rT
        PUBLIC ??menu_list_callback
        FUNCTION ??menu_list_callback,0603H
        LOCFRAME CSTACK, 28, STACK
        MULTWEAK ??menu_list_callback??rT
        PUBLIC ??onTabSwitch
        FUNCTION ??onTabSwitch,0603H
        MULTWEAK ??onTabSwitch??rT
        PUBWEAK ?init?tab?DATA_I
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC ActivePOS
        PUBLIC ActiveTAB
        PUBLIC CountAbout
        PUBLIC CreateMenu_page
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        



??CancelMenuList??rT SYMBOL "??rT", ??CancelMenuList

??CloseMenu??rT     SYMBOL "??rT", ??CloseMenu

??CreateMenuList??rT SYMBOL "??rT", ??CreateMenuList

??DestroyMenuList??rT SYMBOL "??rT", ??DestroyMenuList

??EditConfig??rT    SYMBOL "??rT", ??EditConfig

??ExitMenuList??rT  SYMBOL "??rT", ??ExitMenuList

??Menu_OnKey??rT    SYMBOL "??rT", ??Menu_OnKey

??Menu_onEnter??rT  SYMBOL "??rT", ??Menu_onEnter

??RoomCommand??rT   SYMBOL "??rT", ??RoomCommand

??ShowMenu??rT      SYMBOL "??rT", ??ShowMenu
??extractdir??rA    SYMBOL "??rA", ??extractdir
??getdir??rA        SYMBOL "??rA", ??getdir

??isAnyDeath??rT    SYMBOL "??rT", ??isAnyDeath

??menu_list_callback??rT SYMBOL "??rT", ??menu_list_callback

??onTabSwitch??rT   SYMBOL "??rT", ??onTabSwitch

        EXTERN ??BatheCommand
        FUNCTION ??BatheCommand,0602H
        EXTERN ??ChangeName
        FUNCTION ??ChangeName,0602H
        EXTERN ??Discipline
        FUNCTION ??Discipline,0602H
        EXTERN ??GamePlay
        FUNCTION ??GamePlay,0602H
        EXTERN ??InfoStatus
        FUNCTION ??InfoStatus,0602H
        EXTERN ??SleepCommand
        FUNCTION ??SleepCommand,0602H
        EXTERN ??Vaccinate
        FUNCTION ??Vaccinate,0602H
        EXTERN ??extractdir
        FUNCTION ??extractdir,0202H
        EXTERN ??getdir
        FUNCTION ??getdir,0202H
        EXTERN ??isTamagochiBook
        FUNCTION ??isTamagochiBook,0602H
        EXTERN ACCEPT_EVENT
        EXTERN ACTION_BACK
        EXTERN ACTION_LONG_BACK
        EXTERN ACTION_SELECT1
        EXTERN BCFGEDIT_PATH
        EXTERN KBD_SHORT_RELEASE
        EXTERN KEY_DIGITAL_0
        EXTERN NIL_EVENT
        EXTERN Pets
        EXTERN ROOM_PATH
        EXTERN img_menu
        EXTERN msgShowTime
        EXTERN sndEnable
        EXTERN sndOnSilent
        EXTERN successed_config_name
        EXTERN successed_config_path


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??EditConfig??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??EditConfig
// Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\gui.c
//    1 #include "..\\include\Lib_Clara.h"
//    2 #include "..\\include\Dir.h"
//    3 #include "..\\include\cfg_items.h"
//    4 #include "conf_loader.h"
//    5 #include "Tamagochi.h"
//    6 #include "language.h"
//    7 #include "misc_util.h"
//    8 
//    9 #define MENU_ITEMS_COUNT 10
//   10 
//   11 int ActiveTAB = 0;
//   12 int ActivePOS = 0;
//   13 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??EditConfig
        ARM
//   14 void EditConfig(int indx, BOOK * book, int snd)
//   15 {
//   16   FSTAT _fstat;
//   17   wchar_t path[256];
//   18   wchar_t name[64];
//   19 
//   20   extractdir(path, name, BCFGEDIT_PATH);
??EditConfig:
        LDR      R2,??EditConfig_1+0x4  ;; BCFGEDIT_PATH
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+668
        CFI CFA R13+676
        ADD      R1,SP,#+540
        ADD      R0,SP,#+28
        _BLF     ??extractdir,??extractdir??rA
//   21 
//   22   if(fstat(path,name,&_fstat)==0)
        MOV      R2,SP
        ADD      R1,SP,#+540
        ADD      R0,SP,#+28
        SWI      +284
        CMP      R0,#+0
        BEQ      ??EditConfig_2
//   23   {
//   24   }
//   25   else if(fstat(GetDir(DIR_ELFS|MEM_INTERNAL),name,&_fstat)==0)
        MOV      R0,#+17
        SWI      +261
        MOV      R2,SP
        ADD      R1,SP,#+540
        SWI      +284
        CMP      R0,#+0
        BNE      ??EditConfig_3
//   26   {
//   27     wstrcpy(path,GetDir(DIR_ELFS|MEM_INTERNAL));
        MOV      R0,#+17
??EditConfig_4:
        SWI      +261
        MOV      R1,R0
        ADD      R0,SP,#+28
        SWI      +338
        B        ??EditConfig_2
//   28   }
//   29   else if(fstat(GetDir(DIR_ELFS|MEM_EXTERNAL),name,&_fstat)==0)
??EditConfig_3:
        MOV      R0,#+16
        SWI      +261
        MOV      R2,SP
        ADD      R1,SP,#+540
        SWI      +284
        CMP      R0,#+0
//   30   {
//   31     wstrcpy(path,GetDir(DIR_ELFS|MEM_EXTERNAL));
        MOVEQ    R0,#+16
        BEQ      ??EditConfig_4
//   32   }
//   33   else
//   34   {
//   35     MessageBox(EMPTY_TEXTID, TextID_Create(LG_GFGBCFGEDITNOTFOUND,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
        LDR      R0,??EditConfig_1+0x8  ;; `?<Constant "BcfgEdit.elf not found!">`
        MOV      R4,#+255
        ORR      R4,R4,#0xFF00
        MOV      R2,R4
        MOV      R1,#+0
        SWI      +349
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+680
        LDR      R1,??DataTable2  ;; msgShowTime
        MOV      R2,#+136
        LDR      R1,[R1, #+0]
        ORR      R2,R2,#0x1300
        MUL      R1,R2,R1
        MOV      R3,#+1
        PUSH     {R1}
        CFI CFA R13+684
        MOV      R2,R4
        MOV      R1,R0
        MVN      R0,#-1879048192
        SWI      +599
        ADD      SP,SP,#+8
        CFI CFA R13+676
//   36   }
//   37   wstrcat(path,L"/");
??EditConfig_2:
        ADR      R1,??EditConfig_1  ;; 0x2F, 0x00, 0x00, 0x00
        ADD      R0,SP,#+28
        SWI      +340
//   38   wstrcat(path,name);
        ADD      R1,SP,#+540
        ADD      R0,SP,#+28
        SWI      +340
//   39   elfload(path,(void*)successed_config_path,(void*)successed_config_name,0);
        LDR      R0,??EditConfig_1+0xC  ;; successed_config_name
        MOV      R3,#+0
        LDR      R2,[R0, #+0]
        LDR      R0,??EditConfig_1+0x10  ;; successed_config_path
        LDR      R1,[R0, #+0]
        ADD      R0,SP,#+28
        SWI      +269
//   40 }
        ADD      SP,SP,#+668
        CFI CFA R13+8
        POP      {R4,PC}          ;; return
        DATA
??EditConfig_1:
        DC8      0x2F, 0x00, 0x00, 0x00
        DC32     BCFGEDIT_PATH
        DC32     `?<Constant "BcfgEdit.elf not found!">`
        DC32     successed_config_name
        DC32     successed_config_path
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??isAnyDeath??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??isAnyDeath
//   41 

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
//   42 int  CountAbout=0;
CountAbout:
        DS8 4
//   43 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??isAnyDeath
        ARM
//   44 int isAnyDeath()
//   45 {
//   46   for(int i=0; i<Pets[0].Status.Count; i++)
??isAnyDeath:
        LDR      R1,??DataTable9  ;; Pets
        MOV      R0,#+0
        LDR      R2,[R1, #+196]
        B        ??isAnyDeath_1
??isAnyDeath_2:
        ADD      R0,R0,#+1
??isAnyDeath_1:
        CMP      R0,R2
        BGE      ??isAnyDeath_3
//   47     if(Pets[i].Status.StatusDeath == 1) return 1;
        MOV      R3,#+272
        MLA      R12,R3,R0,R1
        LDR      R3,[R12, #+56]
        CMP      R3,#+1
        BNE      ??isAnyDeath_2
        MOV      R0,#+1
        BX       LR
//   48 
//   49   return 0;
??isAnyDeath_3:
        MOV      R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock3
//   50 }

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??AboutDlg??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??AboutDlg
//   51 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??AboutDlg
        ARM
//   52 static void AboutDlg(int indx, BOOK * book, int snd)
//   53 {
//   54 #if (!defined(LANG_RU) && !defined(LANG_EN))
//   55   MessageBox(EMPTY_TEXTID,TextID_Create( LELFNAME _T("\n") LELFVERSION _T("\n") LAUTHORINFO _T("\n") LTRANSLATED TRANSLATED_BY,0,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
//   56 #else
//   57   MessageBox(EMPTY_TEXTID,TextID_Create( LELFNAME _T("\n") LELFVERSION _T("\n") LAUTHORINFO,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
??AboutDlg:
        LDR      R0,??AboutDlg_1  ;; `?<Constant L"\\x54\\x61\\x6d\\x61\\x67\\x6f\\x63\\x68\\`
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R1,#+0
        MOV      R4,#+255
        ORR      R4,R4,#0xFF00
        MOV      R2,R4
        SWI      +349
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+12
        LDR      R1,??DataTable2  ;; msgShowTime
        MOV      R2,#+136
        LDR      R1,[R1, #+0]
        ORR      R2,R2,#0x1300
        MUL      R1,R2,R1
        MOV      R3,#+1
        PUSH     {R1}
        CFI CFA R13+16
        MOV      R2,R4
        MOV      R1,R0
        MVN      R0,#-1879048192
        SWI      +599
//   58 #endif
//   59 }
        POP      {R0,R1,R4,PC}    ;; return
        DATA
??AboutDlg_1:
        DC32     `?<Constant L"\\x54\\x61\\x6d\\x61\\x67\\x6f\\x63\\x68\\`
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable2:
        DC32     msgShowTime

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??RoomCommand??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??RoomCommand
//   60 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??RoomCommand
        ARM
//   61 void RoomCommand(int indx, BOOK * book, int snd)
//   62 {
//   63   wchar_t eat_path[256];
//   64   getdir(eat_path, ROOM_PATH);
??RoomCommand:
        LDR      R1,??RoomCommand_1  ;; ROOM_PATH
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+520
        CFI CFA R13+528
        ADD      R0,SP,#+8
        _BLF     ??getdir,??getdir??rA
//   65   const wchar_t * folder_list[2];
//   66   folder_list[0]=eat_path;
        ADD      R1,SP,#+8
        STR      R1,[SP, #+0]
//   67   folder_list[1]= 0;
        MOV      R1,#+0
        STR      R1,[SP, #+4]
//   68   int folders_cnt = 1;
//   69 
//   70   void * DB_Desc=DataBrowserDesc_Create();
        SWI      +287
        MOV      R4,R0
//   71   DataBrowserDesc_SetHeaderText(DB_Desc,TextID_Create(LG_ROOM,ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R0,??RoomCommand_1+0x4  ;; `?<Constant L"\\x52\\x6f\\x6f\\x6d\\x20\\x77\\x69\\x74\\`
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +289
//   72   DataBrowserDesc_SetFolders(DB_Desc,folder_list);
        MOV      R1,SP
        MOV      R0,R4
        SWI      +290
//   73   DataBrowserDesc_SetFoldersNumber(DB_Desc,folders_cnt);
        MOV      R1,#+1
        MOV      R0,R4
        SWI      +681
//   74   DataBrowserDesc_SetSelectAction(DB_Desc,0);
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +683
//   75   DataBrowserDesc_Menu_AddFSFunctions(DB_Desc, 0);
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +798
//   76   DataBrowserDesc_Menu_AddNewFolder(DB_Desc, 1);
        MOV      R1,#+1
        MOV      R0,R4
        SWI      +799
//   77   DataBrowserDesc_Menu_AddMarkFiles(DB_Desc, 1);
        MOV      R1,#+1
        MOV      R0,R4
        SWI      +800
//   78   DataBrowser_Create(DB_Desc);
        MOV      R0,R4
        SWI      +292
//   79   DataBrowserDesc_Destroy(DB_Desc);
        MOV      R0,R4
        SWI      +293
//   80 
//   81 }
        ADD      SP,SP,#+520
        CFI CFA R13+8
        POP      {R4,PC}          ;; return
        DATA
??RoomCommand_1:
        DC32     ROOM_PATH
        DC32     `?<Constant L"\\x52\\x6f\\x6f\\x6d\\x20\\x77\\x69\\x74\\`
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??menu_list_callback??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??menu_list_callback

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x47\\x61\\x6d\\x65">`:
        DATA
        DC8 47H, 0, 61H, 0, 6DH, 0, 65H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x56\\x61\\x63\\x63\\x69\\x6e\\x61\\x74\\`:
        DATA
        DC8 56H, 0, 61H, 0, 63H, 0, 63H, 0
        DC8 69H, 0, 6EH, 0, 61H, 0, 74H, 0
        DC8 65H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x44\\x69\\x73\\x63\\x69\\x70\\x6c\\x69\\`:
        DATA
        DC8 44H, 0, 69H, 0, 73H, 0, 63H, 0
        DC8 69H, 0, 70H, 0, 6CH, 0, 69H, 0
        DC8 6EH, 0, 65H, 0, 0, 0
        DC8 0, 0
//   82 
//   83 enum MENU_CMD {
//   84   PLAY_CMD,
//   85   VACCINATE_CMD,
//   86   DISCIPLINE_CMD,
//   87   SLEEP_CMD,
//   88   BATHE_CMD,
//   89   ROOM_CMD,
//   90   STATUS_CMD,
//   91   NAME_CMD,
//   92   SETTINGS_CMD,
//   93   ABOUT_CMD
//   94 };
//   95 

        RSEG DATA_C:CONST:SORT:NOROOT(2)
//   96 static int const menuiconsnum[MENU_ITEMS_COUNT]=
menuiconsnum:
        DATA
        DC32 0, 1, 2, 3, 20, 21, 4, 5, 6, 7
        DC32 `?<Constant L"\\x47\\x61\\x6d\\x65">`
        DC32 `?<Constant L"\\x56\\x61\\x63\\x63\\x69\\x6e\\x61\\x74\\`
        DC32 `?<Constant L"\\x44\\x69\\x73\\x63\\x69\\x70\\x6c\\x69\\`
        DC32 `?<Constant L"\\x53\\x6c\\x65\\x65\\x70">`
        DC32 `?<Constant L"\\x42\\x61\\x74\\x68\\x65">`
        DC32 `?<Constant L"\\x52\\x6f\\x6f\\x6d\\x20\\x77\\x69\\x74\\`
        DC32 `?<Constant L"\\x53\\x74\\x61\\x74\\x75\\x73">`
        DC32 `?<Constant L"\\x43\\x68\\x61\\x6e\\x67\\x65\\x20\\x6e\\`
        DC32 `?<Constant L"\\x53\\x65\\x74\\x74\\x69\\x6e\\x67">`
        DC32 `?<Constant L"\\x41\\x62\\x6f\\x75\\x74">`
`?<Constant L"\\x53\\x6c\\x65\\x65\\x70">`:
        DC8 53H, 0, 6CH, 0, 65H, 0, 65H, 0
        DC8 70H, 0, 0, 0
        DC8 57H, 0, 61H, 0, 6BH, 0, 65H, 0
        DC8 75H, 0, 70H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x42\\x61\\x74\\x68\\x65">`:
        DATA
        DC8 42H, 0, 61H, 0, 74H, 0, 68H, 0
        DC8 65H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x52\\x6f\\x6f\\x6d\\x20\\x77\\x69\\x74\\`:
        DATA
        DC8 52H, 0, 6FH, 0, 6FH, 0, 6DH, 0
        DC8 20H, 0, 77H, 0, 69H, 0, 74H, 0
        DC8 68H, 0, 20H, 0, 6DH, 0, 65H, 0
        DC8 61H, 0, 6CH, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x53\\x74\\x61\\x74\\x75\\x73">`:
        DATA
        DC8 53H, 0, 74H, 0, 61H, 0, 74H, 0
        DC8 75H, 0, 73H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x43\\x68\\x61\\x6e\\x67\\x65\\x20\\x6e\\`:
        DATA
        DC8 43H, 0, 68H, 0, 61H, 0, 6EH, 0
        DC8 67H, 0, 65H, 0, 20H, 0, 6EH, 0
        DC8 61H, 0, 6DH, 0, 65H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x53\\x65\\x74\\x74\\x69\\x6e\\x67">`:
        DATA
        DC8 53H, 0, 65H, 0, 74H, 0, 74H, 0
        DC8 69H, 0, 6EH, 0, 67H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41\\x62\\x6f\\x75\\x74">`:
        DATA
        DC8 41H, 0, 62H, 0, 6FH, 0, 75H, 0
        DC8 74H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "Tamagochi_CreateMenu_...">`:
        DATA
        DC8 "Tamagochi_CreateMenu_Main_Page"
        DC8 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "BcfgEdit.elf not found!">`:
        DATA
        DC8 "BcfgEdit.elf not found!"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 2FH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x54\\x61\\x6d\\x61\\x67\\x6f\\x63\\x68\\`:
        DATA
        DC8 54H, 0, 61H, 0, 6DH, 0, 61H, 0
        DC8 67H, 0, 6FH, 0, 63H, 0, 68H, 0
        DC8 69H, 0, 0AH, 0, 76H, 0, 34H, 0
        DC8 2EH, 0, 31H, 0, 0AH, 0, 0A9H, 0
        DC8 20H, 0, 42H, 0, 69H, 0, 67H, 0
        DC8 48H, 0, 65H, 0, 72H, 0, 63H, 0
        DC8 75H, 0, 6CH, 0, 65H, 0, 73H, 0
        DC8 20H, 0, 26H, 0, 20H, 0, 50H, 0
        DC8 6CH, 0, 6FH, 0, 69H, 0, 6BH, 0
        DC8 0AH, 0, 0AH, 0, 4FH, 0, 72H, 0
        DC8 69H, 0, 67H, 0, 69H, 0, 6EH, 0
        DC8 61H, 0, 6CH, 0, 20H, 0, 69H, 0
        DC8 64H, 0, 65H, 0, 61H, 0, 3AH, 0
        DC8 20H, 0, 45H, 0, 72H, 0, 61H, 0
        DC8 73H, 0, 65H, 0, 72H, 0, 20H, 0
        DC8 28H, 0, 53H, 0, 69H, 0, 65H, 0
        DC8 6DH, 0, 65H, 0, 6EH, 0, 73H, 0
        DC8 29H, 0, 0, 0

        RSEG DATA_I:DATA:SORT:NOROOT(2)
ActiveTAB:
        DS8 4
        REQUIRE `?<Initializer for ActiveTAB>`
ActivePOS:
        DS8 4
        REQUIRE `?<Initializer for ActivePOS>`
        DS8 40
        REQUIRE `?<Initializer for menuprocs>`
//   97 {
//   98   PLAY_ICN,
//   99   VACCINATE_ICN,
//  100   DISCIPLINE_ICN,
//  101   SLEEP_ICN,
//  102   SM_BATHE_ICN,
//  103   ROOM_ICN,
//  104   STATUS_ICN,
//  105   NAME_ICN,
//  106   SETTINGS_ICN,
//  107   ABOUT_ICN
//  108 };
//  109 
//  110 static const wchar_t * const menutexts[MENU_ITEMS_COUNT]=
//  111 {
//  112   LG_GAMEPLAY,
//  113   LG_VACCINATE,
//  114   LG_DISCIPLINE,
//  115   LG_SLEEP,
//  116   LG_BATHE,
//  117   LG_ROOM,
//  118   LG_STATUS,
//  119   LG_NAME,
//  120   LG_EDCFG,
//  121   LG_ABOUT
//  122 };
//  123 
//  124 static void (*menuprocs[MENU_ITEMS_COUNT])(int, BOOK *, int) =
//  125 {
//  126   GamePlay,
//  127   Vaccinate,
//  128   Discipline,
//  129   SleepCommand,
//  130   BatheCommand,
//  131   RoomCommand,
//  132   InfoStatus,
//  133   ChangeName,
//  134   EditConfig,
//  135   AboutDlg,
//  136 };
//  137 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??menu_list_callback
        ARM
//  138 int menu_list_callback(GUI_MESSAGE * msg)
//  139 {
??menu_list_callback:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        SUB      SP,SP,#+12
        CFI CFA R13+28
        MOV      R4,R0
//  140   int str_id;
//  141   int icon_id;
//  142   switch( GUIonMessage_GetMsg(msg) )
        SWI      +884
        CMP      R0,#+1
        BNE      ??menu_list_callback_1
//  143   {
//  144   case 1:
//  145     int curitem=GUIonMessage_GetCreatedItemIndex(msg);
        MOV      R0,R4
        SWI      +311
        MOV      R6,R0
//  146 //    MyBOOK * bk = (MyBOOK *)msg->book;
//  147     MyBOOK * bk = (MyBOOK *) FindBook(isTamagochiBook);
        LDR      R0,??DataTable6  ;; ??isTamagochiBook
        SWI      +304
//  148     int indx = TabMenuBar_GetFocusedTab(bk->gui);
        LDR      R0,[R0, #+40]
        SWI      +605
//  149     icon_id = img_menu[menuiconsnum[curitem]];
        LDR      R3,??menu_list_callback_2  ;; menuiconsnum
        LDR      R2,??DataTable10  ;; img_menu
        LDR      R1,[R3, +R6, LSL #+2]
//  150     if (curitem!= SLEEP_CMD){
        CMP      R6,#+3
        ADD      R1,R2,R1, LSL #+1
        LDRH     R5,[R1, #+0]
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        BEQ      ??menu_list_callback_3
//  151       str_id  = TextID_Create(menutexts[curitem],ENC_UCS2,TEXTID_ANY_LEN);
        MOV      R1,#+0
        ADD      R0,R3,R6, LSL #+2
        LDR      R0,[R0, #+40]
        B        ??menu_list_callback_4
//  152     }
//  153     else
//  154     {
//  155       if (Pets[indx].Sleep==0){
??menu_list_callback_3:
        LDR      R6,??DataTable9  ;; Pets
        MOV      R1,#+272
        MLA      R0,R1,R0,R6
        MOV      R1,#+0
        LDR      R0,[R0, #+220]
        CMP      R0,#+0
//  156         str_id  = TextID_Create(LG_SLEEP,ENC_UCS2,TEXTID_ANY_LEN);
        ADDEQ    R0,R3,#+80
//  157       }
//  158       else
//  159       {
//  160         str_id  = TextID_Create(LG_NOTSLEEP,ENC_UCS2,TEXTID_ANY_LEN);
        ADDNE    R0,R3,#+92
??menu_list_callback_4:
        SWI      +349
//  161       }
//  162     }
//  163     int strID_array[3];
//  164     strID_array[0]=icon_id+0x78000000;
        ADD      R2,R5,#+2013265920
        STR      R2,[SP, #+0]
//  165     strID_array[1]=0x78000020;
        MOV      R2,#+32
        ORR      R2,R2,#0x78000000
        STR      R2,[SP, #+4]
//  166     strID_array[2]=str_id;
        STR      R0,[SP, #+8]
//  167     GUIonMessage_SetMenuItemText(msg,TextID_Create(strID_array,ENC_TEXTID,3));
        MOV      R2,#+3
        MOV      R1,#+5
        MOV      R0,SP
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +312
//  168   }
//  169   return(1);
??menu_list_callback_1:
        MOV      R0,#+1
        POP      {R1-R6,PC}       ;; return
        DATA
??menu_list_callback_2:
        DC32     menuiconsnum
        CFI EndBlock cfiBlock9
//  170 }

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??DestroyMenuList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??DestroyMenuList
//  171 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??DestroyMenuList
        ARM
//  172 void DestroyMenuList( BOOK* book, GUI* )
//  173 {
//  174   BookObj_ReturnPage(book,ACCEPT_EVENT);
??DestroyMenuList:
        LDR      R1,??DestroyMenuList_1  ;; ACCEPT_EVENT
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R1,[R1, #+0]
        SWI      +302
//  175 }
        POP      {PC}             ;; return
        DATA
??DestroyMenuList_1:
        DC32     ACCEPT_EVENT
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??CancelMenuList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??CancelMenuList
//  176 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??CancelMenuList
        ARM
//  177 void CancelMenuList( BOOK* book, GUI* )
//  178 {
??CancelMenuList:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
//  179   BookObj_ReturnPage(book,NIL_EVENT);
        LDR      R0,??CancelMenuList_1  ;; NIL_EVENT
        LDR      R5,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R5
        SWI      +302
//  180   BookObj_ReturnPage(book,NIL_EVENT);
        MOV      R1,R5
        MOV      R0,R4
        SWI      +302
//  181 }
        POP      {R4,R5,PC}       ;; return
        DATA
??CancelMenuList_1:
        DC32     NIL_EVENT
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??Menu_onEnter??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??Menu_onEnter
//  182 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??Menu_onEnter
        ARM
//  183 void Menu_onEnter( BOOK* book, GUI* )
//  184 {
??Menu_onEnter:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
//  185   MyBOOK * bk = (MyBOOK *)book;
//  186   int indx = TabMenuBar_GetFocusedTab(bk->gui);
//  187   int item_num = ActivePOS = ListMenu_GetSelectedItem(bk->menu_list[indx]);
        LDR      R7,??Menu_onEnter_1  ;; ActiveTAB
        MOV      R4,R0
        LDR      R0,[R4, #+40]
        SWI      +605
        MOV      R5,R0
        ADD      R0,R4,R5, LSL #+2
        LDR      R0,[R0, #+44]
        SWI      +318
        MOV      R6,R0
        STR      R6,[R7, #+4]
//  188   menuprocs[item_num](indx, book,(!GetSilent() || sndOnSilent) && sndEnable);
        SWI      +587
        CMP      R0,#+0
        BEQ      ??Menu_onEnter_2
        LDR      R0,??Menu_onEnter_1+0x4  ;; sndOnSilent
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        BEQ      ??Menu_onEnter_3
??Menu_onEnter_2:
        LDR      R0,??Menu_onEnter_1+0x8  ;; sndEnable
        LDR      R0,[R0, #+0]
        CMP      R0,#+0
        MOVNE    R2,#+1
        BNE      ??Menu_onEnter_4
??Menu_onEnter_3:
        MOV      R2,#+0
??Menu_onEnter_4:
        MOV      R1,R4
        MOV      R0,R5
        ADD      R3,R7,R6, LSL #+2
        LDR      R3,[R3, #+8]
        BLX      R3
//  189   //BookObj_ReturnPage(book,ACCEPT_EVENT);
//  190 }
        POP      {R4-R7,PC}       ;; return
        DATA
??Menu_onEnter_1:
        DC32     ActiveTAB
        DC32     sndOnSilent
        DC32     sndEnable
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??Menu_OnKey??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE ??Menu_OnKey
//  191 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function ??Menu_OnKey
        ARM
//  192 void Menu_OnKey(DISP_OBJ* p, int i1, int i2, int i3, int i4)
//  193 {
??Menu_OnKey:
        PUSH     {R4-R10,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R10 Frame(CFA, -8)
        CFI R9 Frame(CFA, -12)
        CFI R8 Frame(CFA, -16)
        CFI R7 Frame(CFA, -20)
        CFI R6 Frame(CFA, -24)
        CFI R5 Frame(CFA, -28)
        CFI R4 Frame(CFA, -32)
        CFI CFA R13+32
        LDR      R10,[SP, #+32]
        MOV      R5,R0
//  194   MyBOOK * bk = (MyBOOK *) FindBook(isTamagochiBook);
        LDR      R0,??DataTable6  ;; ??isTamagochiBook
        MOV      R6,R1
        MOV      R7,R2
        MOV      R8,R3
        SWI      +304
        MOV      R9,R0
//  195   int indx = TabMenuBar_GetFocusedTab(bk->gui);
        LDR      R0,[R9, #+40]
        SWI      +605
//  196   bk->Menu_oldOnKey[indx](p,i1,i2,i3,i4);
        ADD      R4,R9,R0, LSL #+2
        MOV      R0,R10
        PUSH     {R0}
        CFI CFA R13+36
        MOV      R3,R8
        MOV      R2,R7
        MOV      R1,R6
        MOV      R0,R5
        LDR      R5,[R4, #+172]
        BLX      R5
//  197   if(i4==KBD_SHORT_RELEASE)
        LDR      R0,??Menu_OnKey_1  ;; KBD_SHORT_RELEASE
        LDR      R0,[R0, #+0]
        ADD      SP,SP,#+4
        CFI CFA R13+32
        CMP      R10,R0
        POPNE    {R4-R10,PC}
//  198   {
//  199     int num = i1 - KEY_DIGITAL_0;
        LDR      R0,??Menu_OnKey_1+0x4  ;; KEY_DIGITAL_0
        LDR      R0,[R0, #+0]
        SUB      R0,R6,R0
//  200     if(num == 2)
        CMP      R0,#+2
        BNE      ??Menu_OnKey_2
//  201     {
//  202       int item = ListMenu_GetSelectedItem(bk->menu_list[indx]) - 1;
        LDR      R0,[R4, #+44]
        SWI      +318
        SUBS     R1,R0,#+1
//  203       if(item < 0) item = MENU_ITEMS_COUNT - 1;
        BPL      ??Menu_OnKey_3
//  204       ListMenu_SetCursorToItem(bk->menu_list[indx],item);
        LDR      R0,[R4, #+44]
        MOV      R1,#+9
        SWI      +309
        POP      {R4-R10,PC}
//  205     }
//  206     else if((num == 8) || (num == 0))
??Menu_OnKey_2:
        CMP      R0,#+8
        CMPNE    R0,#+0
        BNE      ??Menu_OnKey_4
//  207     {
//  208       int item = ListMenu_GetSelectedItem(bk->menu_list[indx]) + 1;
        LDR      R0,[R4, #+44]
        SWI      +318
        ADD      R1,R0,#+1
//  209       if(item >= MENU_ITEMS_COUNT) item = 0;
        CMP      R1,#+10
        MOVGE    R1,#+0
//  210       ListMenu_SetCursorToItem(bk->menu_list[indx],item);
??Menu_OnKey_3:
        LDR      R0,[R4, #+44]
        SWI      +309
        POP      {R4-R10,PC}
//  211     }
//  212     else if(num == 5)
??Menu_OnKey_4:
        CMP      R0,#+5
        POPNE    {R4-R10,PC}
//  213     {
//  214       Menu_onEnter((BOOK*)bk,0);
        MOV      R1,#+0
        MOV      R0,R9
        BL       ??Menu_onEnter
//  215     }
//  216   }
//  217 };
        POP      {R4-R10,PC}      ;; return
        DATA
??Menu_OnKey_1:
        DC32     KBD_SHORT_RELEASE
        DC32     KEY_DIGITAL_0
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable6:
        DC32     ??isTamagochiBook

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??onTabSwitch??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE ??onTabSwitch
//  218 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function ??onTabSwitch
        ARM
//  219 void onTabSwitch(BOOK * bk,int active_tab)
//  220 {
//  221   ActiveTAB=active_tab;
??onTabSwitch:
        LDR      R0,??DataTable11  ;; ActiveTAB
        STR      R1,[R0, #+0]
//  222 }
        BX       LR               ;; return
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateMenuList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE ??CreateMenuList
//  223 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function ??CreateMenuList
        ARM
//  224 int CreateMenuList(void *data, BOOK * book)
//  225 {
//  226   int menu_pos = ActivePOS;
??CreateMenuList:
        LDR      R0,??DataTable11  ;; ActiveTAB
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
//  227   int tab_pos = ActiveTAB;
//  228   if(tab_pos >= Pets[0].Status.Count) tab_pos = 0;
        LDR      R7,??DataTable9  ;; Pets
        LDR      R5,[R0, #+4]
        LDR      R6,[R0, #+0]
        LDR      R0,[R7, #+196]
        MOV      R4,R1
        CMP      R6,R0
//  229   if(menu_pos >= MENU_ITEMS_COUNT) menu_pos = 0;
//  230   MyBOOK * bk = (MyBOOK *)book;
//  231   if(bk->gui) GUIObject_Destroy( bk->gui);
        LDR      R0,[R4, #+40]
        MOVGE    R6,#+0
        CMP      R5,#+10
        MOVGE    R5,#+0
        CMP      R0,#+0
        BEQ      ??CreateMenuList_1
        SWI      +462
//  232   FREE_GUI(bk->stat_list);
??CreateMenuList_1:
        LDR      R0,[R4, #+300]
        CMP      R0,#+0
        BEQ      ??CreateMenuList_2
        SWI      +462
        MOV      R0,#+0
        STR      R0,[R4, #+300]
//  233 
//  234   bk->gui = CreateTabMenuBar(book);
??CreateMenuList_2:
        MOV      R0,R4
        SWI      +458
        STR      R0,[R4, #+40]
//  235   TabMenuBar_SetTabCount(bk->gui,Pets[0].Status.Count);
        LDR      R1,[R7, #+196]
//  236   for(int indx=0; indx < Pets[0].Status.Count; indx++)
        MOV      R8,#+0
        SWI      +459
        LDR      R0,[R7, #+196]
        CMP      R0,#+1
        BGE      ??CreateMenuList_3
        B        ??CreateMenuList_4
//  237   {
//  238     if (bk->menu_list[indx]) GUIObject_Destroy( bk->menu_list[indx]);
??CreateMenuList_5:
        ADD      R9,R4,R8, LSL #+2
        LDR      R0,[R9, #+44]
        CMP      R0,#+0
        BEQ      ??CreateMenuList_6
        SWI      +462
//  239     bk->menu_list[indx]=CreateListMenu(book,0);
??CreateMenuList_6:
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +448
        STR      R0,[R9, #+44]
//  240     GUIObject_SetTitleText(bk->menu_list[indx],TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN));
        MOV      R0,#+272
        MLA      R3,R0,R8,R7
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        ADD      R0,R3,#+64
        SWI      +349
        MOV      R1,R0
        LDR      R0,[R9, #+44]
        SWI      +307
//  241 
//  242     ListMenu_SetItemCount(bk->menu_list[indx],MENU_ITEMS_COUNT);
        LDR      R0,[R9, #+44]
        MOV      R1,#+10
        SWI      +449
//  243     OneOfMany_SetOnMessage((GUI_ONEOFMANY*)bk->menu_list[indx],menu_list_callback);
        LDR      R1,??CreateMenuList_7  ;; ??menu_list_callback
        LDR      R0,[R9, #+44]
        SWI      +481
//  244     ListMenu_SetCursorToItem(bk->menu_list[indx],menu_pos);
        LDR      R0,[R9, #+44]
        MOV      R1,R5
        SWI      +309
//  245 
//  246     GUIObject_SoftKeys_SetAction(bk->menu_list[indx],ACTION_BACK,DestroyMenuList);
        LDR      R0,??CreateMenuList_7+0x4  ;; ACTION_BACK
        LDR      R2,??CreateMenuList_7+0x8  ;; ??DestroyMenuList
        LDR      R1,[R0, #+0]
        LDR      R0,[R9, #+44]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  247     GUIObject_SoftKeys_SetAction(bk->menu_list[indx],ACTION_LONG_BACK,CancelMenuList);
        LDR      R0,??CreateMenuList_7+0xC  ;; ACTION_LONG_BACK
        LDR      R2,??CreateMenuList_7+0x10  ;; ??CancelMenuList
        LDR      R1,[R0, #+0]
        LDR      R0,[R9, #+44]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  248     GUIObject_SoftKeys_SetAction(bk->menu_list[indx],ACTION_SELECT1,Menu_onEnter);
        LDR      R0,??CreateMenuList_7+0x14  ;; ACTION_SELECT1
        LDR      R2,??CreateMenuList_7+0x18  ;; ??Menu_onEnter
        LDR      R1,[R0, #+0]
        LDR      R0,[R9, #+44]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  249 
//  250     bk->Menu_oldOnKey[indx] = DispObject_GetOnKey( GUIObject_GetDispObject(bk->menu_list[indx]) );
        LDR      R0,[R9, #+44]
        SWI      +360
        SWI      +555
        STR      R0,[R9, #+172]
//  251     DISP_DESC_SetOnKey( DispObject_GetDESC ( GUIObject_GetDispObject(bk->menu_list[indx]) ), Menu_OnKey );
        LDR      R0,[R9, #+44]
        SWI      +360
        SWI      +543
        LDR      R1,??CreateMenuList_7+0x1C  ;; ??Menu_OnKey
        SWI      +554
//  252 
//  253     TabMenuBar_SetTabGui(bk->gui,indx,bk->menu_list[indx]);
        LDR      R2,[R9, #+44]
//  254 
//  255     TabMenuBar_SetTabIcon(bk->gui,indx,img_menu[SM_BOREDOM_ICN],0);
        LDR      R9,??DataTable10  ;; img_menu
        LDR      R0,[R4, #+40]
        MOV      R1,R8
        SWI      +460
        LDRH     R2,[R9, #+26]
        LDR      R0,[R4, #+40]
        MOV      R3,#+0
        MOV      R1,R8
        SWI      +461
//  256     TabMenuBar_SetTabIcon(bk->gui,indx,img_menu[SM_SMILE_ICN],1);
        LDRH     R2,[R9, #+16]
        LDR      R0,[R4, #+40]
        MOV      R3,#+1
        MOV      R1,R8
        SWI      +461
//  257   }
        ADD      R8,R8,#+1
??CreateMenuList_3:
        LDR      R0,[R7, #+196]
        CMP      R8,R0
        BLT      ??CreateMenuList_5
//  258   TabMenuBar_SetFocusedTab(bk->gui,tab_pos);
??CreateMenuList_4:
        LDR      R0,[R4, #+40]
        MOV      R1,R6
        SWI      +606
//  259   TabMenuBar_SetOnTabSwitch(bk->gui,onTabSwitch);
        LDR      R1,??CreateMenuList_7+0x20  ;; ??onTabSwitch
        LDR      R0,[R4, #+40]
        SWI      +714
//  260   BookObj_SetFocus(book,0);
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +306
//  261   GUIObject_Show(bk->gui);
        LDR      R0,[R4, #+40]
        SWI      +308
//  262   return(0);
        MOV      R0,#+0
        POP      {R4-R9,PC}       ;; return
        DATA
??CreateMenuList_7:
        DC32     ??menu_list_callback
        DC32     ACTION_BACK
        DC32     ??DestroyMenuList
        DC32     ACTION_LONG_BACK
        DC32     ??CancelMenuList
        DC32     ACTION_SELECT1
        DC32     ??Menu_onEnter
        DC32     ??Menu_OnKey
        DC32     ??onTabSwitch
        CFI EndBlock cfiBlock21
//  263 }

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable9:
        DC32     Pets

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable10:
        DC32     img_menu

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon0
        CFI NoFunction
        THUMB
??ExitMenuList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock22
        REQUIRE ??ExitMenuList
//  264 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI Function ??ExitMenuList
        ARM
//  265 int ExitMenuList(void *data, BOOK * book)
//  266 {
??ExitMenuList:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOV      R4,R1
//  267   MyBOOK * bk = (MyBOOK *)book;
//  268 
//  269   if (bk->stat_list)
        LDR      R0,[R4, #+300]
        MOV      R5,#+0
        CMP      R0,#+0
        BEQ      ??ExitMenuList_1
//  270   {
//  271     GUIObject_Destroy( bk->stat_list);
        SWI      +462
//  272     bk->stat_list=0;
        STR      R5,[R4, #+300]
//  273   }
//  274 
//  275   for(int i=0; i < MAX_PET_COUNT_GLB; i++)
??ExitMenuList_1:
        MOV      R6,#+0
//  276   {
//  277     if (bk->menu_list[i])
??ExitMenuList_2:
        ADD      R7,R4,R6, LSL #+2
        LDR      R0,[R7, #+44]
        CMP      R0,#+0
        BEQ      ??ExitMenuList_3
//  278     {
//  279       GUIObject_Destroy( bk->menu_list[i]);
        SWI      +462
//  280       bk->menu_list[i]=0;
        STR      R5,[R7, #+44]
//  281     }
//  282   }
??ExitMenuList_3:
        ADD      R6,R6,#+1
        CMP      R6,#+32
        BLT      ??ExitMenuList_2
//  283 
//  284   if (bk->gui)
        LDR      R0,[R4, #+40]
        CMP      R0,#+0
        BEQ      ??ExitMenuList_4
//  285   {
//  286     ActiveTAB = TabMenuBar_GetFocusedTab(bk->gui);
        SWI      +605
        LDR      R1,??DataTable11  ;; ActiveTAB
        STR      R0,[R1, #+0]
//  287     GUIObject_Destroy( bk->gui);
        LDR      R0,[R4, #+40]
        SWI      +462
//  288     bk->gui=0;
        STR      R5,[R4, #+40]
//  289   }
//  290 
//  291   BookObj_Hide(book,0);
??ExitMenuList_4:
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +369
//  292 
//  293   return(0);
        MOV      R0,R5
        POP      {R4-R7,PC}       ;; return
        CFI EndBlock cfiBlock23
//  294 }

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable11:
        DC32     ActiveTAB

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon0
        CFI NoFunction
        THUMB
??ShowMenu??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock24
        REQUIRE ??ShowMenu
//  295 

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
//  296 const PAGE_MSG CreateMenu_PageEvents[]@ "DYN_PAGE" ={
CreateMenu_PageEvents:
        DATA
        DC32 66, ??CreateMenuList, 76, ??CreateMenuList, 67, ??ExitMenuList, 64
        DC32 0H
//  297   PAGE_ENTER_EVENT_TAG,CreateMenuList,
//  298   ACCEPT_EVENT_TAG,CreateMenuList,
//  299   PAGE_EXIT_EVENT_TAG,ExitMenuList,
//  300   NIL_EVENT_TAG,0
//  301 };
//  302 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//  303 PAGE_DESC CreateMenu_page ={"Tamagochi_CreateMenu_Main_Page",0,CreateMenu_PageEvents};
CreateMenu_page:
        DS8 12
        REQUIRE `?<Initializer for CreateMenu_page>`
//  304 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI Function ??ShowMenu
        ARM
//  305 void ShowMenu(BOOK * book)
//  306 {
//  307   BookObj_CallPage(book,&CreateMenu_page);
??ShowMenu:
        LDR      R1,??ShowMenu_1  ;; CreateMenu_page
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        SWI      +696
//  308 }
        POP      {PC}             ;; return
        DATA
??ShowMenu_1:
        DC32     CreateMenu_page
        CFI EndBlock cfiBlock25

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock26 Using cfiCommon0
        CFI NoFunction
        THUMB
??CloseMenu??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock26
        REQUIRE ??CloseMenu
//  309 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock27 Using cfiCommon1
        CFI Function ??CloseMenu
        ARM
//  310 void CloseMenu(BOOK * book)
//  311 {
//  312   ExitMenuList(0,book);
??CloseMenu:
        MOV      R1,R0
        MOV      R0,#+0
        B        ??ExitMenuList   ;; tailcall
        CFI EndBlock cfiBlock27
//  313 }

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock28 Using cfiCommon1
        CFI NoFunction
        ARM
??extractdir??rA:
        LDR      R12,??Subroutine14_0  ;; ??extractdir
        BX       R12
        DATA
??Subroutine14_0:
        DC32     ??extractdir
        CFI EndBlock cfiBlock28

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock29 Using cfiCommon1
        CFI NoFunction
        ARM
??getdir??rA:
        LDR      R12,??Subroutine15_0  ;; ??getdir
        BX       R12
        DATA
??Subroutine15_0:
        DC32     ??getdir
        CFI EndBlock cfiBlock29

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for ActiveTAB>`:
        DATA
        DC32 0
`?<Initializer for ActivePOS>`:
        DC32 0
`?<Initializer for menuprocs>`:
        DC32 ??GamePlay, ??Vaccinate, ??Discipline, ??SleepCommand
        DC32 ??BatheCommand, ??RoomCommand, ??InfoStatus, ??ChangeName
        DC32 ??EditConfig, ??AboutDlg

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for CreateMenu_page>`:
        DATA
        DC32 `?<Constant "Tamagochi_CreateMenu_...">`, 0H
        DC32 CreateMenu_PageEvents

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        END
// 
// 2 052 bytes in segment CODE
//   476 bytes in segment DATA_C
//    60 bytes in segment DATA_I
//    60 bytes in segment DATA_ID
//     4 bytes in segment DATA_Z
//    32 bytes in segment DYN_PAGE
//    24 bytes in segment INITTAB
// 
// 1 972 bytes of CODE  memory (+ 104 bytes shared)
//   568 bytes of CONST memory
//    64 bytes of DATA  memory
//
//Errors: none
//Warnings: none
