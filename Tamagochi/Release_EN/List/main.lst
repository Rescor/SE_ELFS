##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  23:08:16 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\main #
#                       .c                                                   #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\main #
#                       .c -D NDEBUG -D LANG_EN -D OLDFUNCTIONS -lC          #
#                       Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\Rele #
#                       ase_EN\List\ -lA Z:\home\perk11\www\perk11.info\svn\ #
#                       SE\Tamagochi\Release_EN\List\ -o                     #
#                       Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\Rele #
#                       ase_EN\Obj\ -s9 --no_unroll --no_inline --cpu_mode   #
#                       arm --endian little --cpu ARM926EJ-S --stack_align   #
#                       4 --interwork -e --enable_multibytes --fpu None      #
#                       --eec++ --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl #
#                       5tpainl8n.h -I Z:\home\perk11\IAR2\arm\INC\          #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\Rele #
#                       ase_EN\List\main.lst                                 #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\Rele #
#                       ase_EN\Obj\main.r79                                  #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\Tamagochi\main.c
      1          // Ёльф-тамагочи
      2          // Eraser @2007
      3          // anis_1981@mail.ru
      4          // ICQ:308911945
      5          
      6          #include "..\\include\Lib_Clara.h"

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs LPARAM::LPARAM(int)
   \                     ??LPARAM:
   \   00000000   001080E5           STR      R1,[R0, #+0]
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs LPARAM::LPARAM(void *)
   \                     ??LPARAM_1:
   \   00000000   001080E5           STR      R1,[R0, #+0]
   \   00000004   1EFF2FE1           BX       LR               ;; return

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs LPARAM::operator void *()
   \                     `??operator void *`:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
   \   00000004   1EFF2FE1           BX       LR               ;; return
      7          #include "..\\include\Dir.h"
      8          #include "..\\include\var_arg.h"
      9          #include "..\\include\cfg_items.h"
     10          #include "Tamagochi.h"
     11          #include "RANDOM.h"

   \                                 In segment DATA_C, align 4, align-sorted
   \   static unsigned char const __data rndtable[256]
   \                     rndtable:
   \   00000000   00086DDCDEF1       DC8 0, 8, 109, 220, 222, 241, 149, 107, 75, 248, 254, 140, 16, 66, 74
   \              956B4BF8FE8C
   \              10424A      
   \   0000000F   15D32F50F29A       DC8 21, 211, 47, 80, 242, 154, 27, 205, 128, 161, 89, 77, 36, 95, 110
   \              1BCD80A1594D
   \              245F6E      
   \   0000001E   5530D48CD3F9       DC8 85, 48, 212, 140, 211, 249, 22, 79, 200, 50, 28, 188, 52, 140, 202
   \              164FC8321CBC
   \              348CCA      
   \   0000002D   7844913E46B8       DC8 120, 68, 145, 62, 70, 184, 190, 91, 197, 152, 224, 149, 104, 25
   \              BE5BC598E095
   \              6819        
   \   0000003B   B2FCB6CAB68D       DC8 178, 252, 182, 202, 182, 141, 197, 4, 81, 181, 242, 145, 42, 39
   \              C50451B5F291
   \              2A27        
   \   00000049   E39CC6E1C1DB       DC8 227, 156, 198, 225, 193, 219, 93, 122, 175, 249, 0, 175, 143, 70
   \              5D7AAFF900AF
   \              8F46        
   \   00000057   EF2EF6A335A3       DC8 239, 46, 246, 163, 53, 163, 109, 168, 135, 2, 235, 25, 92, 20, 145
   \              6DA88702EB19
   \              5C1491      
   \   00000066   8A4D45A64EB0       DC8 138, 77, 69, 166, 78, 176, 173, 212, 166, 113, 94, 161, 41, 50, 239
   \              ADD4A6715EA1
   \              2932EF      
   \   00000075   316FA4463C02       DC8 49, 111, 164, 70, 60, 2, 37, 171, 75, 136, 156, 11, 56, 42, 146
   \              25AB4B889C0B
   \              382A92      
   \   00000084   8AE549924D3D       DC8 138, 229, 73, 146, 77, 61, 98, 196, 135, 106, 63, 197, 195, 86, 96
   \              62C4876A3FC5
   \              C35660      
   \   00000093   CB7165AAF7B5       DC8 203, 113, 101, 170, 247, 181, 113, 80, 250, 108, 7, 255, 237, 129
   \              7150FA6C07FF
   \              ED81        
   \   000000A1   E24F6B70A667       DC8 226, 79, 107, 112, 166, 103, 241, 24, 223, 239, 120, 198, 58, 60
   \              F118DFEF78C6
   \              3A3C        
   \   000000AF   528003B8428F       DC8 82, 128, 3, 184, 66, 143, 224, 145, 224, 81, 206, 163, 45, 63, 90
   \              E091E051CEA3
   \              2D3F5A      
   \   000000BE   A8723B219F5F       DC8 168, 114, 59, 33, 159, 95, 28, 139, 123, 98, 125, 196, 15, 70, 194
   \              1C8B7B627DC4
   \              0F46C2      
   \   000000CD   FD360E6DE247       DC8 253, 54, 14, 109, 226, 71, 17, 161, 93, 186, 87, 244, 138, 20, 52
   \              11A15DBA57F4
   \              8A1434      
   \   000000DC   7BFB1A24112E       DC8 123, 251, 26, 36, 17, 46, 52, 231, 232, 76, 31, 221, 84, 37, 216
   \              34E7E84C1FDD
   \              5425D8      
   \   000000EB   A5D46AC5F262       DC8 165, 212, 106, 197, 242, 98, 43, 39, 175, 254, 145, 190, 84, 118
   \              2B27AFFE91BE
   \              5476        
   \   000000F9   DEBB8878A3EC       DC8 222, 187, 136, 120, 163, 236, 249
   \              F9          

   \                                 In segment DATA_Z, align 1, align-sorted
   \   unsigned char __data rndindex
   \                     rndindex:
   \   00000000                      DS8 1

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs void Randomize()
   \                     ??Randomize:
   \   00000000   ........           LDR      R0,??DataTable8  ;; SYNC
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   0D10A0E1           MOV      R1,SP
   \   00000014   6E0100EF           SWI      +366
   \   00000018   0610DDE5           LDRB     R1,[SP, #+6]
   \   0000001C   04009FE5           LDR      R0,??Randomize_1  ;; rndindex
   \   00000020   0010C0E5           STRB     R1,[R0, #+0]
   \   00000024   0380BDE8           POP      {R0,R1,PC}       ;; return
   \                     ??Randomize_1:
   \   00000028   ........           DC32     rndindex

   \                                 In segment CODE, align 4, keep-with-next
   \   __??Code32?? __code __interwork __atpcs unsigned char Random()
   \                     ??Random:
   \   00000000   18009FE5           LDR      R0,??Random_1    ;; rndindex
   \   00000004   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000008   011081E2           ADD      R1,R1,#+1
   \   0000000C   0010C0E5           STRB     R1,[R0, #+0]
   \   00000010   0C009FE5           LDR      R0,??Random_1+0x4  ;; rndtable
   \   00000014   FF1001E2           AND      R1,R1,#0xFF
   \   00000018   0000D1E7           LDRB     R0,[R1, +R0]
   \   0000001C   1EFF2FE1           BX       LR               ;; return
   \                     ??Random_1:
   \   00000020   ........           DC32     rndindex
   \   00000024   ........           DC32     rndtable
     12          #include "conf_loader.h"
     13          #include "language.h"

   \                                 In segment DATA_C, align 4, align-sorted
   \   static wchar_t const *const __data SpeakMessage[37]
   \                     SpeakMessage:
   \   00000000   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   00000004   ........           DC32 `?<Constant L"\\x49\\x20\\x6b\\x6e\\x6f\\x77\\x20\\x62\\`
   \   00000008   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   0000000C   ........           DC32 `?<Constant L"\\x42\\x69\\x74\\x63\\x68\\x21\\x20\\x3a\\`
   \   00000010   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   00000014   ........           DC32 `?<Constant L"\\x47\\x61\\x79\\x21\\x20\\x3a\\x29">`
   \   00000018   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   0000001C   ........           DC32 `?<Constant L"\\x4d\\x6f\\x72\\x6f\\x6e\\x21\\x20\\x3a\\`
   \   00000020   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   00000024   ........           DC32 `?<Constant L"\\x49\\x20\\x77\\x61\\x6e\\x74\\x20\\x73\\`
   \   00000028   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   0000002C   ........           DC32 `?<Constant L"\\x49\\x20\\x6c\\x69\\x6b\\x65\\x20\\x62\\`
   \   00000030   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   00000034   ........           DC32 `?<Constant L"\\x44\\x69\\x64\\x20\\x79\\x6f\\x75\\x20\\`
   \   00000038   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   0000003C   ........           DC32 `?<Constant L"\\x49\\x27\\x76\\x65\\x20\\x64\\x65\\x6c\\`
   \   00000040   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   00000044   ........           DC32 `?<Constant L"\\x4d\\x61\\x79\\x20\\x69\\x20\\x66\\x6f\\`
   \   00000048   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   0000004C   ........           DC32 `?<Constant L"\\x42\\x6c\\x75\\x65\\x54\\x6f\\x6f\\x74\\`
   \   00000050   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   00000054   ........           DC32 `?<Constant L"\\x4e\\x65\\x74\\x77\\x6f\\x72\\x6b\\x20\\`
   \   00000058   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   0000005C   ........           DC32 `?<Constant L"\\x53\\x69\\x6d\\x20\\x63\\x61\\x72\\x64\\`
   \   00000060   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   00000064   ........           DC32 `?<Constant L"\\x50\\x49\\x4e\\x20\\x69\\x73\\x20\\x75\\`
   \   00000068   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   0000006C   ........           DC32 `?<Constant L"\\x4d\\x61\\x73\\x74\\x65\\x72\\x20\\x72\\`
   \   00000070   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   00000074   ........           DC32 `?<Constant L"\\x47\\x69\\x76\\x65\\x20\\x6d\\x65\\x20\\`
   \   00000078   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   0000007C   ........           DC32 `?<Constant L"\\x50\\x72\\x65\\x73\\x73\\x20\\x6f\\x6e\\`
   \   00000080   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   00000084   ........           DC32 `?<Constant L"\\x54\\x65\\x61\\x63\\x68\\x20\\x6d\\x65\\`
   \   00000088   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   0000008C   ........           DC32 `?<Constant L"\\x4e\\x65\\x77\\x20\\x73\\x79\\x73\\x74\\`
   \   00000090   ........           DC32 `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`
   \   00000094   ........           DC32 `?<Constant L"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x2e\\x77\\`
   \   00000098   ........           DC32 `?<Constant L"\\x68\\x65\\x6c\\x6c\\x6f\\x2e\\x77\\x61\\`
   \   0000009C   ........           DC32 `?<Constant L"\\x62\\x69\\x72\\x74\\x68\\x64\\x61\\x79\\`
   \   000000A0   ........           DC32 `?<Constant L"\\x61\\x6c\\x61\\x72\\x6d\\x2e\\x77\\x61\\`
   \   000000A4   ........           DC32 `?<Constant L"\\x63\\x6f\\x6d\\x65\\x6f\\x6e\\x2e\\x77\\`
   \   000000A8   ........           DC32 `?<Constant L"\\x69\\x6c\\x6c\\x67\\x65\\x74\\x79\\x6f\\`
   \   000000AC   ........           DC32 `?<Constant L"\\x62\\x6f\\x72\\x69\\x6e\\x67\\x2e\\x77\\`
   \   000000B0   ........           DC32 `?<Constant L"\\x62\\x79\\x65\\x62\\x79\\x65\\x2e\\x77\\`
   \   000000B4   ........           DC32 `?<Constant L"\\x66\\x61\\x74\\x61\\x6c\\x69\\x74\\x79\\`
   \   000000B8   ........           DC32 `?<Constant L"\\x66\\x69\\x72\\x73\\x74\\x62\\x6c\\x6f\\`
   \   000000BC   ........           DC32 `?<Constant L"\\x6c\\x61\\x75\\x67\\x68\\x2e\\x77\\x61\\`
   \   000000C0   ........           DC32 `?<Constant L"\\x6c\\x65\\x61\\x76\\x65\\x6d\\x65\\x2e\\`
   \   000000C4   ........           DC32 `?<Constant L"\\x6e\\x6f\\x6f\\x6f\\x2e\\x77\\x61\\x76"`
   \   000000C8   ........           DC32 `?<Constant L"\\x6f\\x68\\x64\\x65\\x65\\x72\\x2e\\x77\\`
   \   000000CC   ........           DC32 `?<Constant L"\\x73\\x6c\\x65\\x65\\x70\\x2e\\x77\\x61\\`
   \   000000D0   ........           DC32 `?<Constant L"\\x6f\\x75\\x63\\x68\\x2e\\x77\\x61\\x76"`
   \   000000D4   ........           DC32 `?<Constant L"\\x6f\\x77\\x2e\\x77\\x61\\x76">`
   \   000000D8   ........           DC32 `?<Constant L"\\x79\\x65\\x73\\x73\\x69\\x72\\x2e\\x77\\`
   \   000000DC   ........           DC32 `?<Constant L"\\x63\\x72\\x79\\x2e\\x77\\x61\\x76">`
   \   000000E0   ........           DC32 `?<Constant L"\\x63\\x68\\x65\\x65\\x72\\x5f\\x66\\x65\\`
   \   000000E4   ........           DC32 `?<Constant L"\\x63\\x68\\x65\\x65\\x72\\x5f\\x6d\\x61\\`
   \   000000E8   ........           DC32 `?<Constant L"\\x62\\x61\\x74\\x68\\x65\\x2e\\x77\\x61\\`
   \   000000EC   54006F006F00       DC8 54H, 0, 6FH, 0, 6FH, 0, 20H, 0
   \              2000        
   \   000000F4   6D0075006300       DC8 6DH, 0, 75H, 0, 63H, 0, 68H, 0
   \              6800        
   \   000000FC   20006E006100       DC8 20H, 0, 6EH, 0, 61H, 0, 73H, 0
   \              7300        
   \   00000104   740079002000       DC8 74H, 0, 79H, 0, 20H, 0, 73H, 0
   \              7300        
   \   0000010C   630072006100       DC8 63H, 0, 72H, 0, 61H, 0, 70H, 0
   \              7000        
   \   00000114   730020006900       DC8 73H, 0, 20H, 0, 69H, 0, 6EH, 0
   \              6E00        
   \   0000011C   20006D007900       DC8 20H, 0, 6DH, 0, 79H, 0, 20H, 0
   \              2000        
   \   00000124   72006F006F00       DC8 72H, 0, 6FH, 0, 6FH, 0, 6DH, 0
   \              6D00        
   \   0000012C   210020003A00       DC8 21H, 0, 20H, 0, 3AH, 0, 2FH, 0
   \              2F00        
   \   00000134   0000               DC8 0, 0
   \   00000136   0000               DC8 0, 0
   \   00000138   490027006D00       DC8 49H, 0, 27H, 0, 6DH, 0, 20H, 0
   \              2000        
   \   00000140   720065006100       DC8 72H, 0, 65H, 0, 61H, 0, 6CH, 0
   \              6C00        
   \   00000148   6C0079002000       DC8 6CH, 0, 79H, 0, 20H, 0, 42H, 0
   \              4200        
   \   00000150   4F0052004500       DC8 4FH, 0, 52H, 0, 45H, 0, 44H, 0
   \              4400        
   \   00000158   21000000           DC8 21H, 0, 0, 0
   \   0000015C   490027006D00       DC8 49H, 0, 27H, 0, 6DH, 0, 20H, 0
   \              2000        
   \   00000164   680075006E00       DC8 68H, 0, 75H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   0000016C   650072002100       DC8 65H, 0, 72H, 0, 21H, 0, 20H, 0
   \              2000        
   \   00000174   470069007600       DC8 47H, 0, 69H, 0, 76H, 0, 65H, 0
   \              6500        
   \   0000017C   20006D006500       DC8 20H, 0, 6DH, 0, 65H, 0, 20H, 0
   \              2000        
   \   00000184   6E0065007700       DC8 6EH, 0, 65H, 0, 77H, 0, 20H, 0
   \              2000        
   \   0000018C   66006F006F00       DC8 66H, 0, 6FH, 0, 6FH, 0, 64H, 0
   \              6400        
   \   00000194   21000000           DC8 21H, 0, 0, 0
   \   00000198   490027006D00       DC8 49H, 0, 27H, 0, 6DH, 0, 20H, 0
   \              2000        
   \   000001A0   730069006300       DC8 73H, 0, 69H, 0, 63H, 0, 6BH, 0
   \              6B00        
   \   000001A8   200061006E00       DC8 20H, 0, 61H, 0, 6EH, 0, 64H, 0
   \              6400        
   \   000001B0   200074006900       DC8 20H, 0, 74H, 0, 69H, 0, 72H, 0
   \              7200        
   \   000001B8   650064002E00       DC8 65H, 0, 64H, 0, 2EH, 0, 2EH, 0
   \              2E00        
   \   000001C0   2E0020003D00       DC8 2EH, 0, 20H, 0, 3DH, 0, 28H, 0
   \              2800        
   \   000001C8   0000               DC8 0, 0
   \   000001CA   0000               DC8 0, 0
   \   000001CC   490027006D00       DC8 49H, 0, 27H, 0, 6DH, 0, 20H, 0
   \              2000        
   \   000001D4   640065006100       DC8 64H, 0, 65H, 0, 61H, 0, 64H, 0
   \              6400        
   \   000001DC   210020002000       DC8 21H, 0, 20H, 0, 20H, 0, 2BH, 0
   \              2B00        
   \   000001E4   2F002D002800       DC8 2FH, 0, 2DH, 0, 28H, 0, 0, 0
   \              0000        
   \   000001EC   490027006D00       DC8 49H, 0, 27H, 0, 6DH, 0, 20H, 0
   \              2000        
   \   000001F4   73006C006500       DC8 73H, 0, 6CH, 0, 65H, 0, 65H, 0
   \              6500        
   \   000001FC   700069006E00       DC8 70H, 0, 69H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000204   210020005A00       DC8 21H, 0, 20H, 0, 5AH, 0, 7AH, 0
   \              7A00        
   \   0000020C   7A002E002E00       DC8 7AH, 0, 2EH, 0, 2EH, 0, 0, 0
   \              0000        
   \   00000214   43006F006F00       DC8 43H, 0, 6FH, 0, 6FH, 0, 6CH, 0
   \              6C00        
   \   0000021C   200067006100       DC8 20H, 0, 67H, 0, 61H, 0, 6DH, 0
   \              6D00        
   \   00000224   650021002000       DC8 65H, 0, 21H, 0, 20H, 0, 3AH, 0
   \              3A00        
   \   0000022C   29000000           DC8 29H, 0, 0, 0
   \   00000230   44006F006E00       DC8 44H, 0, 6FH, 0, 6EH, 0, 27H, 0
   \              2700        
   \   00000238   740020006400       DC8 74H, 0, 20H, 0, 64H, 0, 69H, 0
   \              6900        
   \   00000240   730074007500       DC8 73H, 0, 74H, 0, 75H, 0, 72H, 0
   \              7200        
   \   00000248   620021002000       DC8 62H, 0, 21H, 0, 20H, 0, 49H, 0
   \              4900        
   \   00000250   27006D002000       DC8 27H, 0, 6DH, 0, 20H, 0, 62H, 0
   \              6200        
   \   00000258   750073007900       DC8 75H, 0, 73H, 0, 79H, 0, 21H, 0
   \              2100        
   \   00000260   0000               DC8 0, 0
   \   00000262   0000               DC8 0, 0
   \   00000264   410075002100       DC8 41H, 0, 75H, 0, 21H, 0, 20H, 0
   \              2000        
   \   0000026C   500061006900       DC8 50H, 0, 61H, 0, 69H, 0, 6EH, 0
   \              6E00        
   \   00000274   660075006C00       DC8 66H, 0, 75H, 0, 6CH, 0, 21H, 0
   \              2100        
   \   0000027C   20003A002700       DC8 20H, 0, 3AH, 0, 27H, 0, 28H, 0
   \              2800        
   \   00000284   0000               DC8 0, 0
   \   00000286   0000               DC8 0, 0
   \   00000288   59006F007500       DC8 59H, 0, 6FH, 0, 75H, 0, 20H, 0
   \              2000        
   \   00000290   610072006500       DC8 61H, 0, 72H, 0, 65H, 0, 20H, 0
   \              2000        
   \   00000298   730068007200       DC8 73H, 0, 68H, 0, 72H, 0, 65H, 0
   \              6500        
   \   000002A0   770021002000       DC8 77H, 0, 21H, 0, 20H, 0, 3AH, 0
   \              3A00        
   \   000002A8   2F000000           DC8 2FH, 0, 0, 0
   \   000002AC   4E0069006700       DC8 4EH, 0, 69H, 0, 67H, 0, 68H, 0
   \              6800        
   \   000002B4   740021002000       DC8 74H, 0, 21H, 0, 20H, 0, 49H, 0
   \              4900        
   \   000002BC   200077006900       DC8 20H, 0, 77H, 0, 69H, 0, 6CH, 0
   \              6C00        
   \   000002C4   6C0020007300       DC8 6CH, 0, 20H, 0, 73H, 0, 6CH, 0
   \              6C00        
   \   000002CC   650065007000       DC8 65H, 0, 65H, 0, 70H, 0, 21H, 0
   \              2100        
   \   000002D4   0000               DC8 0, 0
   \   000002D6   0000               DC8 0, 0
   \   000002D8   480075007200       DC8 48H, 0, 75H, 0, 72H, 0, 72H, 0
   \              7200        
   \   000002E0   610068002100       DC8 61H, 0, 68H, 0, 21H, 0, 20H, 0
   \              2000        
   \   000002E8   410067006100       DC8 41H, 0, 67H, 0, 61H, 0, 69H, 0
   \              6900        
   \   000002F0   6E0020006D00       DC8 6EH, 0, 20H, 0, 6DH, 0, 6FH, 0
   \              6F00        
   \   000002F8   72006E006900       DC8 72H, 0, 6EH, 0, 69H, 0, 6EH, 0
   \              6E00        
   \   00000300   670021000000       DC8 67H, 0, 21H, 0, 0, 0
   \   00000306   0000               DC8 0, 0
   \   00000308   540069007200       DC8 54H, 0, 69H, 0, 72H, 0, 65H, 0
   \              6500        
   \   00000310   64002C002000       DC8 64H, 0, 2CH, 0, 20H, 0, 69H, 0
   \              6900        
   \   00000318   740020006900       DC8 74H, 0, 20H, 0, 69H, 0, 73H, 0
   \              7300        
   \   00000320   20006E006500       DC8 20H, 0, 6EH, 0, 65H, 0, 63H, 0
   \              6300        
   \   00000328   650073007300       DC8 65H, 0, 73H, 0, 73H, 0, 61H, 0
   \              6100        
   \   00000330   720079002000       DC8 72H, 0, 79H, 0, 20H, 0, 74H, 0
   \              7400        
   \   00000338   6F0020006800       DC8 6FH, 0, 20H, 0, 68H, 0, 61H, 0
   \              6100        
   \   00000340   760065002000       DC8 76H, 0, 65H, 0, 20H, 0, 61H, 0
   \              6100        
   \   00000348   200072006500       DC8 20H, 0, 72H, 0, 65H, 0, 73H, 0
   \              7300        
   \   00000350   740021000000       DC8 74H, 0, 21H, 0, 0, 0
   \   00000356   0000               DC8 0, 0
   \   00000358   480061007300       DC8 48H, 0, 61H, 0, 73H, 0, 20H, 0
   \              2000        
   \   00000360   73006C006500       DC8 73H, 0, 6CH, 0, 65H, 0, 70H, 0
   \              7000        
   \   00000368   74002C002000       DC8 74H, 0, 2CH, 0, 20H, 0, 69H, 0
   \              6900        
   \   00000370   740020006900       DC8 74H, 0, 20H, 0, 69H, 0, 73H, 0
   \              7300        
   \   00000378   200070006F00       DC8 20H, 0, 70H, 0, 6FH, 0, 73H, 0
   \              7300        
   \   00000380   730069006200       DC8 73H, 0, 69H, 0, 62H, 0, 6CH, 0
   \              6C00        
   \   00000388   650020007400       DC8 65H, 0, 20H, 0, 74H, 0, 6FH, 0
   \              6F00        
   \   00000390   200068006100       DC8 20H, 0, 68H, 0, 61H, 0, 76H, 0
   \              7600        
   \   00000398   650020006100       DC8 65H, 0, 20H, 0, 61H, 0, 20H, 0
   \              2000        
   \   000003A0   67006F006F00       DC8 67H, 0, 6FH, 0, 6FH, 0, 64H, 0
   \              6400        
   \   000003A8   200074006900       DC8 20H, 0, 74H, 0, 69H, 0, 6DH, 0
   \              6D00        
   \   000003B0   650021000000       DC8 65H, 0, 21H, 0, 0, 0
   \   000003B6   0000               DC8 0, 0
   \   000003B8   490020006100       DC8 49H, 0, 20H, 0, 61H, 0, 6DH, 0
   \              6D00        
   \   000003C0   200073006C00       DC8 20H, 0, 73H, 0, 6CH, 0, 65H, 0
   \              6500        
   \   000003C8   650070002100       DC8 65H, 0, 70H, 0, 21H, 0, 0, 0
   \              0000        
   \   000003D0   490020006100       DC8 49H, 0, 20H, 0, 61H, 0, 6DH, 0
   \              6D00        
   \   000003D8   200077006100       DC8 20H, 0, 77H, 0, 61H, 0, 6BH, 0
   \              6B00        
   \   000003E0   650075007000       DC8 65H, 0, 75H, 0, 70H, 0, 21H, 0
   \              2100        
   \   000003E8   0000               DC8 0, 0
   \   000003EA   0000               DC8 0, 0
   \   000003EC   49006E002000       DC8 49H, 0, 6EH, 0, 20H, 0, 70H, 0
   \              7000        
   \   000003F4   650072006600       DC8 65H, 0, 72H, 0, 66H, 0, 65H, 0
   \              6500        
   \   000003FC   630074002000       DC8 63H, 0, 74H, 0, 20H, 0, 62H, 0
   \              6200        
   \   00000404   6C0069007300       DC8 6CH, 0, 69H, 0, 73H, 0, 73H, 0
   \              7300        
   \   0000040C   21000000           DC8 21H, 0, 0, 0
   \   00000410   430068006500       DC8 43H, 0, 68H, 0, 65H, 0, 65H, 0
   \              6500        
   \   00000418   720073002100       DC8 72H, 0, 73H, 0, 21H, 0, 20H, 0
   \              2000        
   \   00000420   570065002000       DC8 57H, 0, 65H, 0, 20H, 0, 68H, 0
   \              6800        
   \   00000428   610076006500       DC8 61H, 0, 76H, 0, 65H, 0, 20H, 0
   \              2000        
   \   00000430   6D006F007200       DC8 6DH, 0, 6FH, 0, 72H, 0, 65H, 0
   \              6500        
   \   00000438   21000000           DC8 21H, 0, 0, 0
   \   0000043C   420069007200       DC8 42H, 0, 69H, 0, 72H, 0, 74H, 0
   \              7400        
   \   00000444   680064006100       DC8 68H, 0, 64H, 0, 61H, 0, 79H, 0
   \              7900        
   \   0000044C   20006D006F00       DC8 20H, 0, 6DH, 0, 6FH, 0, 6DH, 0
   \              6D00        
   \   00000454   65006E007400       DC8 65H, 0, 6EH, 0, 74H, 0, 21H, 0
   \              2100        
   \   0000045C   20005E005E00       DC8 20H, 0, 5EH, 0, 5EH, 0, 0, 0
   \              0000        
   \   00000464   2F002A002E00       DC8 2FH, 0, 2AH, 0, 2EH, 0, 2AH, 0
   \              2A00        
   \   0000046C   0000               DC8 0, 0
   \   0000046E   0000               DC8 0, 0
   \   00000470   2E0067007600       DC8 2EH, 0, 67H, 0, 76H, 0, 6EH, 0
   \              6E00        
   \   00000478   0000               DC8 0, 0
   \   0000047A   0000               DC8 0, 0
   \   0000047C   670076006E00       DC8 67H, 0, 76H, 0, 6EH, 0, 0, 0
   \              0000        
   \   00000484   490020006300       DC8 49H, 0, 20H, 0, 63H, 0, 61H, 0
   \              6100        
   \   0000048C   6E0020006E00       DC8 6EH, 0, 20H, 0, 6EH, 0, 6FH, 0
   \              6F00        
   \   00000494   740020006500       DC8 74H, 0, 20H, 0, 65H, 0, 6EH, 0
   \              6E00        
   \   0000049C   740065007200       DC8 74H, 0, 65H, 0, 72H, 0, 20H, 0
   \              2000        
   \   000004A4   69006E007400       DC8 69H, 0, 6EH, 0, 74H, 0, 6FH, 0
   \              6F00        
   \   000004AC   200061002000       DC8 20H, 0, 61H, 0, 20H, 0, 72H, 0
   \              7200        
   \   000004B4   6F006F006D00       DC8 6FH, 0, 6FH, 0, 6DH, 0, 20H, 0
   \              2000        
   \   000004BC   770069007400       DC8 77H, 0, 69H, 0, 74H, 0, 68H, 0
   \              6800        
   \   000004C4   20006D006500       DC8 20H, 0, 6DH, 0, 65H, 0, 61H, 0
   \              6100        
   \   000004CC   6C0021000000       DC8 6CH, 0, 21H, 0, 0, 0
   \   000004D2   0000               DC8 0, 0
   \   000004D4   490020006E00       DC8 49H, 0, 20H, 0, 6EH, 0, 65H, 0
   \              6500        
   \   000004DC   650064002000       DC8 65H, 0, 64H, 0, 20H, 0, 61H, 0
   \              6100        
   \   000004E4   200066007200       DC8 20H, 0, 66H, 0, 72H, 0, 69H, 0
   \              6900        
   \   000004EC   65006E006400       DC8 65H, 0, 6EH, 0, 64H, 0, 21H, 0
   \              2100        
   \   000004F4   0000               DC8 0, 0
   \   000004F6   0000               DC8 0, 0
   \   000004F8   490020006E00       DC8 49H, 0, 20H, 0, 6EH, 0, 65H, 0
   \              6500        
   \   00000500   650064002000       DC8 65H, 0, 64H, 0, 20H, 0, 61H, 0
   \              6100        
   \   00000508   200067006900       DC8 20H, 0, 67H, 0, 69H, 0, 72H, 0
   \              7200        
   \   00000510   6C002D006600       DC8 6CH, 0, 2DH, 0, 66H, 0, 72H, 0
   \              7200        
   \   00000518   690065006E00       DC8 69H, 0, 65H, 0, 6EH, 0, 64H, 0
   \              6400        
   \   00000520   21000000           DC8 21H, 0, 0, 0
   \   00000524   540061006D00       DC8 54H, 0, 61H, 0, 6DH, 0, 61H, 0
   \              6100        
   \   0000052C   67006F006300       DC8 67H, 0, 6FH, 0, 63H, 0, 68H, 0
   \              6800        
   \   00000534   69000A004900       DC8 69H, 0, 0AH, 0, 49H, 0, 27H, 0
   \              2700        
   \   0000053C   6D0020006100       DC8 6DH, 0, 20H, 0, 61H, 0, 6CH, 0
   \              6C00        
   \   00000544   720065006100       DC8 72H, 0, 65H, 0, 61H, 0, 64H, 0
   \              6400        
   \   0000054C   790020006800       DC8 79H, 0, 20H, 0, 68H, 0, 65H, 0
   \              6500        
   \   00000554   720065002100       DC8 72H, 0, 65H, 0, 21H, 0, 0, 0
   \              0000        
   \   0000055C   540061006D00       DC8 54H, 0, 61H, 0, 6DH, 0, 61H, 0
   \              6100        
   \   00000564   67006F006300       DC8 67H, 0, 6FH, 0, 63H, 0, 68H, 0
   \              6800        
   \   0000056C   69000000           DC8 69H, 0, 0, 0
   \   00000570   25006C007300       DC8 25H, 0, 6CH, 0, 73H, 0, 0, 0
   \              0000        
   \   00000578   540061006D00       DC8 54H, 0, 61H, 0, 6DH, 0, 61H, 0
   \              6100        
   \   00000580   67006F006300       DC8 67H, 0, 6FH, 0, 63H, 0, 68H, 0
   \              6800        
   \   00000588   690020006C00       DC8 69H, 0, 20H, 0, 6CH, 0, 6FH, 0
   \              6F00        
   \   00000590   610064006900       DC8 61H, 0, 64H, 0, 69H, 0, 6EH, 0
   \              6E00        
   \   00000598   670021000000       DC8 67H, 0, 21H, 0, 0, 0
   \   0000059E   0000               DC8 0, 0
   \                     `?<Constant L"\\x67\\x6c\\x6f\\x62\\x61\\x6c\\x2e\\x77\\`:
   \   000005A0   67006C006F00       DC8 67H, 0, 6CH, 0, 6FH, 0, 62H, 0
   \              6200        
   \   000005A8   61006C002E00       DC8 61H, 0, 6CH, 0, 2EH, 0, 77H, 0
   \              7700        
   \   000005B0   610076000000       DC8 61H, 0, 76H, 0, 0, 0
   \   000005B6   0000               DC8 0, 0
   \                     `?<Constant L"\\x62\\x69\\x72\\x74\\x68\\x64\\x61\\x79\\`:
   \   000005B8   620069007200       DC8 62H, 0, 69H, 0, 72H, 0, 74H, 0
   \              7400        
   \   000005C0   680064006100       DC8 68H, 0, 64H, 0, 61H, 0, 79H, 0
   \              7900        
   \   000005C8   2E0077006100       DC8 2EH, 0, 77H, 0, 61H, 0, 76H, 0
   \              7600        
   \   000005D0   0000               DC8 0, 0
   \   000005D2   0000               DC8 0, 0
   \                     `?<Constant L"\\x63\\x6f\\x6d\\x65\\x6f\\x6e\\x2e\\x77\\`:
   \   000005D4   63006F006D00       DC8 63H, 0, 6FH, 0, 6DH, 0, 65H, 0
   \              6500        
   \   000005DC   6F006E002E00       DC8 6FH, 0, 6EH, 0, 2EH, 0, 77H, 0
   \              7700        
   \   000005E4   610076000000       DC8 61H, 0, 76H, 0, 0, 0
   \   000005EA   0000               DC8 0, 0
   \                     `?<Constant L"\\x69\\x6c\\x6c\\x67\\x65\\x74\\x79\\x6f\\`:
   \   000005EC   69006C006C00       DC8 69H, 0, 6CH, 0, 6CH, 0, 67H, 0
   \              6700        
   \   000005F4   650074007900       DC8 65H, 0, 74H, 0, 79H, 0, 6FH, 0
   \              6F00        
   \   000005FC   75002E007700       DC8 75H, 0, 2EH, 0, 77H, 0, 61H, 0
   \              6100        
   \   00000604   76000000           DC8 76H, 0, 0, 0
   \                     `?<Constant L"\\x62\\x6f\\x72\\x69\\x6e\\x67\\x2e\\x77\\`:
   \   00000608   62006F007200       DC8 62H, 0, 6FH, 0, 72H, 0, 69H, 0
   \              6900        
   \   00000610   6E0067002E00       DC8 6EH, 0, 67H, 0, 2EH, 0, 77H, 0
   \              7700        
   \   00000618   610076000000       DC8 61H, 0, 76H, 0, 0, 0
   \   0000061E   0000               DC8 0, 0
   \                     `?<Constant L"\\x62\\x79\\x65\\x62\\x79\\x65\\x2e\\x77\\`:
   \   00000620   620079006500       DC8 62H, 0, 79H, 0, 65H, 0, 62H, 0
   \              6200        
   \   00000628   790065002E00       DC8 79H, 0, 65H, 0, 2EH, 0, 77H, 0
   \              7700        
   \   00000630   610076000000       DC8 61H, 0, 76H, 0, 0, 0
   \   00000636   0000               DC8 0, 0
   \                     `?<Constant L"\\x66\\x61\\x74\\x61\\x6c\\x69\\x74\\x79\\`:
   \   00000638   660061007400       DC8 66H, 0, 61H, 0, 74H, 0, 61H, 0
   \              6100        
   \   00000640   6C0069007400       DC8 6CH, 0, 69H, 0, 74H, 0, 79H, 0
   \              7900        
   \   00000648   2E0077006100       DC8 2EH, 0, 77H, 0, 61H, 0, 76H, 0
   \              7600        
   \   00000650   0000               DC8 0, 0
   \   00000652   0000               DC8 0, 0
   \                     `?<Constant L"\\x6c\\x61\\x75\\x67\\x68\\x2e\\x77\\x61\\`:
   \   00000654   6C0061007500       DC8 6CH, 0, 61H, 0, 75H, 0, 67H, 0
   \              6700        
   \   0000065C   68002E007700       DC8 68H, 0, 2EH, 0, 77H, 0, 61H, 0
   \              6100        
   \   00000664   76000000           DC8 76H, 0, 0, 0
   \                     `?<Constant L"\\x6c\\x65\\x61\\x76\\x65\\x6d\\x65\\x2e\\`:
   \   00000668   6C0065006100       DC8 6CH, 0, 65H, 0, 61H, 0, 76H, 0
   \              7600        
   \   00000670   65006D006500       DC8 65H, 0, 6DH, 0, 65H, 0, 2EH, 0
   \              2E00        
   \   00000678   770061007600       DC8 77H, 0, 61H, 0, 76H, 0, 0, 0
   \              0000        
   \                     `?<Constant L"\\x6e\\x6f\\x6f\\x6f\\x2e\\x77\\x61\\x76"`:
   \   00000680   6E006F006F00       DC8 6EH, 0, 6FH, 0, 6FH, 0, 6FH, 0
   \              6F00        
   \   00000688   2E0077006100       DC8 2EH, 0, 77H, 0, 61H, 0, 76H, 0
   \              7600        
   \   00000690   0000               DC8 0, 0
   \   00000692   0000               DC8 0, 0
   \                     `?<Constant L"\\x6f\\x68\\x64\\x65\\x65\\x72\\x2e\\x77\\`:
   \   00000694   6F0068006400       DC8 6FH, 0, 68H, 0, 64H, 0, 65H, 0
   \              6500        
   \   0000069C   650072002E00       DC8 65H, 0, 72H, 0, 2EH, 0, 77H, 0
   \              7700        
   \   000006A4   610076000000       DC8 61H, 0, 76H, 0, 0, 0
   \   000006AA   0000               DC8 0, 0
   \                     `?<Constant L"\\x73\\x6c\\x65\\x65\\x70\\x2e\\x77\\x61\\`:
   \   000006AC   73006C006500       DC8 73H, 0, 6CH, 0, 65H, 0, 65H, 0
   \              6500        
   \   000006B4   70002E007700       DC8 70H, 0, 2EH, 0, 77H, 0, 61H, 0
   \              6100        
   \   000006BC   76000000           DC8 76H, 0, 0, 0
   \                     `?<Constant L"\\x6f\\x75\\x63\\x68\\x2e\\x77\\x61\\x76"`:
   \   000006C0   6F0075006300       DC8 6FH, 0, 75H, 0, 63H, 0, 68H, 0
   \              6800        
   \   000006C8   2E0077006100       DC8 2EH, 0, 77H, 0, 61H, 0, 76H, 0
   \              7600        
   \   000006D0   0000               DC8 0, 0
   \   000006D2   0000               DC8 0, 0
   \                     `?<Constant L"\\x6f\\x77\\x2e\\x77\\x61\\x76">`:
   \   000006D4   6F0077002E00       DC8 6FH, 0, 77H, 0, 2EH, 0, 77H, 0
   \              7700        
   \   000006DC   610076000000       DC8 61H, 0, 76H, 0, 0, 0
   \   000006E2   0000               DC8 0, 0
   \                     `?<Constant L"\\x79\\x65\\x73\\x73\\x69\\x72\\x2e\\x77\\`:
   \   000006E4   790065007300       DC8 79H, 0, 65H, 0, 73H, 0, 73H, 0
   \              7300        
   \   000006EC   690072002E00       DC8 69H, 0, 72H, 0, 2EH, 0, 77H, 0
   \              7700        
   \   000006F4   610076000000       DC8 61H, 0, 76H, 0, 0, 0
   \   000006FA   0000               DC8 0, 0
   \                     `?<Constant L"\\x63\\x72\\x79\\x2e\\x77\\x61\\x76">`:
   \   000006FC   630072007900       DC8 63H, 0, 72H, 0, 79H, 0, 2EH, 0
   \              2E00        
   \   00000704   770061007600       DC8 77H, 0, 61H, 0, 76H, 0, 0, 0
   \              0000        
   \                     `?<Constant L"\\x62\\x61\\x74\\x68\\x65\\x2e\\x77\\x61\\`:
   \   0000070C   620061007400       DC8 62H, 0, 61H, 0, 74H, 0, 68H, 0
   \              6800        
   \   00000714   65002E007700       DC8 65H, 0, 2EH, 0, 77H, 0, 61H, 0
   \              6100        
   \   0000071C   76000000           DC8 76H, 0, 0, 0
     14          #include "misc_util.h"
     15          #include "crypt.h"
     16          
     17          #define ELF_HELLO_MSG_EVENT 777
     18          #define NAME_LEN  64
     19          
     20          #define TESTPATH L"/tpa/system/settings"
     21          #define TESTFILE L"filetype.bin"
     22          
     23          typedef struct
     24          {
     25            BOOK * book;
     26            wchar_t name[NAME_LEN];
     27          }HELLO_MSG;
     28          
     29          #define TMR_SECOND  1000
     30          
     31          #define STATUS_HEIGHT_128  14
     32          #define STATUS_HEIGHT_160  14
     33          #define STATUS_HEIGHT_208  18
     34          #define STATUS_HEIGHT_220  18
     35          #define STATUS_HEIGHT_320  25
     36          
     37          #define SOFT_HEIGHT_128  18
     38          #define SOFT_HEIGHT_160  18
     39          #define SOFT_HEIGHT_208  26
     40          #define SOFT_HEIGHT_220  26
     41          #define SOFT_HEIGHT_320  30
     42          
     43          enum SLEEP_TYPE {
     44            NIGHT_SLEEP = 0,
     45            FATIGUE_SLEEP,
     46            HUNGER_SLEEP,
     47            COMMAND_SLEEP
     48          };
     49          
     50          enum FIND_NAME {
     51            NOT_FOUND = 0,
     52            GAME_FOUND,
     53            PLAYER_FOUND
     54          };
     55          
     56          typedef struct
     57          {
     58            BOOK * book;
     59          }MSG;
     60          
     61          static const wchar_t * const SoundName[SOUND_NAME_COUNT]=
     62          {
     63            L"global.wav",     //tuk-tuk 0
     64            L"hello.wav",      //privet 1
     65            L"birthday.wav",   //den' rozhdeniya 2
     66            L"alarm.wav",      //toropis'! 3
     67            L"comeon.wav",     //nu davaj-davaj 4
     68            L"illgetyou.wav",  //nu pogodi 5
     69            L"boring.wav",     //skuchno 6
     70            L"byebye.wav",     //poka 7
     71            L"fatality.wav",   //ubit 8
     72            L"firstblood.wav", //pervaya krov' 9
     73            L"laugh.wav",      //haha 10
     74            L"leaveme.wav",    //ostav' menya 11
     75            L"nooo.wav",       //neee 12
     76            L"ohdeer.wav",     //oj-e-e-e-ej 13
     77            L"sleep.wav",      //zevaet 14
     78            L"ouch.wav",       //oj bol'na 15
     79            L"ow.wav",         //au! 16
     80            L"yessir.wav",     //da ser 17
     81            L"cry.wav",
     82            L"cheer_female.wav",
     83            L"cheer_male.wav",
     84            L"bathe.wav"
     85          };
     86          

   \                                 In segment DATA_C, align 4, align-sorted
     87          static const wchar_t * const icons_names[ICONS_NAMES_COUNT]=
   \                     icons_names:
   \   00000000   ........           DC32 `?<Constant L"\\x73\\x6d\\x69\\x6c\\x65\\x2e\\x70\\x6e\\`
   \   00000004   ........           DC32 `?<Constant L"\\x64\\x65\\x61\\x74\\x68\\x2e\\x70\\x6e\\`
   \   00000008   ........           DC32 `?<Constant L"\\x64\\x72\\x65\\x61\\x6d\\x2e\\x70\\x6e\\`
   \   0000000C   ........           DC32 `?<Constant L"\\x68\\x75\\x6e\\x67\\x65\\x72\\x2e\\x70\\`
   \   00000010   ........           DC32 `?<Constant L"\\x48\\x65\\x61\\x6c\\x74\\x68\\x2e\\x70\\`
   \   00000014   ........           DC32 `?<Constant L"\\x48\\x61\\x70\\x70\\x69\\x6e\\x65\\x73\\`
   \   00000018   ........           DC32 `?<Constant L"\\x44\\x69\\x72\\x74\\x69\\x6e\\x65\\x73\\`
   \   0000001C   ........           DC32 `?<Constant L"\\x42\\x6f\\x72\\x65\\x64\\x6f\\x6d\\x2e\\`
   \   00000020   ........           DC32 `?<Constant L"\\x42\\x65\\x68\\x61\\x76\\x69\\x6f\\x75\\`
   \   00000024   ........           DC32 `?<Constant L"\\x73\\x69\\x6e\\x67\\x6c\\x65\\x2e\\x70\\`
   \   00000028   ........           DC32 `?<Constant L"\\x69\\x6e\\x5f\\x6c\\x6f\\x76\\x65\\x2e\\`
   \   0000002C   ........           DC32 `?<Constant L"\\x62\\x61\\x74\\x68\\x65\\x2e\\x70\\x6e\\`
   \   00000030   ........           DC32 `?<Constant L"\\x6e\\x75\\x6c\\x6c\\x2e\\x70\\x6e\\x67"`
   \   00000034   ........           DC32 `?<Constant L"\\x67\\x61\\x6d\\x65\\x2e\\x70\\x6e\\x67"`
   \   00000038   ........           DC32 `?<Constant L"\\x6d\\x6f\\x6f\\x6e\\x2e\\x70\\x6e\\x67"`
   \   0000003C   ........           DC32 `?<Constant L"\\x6d\\x75\\x73\\x69\\x63\\x2e\\x70\\x6e\\`
   \   00000040   ........           DC32 `?<Constant L"\\x67\\x61\\x6d\\x65\\x2e\\x70\\x6e\\x67"`
   \   00000044   ........           DC32 `?<Constant L"\\x76\\x61\\x63\\x63\\x69\\x6e\\x61\\x74\\`
   \   00000048   ........           DC32 `?<Constant L"\\x64\\x69\\x73\\x63\\x69\\x70\\x6c\\x69\\`
   \   0000004C   ........           DC32 `?<Constant L"\\x73\\x6c\\x65\\x65\\x70\\x2e\\x70\\x6e\\`
   \   00000050   ........           DC32 `?<Constant L"\\x73\\x74\\x61\\x74\\x75\\x73\\x2e\\x70\\`
   \   00000054   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x73\\x6d\\x69\\x6c\\x65\\`
   \   00000058   ........           DC32 `?<Constant L"\\x73\\x65\\x74\\x74\\x69\\x6e\\x67\\x73\\`
   \   0000005C   ........           DC32 `?<Constant L"\\x61\\x62\\x6f\\x75\\x74\\x2e\\x70\\x6e\\`
   \   00000060   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x73\\x6d\\x69\\x6c\\x65\\`
   \   00000064   ........           DC32 `?<Constant L"\\x68\\x65\\x61\\x72\\x74\\x2e\\x70\\x6e\\`
   \   00000068   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x68\\x75\\x6e\\x67\\x65\\`
   \   0000006C   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x48\\x61\\x70\\x70\\x69\\`
   \   00000070   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x44\\x69\\x72\\x74\\x69\\`
   \   00000074   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x42\\x6f\\x72\\x65\\x64\\`
   \   00000078   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x42\\x65\\x68\\x61\\x76\\`
   \   0000007C   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x64\\x72\\x65\\x61\\x6d\\`
   \   00000080   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x73\\x65\\x78\\x2e\\x70\\`
   \   00000084   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x6d\\x61\\x6c\\x65\\x2e\\`
   \   00000088   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x66\\x65\\x6d\\x61\\x6c\\`
   \   0000008C   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x66\\x61\\x6d\\x69\\x6c\\`
   \   00000090   ........           DC32 `?<Constant L"\\x73\\x6d\\x5f\\x62\\x61\\x74\\x68\\x65\\`
   \   00000094   ........           DC32 `?<Constant L"\\x72\\x6f\\x6f\\x6d\\x2e\\x70\\x6e\\x67"`
     88          {
     89            L"smile.png",
     90            L"death.png",
     91            L"dream.png",
     92            L"hunger.png",
     93            L"Health.png",
     94            L"Happiness.png",
     95            L"Dirtiness.png",
     96            L"Boredom.png",
     97            L"Behaviour.png",
     98            L"single.png",
     99            L"in_love.png",
    100            L"bathe.png"
    101          };
    102          
    103          static const wchar_t * const icons_status[ICONS_STATUS_COUNT]=
    104          {
    105            L"null.png",
    106            L"game.png",
    107            L"moon.png",
    108            L"music.png"
    109          };
    110          
    111          static const wchar_t * const icons_menu[ICONS_MENU_COUNT]=
    112          {
    113            L"game.png",
    114            L"vaccinate.png",
    115            L"discipline.png",
    116            L"sleep.png",
    117            L"status.png",
    118            L"sm_smile.png",
    119            L"settings.png",
    120            L"about.png",
    121            L"sm_smile.png",
    122            L"heart.png",
    123            L"sm_hunger.png",
    124            L"sm_Happiness.png",
    125            L"sm_Dirtiness.png",
    126            L"sm_Boredom.png",
    127            L"sm_Behaviour.png",
    128            L"sm_dream.png",
    129            L"sm_sex.png",
    130            L"sm_male.png",
    131            L"sm_female.png",
    132            L"sm_family.png",
    133            L"sm_bathe.png",
    134            L"room.png"
    135          };
    136          
    137          DISP_OBJ_ONREDRAW_METHOD Status_oldReDraw = 0;
    138          DISP_OBJ ** GUI_status = 0;
    139          DISP_DESC * Status_desc = 0;
    140          
    141          DISP_OBJ_ONREDRAW_METHOD Display_oldReDraw = 0;
    142          DISP_OBJ * GUI_display = 0;
    143          DISP_DESC * Display_desc = 0;
    144          
    145          DISP_OBJ_ONREDRAW_METHOD Soft_oldReDraw = 0;
    146          DISP_OBJ * GUI_soft = 0;
    147          DISP_DESC * Soft_desc = 0;
    148          
    149          int DisplayWidth  = 0; //ширина диспле€ в пиксел€х
    150          int DisplayHeight = 0; //высота диспле€ в пиксел€х
    151          int SoftBarHeight   = 0;
    152          int StatusBarHeight = 0;
    153          int SoftBarY   = 0;
    154          int StatusBarY = 0;
    155          
    156          MyBOOK *TamagochiBook = 0;
    157          
    158          static char myappname[128]=ELFNAME;
    159          
    160          IMAGEID img_names[ICONS_NAMES_COUNT] = {NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,
    161                                              NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,
    162                                              NOIMAGE,NOIMAGE,NOIMAGE};
    163          
    164          IMAGEID img_status[ICONS_STATUS_COUNT] = {NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE};
    165          
    166          IMAGEID img_menu[ICONS_MENU_COUNT] = {NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,
    167                                            NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,
    168                                            NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,
    169                                            NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,
    170                                            NOIMAGE,NOIMAGE,NOIMAGE,NOIMAGE,
    171                                            NOIMAGE,NOIMAGE};
    172          
    173          int SmileSize = 0;
    174          int StatSize  = 0;
    175          
    176          //—татусы питомцев

   \                                 In segment DATA_Z, align 4, align-sorted
    177          TStatusPets Pets[MAX_PET_COUNT_GLB];
   \                     Pets:
   \   00000000                      DS8 8704
    178          
    179          char game_list[GAME_PLAYER_LIST_LEN];
    180          char player_list[GAME_PLAYER_LIST_LEN];
    181          
    182          u16 timer_save    = 0;
    183          u16 timer_refresh = 0;
    184          u16 timer_life    = 0;
    185          
    186          int screen = 0;
    187          u16 timerScreen = 0;
    188          u16 offtimerScreen = 0;
    189          
    190          void InitStatus(int indx, int age, int sex);
    191          void InitPetVar(int indx);
    192          int SaveStatus(int indx);
    193          void LoadAllPets();
    194          int NewKey(int key, int r1 , int mode, LPARAM, DISP_OBJ*);
    195          int isTamagochiBook(BOOK * book);
    196          void onTimer_save (u16 timerID, LPARAM lparam);
    197          void onTimer_refresh (u16 timerID, LPARAM lparam);
    198          void onTimer_life (u16 timerID, LPARAM lparam);
    199          

   \                                 In segment CODE, align 4, keep-with-next
    200          int isBookmanDaemonBook(BOOK * book)
    201          {
    202            if(!strcmp(book->xbook->name,"BookManagerDaemon")) return(1);
   \                     ??isBookmanDaemonBook:
   \   00000000   20109FE5           LDR      R1,??isBookmanDaemonBook_1  ;; `?<Constant "BookManagerDaemon">`
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   040090E5           LDR      R0,[R0, #+4]
   \   00000010   590100EF           SWI      +345
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   0080BD08           POPEQ    {PC}
    203            return(0);
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   0080BDE8           POP      {PC}             ;; return
   \                     ??isBookmanDaemonBook_1:
   \   00000028   ........           DC32     `?<Constant "BookManagerDaemon">`
    204          }
    205          
    206          // проверка, обрабатывает ли base_page книги событие

   \                                 In segment CODE, align 4, keep-with-next
    207          int CheckEv(BOOK * bk, int ev)
    208          {
    209            PAGE_MSG * pm;
    210            if (bk->base_page)
   \                     ??CheckEv:
   \   00000000   100090E5           LDR      R0,[R0, #+16]
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   1EFF2F01           BXEQ     LR
    211            {
    212              pm=(PAGE_MSG *)bk->base_page->msg_lst;
   \   0000000C   080090E5           LDR      R0,[R0, #+8]
    213              if (pm)
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0200001A           BNE      ??CheckEv_1
    214              {
    215                while ((pm->msg) && (pm->proc))
    216                {
    217                  if (pm->msg==ev)
    218                  {
    219                    return(1);
    220                  }
    221                  pm++;
    222                }
    223              }
    224            }
    225            return(0);
   \                     ??CheckEv_2:
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   1EFF2FE1           BX       LR               ;; return
   \                     ??CheckEv_3:
   \   00000020   080080E2           ADD      R0,R0,#+8
   \                     ??CheckEv_1:
   \   00000024   002090E5           LDR      R2,[R0, #+0]
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   04309015           LDRNE    R3,[R0, #+4]
   \   00000030   00005313           CMPNE    R3,#+0
   \   00000034   F7FFFF0A           BEQ      ??CheckEv_2
   \   00000038   010052E1           CMP      R2,R1
   \   0000003C   F7FFFF1A           BNE      ??CheckEv_3
   \   00000040   0100A0E3           MOV      R0,#+1
   \   00000044   1EFF2FE1           BX       LR
    226          }
    227          
    228          // получить им€ жавы

   \                                 In segment CODE, align 4, keep-with-next
    229          int GetJavaName(BOOK * bk)
    230          {
   \                     ??GetJavaName:
   \   00000000   10402DE9           PUSH     {R4,LR}
    231            wchar_t ws[100];
    232            TextID_GetWString(BookObj_GetSession(bk)->name,ws,100);
    233            if (!wstrncmp(ws,L"Foreign app",11))
   \   00000004   58409FE5           LDR      R4,??GetJavaName_1  ;; `?<Constant L"\\x46\\x6f\\x72\\x65\\x69\\x67\\x6e\\x20\\`
   \   00000008   C8D04DE2           SUB      SP,SP,#+200
   \   0000000C   430200EF           SWI      +579
   \   00000010   040090E5           LDR      R0,[R0, #+4]
   \   00000014   6420A0E3           MOV      R2,#+100
   \   00000018   0D10A0E1           MOV      R1,SP
   \   0000001C   5F0100EF           SWI      +351
   \   00000020   0B20A0E3           MOV      R2,#+11
   \   00000024   0410A0E1           MOV      R1,R4
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   FB0100EF           SWI      +507
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0200001A           BNE      ??GetJavaName_2
    234            {
    235              return(JavaSession_GetName());
   \                     ??GetJavaName_3:
   \   00000038   410200EF           SWI      +577
   \   0000003C   C8D08DE2           ADD      SP,SP,#+200
   \   00000040   1080BDE8           POP      {R4,PC}
    236            }
    237            if (!wstrcmp(ws,L"Java"))
   \                     ??GetJavaName_2:
   \   00000044   181084E2           ADD      R1,R4,#+24
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   560100EF           SWI      +342
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   F7FFFF0A           BEQ      ??GetJavaName_3
    238            {
    239              return(JavaSession_GetName());
    240            }
    241            return(0);
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   C8D08DE2           ADD      SP,SP,#+200
   \   00000060   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??GetJavaName_1:
   \   00000064   ........           DC32     `?<Constant L"\\x46\\x6f\\x72\\x65\\x69\\x67\\x6e\\x20\\`
    242          }
    243          

   \                                 In segment CODE, align 4, keep-with-next
    244          void WriteLog(char *buf)
    245          {
   \                     ??WriteLog:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    246            int flog;
    247            wchar_t path[256];
    248            char msg[512];
    249            DATETIME dt;
    250          
    251            REQUEST_DATEANDTIME_GET(SYNC,&dt);
    252          
    253            wstrcpy(path,GetDir(DIR_OTHER|MEM_EXTERNAL));
    254            if ((flog=_fopen(path,L"TamagochiLog.txt",FSX_O_CREAT|FSX_O_APPEND|FSX_O_RDWR,FSX_S_IREAD|FSX_S_IWRITE,0)) < 0) { return; }
   \   00000004   A4509FE5           LDR      R5,??WriteLog_1  ;; `?<Constant L"\\x54\\x61\\x6d\\x61\\x67\\x6f\\x63\\x68\\_5`
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   ........           LDR      R0,??DataTable8  ;; SYNC
   \   00000010   08D04DE2           SUB      SP,SP,#+8
   \   00000014   40DE4DE2           SUB      SP,SP,#+1024
   \   00000018   000090E5           LDR      R0,[R0, #+0]
   \   0000001C   0D10A0E1           MOV      R1,SP
   \   00000020   6E0100EF           SWI      +366
   \   00000024   0800A0E3           MOV      R0,#+8
   \   00000028   050100EF           SWI      +261
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   08008DE2           ADD      R0,SP,#+8
   \   00000034   520100EF           SWI      +338
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   01002DE9           PUSH     {R0}
   \   00000040   603FA0E3           MOV      R3,#+384
   \   00000044   432FA0E3           MOV      R2,#+268
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0C008DE2           ADD      R0,SP,#+12
   \   00000050   160100EF           SWI      +278
   \   00000054   0060B0E1           MOVS     R6,R0
   \   00000058   04D08DE2           ADD      SP,SP,#+4
   \   0000005C   1000004A           BMI      ??WriteLog_2
    255          
    256            sprintf(msg, "%02d:%02d:%02d %s\n", dt.time.hour, dt.time.min, dt.time.sec, buf);
   \   00000060   10002DE9           PUSH     {R4}
   \   00000064   0A00DDE5           LDRB     R0,[SP, #+10]
   \   00000068   241085E2           ADD      R1,R5,#+36
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   0C20DDE5           LDRB     R2,[SP, #+12]
   \   00000074   0D30DDE5           LDRB     R3,[SP, #+13]
   \   00000078   840F8DE2           ADD      R0,SP,#+528
   \   0000007C   140100EF           SWI      +276
    257            fwrite(flog,msg,strlen(msg));
   \   00000080   840F8DE2           ADD      R0,SP,#+528
   \   00000084   5A0100EF           SWI      +346
   \   00000088   0020A0E1           MOV      R2,R0
   \   0000008C   841F8DE2           ADD      R1,SP,#+528
   \   00000090   0600A0E1           MOV      R0,R6
   \   00000094   190100EF           SWI      +281
    258            fclose(flog);
   \   00000098   0600A0E1           MOV      R0,R6
   \   0000009C   170100EF           SWI      +279
    259          }
   \   000000A0   08D08DE2           ADD      SP,SP,#+8
   \                     ??WriteLog_2:
   \   000000A4   08D08DE2           ADD      SP,SP,#+8
   \   000000A8   40DE8DE2           ADD      SP,SP,#+1024
   \   000000AC   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??WriteLog_1:
   \   000000B0   ........           DC32     `?<Constant L"\\x54\\x61\\x6d\\x61\\x67\\x6f\\x63\\x68\\_5`
    260          
    261          /*
    262          wchar_t ImageID=NOIMAGE;
    263          wchar_t ImageHandle=NOIMAGE;
    264          
    265          wchar_t RegisterImage(wchar_t * path, wchar_t * fname)
    266          {
    267            FSTAT _fstat;
    268            char error_code;
    269            int sync=0;
    270            if(fstat(path,fname,&_fstat)==0)
    271            {
    272              if (!REQUEST_IMAGEHANDLER_INTERNAL_GETHANDLE(&sync,(u16 *)&ImageHandle,&error_code))
    273              {
    274                if(!Gif2ID(ImageHandle,path,fname,&ImageID))
    275                {
    276                  if (!REQUEST_IMAGEHANDLER_INTERNAL_REGISTER(&sync,ImageHandle,path,fname,0,&ImageID,&error_code))
    277                  {
    278                    if (error_code) ImageHandle=NOIMAGE;
    279                  }
    280                }
    281              }
    282            }
    283            return(ImageID);
    284          }
    285          
    286          wchar_t UnRegisterImage()
    287          {
    288            char error_code;
    289            REQUEST_IMAGEHANDLER_INTERNAL_UNREGISTER(SYNC,ImageHandle,0,0,ImageID,1,&error_code);
    290            ImageID=NOIMAGE;
    291            ImageHandle=NOIMAGE;
    292            return 0;
    293          };
    294          */
    295          

   \                                 In segment CODE, align 4, keep-with-next
    296          void free_strings()
    297          {
    298          
    299          }
   \                     ??free_strings:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    300          

   \                                 In segment CODE, align 4, keep-with-next
    301          void load_strings()
    302          {
    303            free_strings();
   \                     ??load_strings:
   \   00000000   ........           B        ??free_strings   ;; tailcall
    304          
    305          }
    306          

   \                                 In segment CODE, align 4, keep-with-next
    307          void free_icons()
    308          {
   \                     ??free_icons:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    309            for (int i=0;i<ICONS_NAMES_COUNT;i++)
   \   00000004   ........           LDR      R4,??DataTable23  ;; img_names
   \   00000008   0060A0E3           MOV      R6,#+0
   \   0000000C   FF50A0E3           MOV      R5,#+255
   \   00000010   FF5C85E3           ORR      R5,R5,#0xFF00
    310            {
    311                if(img_names[i] != NOIMAGE)
   \                     ??free_icons_1:
   \   00000014   867084E0           ADD      R7,R4,R6, LSL #+1
   \   00000018   B000D7E1           LDRH     R0,[R7, #+0]
   \   0000001C   050050E1           CMP      R0,R5
   \   00000020   0100000A           BEQ      ??free_icons_2
    312                {
    313                    ImageID_Free(img_names[i]);
   \   00000024   CD0200EF           SWI      +717
    314                    img_names[i] = NOIMAGE;
   \   00000028   B050C7E1           STRH     R5,[R7, #+0]
    315                }
    316            }
   \                     ??free_icons_2:
   \   0000002C   016086E2           ADD      R6,R6,#+1
   \   00000030   0C0056E3           CMP      R6,#+12
   \   00000034   F6FFFFBA           BLT      ??free_icons_1
    317            for (int i=0;i<ICONS_STATUS_COUNT;i++)
   \   00000038   0060A0E3           MOV      R6,#+0
    318            {
    319                if(img_status[i] != NOIMAGE)
   \                     ??free_icons_3:
   \   0000003C   867084E0           ADD      R7,R4,R6, LSL #+1
   \   00000040   B801D7E1           LDRH     R0,[R7, #+24]
   \   00000044   050050E1           CMP      R0,R5
   \   00000048   0100000A           BEQ      ??free_icons_4
    320                {
    321                    ImageID_Free(img_status[i]);
   \   0000004C   CD0200EF           SWI      +717
    322                    img_status[i] = NOIMAGE;
   \   00000050   B851C7E1           STRH     R5,[R7, #+24]
    323                }
    324            }
   \                     ??free_icons_4:
   \   00000054   016086E2           ADD      R6,R6,#+1
   \   00000058   040056E3           CMP      R6,#+4
   \   0000005C   F6FFFFBA           BLT      ??free_icons_3
    325            for (int i=0;i<ICONS_MENU_COUNT;i++)
   \   00000060   0060A0E3           MOV      R6,#+0
    326            {
    327                if(img_menu[i] != NOIMAGE)
   \                     ??free_icons_5:
   \   00000064   867084E0           ADD      R7,R4,R6, LSL #+1
   \   00000068   B002D7E1           LDRH     R0,[R7, #+32]
   \   0000006C   050050E1           CMP      R0,R5
   \   00000070   0100000A           BEQ      ??free_icons_6
    328                {
    329                    ImageID_Free(img_menu[i]);
   \   00000074   CD0200EF           SWI      +717
    330                    img_menu[i] = NOIMAGE;
   \   00000078   B052C7E1           STRH     R5,[R7, #+32]
    331                }
    332            }
   \                     ??free_icons_6:
   \   0000007C   016086E2           ADD      R6,R6,#+1
   \   00000080   160056E3           CMP      R6,#+22
   \   00000084   F6FFFFBA           BLT      ??free_icons_5
    333          
    334          //  UnRegisterImage();
    335          }
   \   00000088   F080BDE8           POP      {R4-R7,PC}       ;; return
    336          

   \                                 In segment CODE, align 4, keep-with-next
    337          void load_icons()
    338          {
    339            FSTAT _fstat;
    340            wchar_t path[128];
    341            getdir(path,PIC_PATH);
   \                     ??load_icons:
   \   00000000   20119FE5           LDR      R1,??load_icons_1  ;; PIC_PATH
   \   00000004   F0432DE9           PUSH     {R4-R9,LR}
    342          
    343            free_icons();
    344          
    345            for(int i=0; i< ICONS_NAMES_COUNT; i++)
   \   00000008   1C419FE5           LDR      R4,??load_icons_1+0x4  ;; icons_names
   \   0000000C   ........           LDR      R6,??DataTable23  ;; img_names
   \   00000010   47DF4DE2           SUB      SP,SP,#+284
   \   00000014   1C008DE2           ADD      R0,SP,#+28
   \   00000018   ........           _BLF     ??getdir,??getdir??rA
   \   0000001C   ........           BL       ??free_icons
   \   00000020   0070A0E3           MOV      R7,#+0
   \   00000024   FF50A0E3           MOV      R5,#+255
   \   00000028   FF5C85E3           ORR      R5,R5,#0xFF00
    346            {
    347              if(fstat(path,icons_names[i],&_fstat)==0)
   \                     ??load_icons_2:
   \   0000002C   078194E7           LDR      R8,[R4, +R7, LSL #+2]
   \   00000030   0D20A0E1           MOV      R2,SP
   \   00000034   0810A0E1           MOV      R1,R8
   \   00000038   1C008DE2           ADD      R0,SP,#+28
   \   0000003C   1C0100EF           SWI      +284
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0600001A           BNE      ??load_icons_3
    348              {
    349                if(ImageID_Get(path,icons_names[i],&img_names[i])<0) img_names[i] = NOIMAGE;
   \   00000048   879086E0           ADD      R9,R6,R7, LSL #+1
   \   0000004C   0920A0E1           MOV      R2,R9
   \   00000050   0810A0E1           MOV      R1,R8
   \   00000054   1C008DE2           ADD      R0,SP,#+28
   \   00000058   CC0200EF           SWI      +716
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   B050C941           STRHMI   R5,[R9, #+0]
    350              }
    351            }
   \                     ??load_icons_3:
   \   00000064   017087E2           ADD      R7,R7,#+1
   \   00000068   0C0057E3           CMP      R7,#+12
   \   0000006C   EEFFFFBA           BLT      ??load_icons_2
    352          
    353            SmileSize = GetImageWidth(img_names[0]);
   \   00000070   B000D6E1           LDRH     R0,[R6, #+0]
    354          
    355            for(int i=0; i< ICONS_STATUS_COUNT; i++)
   \   00000074   0070A0E3           MOV      R7,#+0
   \   00000078   930200EF           SWI      +659
   \   0000007C   4C0086E5           STR      R0,[R6, #+76]
   \                     ??load_icons_4:
   \   00000080   070184E0           ADD      R0,R4,R7, LSL #+2
   \   00000084   308090E5           LDR      R8,[R0, #+48]
   \   00000088   0D20A0E1           MOV      R2,SP
   \   0000008C   0810A0E1           MOV      R1,R8
   \   00000090   1C008DE2           ADD      R0,SP,#+28
    356            {
    357              if(fstat(path,icons_status[i],&_fstat)==0)
   \   00000094   1C0100EF           SWI      +284
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   0600001A           BNE      ??load_icons_5
    358              {
    359                if(ImageID_Get(path,icons_status[i],&img_status[i])<0) img_status[i] = NOIMAGE;
   \   000000A0   879086E0           ADD      R9,R6,R7, LSL #+1
   \   000000A4   182089E2           ADD      R2,R9,#+24
   \   000000A8   0810A0E1           MOV      R1,R8
   \   000000AC   1C008DE2           ADD      R0,SP,#+28
   \   000000B0   CC0200EF           SWI      +716
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   B851C941           STRHMI   R5,[R9, #+24]
    360              }
    361            }
   \                     ??load_icons_5:
   \   000000BC   017087E2           ADD      R7,R7,#+1
   \   000000C0   040057E3           CMP      R7,#+4
   \   000000C4   EDFFFFBA           BLT      ??load_icons_4
    362          
    363            StatSize = GetImageWidth(img_status[0]);
   \   000000C8   B801D6E1           LDRH     R0,[R6, #+24]
    364          
    365            for(int i=0; i< ICONS_MENU_COUNT; i++)
   \   000000CC   0070A0E3           MOV      R7,#+0
   \   000000D0   930200EF           SWI      +659
   \   000000D4   500086E5           STR      R0,[R6, #+80]
   \                     ??load_icons_6:
   \   000000D8   070184E0           ADD      R0,R4,R7, LSL #+2
   \   000000DC   408090E5           LDR      R8,[R0, #+64]
   \   000000E0   0D20A0E1           MOV      R2,SP
   \   000000E4   0810A0E1           MOV      R1,R8
   \   000000E8   1C008DE2           ADD      R0,SP,#+28
    366            {
    367              if(fstat(path,icons_menu[i],&_fstat)==0)
   \   000000EC   1C0100EF           SWI      +284
   \   000000F0   000050E3           CMP      R0,#+0
   \   000000F4   0600001A           BNE      ??load_icons_7
    368              {
    369                if(ImageID_Get(path,icons_menu[i],&img_menu[i])<0) img_menu[i] = NOIMAGE;
   \   000000F8   879086E0           ADD      R9,R6,R7, LSL #+1
   \   000000FC   202089E2           ADD      R2,R9,#+32
   \   00000100   0810A0E1           MOV      R1,R8
   \   00000104   1C008DE2           ADD      R0,SP,#+28
   \   00000108   CC0200EF           SWI      +716
   \   0000010C   000050E3           CMP      R0,#+0
   \   00000110   B052C941           STRHMI   R5,[R9, #+32]
    370              }
    371            }
   \                     ??load_icons_7:
   \   00000114   017087E2           ADD      R7,R7,#+1
   \   00000118   160057E3           CMP      R7,#+22
   \   0000011C   EDFFFFBA           BLT      ??load_icons_6
    372          //  RegisterImage(path, L"test.gif");
    373          }
   \   00000120   47DF8DE2           ADD      SP,SP,#+284      ;; stack cleaning
   \   00000124   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??load_icons_1:
   \   00000128   ........           DC32     PIC_PATH
   \   0000012C   ........           DC32     icons_names
    374          
    375          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    376          static void UpdateName(void)
    377          {
    378            sprintf(myappname,"%s - %d age",ELFNAME, Pets[0].Status.Age);
   \                     ??UpdateName:
   \   00000000   ........           LDR      R0,??DataTable4  ;; `?<Constant "Tamagochi">`
   \   00000004   ........           LDR      R1,??DataTable47  ;; Pets
   \   00000008   30402DE9           PUSH     {R4,R5,LR}
   \   0000000C   003091E5           LDR      R3,[R1, #+0]
   \   00000010   ........           LDR      R5,??DataTable21  ;; timer_save
   \   00000014   854EA0E3           MOV      R4,#+2128
   \   00000018   0020A0E1           MOV      R2,R0
   \   0000001C   0C1080E2           ADD      R1,R0,#+12
   \   00000020   050084E0           ADD      R0,R4,R5
   \   00000024   140100EF           SWI      +276
    379            TextID_Destroy(((BOOK *)TamagochiBook)->xbook->app_session->name);
   \   00000028   480095E5           LDR      R0,[R5, #+72]
   \   0000002C   000090E5           LDR      R0,[R0, #+0]
   \   00000030   080090E5           LDR      R0,[R0, #+8]
   \   00000034   040090E5           LDR      R0,[R0, #+4]
   \   00000038   610100EF           SWI      +353
    380            ((BOOK *)TamagochiBook)->xbook->app_session->name = TextID_Create(myappname,ENC_LAT1,TEXTID_ANY_LEN);
   \   0000003C   FF20A0E3           MOV      R2,#+255
   \   00000040   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000044   0610A0E3           MOV      R1,#+6
   \   00000048   050084E0           ADD      R0,R4,R5
   \   0000004C   5D0100EF           SWI      +349
   \   00000050   481095E5           LDR      R1,[R5, #+72]
   \   00000054   001091E5           LDR      R1,[R1, #+0]
   \   00000058   081091E5           LDR      R1,[R1, #+8]
   \   0000005C   040081E5           STR      R0,[R1, #+4]
    381          }
   \   00000060   3080BDE8           POP      {R4,R5,PC}       ;; return
    382          
    383          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    384          int isNight()
    385          {
    386            if (Night_Ena)
   \                     ??isNight:
   \   00000000   ........           LDR      R0,??DataTable7  ;; Night_Ena
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0680BD08           POPEQ    {R1,R2,PC}
    387            {
    388                //проверка ночи
    389                DATETIME dt;
    390                REQUEST_DATEANDTIME_GET(SYNC,&dt);
   \   00000018   ........           LDR      R0,??DataTable8  ;; SYNC
   \   0000001C   0D10A0E1           MOV      R1,SP
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   6E0100EF           SWI      +366
    391          
    392                if (Night_begin>=Night_end)
   \   00000028   44009FE5           LDR      R0,??isNight_1   ;; Night_end
   \   0000002C   44109FE5           LDR      R1,??isNight_1+0x4  ;; Night_begin
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   001091E5           LDR      R1,[R1, #+0]
   \   00000038   0420DDE5           LDRB     R2,[SP, #+4]
   \   0000003C   000051E1           CMP      R1,R0
   \   00000040   0500003A           BCC      ??isNight_2
    393                  if ((dt.time.hour>=Night_begin)||(dt.time.hour<Night_end))
   \   00000044   010052E1           CMP      R2,R1
   \   00000048   0100002A           BCS      ??isNight_3
   \   0000004C   000052E1           CMP      R2,R0
   \   00000050   0500002A           BCS      ??isNight_4
    394                    return 1;
   \                     ??isNight_3:
   \   00000054   0100A0E3           MOV      R0,#+1
   \   00000058   0680BDE8           POP      {R1,R2,PC}
    395          
    396                if (Night_begin<Night_end)
    397                  if ((dt.time.hour>=Night_begin)&&(dt.time.hour<Night_end))
   \                     ??isNight_2:
   \   0000005C   010052E1           CMP      R2,R1
   \   00000060   0100003A           BCC      ??isNight_4
   \   00000064   000052E1           CMP      R2,R0
   \   00000068   F9FFFF3A           BCC      ??isNight_3
    398                    return 1;
    399            }
    400            return 0;
   \                     ??isNight_4:
   \   0000006C   0000A0E3           MOV      R0,#+0
   \   00000070   0680BDE8           POP      {R1,R2,PC}       ;; return
   \                     ??isNight_1:
   \   00000074   ........           DC32     Night_end
   \   00000078   ........           DC32     Night_begin
    401          }
    402          
    403          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    404          void start_vibra(void)
    405          {
    406            if(Is_Vibra_Enabled)
   \                     ??start_vibra:
   \   00000000   6C009FE5           LDR      R0,??start_vibra_1  ;; Is_Vibra_Enabled
   \   00000004   70402DE9           PUSH     {R4-R6,LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   7080BD08           POPEQ    {R4-R6,PC}
    407            {
    408              int full,on,off;
    409              if(VIBR_TYPE == 0)
   \   00000014   5C009FE5           LDR      R0,??start_vibra_1+0x4  ;; vibraTime
   \   00000018   004090E5           LDR      R4,[R0, #+0]
   \   0000001C   58009FE5           LDR      R0,??start_vibra_1+0x8  ;; VIBR_TYPE
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   000050E3           CMP      R0,#+0
    410              {
    411                on = vibraTime;
   \   00000028   0450A001           MOVEQ    R5,R4
    412                off = 0;
   \   0000002C   0060A003           MOVEQ    R6,#+0
    413                full = vibraTime;
   \   00000030   0500000A           BEQ      ??start_vibra_2
    414              }
    415              else
    416              {
    417                int t = vibraTime/20;
   \   00000034   ........           LDR      R0,??DataTable9  ;; 0xffffffffcccccccd
   \   00000038   901486E0           UMULL    R1,R6,R0,R4
    418                on = 9*t;
    419                off = t;
    420                full = 20*t;
   \   0000003C   1400A0E3           MOV      R0,#+20
   \   00000040   2662A0E1           LSR      R6,R6,#+4
   \   00000044   900604E0           MUL      R4,R0,R6
   \   00000048   865186E0           ADD      R5,R6,R6, LSL #+3
    421              }
    422              PAudioControl pAC = AudioControl_Init();
   \                     ??start_vibra_2:
   \   0000004C   DF0100EF           SWI      +479
    423              if( !pAC ) pAC = *GetAudioControlPtr();
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0100001A           BNE      ??start_vibra_3
   \   00000058   D18100EF           SWI      +33233
   \   0000005C   000090E5           LDR      R0,[R0, #+0]
    424              AudioControl_Vibrate(pAC, on, off, full);
   \                     ??start_vibra_3:
   \   00000060   0430A0E1           MOV      R3,R4
   \   00000064   0620A0E1           MOV      R2,R6
   \   00000068   0510A0E1           MOV      R1,R5
   \   0000006C   D20100EF           SWI      +466
    425            }
    426          }
   \   00000070   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??start_vibra_1:
   \   00000074   ........           DC32     Is_Vibra_Enabled
   \   00000078   ........           DC32     vibraTime
   \   0000007C   ........           DC32     VIBR_TYPE
    427          
    428          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    429          void offTimerScreen(u16 timerID, LPARAM lparam)
    430          {
   \                     ??offTimerScreen:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    431            if(timerScreen)
   \   00000004   ........           LDR      R5,??DataTable21  ;; timer_save
   \   00000008   0040A0E3           MOV      R4,#+0
   \   0000000C   B600D5E1           LDRH     R0,[R5, #+6]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0600000A           BEQ      ??offTimerScreen_1
    432            {
    433              Timer_Kill(&timerScreen);
   \   00000018   060085E2           ADD      R0,R5,#+6
   \   0000001C   2A0100EF           SWI      +298
    434              timerScreen = 0;
    435              IndicationDevice_Backlight_FadeToLevel(0,cfg_screen_level);
   \   00000020   ........           LDR      R0,??DataTable12  ;; cfg_screen_level
   \   00000024   B640C5E1           STRH     R4,[R5, #+6]
   \   00000028   001090E5           LDR      R1,[R0, #+0]
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   6F0100EF           SWI      +367
    436            }
    437            screen = 0;
   \                     ??offTimerScreen_1:
   \   00000034   4C4085E5           STR      R4,[R5, #+76]
    438          }
   \   00000038   3080BDE8           POP      {R4,R5,PC}       ;; return
    439          

   \                                 In segment CODE, align 4, keep-with-next
    440          void onTimerScreen(u16 timerID, LPARAM lparam)
    441          {
    442              IndicationDevice_Backlight_FadeToLevel(0,screen ^= cfg_screen_level);
   \                     ??onTimerScreen:
   \   00000000   ........           LDR      R1,??DataTable12  ;; cfg_screen_level
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   ........           LDR      R4,??DataTable21  ;; timer_save
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   4C0094E5           LDR      R0,[R4, #+76]
   \   00000014   001091E5           LDR      R1,[R1, #+0]
   \   00000018   001021E0           EOR      R1,R1,R0
   \   0000001C   4C1084E5           STR      R1,[R4, #+76]
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   6F0100EF           SWI      +367
    443              Timer_ReSet(&timerScreen,cfg_screen_blink_speed,onTimerScreen,0);
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   ........           _BLF     ??LPARAM,??LPARAM??rA
   \   00000034   ........           LDR      R0,??DataTable17  ;; cfg_screen_blink_speed
   \   00000038   00309DE5           LDR      R3,[SP, #+0]
   \   0000003C   ........           LDR      R2,??DataTable18  ;; ??onTimerScreen
   \   00000040   001090E5           LDR      R1,[R0, #+0]
   \   00000044   060084E2           ADD      R0,R4,#+6
   \   00000048   280100EF           SWI      +296
    444          }
   \   0000004C   1180BDE8           POP      {R0,R4,PC}       ;; return
    445          

   \                                 In segment CODE, align 4, keep-with-next
    446          void Light()
    447          {
    448            if(Is_Screen_Enabled)
   \                     ??Light:
   \   00000000   8C009FE5           LDR      R0,??Light_1     ;; Is_Screen_Enabled
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   1380BD08           POPEQ    {R0,R1,R4,PC}
    449            {
    450              BOOK * ScreenSaverBook = FindBook(get_IsScreenSaverBook());
   \   00000018   418100EF           SWI      +33089
   \   0000001C   300100EF           SWI      +304
    451              if (ScreenSaverBook)
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0400000A           BEQ      ??Light_2
    452              {
    453                UI_Event_toBookID(UI_SCREENSAVER_DEACTIVATE_EVENT,BookObj_GetBookID(ScreenSaverBook));
   \   00000028   FA0100EF           SWI      +506
   \   0000002C   0010A0E1           MOV      R1,R0
   \   00000030   60009FE5           LDR      R0,??Light_1+0x4  ;; UI_SCREENSAVER_DEACTIVATE_EVENT
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   AA0100EF           SWI      +426
    454              }
    455              timerScreen=Timer_Set(cfg_screen_blink_speed,onTimerScreen,0);
   \                     ??Light_2:
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   ........           LDR      R4,??DataTable21  ;; timer_save
   \   00000044   0D00A0E1           MOV      R0,SP
   \   00000048   ........           _BLF     ??LPARAM,??LPARAM??rA
   \   0000004C   ........           LDR      R0,??DataTable17  ;; cfg_screen_blink_speed
   \   00000050   00209DE5           LDR      R2,[SP, #+0]
   \   00000054   000090E5           LDR      R0,[R0, #+0]
   \   00000058   ........           LDR      R1,??DataTable18  ;; ??onTimerScreen
   \   0000005C   290100EF           SWI      +297
   \   00000060   B600C4E1           STRH     R0,[R4, #+6]
    456              offtimerScreen=Timer_Set(cfg_screen_time*1000,offTimerScreen,0);
   \   00000064   0010A0E3           MOV      R1,#+0
   \   00000068   04008DE2           ADD      R0,SP,#+4
   \   0000006C   ........           _BLF     ??LPARAM,??LPARAM??rA
   \   00000070   24009FE5           LDR      R0,??Light_1+0x8  ;; cfg_screen_time
   \   00000074   04209DE5           LDR      R2,[SP, #+4]
   \   00000078   000090E5           LDR      R0,[R0, #+0]
   \   0000007C   1C109FE5           LDR      R1,??Light_1+0xC  ;; ??offTimerScreen
   \   00000080   FA3FA0E3           MOV      R3,#+1000
   \   00000084   930000E0           MUL      R0,R3,R0
   \   00000088   290100EF           SWI      +297
   \   0000008C   B800C4E1           STRH     R0,[R4, #+8]
    457            }
    458          }
   \   00000090   1380BDE8           POP      {R0,R1,R4,PC}    ;; return
   \                     ??Light_1:
   \   00000094   ........           DC32     Is_Screen_Enabled
   \   00000098   ........           DC32     UI_SCREENSAVER_DEACTIVATE_EVENT
   \   0000009C   ........           DC32     cfg_screen_time
   \   000000A0   ........           DC32     ??offTimerScreen
    459          
    460          // ----------------------------------------------------------------------------
    461          

   \                                 In segment CODE, align 4, keep-with-next
    462          void set_all_simg_status(int status)
    463          {
    464            for(int i=0; i<MAX_PET_COUNT_GLB; i++) Pets[i].simg_status = status;
   \                     ??set_all_simg_status:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   442FA0E3           MOV      R2,#+272
   \                     ??set_all_simg_status_1:
   \   00000008   ........           LDR      R3,??DataTable47  ;; Pets
   \   0000000C   923123E0           MLA      R3,R2,R1,R3
   \   00000010   011081E2           ADD      R1,R1,#+1
   \   00000014   F80083E5           STR      R0,[R3, #+248]
   \   00000018   200051E3           CMP      R1,#+32
   \   0000001C   F9FFFFBA           BLT      ??set_all_simg_status_1
    465          }
   \   00000020   1EFF2FE1           BX       LR               ;; return
    466          

   \                                 In segment CODE, align 4, keep-with-next
    467          void set_all_old_img_status(int status)
    468          {
    469            for(int i=0; i<MAX_PET_COUNT_GLB; i++) Pets[i].old_img_status = status;
   \                     ??set_all_old_img_status:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   442FA0E3           MOV      R2,#+272
   \                     ??set_all_old_img_status_1:
   \   00000008   ........           LDR      R3,??DataTable47  ;; Pets
   \   0000000C   923123E0           MLA      R3,R2,R1,R3
   \   00000010   011081E2           ADD      R1,R1,#+1
   \   00000014   F00083E5           STR      R0,[R3, #+240]
   \   00000018   200051E3           CMP      R1,#+32
   \   0000001C   F9FFFFBA           BLT      ??set_all_old_img_status_1
    470          }
   \   00000020   1EFF2FE1           BX       LR               ;; return
    471          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    472          int FindName()
    473          {
   \                     ??FindName:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   4BDF4DE2           SUB      SP,SP,#+300
    474            int i,j,k;
    475            int mask=((int)LastExtDB())&0xF8000000;
    476            BOOK * book;
    477            UI_APP_SESSION * session;
    478          
    479            i=root_list_get_session_count();
    480            for (j=0; j<i; j++)
   \   00000008   0060A0E3           MOV      R6,#+0
   \   0000000C   558200EF           SWI      +33365
   \   00000010   F84400E2           AND      R4,R0,#0xF8000000
   \   00000014   F30100EF           SWI      +499
   \   00000018   0050A0E1           MOV      R5,R0
   \   0000001C   000000EA           B        ??FindName_1
   \                     ??FindName_2:
   \   00000020   016086E2           ADD      R6,R6,#+1
   \                     ??FindName_1:
   \   00000024   050056E1           CMP      R6,R5
   \   00000028   400000AA           BGE      ??FindName_3
    481            {
    482              session=root_list_get_session(j);
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   F40100EF           SWI      +500
   \   00000034   0070A0E1           MOV      R7,R0
    483              for (k=0;k<session->listbook->FirstFree;k++)
   \   00000038   0080A0E3           MOV      R8,#+0
   \   0000003C   000000EA           B        ??FindName_4
   \                     ??FindName_5:
   \   00000040   018088E2           ADD      R8,R8,#+1
   \                     ??FindName_4:
   \   00000044   000097E5           LDR      R0,[R7, #+0]
   \   00000048   B210D0E1           LDRH     R1,[R0, #+2]
   \   0000004C   010058E1           CMP      R8,R1
   \   00000050   F2FFFFAA           BGE      ??FindName_2
    484              {
    485                book=(BOOK*)List_Get(session->listbook,k);
   \   00000054   0810A0E1           MOV      R1,R8
   \   00000058   AD0100EF           SWI      +429
   \   0000005C   0090A0E1           MOV      R9,R0
    486                if( (book->xguilist->guilist->FirstFree) || (((((int)book->onClose)&0xF8000000) != mask)))
   \   00000060   140099E5           LDR      R0,[R9, #+20]
   \   00000064   040090E5           LDR      R0,[R0, #+4]
   \   00000068   B200D0E1           LDRH     R0,[R0, #+2]
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0300001A           BNE      ??FindName_6
   \   00000074   040099E5           LDR      R0,[R9, #+4]
   \   00000078   F80400E2           AND      R0,R0,#0xF8000000
   \   0000007C   040050E1           CMP      R0,R4
   \   00000080   EEFFFF0A           BEQ      ??FindName_5
    487                {
    488                  char s[100];
    489                  wchar_t ws[100];
    490                  if(strcmp(book->xbook->name,"CUIDisplayableBook"))
   \                     ??FindName_6:
   \   00000084   000099E5           LDR      R0,[R9, #+0]
   \   00000088   AC109FE5           LDR      R1,??FindName_7  ;; `?<Constant "CUIDisplayableBook">`
   \   0000008C   040090E5           LDR      R0,[R0, #+4]
   \   00000090   590100EF           SWI      +345
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   0400000A           BEQ      ??FindName_8
    491                  {
    492                    str2wstr(ws,book->xbook->name);
   \   0000009C   000099E5           LDR      R0,[R9, #+0]
   \   000000A0   041090E5           LDR      R1,[R0, #+4]
   \   000000A4   0D00A0E1           MOV      R0,SP
   \   000000A8   580100EF           SWI      +344
   \   000000AC   050000EA           B        ??FindName_9
    493                  }
    494                  else
    495                  {
    496                    TextID_GetWString(book->xbook->app_session->name,ws,100);
   \                     ??FindName_8:
   \   000000B0   000099E5           LDR      R0,[R9, #+0]
   \   000000B4   6420A0E3           MOV      R2,#+100
   \   000000B8   080090E5           LDR      R0,[R0, #+8]
   \   000000BC   0D10A0E1           MOV      R1,SP
   \   000000C0   040090E5           LDR      R0,[R0, #+4]
   \   000000C4   5F0100EF           SWI      +351
    497                  }
    498                  int nameID;
    499                  if((nameID = GetJavaName(book)))
   \                     ??FindName_9:
   \   000000C8   0900A0E1           MOV      R0,R9
   \   000000CC   ........           BL       ??GetJavaName
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   0200000A           BEQ      ??FindName_10
    500                  {
    501                    TextID_GetWString(nameID,ws,100);
   \   000000D8   6420A0E3           MOV      R2,#+100
   \   000000DC   0D10A0E1           MOV      R1,SP
   \   000000E0   5F0100EF           SWI      +351
    502                  }
    503                  wstr2strn (s, ws, 99);
    504                  if(strstr(game_list,s)) return GAME_FOUND;
   \                     ??FindName_10:
   \   000000E4   ........           LDR      R9,??DataTable21  ;; timer_save
   \   000000E8   6320A0E3           MOV      R2,#+99
   \   000000EC   0D10A0E1           MOV      R1,SP
   \   000000F0   C8008DE2           ADD      R0,SP,#+200
   \   000000F4   5B0100EF           SWI      +347
   \   000000F8   C8108DE2           ADD      R1,SP,#+200
   \   000000FC   500089E2           ADD      R0,R9,#+80
   \   00000100   980200EF           SWI      +664
   \   00000104   000050E3           CMP      R0,#+0
   \   00000108   0100A013           MOVNE    R0,#+1
   \   0000010C   0800001A           BNE      ??FindName_11
    505                  if(strstr(player_list,s)) return PLAYER_FOUND;
   \   00000110   C8108DE2           ADD      R1,SP,#+200
   \   00000114   450E89E2           ADD      R0,R9,#+1104
   \   00000118   980200EF           SWI      +664
   \   0000011C   000050E3           CMP      R0,#+0
   \   00000120   C6FFFF0A           BEQ      ??FindName_5
   \   00000124   0200A0E3           MOV      R0,#+2
   \   00000128   4BDF8DE2           ADD      SP,SP,#+300
   \   0000012C   F083BDE8           POP      {R4-R9,PC}
    506                }
    507              }
    508            }
    509            return NOT_FOUND;
   \                     ??FindName_3:
   \   00000130   0000A0E3           MOV      R0,#+0
   \                     ??FindName_11:
   \   00000134   4BDF8DE2           ADD      SP,SP,#+300      ;; stack cleaning
   \   00000138   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??FindName_7:
   \   0000013C   ........           DC32     `?<Constant "CUIDisplayableBook">`
    510          }
    511          

   \                                 In segment CODE, align 4, keep-with-next
    512          int GameDetected(void)
    513          {
   \                     ??GameDetected:
   \   00000000   00402DE9           PUSH     {LR}
    514            int find=0;
    515          
    516            if((find = FindName()) != NOT_FOUND) // поиск по game_list и player_list
   \   00000004   ........           BL       ??FindName
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0700000A           BEQ      ??GameDetected_1
    517            {
    518              if(find == GAME_FOUND)
   \   00000010   010050E3           CMP      R0,#+1
   \   00000014   0200000A           BEQ      ??GameDetected_2
    519              {
    520                set_all_simg_status(GAME_ICN);
    521                return 1;
    522              }
    523              if(find == PLAYER_FOUND)
   \   00000018   020050E3           CMP      R0,#+2
   \   0000001C   0B00001A           BNE      ??GameDetected_3
    524              {
    525                set_all_simg_status(MUSIC_ICN);
   \                     ??GameDetected_4:
   \   00000020   0300A0E3           MOV      R0,#+3
   \                     ??GameDetected_2:
   \   00000024   ........           BL       ??set_all_simg_status
    526                return 1;
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   0080BDE8           POP      {PC}
    527              }
    528            }
    529            else if(FindBook(get_IsAudioPlayerBook())) // ищем медиаплеер
   \                     ??GameDetected_1:
   \   00000030   8B8200EF           SWI      +33419
   \   00000034   300100EF           SWI      +304
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   F7FFFF1A           BNE      ??GameDetected_4
    530            {
    531              set_all_simg_status(MUSIC_ICN);
    532              return 1;
    533            }
    534            else if(FindBook(get_IsFmRadioBook())) // ищем радио
   \   00000040   8A8200EF           SWI      +33418
   \   00000044   300100EF           SWI      +304
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   F3FFFF1A           BNE      ??GameDetected_4
    535            {
    536              set_all_simg_status(MUSIC_ICN);
    537              return 1;
    538            }
    539            return 0;
   \                     ??GameDetected_3:
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   0080BDE8           POP      {PC}             ;; return
    540          }
    541          
    542          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    543          void ChangeStatusImage(int indx, BOOK *bk, int snd)
    544          {
   \                     ??ChangeStatusImage:
   \   00000000   D0432DE9           PUSH     {R4,R6-R9,LR}
   \   00000004   0240A0E1           MOV      R4,R2
    545            TStatusPet *StatusPet = &Pets[indx].Status;
   \   00000008   ........           LDR      R2,??DataTable47  ;; Pets
   \   0000000C   441FA0E3           MOV      R1,#+272
   \   00000010   912028E0           MLA      R8,R1,R0,R2
    546            int SIZE = MINSIZE + StatusPet->Age;
   \   00000014   A4039FE5           LDR      R0,??ChangeStatusImage_1  ;; MINSIZE
   \   00000018   40DF4DE2           SUB      SP,SP,#+256
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   001098E5           LDR      R1,[R8, #+0]
    547            if (SIZE > MAXSIZE) SIZE = MAXSIZE;
    548          
    549            Pets[indx].img_size = SmileSize * SIZE / 100;
    550          
    551            // —татусные картинки
    552            StatusPet->ImageStatus=SMILE_ICN;
   \   00000024   0090A0E3           MOV      R9,#+0
   \   00000028   001081E0           ADD      R1,R1,R0
   \   0000002C   90039FE5           LDR      R0,??ChangeStatusImage_1+0x4  ;; MAXSIZE
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   010050E1           CMP      R0,R1
   \   00000038   0010A031           MOVCC    R1,R0
   \   0000003C   ........           LDR      R0,??DataTable23  ;; img_names
   \   00000040   4C2090E5           LDR      R2,[R0, #+76]
   \   00000044   910202E0           MUL      R2,R1,R2
   \   00000048   78139FE5           LDR      R1,??ChangeStatusImage_1+0x8  ;; 0x51eb851f
   \   0000004C   9132C6E0           SMULL    R3,R6,R1,R2
    553            if (StatusPet->needFriend) StatusPet->ImageStatus=SINGLE_ICN;
    554            if (StatusPet->haveFriend == 1) StatusPet->ImageStatus=INLOVE_ICN;
    555            if (StatusPet->Behaviour < StatusPet->MaxBehaviour/3) StatusPet->ImageStatus=BEHAVIOUR_ICN;
   \   00000050   ........           LDR      R3,??DataTable24  ;; 0x55555556
   \   00000054   C662A0E1           ASR      R6,R6,#+5
   \   00000058   A21F86E0           ADD      R1,R6,R2, LSR #+31
   \   0000005C   FC1088E5           STR      R1,[R8, #+252]
   \   00000060   3C9088E5           STR      R9,[R8, #+60]
   \   00000064   CC1098E5           LDR      R1,[R8, #+204]
   \   00000068   000051E3           CMP      R1,#+0
   \   0000006C   0910A013           MOVNE    R1,#+9
   \   00000070   3C108815           STRNE    R1,[R8, #+60]
   \   00000074   D01098E5           LDR      R1,[R8, #+208]
   \   00000078   010051E3           CMP      R1,#+1
   \   0000007C   0A10A003           MOVEQ    R1,#+10
   \   00000080   3C108805           STREQ    R1,[R8, #+60]
   \   00000084   342098E5           LDR      R2,[R8, #+52]
   \   00000088   301098E5           LDR      R1,[R8, #+48]
   \   0000008C   9362C7E0           SMULL    R6,R7,R3,R2
   \   00000090   A22F87E0           ADD      R2,R7,R2, LSR #+31
   \   00000094   020051E1           CMP      R1,R2
   \   00000098   0810A0B3           MOVLT    R1,#+8
   \   0000009C   3C1088B5           STRLT    R1,[R8, #+60]
    556            if (StatusPet->Boredom   > StatusPet->MaxBoredom/2)   StatusPet->ImageStatus=BOREDOM_ICN;
   \   000000A0   2C1098E5           LDR      R1,[R8, #+44]
   \   000000A4   282098E5           LDR      R2,[R8, #+40]
   \   000000A8   A11F81E0           ADD      R1,R1,R1, LSR #+31
   \   000000AC   C10052E1           CMP      R2,R1, ASR #+1
   \   000000B0   0710A0C3           MOVGT    R1,#+7
   \   000000B4   3C1088C5           STRGT    R1,[R8, #+60]
    557            if (StatusPet->Dirtiness > StatusPet->MaxDirtiness/2) StatusPet->ImageStatus=DIRTINESS_ICN;
   \   000000B8   241098E5           LDR      R1,[R8, #+36]
   \   000000BC   202098E5           LDR      R2,[R8, #+32]
   \   000000C0   A11F81E0           ADD      R1,R1,R1, LSR #+31
   \   000000C4   C10052E1           CMP      R2,R1, ASR #+1
   \   000000C8   0610A0C3           MOVGT    R1,#+6
   \   000000CC   3C1088C5           STRGT    R1,[R8, #+60]
    558            if (StatusPet->Hunger    > StatusPet->MaxHunger/2)    StatusPet->ImageStatus=HUNGER_ICN;
   \   000000D0   141098E5           LDR      R1,[R8, #+20]
   \   000000D4   102098E5           LDR      R2,[R8, #+16]
   \   000000D8   A11F81E0           ADD      R1,R1,R1, LSR #+31
   \   000000DC   C10052E1           CMP      R2,R1, ASR #+1
   \   000000E0   0310A0C3           MOVGT    R1,#+3
   \   000000E4   3C1088C5           STRGT    R1,[R8, #+60]
    559            if (StatusPet->Health    < StatusPet->MaxHealth/2)    StatusPet->ImageStatus=HEALTH_ICN;
   \   000000E8   0C1098E5           LDR      R1,[R8, #+12]
   \   000000EC   082098E5           LDR      R2,[R8, #+8]
   \   000000F0   A11F81E0           ADD      R1,R1,R1, LSR #+31
   \   000000F4   C10052E1           CMP      R2,R1, ASR #+1
   \   000000F8   0410A0B3           MOVLT    R1,#+4
   \   000000FC   3C1088B5           STRLT    R1,[R8, #+60]
    560            if (StatusPet->Happiness < StatusPet->MaxHappiness/2) StatusPet->ImageStatus=HAPPINESS_ICN;
   \   00000100   1C1098E5           LDR      R1,[R8, #+28]
   \   00000104   182098E5           LDR      R2,[R8, #+24]
   \   00000108   A11F81E0           ADD      R1,R1,R1, LSR #+31
   \   0000010C   C10052E1           CMP      R2,R1, ASR #+1
   \   00000110   0510A0B3           MOVLT    R1,#+5
   \   00000114   3C1088B5           STRLT    R1,[R8, #+60]
    561          
    562            if (Pets[indx].Bathe) StatusPet->ImageStatus = BATHE_ICN;
   \   00000118   E41098E5           LDR      R1,[R8, #+228]
   \   0000011C   000051E3           CMP      R1,#+0
   \   00000120   0B10A013           MOVNE    R1,#+11
   \   00000124   3C108815           STRNE    R1,[R8, #+60]
    563            // сон
    564            if (Pets[indx].Sleep != 0) StatusPet->ImageStatus = DREAM_ICN;
   \   00000128   DC1098E5           LDR      R1,[R8, #+220]
   \   0000012C   000051E3           CMP      R1,#+0
   \   00000130   0210A013           MOVNE    R1,#+2
   \   00000134   3C108815           STRNE    R1,[R8, #+60]
    565            if (StatusPet->StatusDeath == 1) StatusPet->ImageStatus = DEATH_ICN;
   \   00000138   381098E5           LDR      R1,[R8, #+56]
   \   0000013C   010051E3           CMP      R1,#+1
   \   00000140   3C108805           STREQ    R1,[R8, #+60]
    566          
    567            if (Pets[indx].old_simg_status != Pets[indx].simg_status)
   \   00000144   F81098E5           LDR      R1,[R8, #+248]
   \   00000148   F42098E5           LDR      R2,[R8, #+244]
   \   0000014C   010052E1           CMP      R2,R1
   \   00000150   0400000A           BEQ      ??ChangeStatusImage_2
    568            {
    569              Pets[indx].StatImg = &img_status[Pets[indx].simg_status];
   \   00000154   811080E0           ADD      R1,R0,R1, LSL #+1
   \   00000158   181081E2           ADD      R1,R1,#+24
   \   0000015C   EC1088E5           STR      R1,[R8, #+236]
    570              Pets[indx].old_simg_status = Pets[indx].simg_status;
   \   00000160   F81098E5           LDR      R1,[R8, #+248]
   \   00000164   F41088E5           STR      R1,[R8, #+244]
    571            }
    572          
    573            if (Pets[indx].old_img_status != StatusPet->ImageStatus)
   \                     ??ChangeStatusImage_2:
   \   00000168   3C1098E5           LDR      R1,[R8, #+60]
   \   0000016C   F02098E5           LDR      R2,[R8, #+240]
   \   00000170   010052E1           CMP      R2,R1
   \   00000174   0500000A           BEQ      ??ChangeStatusImage_3
    574            {
    575              Pets[indx].Smile = &img_names[StatusPet->ImageStatus];
   \   00000178   810080E0           ADD      R0,R0,R1, LSL #+1
   \   0000017C   E80088E5           STR      R0,[R8, #+232]
    576              start_vibra();
   \   00000180   ........           BL       ??start_vibra
    577              Light();
   \   00000184   ........           BL       ??Light
    578              Pets[indx].old_img_status = StatusPet->ImageStatus;
   \   00000188   3C0098E5           LDR      R0,[R8, #+60]
   \   0000018C   F00088E5           STR      R0,[R8, #+240]
    579            }
    580          
    581            if(StatusPet->StatusDeath == 1) return;
   \                     ??ChangeStatusImage_3:
   \   00000190   380098E5           LDR      R0,[R8, #+56]
   \   00000194   010050E3           CMP      R0,#+1
   \   00000198   8600000A           BEQ      ??ChangeStatusImage_4
    582          
    583            const wchar_t *sound_name = 0;
    584            wchar_t  sound_path[128];
    585            getdir(sound_path,SOUND_PATH);
   \   0000019C   ........           LDR      R1,??DataTable57  ;; SOUND_PATH
    586          
    587            if (StatusPet->Dirtiness >= (StatusPet->MaxDirtiness - 10))
   \   000001A0   ........           LDR      R6,??DataTable58  ;; SpeakMessage
   \   000001A4   0D00A0E1           MOV      R0,SP
   \   000001A8   ........           _BLF     ??getdir,??getdir??rA
   \   000001AC   200098E5           LDR      R0,[R8, #+32]
   \   000001B0   241098E5           LDR      R1,[R8, #+36]
   \   000001B4   FF70A0E3           MOV      R7,#+255
   \   000001B8   FF7C87E3           ORR      R7,R7,#0xFF00
   \   000001BC   0A1041E2           SUB      R1,R1,#+10
   \   000001C0   010050E1           CMP      R0,R1
   \   000001C4   180000BA           BLT      ??ChangeStatusImage_5
    588            {
    589              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_MSGDIRTINESS,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   000001C8   0720A0E1           MOV      R2,R7
   \   000001CC   0010A0E3           MOV      R1,#+0
   \   000001D0   EC0086E2           ADD      R0,R6,#+236
   \   000001D4   5D0100EF           SWI      +349
   \   000001D8   0090A0E1           MOV      R9,R0
   \   000001DC   0720A0E1           MOV      R2,R7
   \   000001E0   0010A0E3           MOV      R1,#+0
   \   000001E4   400088E2           ADD      R0,R8,#+64
   \   000001E8   5D0100EF           SWI      +349
   \   000001EC   0010A0E3           MOV      R1,#+0
   \   000001F0   02002DE9           PUSH     {R1}
   \   000001F4   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   000001F8   8820A0E3           MOV      R2,#+136
   \   000001FC   001091E5           LDR      R1,[R1, #+0]
   \   00000200   4C2D82E3           ORR      R2,R2,#0x1300
   \   00000204   920101E0           MUL      R1,R2,R1
   \   00000208   0130A0E3           MOV      R3,#+1
   \   0000020C   02002DE9           PUSH     {R1}
   \   00000210   0720A0E1           MOV      R2,R7
   \   00000214   0910A0E1           MOV      R1,R9
   \   00000218   570200EF           SWI      +599
    590              sound_name = SoundName[OHDEER_SND];
   \   0000021C   9400A0E3           MOV      R0,#+148
   \   00000220   600E80E3           ORR      R0,R0,#0x600
   \   00000224   069080E0           ADD      R9,R0,R6
   \   00000228   08D08DE2           ADD      SP,SP,#+8
    591            }
    592            if (StatusPet->Boredom >= (StatusPet->MaxBoredom - 10))
   \                     ??ChangeStatusImage_5:
   \   0000022C   280098E5           LDR      R0,[R8, #+40]
   \   00000230   2C1098E5           LDR      R1,[R8, #+44]
   \   00000234   0A1041E2           SUB      R1,R1,#+10
   \   00000238   010050E1           CMP      R0,R1
   \   0000023C   180000BA           BLT      ??ChangeStatusImage_6
    593            {
    594              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_MSGBOREDOM,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   00000240   0720A0E1           MOV      R2,R7
   \   00000244   0010A0E3           MOV      R1,#+0
   \   00000248   4E0F86E2           ADD      R0,R6,#+312
   \   0000024C   5D0100EF           SWI      +349
   \   00000250   0090A0E1           MOV      R9,R0
   \   00000254   0720A0E1           MOV      R2,R7
   \   00000258   0010A0E3           MOV      R1,#+0
   \   0000025C   400088E2           ADD      R0,R8,#+64
   \   00000260   5D0100EF           SWI      +349
   \   00000264   0010A0E3           MOV      R1,#+0
   \   00000268   02002DE9           PUSH     {R1}
   \   0000026C   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   00000270   8820A0E3           MOV      R2,#+136
   \   00000274   001091E5           LDR      R1,[R1, #+0]
   \   00000278   4C2D82E3           ORR      R2,R2,#0x1300
   \   0000027C   920101E0           MUL      R1,R2,R1
   \   00000280   0130A0E3           MOV      R3,#+1
   \   00000284   02002DE9           PUSH     {R1}
   \   00000288   0720A0E1           MOV      R2,R7
   \   0000028C   0910A0E1           MOV      R1,R9
   \   00000290   570200EF           SWI      +599
    595              sound_name = SoundName[BORING_SND];
   \   00000294   0800A0E3           MOV      R0,#+8
   \   00000298   600E80E3           ORR      R0,R0,#0x600
   \   0000029C   069080E0           ADD      R9,R0,R6
   \   000002A0   08D08DE2           ADD      SP,SP,#+8
    596            }
    597            if (StatusPet->Hunger >= (StatusPet->MaxHunger - 10))
   \                     ??ChangeStatusImage_6:
   \   000002A4   100098E5           LDR      R0,[R8, #+16]
   \   000002A8   141098E5           LDR      R1,[R8, #+20]
   \   000002AC   0A1041E2           SUB      R1,R1,#+10
   \   000002B0   010050E1           CMP      R0,R1
   \   000002B4   180000BA           BLT      ??ChangeStatusImage_7
    598            {
    599              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_MSGHUNGER,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   000002B8   0720A0E1           MOV      R2,R7
   \   000002BC   0010A0E3           MOV      R1,#+0
   \   000002C0   570F86E2           ADD      R0,R6,#+348
   \   000002C4   5D0100EF           SWI      +349
   \   000002C8   0090A0E1           MOV      R9,R0
   \   000002CC   0720A0E1           MOV      R2,R7
   \   000002D0   0010A0E3           MOV      R1,#+0
   \   000002D4   400088E2           ADD      R0,R8,#+64
   \   000002D8   5D0100EF           SWI      +349
   \   000002DC   0010A0E3           MOV      R1,#+0
   \   000002E0   02002DE9           PUSH     {R1}
   \   000002E4   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   000002E8   8820A0E3           MOV      R2,#+136
   \   000002EC   001091E5           LDR      R1,[R1, #+0]
   \   000002F0   4C2D82E3           ORR      R2,R2,#0x1300
   \   000002F4   920101E0           MUL      R1,R2,R1
   \   000002F8   0130A0E3           MOV      R3,#+1
   \   000002FC   02002DE9           PUSH     {R1}
   \   00000300   0720A0E1           MOV      R2,R7
   \   00000304   0910A0E1           MOV      R1,R9
   \   00000308   570200EF           SWI      +599
    600              sound_name = SoundName[ILLGETYOU_SND];
   \   0000030C   EC00A0E3           MOV      R0,#+236
   \   00000310   500E80E3           ORR      R0,R0,#0x500
   \   00000314   069080E0           ADD      R9,R0,R6
   \   00000318   08D08DE2           ADD      SP,SP,#+8
    601            }
    602            if (StatusPet->Health <= 10)
   \                     ??ChangeStatusImage_7:
   \   0000031C   080098E5           LDR      R0,[R8, #+8]
   \   00000320   0B0050E3           CMP      R0,#+11
   \   00000324   180000AA           BGE      ??ChangeStatusImage_8
    603            {
    604              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_MSGHEALTH,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   00000328   0720A0E1           MOV      R2,R7
   \   0000032C   0010A0E3           MOV      R1,#+0
   \   00000330   660F86E2           ADD      R0,R6,#+408
   \   00000334   5D0100EF           SWI      +349
   \   00000338   0090A0E1           MOV      R9,R0
   \   0000033C   0720A0E1           MOV      R2,R7
   \   00000340   0010A0E3           MOV      R1,#+0
   \   00000344   400088E2           ADD      R0,R8,#+64
   \   00000348   5D0100EF           SWI      +349
   \   0000034C   0010A0E3           MOV      R1,#+0
   \   00000350   02002DE9           PUSH     {R1}
   \   00000354   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   00000358   8820A0E3           MOV      R2,#+136
   \   0000035C   001091E5           LDR      R1,[R1, #+0]
   \   00000360   4C2D82E3           ORR      R2,R2,#0x1300
   \   00000364   920101E0           MUL      R1,R2,R1
   \   00000368   0130A0E3           MOV      R3,#+1
   \   0000036C   02002DE9           PUSH     {R1}
   \   00000370   0720A0E1           MOV      R2,R7
   \   00000374   0910A0E1           MOV      R1,R9
   \   00000378   570200EF           SWI      +599
    605              sound_name = SoundName[COMEON_SND];
   \   0000037C   D400A0E3           MOV      R0,#+212
   \   00000380   500E80E3           ORR      R0,R0,#0x500
   \   00000384   069080E0           ADD      R9,R0,R6
   \   00000388   08D08DE2           ADD      SP,SP,#+8
    606            }
    607            if (StatusPet->Happiness <= 10)
   \                     ??ChangeStatusImage_8:
   \   0000038C   180098E5           LDR      R0,[R8, #+24]
   \   00000390   0B0050E3           CMP      R0,#+11
    608              sound_name = SoundName[NOOO_SND];
   \   00000394   689E86B2           ADDLT    R9,R6,#+1664
    609          
    610            if(sound_name && snd) PlayFileV(sound_path, sound_name, sndVolume);
   \   00000398   000059E3           CMP      R9,#+0
   \   0000039C   00005413           CMPNE    R4,#+0
   \   000003A0   0400000A           BEQ      ??ChangeStatusImage_4
   \   000003A4   ........           LDR      R0,??DataTable60  ;; sndVolume
   \   000003A8   0910A0E1           MOV      R1,R9
   \   000003AC   002090E5           LDR      R2,[R0, #+0]
   \   000003B0   0D00A0E1           MOV      R0,SP
   \   000003B4   4A0200EF           SWI      +586
   \                     ??ChangeStatusImage_4:
   \   000003B8   40DF8DE2           ADD      SP,SP,#+256      ;; stack cleaning
   \   000003BC   D083BDE8           POP      {R4,R6-R9,PC}
   \                     ??ChangeStatusImage_1:
   \   000003C0   ........           DC32     MINSIZE
   \   000003C4   ........           DC32     MAXSIZE
   \   000003C8   1F85EB51           DC32     0x51eb851f
    611          }
    612          
    613          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    614          void VerifyStatus(int indx)
    615          {
    616            TStatusPet *StatusPet = &Pets[indx].Status;
   \                     ??VerifyStatus:
   \   00000000   ........           LDR      R2,??DataTable47  ;; Pets
   \   00000004   441FA0E3           MOV      R1,#+272
   \   00000008   912020E0           MLA      R0,R1,R0,R2
    617          // проверки максимальных - минимальных значений
    618            if (StatusPet->Hunger > StatusPet->MaxHunger) StatusPet->Hunger = StatusPet->MaxHunger;
   \   0000000C   142090E5           LDR      R2,[R0, #+20]
   \   00000010   103090E5           LDR      R3,[R0, #+16]
   \   00000014   030052E1           CMP      R2,R3
   \   00000018   102080B5           STRLT    R2,[R0, #+16]
    619            if (StatusPet->Hunger < 0) StatusPet->Hunger = 0;
   \   0000001C   103090E5           LDR      R3,[R0, #+16]
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   000053E3           CMP      R3,#+0
   \   00000028   10208045           STRMI    R2,[R0, #+16]
    620            if (StatusPet->Happiness > StatusPet->MaxHappiness) StatusPet->Happiness = StatusPet->MaxHappiness;
   \   0000002C   1C3090E5           LDR      R3,[R0, #+28]
   \   00000030   18C090E5           LDR      R12,[R0, #+24]
   \   00000034   0C0053E1           CMP      R3,R12
   \   00000038   183080B5           STRLT    R3,[R0, #+24]
    621            if (StatusPet->Happiness < 0) StatusPet->Happiness = 0;
   \   0000003C   183090E5           LDR      R3,[R0, #+24]
   \   00000040   000053E3           CMP      R3,#+0
   \   00000044   18208045           STRMI    R2,[R0, #+24]
    622            if (StatusPet->Health > StatusPet->MaxHealth) StatusPet->Health = StatusPet->MaxHealth;
   \   00000048   0C3090E5           LDR      R3,[R0, #+12]
   \   0000004C   08C090E5           LDR      R12,[R0, #+8]
   \   00000050   0C0053E1           CMP      R3,R12
   \   00000054   083080B5           STRLT    R3,[R0, #+8]
    623            if (StatusPet->Health < 0) StatusPet->Health = 0;
   \   00000058   083090E5           LDR      R3,[R0, #+8]
   \   0000005C   000053E3           CMP      R3,#+0
   \   00000060   08208045           STRMI    R2,[R0, #+8]
    624            if (StatusPet->Dirtiness > StatusPet->MaxDirtiness) StatusPet->Dirtiness = StatusPet->MaxDirtiness;
   \   00000064   243090E5           LDR      R3,[R0, #+36]
   \   00000068   20C090E5           LDR      R12,[R0, #+32]
   \   0000006C   0C0053E1           CMP      R3,R12
   \   00000070   203080B5           STRLT    R3,[R0, #+32]
    625            if (StatusPet->Dirtiness < 0) StatusPet->Dirtiness = 0;
   \   00000074   203090E5           LDR      R3,[R0, #+32]
   \   00000078   000053E3           CMP      R3,#+0
   \   0000007C   20208045           STRMI    R2,[R0, #+32]
    626            if (StatusPet->Boredom > StatusPet->MaxBoredom) StatusPet->Boredom = StatusPet->MaxBoredom;
   \   00000080   2C3090E5           LDR      R3,[R0, #+44]
   \   00000084   28C090E5           LDR      R12,[R0, #+40]
   \   00000088   0C0053E1           CMP      R3,R12
   \   0000008C   283080B5           STRLT    R3,[R0, #+40]
    627            if (StatusPet->Boredom < 0) StatusPet->Boredom = 0;
   \   00000090   283090E5           LDR      R3,[R0, #+40]
   \   00000094   000053E3           CMP      R3,#+0
   \   00000098   28208045           STRMI    R2,[R0, #+40]
    628            if (StatusPet->Behaviour > StatusPet->MaxBehaviour) StatusPet->Behaviour = StatusPet->MaxBehaviour;
   \   0000009C   343090E5           LDR      R3,[R0, #+52]
   \   000000A0   30C090E5           LDR      R12,[R0, #+48]
   \   000000A4   0C0053E1           CMP      R3,R12
   \   000000A8   303080B5           STRLT    R3,[R0, #+48]
    629            if (StatusPet->Behaviour < 0) StatusPet->Behaviour = 0;
   \   000000AC   303090E5           LDR      R3,[R0, #+48]
   \   000000B0   000053E3           CMP      R3,#+0
   \   000000B4   30208045           STRMI    R2,[R0, #+48]
    630            if (Pets[indx].Fatigue > 100) Pets[indx].Fatigue = 100;
   \   000000B8   D81090E5           LDR      R1,[R0, #+216]
   \   000000BC   650051E3           CMP      R1,#+101
   \   000000C0   6410A0A3           MOVGE    R1,#+100
   \   000000C4   D81080A5           STRGE    R1,[R0, #+216]
   \   000000C8   1EFF2FA1           BXGE     LR
    631            if (Pets[indx].Fatigue < 0) Pets[indx].Fatigue=0;
   \   000000CC   000051E3           CMP      R1,#+0
   \   000000D0   D8208045           STRMI    R2,[R0, #+216]
    632          }
   \   000000D4   1EFF2FE1           BX       LR               ;; return
    633          // ---------------------------------------------------------------------------
    634          

   \                                 In segment CODE, align 4, keep-with-next
    635          void InfoStatus(int indx, BOOK * book, int)
    636          {
   \                     ??InfoStatus:
   \   00000000   0100A0E1           MOV      R0,R1
    637            ShowStatus(book);
   \   00000004   ........           _BF      ??ShowStatus,??ShowStatus??rA  ;; tailcall
    638          }
    639          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    640          void GamePlay(int indx, BOOK * bk, int snd)
    641          {
   \                     ??GamePlay:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   40DF4DE2           SUB      SP,SP,#+256
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0170A0E1           MOV      R7,R1
    642            wchar_t  sound_path[128];
    643            getdir(sound_path,SOUND_PATH);
   \   00000010   ........           LDR      R1,??DataTable57  ;; SOUND_PATH
   \   00000014   0280A0E1           MOV      R8,R2
    644          
    645            if(Pets[indx].Status.StatusDeath == 1)
   \   00000018   ........           LDR      R9,??DataTable58  ;; SpeakMessage
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??getdir,??getdir??rA
   \   00000024   ........           LDR      R1,??DataTable47  ;; Pets
   \   00000028   440FA0E3           MOV      R0,#+272
   \   0000002C   901625E0           MLA      R5,R0,R6,R1
   \   00000030   ........           LDR      R0,??DataTable60  ;; sndVolume
   \   00000034   FF40A0E3           MOV      R4,#+255
   \   00000038   002090E5           LDR      R2,[R0, #+0]
   \   0000003C   380095E5           LDR      R0,[R5, #+56]
   \   00000040   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000044   010050E3           CMP      R0,#+1
   \   00000048   0A00001A           BNE      ??GamePlay_1
    646            {
    647              if(snd) PlayFileV(sound_path, SoundName[FATALITY_SND], sndVolume);
   \   0000004C   000058E3           CMP      R8,#+0
   \   00000050   0400000A           BEQ      ??GamePlay_2
   \   00000054   3800A0E3           MOV      R0,#+56
   \   00000058   600E80E3           ORR      R0,R0,#0x600
   \   0000005C   091080E0           ADD      R1,R0,R9
   \   00000060   0D00A0E1           MOV      R0,SP
   \   00000064   4A0200EF           SWI      +586
    648              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_IAMDIE,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??GamePlay_2:
   \   00000068   0420A0E1           MOV      R2,R4
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   730F89E2           ADD      R0,R9,#+460
   \   00000074   0C0000EA           B        ??GamePlay_3
    649              return;
    650            }
    651          
    652            if(Pets[indx].Sleep != 0)
   \                     ??GamePlay_1:
   \   00000078   DC0095E5           LDR      R0,[R5, #+220]
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   1E00000A           BEQ      ??GamePlay_4
    653            {
    654              if(snd) PlayFileV(sound_path, SoundName[LEAVEME_SND], sndVolume);
   \   00000084   000058E3           CMP      R8,#+0
   \   00000088   0400000A           BEQ      ??GamePlay_5
   \   0000008C   6800A0E3           MOV      R0,#+104
   \   00000090   600E80E3           ORR      R0,R0,#0x600
   \   00000094   091080E0           ADD      R1,R0,R9
   \   00000098   0D00A0E1           MOV      R0,SP
   \   0000009C   4A0200EF           SWI      +586
    655              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_IAMSLEEP,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??GamePlay_5:
   \   000000A0   0420A0E1           MOV      R2,R4
   \   000000A4   0010A0E3           MOV      R1,#+0
   \   000000A8   7B0F89E2           ADD      R0,R9,#+492
   \                     ??GamePlay_3:
   \   000000AC   5D0100EF           SWI      +349
   \   000000B0   0060A0E1           MOV      R6,R0
   \   000000B4   0420A0E1           MOV      R2,R4
   \   000000B8   0010A0E3           MOV      R1,#+0
   \   000000BC   400085E2           ADD      R0,R5,#+64
   \   000000C0   5D0100EF           SWI      +349
   \   000000C4   0010A0E3           MOV      R1,#+0
   \   000000C8   02002DE9           PUSH     {R1}
   \   000000CC   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   000000D0   8820A0E3           MOV      R2,#+136
   \   000000D4   001091E5           LDR      R1,[R1, #+0]
   \   000000D8   4C2D82E3           ORR      R2,R2,#0x1300
   \   000000DC   920101E0           MUL      R1,R2,R1
   \   000000E0   0130A0E3           MOV      R3,#+1
   \   000000E4   02002DE9           PUSH     {R1}
   \   000000E8   0420A0E1           MOV      R2,R4
   \   000000EC   0610A0E1           MOV      R1,R6
   \   000000F0   570200EF           SWI      +599
    656              return;
   \   000000F4   08D08DE2           ADD      SP,SP,#+8
   \   000000F8   40DF8DE2           ADD      SP,SP,#+256
   \   000000FC   F083BDE8           POP      {R4-R9,PC}
    657            }
    658          
    659            Pets[indx].Status.Happiness += 10;
   \                     ??GamePlay_4:
   \   00000100   180095E5           LDR      R0,[R5, #+24]
    660            Pets[indx].Status.Boredom   -= 10;
    661            Pets[indx].Status.Hunger    += 10;
    662            Pets[indx].Fatigue                 += 10;
    663            if(snd) PlayFileV(sound_path, SoundName[LAUGH_SND], sndVolume);
   \   00000104   000058E3           CMP      R8,#+0
   \   00000108   0A0080E2           ADD      R0,R0,#+10
   \   0000010C   180085E5           STR      R0,[R5, #+24]
   \   00000110   280095E5           LDR      R0,[R5, #+40]
   \   00000114   0A0040E2           SUB      R0,R0,#+10
   \   00000118   280085E5           STR      R0,[R5, #+40]
   \   0000011C   100095E5           LDR      R0,[R5, #+16]
   \   00000120   0A0080E2           ADD      R0,R0,#+10
   \   00000124   100085E5           STR      R0,[R5, #+16]
   \   00000128   D80095E5           LDR      R0,[R5, #+216]
   \   0000012C   0A0080E2           ADD      R0,R0,#+10
   \   00000130   D80085E5           STR      R0,[R5, #+216]
   \   00000134   0400000A           BEQ      ??GamePlay_6
   \   00000138   5400A0E3           MOV      R0,#+84
   \   0000013C   600E80E3           ORR      R0,R0,#0x600
   \   00000140   091080E0           ADD      R1,R0,R9
   \   00000144   0D00A0E1           MOV      R0,SP
   \   00000148   4A0200EF           SWI      +586
    664            MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_COOL,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??GamePlay_6:
   \   0000014C   0420A0E1           MOV      R2,R4
   \   00000150   0010A0E3           MOV      R1,#+0
   \   00000154   850F89E2           ADD      R0,R9,#+532
   \   00000158   5D0100EF           SWI      +349
   \   0000015C   0090A0E1           MOV      R9,R0
   \   00000160   0420A0E1           MOV      R2,R4
   \   00000164   0010A0E3           MOV      R1,#+0
   \   00000168   400085E2           ADD      R0,R5,#+64
   \   0000016C   5D0100EF           SWI      +349
   \   00000170   0010A0E3           MOV      R1,#+0
   \   00000174   02002DE9           PUSH     {R1}
   \   00000178   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   0000017C   8820A0E3           MOV      R2,#+136
   \   00000180   001091E5           LDR      R1,[R1, #+0]
   \   00000184   4C2D82E3           ORR      R2,R2,#0x1300
   \   00000188   920101E0           MUL      R1,R2,R1
   \   0000018C   0130A0E3           MOV      R3,#+1
   \   00000190   02002DE9           PUSH     {R1}
   \   00000194   0420A0E1           MOV      R2,R4
   \   00000198   0910A0E1           MOV      R1,R9
   \   0000019C   570200EF           SWI      +599
    665            ChangeStatusImage(indx, bk, snd);
   \   000001A0   0820A0E1           MOV      R2,R8
   \   000001A4   0710A0E1           MOV      R1,R7
   \   000001A8   0600A0E1           MOV      R0,R6
   \   000001AC   ........           BL       ??ChangeStatusImage
    666            VerifyStatus(indx);
   \   000001B0   0600A0E1           MOV      R0,R6
   \   000001B4   ........           BL       ??VerifyStatus
    667          }
   \   000001B8   08D08DE2           ADD      SP,SP,#+8
   \   000001BC   40DF8DE2           ADD      SP,SP,#+256
   \   000001C0   F083BDE8           POP      {R4-R9,PC}       ;; return
    668          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    669          void Vaccinate(int indx, BOOK * bk, int snd)
    670          {
   \                     ??Vaccinate:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   40DF4DE2           SUB      SP,SP,#+256
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0170A0E1           MOV      R7,R1
    671            wchar_t  sound_path[128];
    672            getdir(sound_path,SOUND_PATH);
   \   00000010   ........           LDR      R1,??DataTable57  ;; SOUND_PATH
   \   00000014   0280A0E1           MOV      R8,R2
    673          
    674            if (Pets[indx].Status.StatusDeath == 1)
   \   00000018   ........           LDR      R9,??DataTable58  ;; SpeakMessage
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??getdir,??getdir??rA
   \   00000024   ........           LDR      R1,??DataTable47  ;; Pets
   \   00000028   440FA0E3           MOV      R0,#+272
   \   0000002C   901625E0           MLA      R5,R0,R6,R1
   \   00000030   ........           LDR      R0,??DataTable60  ;; sndVolume
   \   00000034   FF40A0E3           MOV      R4,#+255
   \   00000038   002090E5           LDR      R2,[R0, #+0]
   \   0000003C   380095E5           LDR      R0,[R5, #+56]
   \   00000040   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000044   010050E3           CMP      R0,#+1
   \   00000048   0A00001A           BNE      ??Vaccinate_1
    675            {
    676              if(snd) PlayFileV(sound_path, SoundName[FATALITY_SND], sndVolume);
   \   0000004C   000058E3           CMP      R8,#+0
   \   00000050   0400000A           BEQ      ??Vaccinate_2
   \   00000054   3800A0E3           MOV      R0,#+56
   \   00000058   600E80E3           ORR      R0,R0,#0x600
   \   0000005C   091080E0           ADD      R1,R0,R9
   \   00000060   0D00A0E1           MOV      R0,SP
   \   00000064   4A0200EF           SWI      +586
    677              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_IAMDIE,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??Vaccinate_2:
   \   00000068   0420A0E1           MOV      R2,R4
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   730F89E2           ADD      R0,R9,#+460
   \   00000074   0C0000EA           B        ??Vaccinate_3
    678              return;
    679            }
    680            if (Pets[indx].Sleep != 0)
   \                     ??Vaccinate_1:
   \   00000078   DC1095E5           LDR      R1,[R5, #+220]
   \   0000007C   6800A0E3           MOV      R0,#+104
   \   00000080   600E80E3           ORR      R0,R0,#0x600
   \   00000084   000051E3           CMP      R1,#+0
   \   00000088   1C00000A           BEQ      ??Vaccinate_4
    681            {
    682              if(snd) PlayFileV(sound_path, SoundName[LEAVEME_SND], sndVolume);
   \   0000008C   000058E3           CMP      R8,#+0
   \   00000090   0200000A           BEQ      ??Vaccinate_5
   \   00000094   091080E0           ADD      R1,R0,R9
   \   00000098   0D00A0E1           MOV      R0,SP
   \   0000009C   4A0200EF           SWI      +586
    683              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_IAMSLEEP,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??Vaccinate_5:
   \   000000A0   0420A0E1           MOV      R2,R4
   \   000000A4   0010A0E3           MOV      R1,#+0
   \   000000A8   7B0F89E2           ADD      R0,R9,#+492
   \                     ??Vaccinate_3:
   \   000000AC   5D0100EF           SWI      +349
   \   000000B0   0060A0E1           MOV      R6,R0
   \   000000B4   0420A0E1           MOV      R2,R4
   \   000000B8   0010A0E3           MOV      R1,#+0
   \   000000BC   400085E2           ADD      R0,R5,#+64
   \   000000C0   5D0100EF           SWI      +349
   \   000000C4   0010A0E3           MOV      R1,#+0
   \   000000C8   02002DE9           PUSH     {R1}
   \   000000CC   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   000000D0   8820A0E3           MOV      R2,#+136
   \   000000D4   001091E5           LDR      R1,[R1, #+0]
   \   000000D8   4C2D82E3           ORR      R2,R2,#0x1300
   \   000000DC   920101E0           MUL      R1,R2,R1
   \   000000E0   0130A0E3           MOV      R3,#+1
   \   000000E4   02002DE9           PUSH     {R1}
   \   000000E8   0420A0E1           MOV      R2,R4
   \   000000EC   0610A0E1           MOV      R1,R6
   \   000000F0   570200EF           SWI      +599
    684              return;
   \   000000F4   08D08DE2           ADD      SP,SP,#+8
   \   000000F8   40DF8DE2           ADD      SP,SP,#+256
   \   000000FC   F083BDE8           POP      {R4-R9,PC}
    685            }
    686            if (Pets[indx].Status.Behaviour < Pets[indx].Status.MaxBehaviour/4)
   \                     ??Vaccinate_4:
   \   00000100   341095E5           LDR      R1,[R5, #+52]
   \   00000104   303095E5           LDR      R3,[R5, #+48]
   \   00000108   C1C0A0E1           ASR      R12,R1,#+1
   \   0000010C   2C1F81E0           ADD      R1,R1,R12, LSR #+30
   \   00000110   410153E1           CMP      R3,R1, ASR #+2
   \   00000114   080000AA           BGE      ??Vaccinate_6
    687            {
    688              if(snd) PlayFileV(sound_path, SoundName[LEAVEME_SND], sndVolume);
   \   00000118   000058E3           CMP      R8,#+0
   \   0000011C   0200000A           BEQ      ??Vaccinate_7
   \   00000120   091080E0           ADD      R1,R0,R9
   \   00000124   0D00A0E1           MOV      R0,SP
   \   00000128   4A0200EF           SWI      +586
    689              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_DONTDISTURB,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??Vaccinate_7:
   \   0000012C   0420A0E1           MOV      R2,R4
   \   00000130   0010A0E3           MOV      R1,#+0
   \   00000134   8C0F89E2           ADD      R0,R9,#+560
   \   00000138   DBFFFFEA           B        ??Vaccinate_3
    690              return;
    691            }
    692          
    693            Pets[indx].Status.Happiness -= 10;
   \                     ??Vaccinate_6:
   \   0000013C   180095E5           LDR      R0,[R5, #+24]
    694            Pets[indx].Status.Health    += 10;
    695            Pets[indx].Status.Boredom   -= 10;
    696          
    697            if(snd) PlayFileV(sound_path, SoundName[OUCH_SND], sndVolume);
   \   00000140   000058E3           CMP      R8,#+0
   \   00000144   0A0040E2           SUB      R0,R0,#+10
   \   00000148   180085E5           STR      R0,[R5, #+24]
   \   0000014C   080095E5           LDR      R0,[R5, #+8]
   \   00000150   0A0080E2           ADD      R0,R0,#+10
   \   00000154   080085E5           STR      R0,[R5, #+8]
   \   00000158   280095E5           LDR      R0,[R5, #+40]
   \   0000015C   0A0040E2           SUB      R0,R0,#+10
   \   00000160   280085E5           STR      R0,[R5, #+40]
   \   00000164   0200000A           BEQ      ??Vaccinate_8
   \   00000168   6C1E89E2           ADD      R1,R9,#+1728
   \   0000016C   0D00A0E1           MOV      R0,SP
   \   00000170   4A0200EF           SWI      +586
    698            MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_PAIN,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??Vaccinate_8:
   \   00000174   0420A0E1           MOV      R2,R4
   \   00000178   0010A0E3           MOV      R1,#+0
   \   0000017C   990F89E2           ADD      R0,R9,#+612
   \   00000180   5D0100EF           SWI      +349
   \   00000184   0090A0E1           MOV      R9,R0
   \   00000188   0420A0E1           MOV      R2,R4
   \   0000018C   0010A0E3           MOV      R1,#+0
   \   00000190   400085E2           ADD      R0,R5,#+64
   \   00000194   5D0100EF           SWI      +349
   \   00000198   0010A0E3           MOV      R1,#+0
   \   0000019C   02002DE9           PUSH     {R1}
   \   000001A0   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   000001A4   8820A0E3           MOV      R2,#+136
   \   000001A8   001091E5           LDR      R1,[R1, #+0]
   \   000001AC   4C2D82E3           ORR      R2,R2,#0x1300
   \   000001B0   920101E0           MUL      R1,R2,R1
   \   000001B4   0130A0E3           MOV      R3,#+1
   \   000001B8   02002DE9           PUSH     {R1}
   \   000001BC   0420A0E1           MOV      R2,R4
   \   000001C0   0910A0E1           MOV      R1,R9
   \   000001C4   570200EF           SWI      +599
    699            ChangeStatusImage(indx, bk, snd);
   \   000001C8   0820A0E1           MOV      R2,R8
   \   000001CC   0710A0E1           MOV      R1,R7
   \   000001D0   0600A0E1           MOV      R0,R6
   \   000001D4   ........           BL       ??ChangeStatusImage
    700            VerifyStatus(indx);
   \   000001D8   0600A0E1           MOV      R0,R6
   \   000001DC   ........           BL       ??VerifyStatus
    701          }
   \   000001E0   08D08DE2           ADD      SP,SP,#+8
   \   000001E4   40DF8DE2           ADD      SP,SP,#+256
   \   000001E8   F083BDE8           POP      {R4-R9,PC}       ;; return
    702          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    703          void Discipline(int indx, BOOK * bk, int snd)
    704          {
   \                     ??Discipline:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   40DF4DE2           SUB      SP,SP,#+256
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0170A0E1           MOV      R7,R1
    705            wchar_t  sound_path[128];
    706            getdir(sound_path,SOUND_PATH);
   \   00000010   ........           LDR      R1,??DataTable57  ;; SOUND_PATH
   \   00000014   0280A0E1           MOV      R8,R2
    707          
    708            if (Pets[indx].Status.StatusDeath == 1)
   \   00000018   ........           LDR      R9,??DataTable58  ;; SpeakMessage
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??getdir,??getdir??rA
   \   00000024   ........           LDR      R1,??DataTable47  ;; Pets
   \   00000028   440FA0E3           MOV      R0,#+272
   \   0000002C   901625E0           MLA      R5,R0,R6,R1
   \   00000030   ........           LDR      R0,??DataTable60  ;; sndVolume
   \   00000034   FF40A0E3           MOV      R4,#+255
   \   00000038   002090E5           LDR      R2,[R0, #+0]
   \   0000003C   380095E5           LDR      R0,[R5, #+56]
   \   00000040   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000044   010050E3           CMP      R0,#+1
   \   00000048   0A00001A           BNE      ??Discipline_1
    709            {
    710              if(snd) PlayFileV(sound_path, SoundName[FATALITY_SND], sndVolume);
   \   0000004C   000058E3           CMP      R8,#+0
   \   00000050   0400000A           BEQ      ??Discipline_2
   \   00000054   3800A0E3           MOV      R0,#+56
   \   00000058   600E80E3           ORR      R0,R0,#0x600
   \   0000005C   091080E0           ADD      R1,R0,R9
   \   00000060   0D00A0E1           MOV      R0,SP
   \   00000064   4A0200EF           SWI      +586
    711              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_IAMDIE,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??Discipline_2:
   \   00000068   0420A0E1           MOV      R2,R4
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   730F89E2           ADD      R0,R9,#+460
   \   00000074   0C0000EA           B        ??Discipline_3
    712              return;
    713            }
    714            if (Pets[indx].Sleep != 0)
   \                     ??Discipline_1:
   \   00000078   DC0095E5           LDR      R0,[R5, #+220]
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   1E00000A           BEQ      ??Discipline_4
    715            {
    716              if(snd) PlayFileV(sound_path, SoundName[LEAVEME_SND], sndVolume);
   \   00000084   000058E3           CMP      R8,#+0
   \   00000088   0400000A           BEQ      ??Discipline_5
   \   0000008C   6800A0E3           MOV      R0,#+104
   \   00000090   600E80E3           ORR      R0,R0,#0x600
   \   00000094   091080E0           ADD      R1,R0,R9
   \   00000098   0D00A0E1           MOV      R0,SP
   \   0000009C   4A0200EF           SWI      +586
    717              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_IAMSLEEP,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??Discipline_5:
   \   000000A0   0420A0E1           MOV      R2,R4
   \   000000A4   0010A0E3           MOV      R1,#+0
   \   000000A8   7B0F89E2           ADD      R0,R9,#+492
   \                     ??Discipline_3:
   \   000000AC   5D0100EF           SWI      +349
   \   000000B0   0060A0E1           MOV      R6,R0
   \   000000B4   0420A0E1           MOV      R2,R4
   \   000000B8   0010A0E3           MOV      R1,#+0
   \   000000BC   400085E2           ADD      R0,R5,#+64
   \   000000C0   5D0100EF           SWI      +349
   \   000000C4   0010A0E3           MOV      R1,#+0
   \   000000C8   02002DE9           PUSH     {R1}
   \   000000CC   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   000000D0   8820A0E3           MOV      R2,#+136
   \   000000D4   001091E5           LDR      R1,[R1, #+0]
   \   000000D8   4C2D82E3           ORR      R2,R2,#0x1300
   \   000000DC   920101E0           MUL      R1,R2,R1
   \   000000E0   0130A0E3           MOV      R3,#+1
   \   000000E4   02002DE9           PUSH     {R1}
   \   000000E8   0420A0E1           MOV      R2,R4
   \   000000EC   0610A0E1           MOV      R1,R6
   \   000000F0   570200EF           SWI      +599
    718              return;
   \   000000F4   08D08DE2           ADD      SP,SP,#+8
   \   000000F8   40DF8DE2           ADD      SP,SP,#+256
   \   000000FC   F083BDE8           POP      {R4-R9,PC}
    719            }
    720          
    721            Pets[indx].Status.Happiness -= 10;
   \                     ??Discipline_4:
   \   00000100   180095E5           LDR      R0,[R5, #+24]
    722            Pets[indx].Status.Behaviour += 10;
    723            Pets[indx].Status.Boredom   -= 10;
    724          
    725            if(snd) PlayFileV(sound_path, SoundName[YESSIR_SND], sndVolume);
   \   00000104   000058E3           CMP      R8,#+0
   \   00000108   0A0040E2           SUB      R0,R0,#+10
   \   0000010C   180085E5           STR      R0,[R5, #+24]
   \   00000110   300095E5           LDR      R0,[R5, #+48]
   \   00000114   0A0080E2           ADD      R0,R0,#+10
   \   00000118   300085E5           STR      R0,[R5, #+48]
   \   0000011C   280095E5           LDR      R0,[R5, #+40]
   \   00000120   0A0040E2           SUB      R0,R0,#+10
   \   00000124   280085E5           STR      R0,[R5, #+40]
   \   00000128   0400000A           BEQ      ??Discipline_6
   \   0000012C   E400A0E3           MOV      R0,#+228
   \   00000130   600E80E3           ORR      R0,R0,#0x600
   \   00000134   091080E0           ADD      R1,R0,R9
   \   00000138   0D00A0E1           MOV      R0,SP
   \   0000013C   4A0200EF           SWI      +586
    726            MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_SHREW,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??Discipline_6:
   \   00000140   0420A0E1           MOV      R2,R4
   \   00000144   0010A0E3           MOV      R1,#+0
   \   00000148   A20F89E2           ADD      R0,R9,#+648
   \   0000014C   5D0100EF           SWI      +349
   \   00000150   0090A0E1           MOV      R9,R0
   \   00000154   0420A0E1           MOV      R2,R4
   \   00000158   0010A0E3           MOV      R1,#+0
   \   0000015C   400085E2           ADD      R0,R5,#+64
   \   00000160   5D0100EF           SWI      +349
   \   00000164   0010A0E3           MOV      R1,#+0
   \   00000168   02002DE9           PUSH     {R1}
   \   0000016C   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   00000170   8820A0E3           MOV      R2,#+136
   \   00000174   001091E5           LDR      R1,[R1, #+0]
   \   00000178   4C2D82E3           ORR      R2,R2,#0x1300
   \   0000017C   920101E0           MUL      R1,R2,R1
   \   00000180   0130A0E3           MOV      R3,#+1
   \   00000184   02002DE9           PUSH     {R1}
   \   00000188   0420A0E1           MOV      R2,R4
   \   0000018C   0910A0E1           MOV      R1,R9
   \   00000190   570200EF           SWI      +599
    727            ChangeStatusImage(indx, bk, snd);
   \   00000194   0820A0E1           MOV      R2,R8
   \   00000198   0710A0E1           MOV      R1,R7
   \   0000019C   0600A0E1           MOV      R0,R6
   \   000001A0   ........           BL       ??ChangeStatusImage
    728            VerifyStatus(indx);
   \   000001A4   0600A0E1           MOV      R0,R6
   \   000001A8   ........           BL       ??VerifyStatus
    729          }
   \   000001AC   08D08DE2           ADD      SP,SP,#+8
   \   000001B0   40DF8DE2           ADD      SP,SP,#+256
   \   000001B4   F083BDE8           POP      {R4-R9,PC}       ;; return
    730          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    731          void SleepProc(int indx, BOOK *bk, int snd, int type)
    732          {
   \                     ??SleepProc:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   40DF4DE2           SUB      SP,SP,#+256
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0160A0E1           MOV      R6,R1
    733            wchar_t sound_path[128];
    734            const wchar_t *sound_name0;
    735            wchar_t *msg0;
    736            const wchar_t *sound_name1;
    737            wchar_t *msg1;
    738            getdir(sound_path,SOUND_PATH);
   \   00000010   ........           LDR      R1,??DataTable57  ;; SOUND_PATH
   \   00000014   0270A0E1           MOV      R7,R2
   \   00000018   0390A0E1           MOV      R9,R3
    739          
    740            if (Pets[indx].Status.StatusDeath==1)
   \   0000001C   ........           LDR      R10,??DataTable58  ;; SpeakMessage
   \   00000020   0D00A0E1           MOV      R0,SP
   \   00000024   ........           _BLF     ??getdir,??getdir??rA
   \   00000028   ........           LDR      R1,??DataTable74  ;; Pets
   \   0000002C   440FA0E3           MOV      R0,#+272
   \   00000030   901528E0           MLA      R8,R0,R5,R1
   \   00000034   ........           LDR      R0,??DataTable60  ;; sndVolume
   \   00000038   FF40A0E3           MOV      R4,#+255
   \   0000003C   002090E5           LDR      R2,[R0, #+0]
   \   00000040   380098E5           LDR      R0,[R8, #+56]
   \   00000044   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000048   010050E3           CMP      R0,#+1
   \   0000004C   0A00001A           BNE      ??SleepProc_1
    741            {
    742              if(snd) PlayFileV(sound_path, SoundName[FATALITY_SND], sndVolume);
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0400000A           BEQ      ??SleepProc_2
   \   00000058   3800A0E3           MOV      R0,#+56
   \   0000005C   600E80E3           ORR      R0,R0,#0x600
   \   00000060   0A1080E0           ADD      R1,R0,R10
   \   00000064   0D00A0E1           MOV      R0,SP
   \   00000068   4A0200EF           SWI      +586
    743              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_IAMDIE,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??SleepProc_2:
   \   0000006C   0420A0E1           MOV      R2,R4
   \   00000070   0010A0E3           MOV      R1,#+0
   \   00000074   730F8AE2           ADD      R0,R10,#+460
   \                     ??SleepProc_3:
   \   00000078   130000EA           B        ??SleepProc_4
    744              return;
    745            }
    746          
    747            if (Pets[indx].Status.Behaviour < Pets[indx].Status.MaxBehaviour/4)
   \                     ??SleepProc_1:
   \   0000007C   340098E5           LDR      R0,[R8, #+52]
   \   00000080   301098E5           LDR      R1,[R8, #+48]
   \   00000084   C030A0E1           ASR      R3,R0,#+1
   \   00000088   230F80E0           ADD      R0,R0,R3, LSR #+30
   \   0000008C   400151E1           CMP      R1,R0, ASR #+2
   \   00000090   220000AA           BGE      ??SleepProc_5
    748            {
    749              if(snd) PlayFileV(sound_path, SoundName[LEAVEME_SND], sndVolume);
   \   00000094   000057E3           CMP      R7,#+0
   \   00000098   0400000A           BEQ      ??SleepProc_6
   \   0000009C   6800A0E3           MOV      R0,#+104
   \   000000A0   600E80E3           ORR      R0,R0,#0x600
   \   000000A4   0A1080E0           ADD      R1,R0,R10
   \   000000A8   0D00A0E1           MOV      R0,SP
   \   000000AC   4A0200EF           SWI      +586
    750              if(Pets[indx].Sleep)
   \                     ??SleepProc_6:
   \   000000B0   DC0098E5           LDR      R0,[R8, #+220]
   \   000000B4   0420A0E1           MOV      R2,R4
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   0010A0E3           MOV      R1,#+0
    751                MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_IAMSLEEP,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   000000C0   7B0F8A12           ADDNE    R0,R10,#+492
   \   000000C4   0000001A           BNE      ??SleepProc_4
    752              else
    753                MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_DONTDISTURB,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   000000C8   8C0F8AE2           ADD      R0,R10,#+560
   \                     ??SleepProc_4:
   \   000000CC   5D0100EF           SWI      +349
   \   000000D0   0050A0E1           MOV      R5,R0
   \   000000D4   0420A0E1           MOV      R2,R4
   \   000000D8   0010A0E3           MOV      R1,#+0
   \   000000DC   400088E2           ADD      R0,R8,#+64
   \   000000E0   5D0100EF           SWI      +349
   \   000000E4   0010A0E3           MOV      R1,#+0
   \   000000E8   02002DE9           PUSH     {R1}
   \   000000EC   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   000000F0   8820A0E3           MOV      R2,#+136
   \   000000F4   001091E5           LDR      R1,[R1, #+0]
   \   000000F8   4C2D82E3           ORR      R2,R2,#0x1300
   \   000000FC   920101E0           MUL      R1,R2,R1
   \   00000100   0130A0E3           MOV      R3,#+1
   \   00000104   02002DE9           PUSH     {R1}
   \   00000108   0420A0E1           MOV      R2,R4
   \   0000010C   0510A0E1           MOV      R1,R5
   \   00000110   570200EF           SWI      +599
   \   00000114   08D08DE2           ADD      SP,SP,#+8
   \   00000118   40DF8DE2           ADD      SP,SP,#+256
   \   0000011C   F087BDE8           POP      {R4-R10,PC}
    754              return;
    755            }
    756          
    757            if(type == NIGHT_SLEEP)
   \                     ??SleepProc_5:
   \   00000120   D400A0E3           MOV      R0,#+212
   \   00000124   600E80E3           ORR      R0,R0,#0x600
   \   00000128   281040E2           SUB      R1,R0,#+40
   \   0000012C   000059E3           CMP      R9,#+0
   \   00000130   0400001A           BNE      ??SleepProc_7
    758            {
    759              sound_name0 = SoundName[SLEEP_SND];
   \   00000134   0A1081E0           ADD      R1,R1,R10
    760              sound_name1 = SoundName[OW_SND];
   \   00000138   0A0080E0           ADD      R0,R0,R10
    761              msg0 = LG_MSGNIGHTSLEEP;
   \   0000013C   AB9F8AE2           ADD      R9,R10,#+684
    762              msg1 = LG_MSGNIGHTNOTSLEEP;
   \   00000140   B6AF8AE2           ADD      R10,R10,#+728
   \   00000144   130000EA           B        ??SleepProc_8
    763            }
    764            else if(type == FATIGUE_SLEEP)
   \                     ??SleepProc_7:
   \   00000148   010059E3           CMP      R9,#+1
   \   0000014C   0400001A           BNE      ??SleepProc_9
    765            {
    766              sound_name0 = SoundName[SLEEP_SND];
   \   00000150   0A1081E0           ADD      R1,R1,R10
    767              sound_name1 = SoundName[OW_SND];
   \   00000154   0A0080E0           ADD      R0,R0,R10
    768              msg0 = LG_MSGFATIGUESLEEP;
   \   00000158   C29F8AE2           ADD      R9,R10,#+776
    769              msg1 = LG_MSGFATIGUENOTSLEEP;
   \   0000015C   D6AF8AE2           ADD      R10,R10,#+856
   \   00000160   0C0000EA           B        ??SleepProc_8
    770            }
    771            else if(type == HUNGER_SLEEP)
   \                     ??SleepProc_9:
   \   00000164   E80040E2           SUB      R0,R0,#+232
   \   00000168   020059E3           CMP      R9,#+2
   \   0000016C   0500001A           BNE      ??SleepProc_10
    772            {
    773              sound_name0 = SoundName[ILLGETYOU_SND];
   \   00000170   0A1080E0           ADD      R1,R0,R10
    774              sound_name1 = SoundName[ILLGETYOU_SND];
   \   00000174   0A0080E0           ADD      R0,R0,R10
    775              msg0 = LG_MSGHUNGER;
   \   00000178   573FA0E3           MOV      R3,#+348
   \   0000017C   0A9083E0           ADD      R9,R3,R10
    776              msg1 = LG_MSGHUNGER;
   \   00000180   0AA083E0           ADD      R10,R3,R10
   \   00000184   030000EA           B        ??SleepProc_8
    777            }
    778            else
    779            {
    780              sound_name0 = SoundName[SLEEP_SND];
   \                     ??SleepProc_10:
   \   00000188   0A1081E0           ADD      R1,R1,R10
    781              sound_name1 = SoundName[ILLGETYOU_SND];
   \   0000018C   0A0080E0           ADD      R0,R0,R10
    782              msg0 = LG_MSGSLEEP;
   \   00000190   EE9F8AE2           ADD      R9,R10,#+952
    783              msg1 = LG_MSGNOTSLEEP;
   \   00000194   F4AF8AE2           ADD      R10,R10,#+976
    784            }
    785          
    786            if(Pets[indx].Sleep==0)
   \                     ??SleepProc_8:
   \   00000198   DCC098E5           LDR      R12,[R8, #+220]
   \   0000019C   0030A0E3           MOV      R3,#+0
   \   000001A0   00005CE3           CMP      R12,#+0
   \   000001A4   0A00001A           BNE      ??SleepProc_11
    787            {
    788              Pets[indx].Sleep=1;
   \   000001A8   0100A0E3           MOV      R0,#+1
   \   000001AC   DC0088E5           STR      R0,[R8, #+220]
    789              Pets[indx].Bathe=0;
   \   000001B0   E43088E5           STR      R3,[R8, #+228]
    790              if(snd) PlayFileV(sound_path, sound_name0, sndVolume);
   \   000001B4   000057E3           CMP      R7,#+0
   \   000001B8   0100000A           BEQ      ??SleepProc_12
   \   000001BC   0D00A0E1           MOV      R0,SP
   \   000001C0   4A0200EF           SWI      +586
    791              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(msg0,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??SleepProc_12:
   \   000001C4   0420A0E1           MOV      R2,R4
   \   000001C8   0010A0E3           MOV      R1,#+0
   \   000001CC   0900A0E1           MOV      R0,R9
   \   000001D0   080000EA           B        ??SleepProc_13
    792            }
    793            else
    794            {
    795              Pets[indx].Sleep=0;
   \                     ??SleepProc_11:
   \   000001D4   DC3088E5           STR      R3,[R8, #+220]
    796              if(snd) PlayFileV(sound_path, sound_name1, sndVolume);
   \   000001D8   000057E3           CMP      R7,#+0
   \   000001DC   0200000A           BEQ      ??SleepProc_14
   \   000001E0   0010A0E1           MOV      R1,R0
   \   000001E4   0D00A0E1           MOV      R0,SP
   \   000001E8   4A0200EF           SWI      +586
    797              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(msg1,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??SleepProc_14:
   \   000001EC   0420A0E1           MOV      R2,R4
   \   000001F0   0010A0E3           MOV      R1,#+0
   \   000001F4   0A00A0E1           MOV      R0,R10
   \                     ??SleepProc_13:
   \   000001F8   5D0100EF           SWI      +349
   \   000001FC   0090A0E1           MOV      R9,R0
   \   00000200   0420A0E1           MOV      R2,R4
   \   00000204   0010A0E3           MOV      R1,#+0
   \   00000208   400088E2           ADD      R0,R8,#+64
   \   0000020C   5D0100EF           SWI      +349
   \   00000210   0010A0E3           MOV      R1,#+0
   \   00000214   02002DE9           PUSH     {R1}
   \   00000218   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   0000021C   8820A0E3           MOV      R2,#+136
   \   00000220   001091E5           LDR      R1,[R1, #+0]
   \   00000224   4C2D82E3           ORR      R2,R2,#0x1300
   \   00000228   920101E0           MUL      R1,R2,R1
   \   0000022C   0130A0E3           MOV      R3,#+1
   \   00000230   02002DE9           PUSH     {R1}
   \   00000234   0420A0E1           MOV      R2,R4
   \   00000238   0910A0E1           MOV      R1,R9
   \   0000023C   570200EF           SWI      +599
   \   00000240   08D08DE2           ADD      SP,SP,#+8
    798            }
    799            ChangeStatusImage(indx, bk, snd);
   \   00000244   0720A0E1           MOV      R2,R7
   \   00000248   0610A0E1           MOV      R1,R6
   \   0000024C   0500A0E1           MOV      R0,R5
   \   00000250   ........           BL       ??ChangeStatusImage
    800          
    801          }
   \   00000254   40DF8DE2           ADD      SP,SP,#+256
   \   00000258   F087BDE8           POP      {R4-R10,PC}      ;; return
    802          
    803          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    804          void NightSleep(int indx, BOOK *bk, int snd)
    805          {
    806            SleepProc(indx, bk, snd, NIGHT_SLEEP);
   \                     ??NightSleep:
   \   00000000   0030A0E3           MOV      R3,#+0
   \   00000004   ........           B        ??SleepProc      ;; tailcall
    807          }
    808          

   \                                 In segment CODE, align 4, keep-with-next
    809          void FatigueSleep(int indx, BOOK *bk, int snd)
    810          {
    811            SleepProc(indx, bk, snd, FATIGUE_SLEEP);
   \                     ??FatigueSleep:
   \   00000000   0130A0E3           MOV      R3,#+1
   \   00000004   ........           B        ??SleepProc      ;; tailcall
    812          }
    813          

   \                                 In segment CODE, align 4, keep-with-next
    814          void HungerSleep(int indx, BOOK *bk, int snd)
    815          {
    816            SleepProc(indx, bk, snd, HUNGER_SLEEP);
   \                     ??HungerSleep:
   \   00000000   0230A0E3           MOV      R3,#+2
   \   00000004   ........           B        ??SleepProc      ;; tailcall
    817          }
    818          

   \                                 In segment CODE, align 4, keep-with-next
    819          void SleepCommand(int indx, BOOK *bk, int snd)
    820          {
    821            SleepProc(indx, bk, snd, COMMAND_SLEEP);
   \                     ??SleepCommand:
   \   00000000   0330A0E3           MOV      R3,#+3
   \   00000004   ........           B        ??SleepProc      ;; tailcall
    822          }
    823          
    824          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    825          void BatheCommand(int indx, BOOK *bk, int snd)
    826          {
   \                     ??BatheCommand:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   40DF4DE2           SUB      SP,SP,#+256
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0170A0E1           MOV      R7,R1
    827            wchar_t  sound_path[128];
    828            getdir(sound_path,SOUND_PATH);
   \   00000010   ........           LDR      R1,??DataTable57  ;; SOUND_PATH
   \   00000014   0280A0E1           MOV      R8,R2
    829          
    830            if (Pets[indx].Status.StatusDeath == 1)
   \   00000018   ........           LDR      R9,??DataTable58  ;; SpeakMessage
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??getdir,??getdir??rA
   \   00000024   ........           LDR      R1,??DataTable74  ;; Pets
   \   00000028   440FA0E3           MOV      R0,#+272
   \   0000002C   901625E0           MLA      R5,R0,R6,R1
   \   00000030   ........           LDR      R0,??DataTable60  ;; sndVolume
   \   00000034   FF40A0E3           MOV      R4,#+255
   \   00000038   002090E5           LDR      R2,[R0, #+0]
   \   0000003C   380095E5           LDR      R0,[R5, #+56]
   \   00000040   FF4C84E3           ORR      R4,R4,#0xFF00
   \   00000044   010050E3           CMP      R0,#+1
   \   00000048   0A00001A           BNE      ??BatheCommand_1
    831            {
    832              if(snd) PlayFileV(sound_path, SoundName[FATALITY_SND], sndVolume);
   \   0000004C   000058E3           CMP      R8,#+0
   \   00000050   0400000A           BEQ      ??BatheCommand_2
   \   00000054   3800A0E3           MOV      R0,#+56
   \   00000058   600E80E3           ORR      R0,R0,#0x600
   \   0000005C   091080E0           ADD      R1,R0,R9
   \   00000060   0D00A0E1           MOV      R0,SP
   \   00000064   4A0200EF           SWI      +586
    833              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_IAMDIE,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??BatheCommand_2:
   \   00000068   0420A0E1           MOV      R2,R4
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   730F89E2           ADD      R0,R9,#+460
   \   00000074   0C0000EA           B        ??BatheCommand_3
    834              return;
    835            }
    836            if (Pets[indx].Sleep != 0)
   \                     ??BatheCommand_1:
   \   00000078   DC0095E5           LDR      R0,[R5, #+220]
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   1E00000A           BEQ      ??BatheCommand_4
    837            {
    838              if(snd) PlayFileV(sound_path, SoundName[LEAVEME_SND], sndVolume);
   \   00000084   000058E3           CMP      R8,#+0
   \   00000088   0400000A           BEQ      ??BatheCommand_5
   \   0000008C   6800A0E3           MOV      R0,#+104
   \   00000090   600E80E3           ORR      R0,R0,#0x600
   \   00000094   091080E0           ADD      R1,R0,R9
   \   00000098   0D00A0E1           MOV      R0,SP
   \   0000009C   4A0200EF           SWI      +586
    839              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_IAMSLEEP,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??BatheCommand_5:
   \   000000A0   0420A0E1           MOV      R2,R4
   \   000000A4   0010A0E3           MOV      R1,#+0
   \   000000A8   7B0F89E2           ADD      R0,R9,#+492
   \                     ??BatheCommand_3:
   \   000000AC   5D0100EF           SWI      +349
   \   000000B0   0060A0E1           MOV      R6,R0
   \   000000B4   0420A0E1           MOV      R2,R4
   \   000000B8   0010A0E3           MOV      R1,#+0
   \   000000BC   400085E2           ADD      R0,R5,#+64
   \   000000C0   5D0100EF           SWI      +349
   \   000000C4   0010A0E3           MOV      R1,#+0
   \   000000C8   02002DE9           PUSH     {R1}
   \   000000CC   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   000000D0   8820A0E3           MOV      R2,#+136
   \   000000D4   001091E5           LDR      R1,[R1, #+0]
   \   000000D8   4C2D82E3           ORR      R2,R2,#0x1300
   \   000000DC   920101E0           MUL      R1,R2,R1
   \   000000E0   0130A0E3           MOV      R3,#+1
   \   000000E4   02002DE9           PUSH     {R1}
   \   000000E8   0420A0E1           MOV      R2,R4
   \   000000EC   0610A0E1           MOV      R1,R6
   \   000000F0   570200EF           SWI      +599
    840              return;
   \   000000F4   08D08DE2           ADD      SP,SP,#+8
   \   000000F8   40DF8DE2           ADD      SP,SP,#+256
   \   000000FC   F083BDE8           POP      {R4-R9,PC}
    841            }
    842          
    843            Pets[indx].Bathe = 1;
   \                     ??BatheCommand_4:
   \   00000100   0100A0E3           MOV      R0,#+1
   \   00000104   E40085E5           STR      R0,[R5, #+228]
    844          
    845            if(snd) PlayFileV(sound_path, SoundName[BATHE_SND], sndVolume);
   \   00000108   000058E3           CMP      R8,#+0
   \   0000010C   0400000A           BEQ      ??BatheCommand_6
   \   00000110   0C00A0E3           MOV      R0,#+12
   \   00000114   700E80E3           ORR      R0,R0,#0x700
   \   00000118   091080E0           ADD      R1,R0,R9
   \   0000011C   0D00A0E1           MOV      R0,SP
   \   00000120   4A0200EF           SWI      +586
    846            MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_BLISS,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??BatheCommand_6:
   \   00000124   0420A0E1           MOV      R2,R4
   \   00000128   0010A0E3           MOV      R1,#+0
   \   0000012C   FB0F89E2           ADD      R0,R9,#+1004
   \   00000130   5D0100EF           SWI      +349
   \   00000134   0090A0E1           MOV      R9,R0
   \   00000138   0420A0E1           MOV      R2,R4
   \   0000013C   0010A0E3           MOV      R1,#+0
   \   00000140   400085E2           ADD      R0,R5,#+64
   \   00000144   5D0100EF           SWI      +349
   \   00000148   0010A0E3           MOV      R1,#+0
   \   0000014C   02002DE9           PUSH     {R1}
   \   00000150   ........           LDR      R1,??DataTable62  ;; msgShowTime
   \   00000154   8820A0E3           MOV      R2,#+136
   \   00000158   001091E5           LDR      R1,[R1, #+0]
   \   0000015C   4C2D82E3           ORR      R2,R2,#0x1300
   \   00000160   920101E0           MUL      R1,R2,R1
   \   00000164   0130A0E3           MOV      R3,#+1
   \   00000168   02002DE9           PUSH     {R1}
   \   0000016C   0420A0E1           MOV      R2,R4
   \   00000170   0910A0E1           MOV      R1,R9
   \   00000174   570200EF           SWI      +599
    847            ChangeStatusImage(indx, bk, snd);
   \   00000178   0820A0E1           MOV      R2,R8
   \   0000017C   0710A0E1           MOV      R1,R7
   \   00000180   0600A0E1           MOV      R0,R6
   \   00000184   ........           BL       ??ChangeStatusImage
    848            VerifyStatus(indx);
   \   00000188   0600A0E1           MOV      R0,R6
   \   0000018C   ........           BL       ??VerifyStatus
    849          }
   \   00000190   08D08DE2           ADD      SP,SP,#+8
   \   00000194   40DF8DE2           ADD      SP,SP,#+256
   \   00000198   F083BDE8           POP      {R4-R9,PC}       ;; return
    850          
    851          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    852          void OnBackChangeName(BOOK * book, u16 *string, int len)
    853          {
   \                     ??OnBackChangeName:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    854            MyBOOK * bk = (MyBOOK *)book;
    855            FREE_GUI(bk->text_input);
   \   00000008   1C0094E5           LDR      R0,[R4, #+28]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1080BD08           POPEQ    {R4,PC}
   \   00000014   CE0100EF           SWI      +462
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   1C0084E5           STR      R0,[R4, #+28]
    856          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
    857          

   \                                 In segment CODE, align 4, keep-with-next
    858          void OnOkChangeName(BOOK * book, wchar_t *string, int len)
    859          {
   \                     ??OnOkChangeName:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   80D04DE2           SUB      SP,SP,#+128
   \   00000008   0040A0E1           MOV      R4,R0
    860            MyBOOK * bk=(MyBOOK *)book;
    861            int indx = bk->cur_indx;
   \   0000000C   200094E5           LDR      R0,[R4, #+32]
    862          
    863            if ((len < 1) || (len > MAXELEMS(Pets[indx].Status.name)))
   \   00000010   010052E3           CMP      R2,#+1
   \   00000014   010000BA           BLT      ??OnOkChangeName_1
   \   00000018   410052E3           CMP      R2,#+65
   \   0000001C   1600003A           BCC      ??OnOkChangeName_2
    864            {
    865              wchar_t ustr[64];
    866              snwprintf(ustr,MAXELEMS(ustr)-1,L"min_string_len: 1\nmax_string_len: %d",MAXELEMS(Pets[indx].Status.name));
   \                     ??OnOkChangeName_1:
   \   00000020   8C209FE5           LDR      R2,??OnOkChangeName_3  ;; `?<Constant L"\\x6d\\x69\\x6e\\x5f\\x73\\x74\\x72\\x69\\`
   \   00000024   4030A0E3           MOV      R3,#+64
   \   00000028   3F10A0E3           MOV      R1,#+63
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   150100EF           SWI      +277
    867              MessageBox(EMPTY_TEXTID,TextID_Create(ustr,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, book);
   \   00000034   FF50A0E3           MOV      R5,#+255
   \   00000038   FF5C85E3           ORR      R5,R5,#0xFF00
   \   0000003C   0520A0E1           MOV      R2,R5
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0D00A0E1           MOV      R0,SP
   \   00000048   5D0100EF           SWI      +349
   \   0000004C   10002DE9           PUSH     {R4}
   \   00000050   8810A0E3           MOV      R1,#+136
   \   00000054   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000058   02002DE9           PUSH     {R1}
   \   0000005C   0130A0E3           MOV      R3,#+1
   \   00000060   0520A0E1           MOV      R2,R5
   \   00000064   0010A0E1           MOV      R1,R0
   \   00000068   9004E0E3           MVN      R0,#-1879048192
   \   0000006C   570200EF           SWI      +599
   \   00000070   08D08DE2           ADD      SP,SP,#+8
   \   00000074   80D08DE2           ADD      SP,SP,#+128
   \   00000078   3080BDE8           POP      {R4,R5,PC}
    868            }
    869            else
    870            {
    871              wstrncpy(Pets[indx].Status.name,string,MAXELEMS(Pets[indx].Status.name)-1);
   \                     ??OnOkChangeName_2:
   \   0000007C   ........           LDR      R5,??DataTable74  ;; Pets
   \   00000080   443FA0E3           MOV      R3,#+272
   \   00000084   935020E0           MLA      R0,R3,R0,R5
   \   00000088   3F20A0E3           MOV      R2,#+63
   \   0000008C   400080E2           ADD      R0,R0,#+64
   \   00000090   530100EF           SWI      +339
    872              FREE_GUI(bk->text_input);
   \   00000094   1C0094E5           LDR      R0,[R4, #+28]
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   0200000A           BEQ      ??OnOkChangeName_4
   \   000000A0   CE0100EF           SWI      +462
   \   000000A4   0000A0E3           MOV      R0,#+0
   \   000000A8   1C0084E5           STR      R0,[R4, #+28]
    873          //    CloseMenu(book);
    874          //    ShowMenu(book);
    875            }
    876          }
   \                     ??OnOkChangeName_4:
   \   000000AC   80D08DE2           ADD      SP,SP,#+128      ;; stack cleaning
   \   000000B0   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??OnOkChangeName_3:
   \   000000B4   ........           DC32     `?<Constant L"\\x6d\\x69\\x6e\\x5f\\x73\\x74\\x72\\x69\\`
    877          

   \                                 In segment CODE, align 4, keep-with-next
    878          void ChangeName(int indx, BOOK * book, int snd)
    879          {
   \                     ??ChangeName:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   \   00000008   0060A0E1           MOV      R6,R0
    880            TEXTID text, header_name;
    881            MyBOOK * bk = (MyBOOK *)book;
    882            bk->cur_indx = indx;
    883            header_name = TextID_Create(LG_NAME,ENC_UCS2,TEXTID_ANY_LEN);
   \   0000000C   E8009FE5           LDR      R0,??ChangeName_1  ;; `?<Constant L"\\x43\\x68\\x61\\x6e\\x67\\x65\\x20\\x6e\\`
   \   00000010   206084E5           STR      R6,[R4, #+32]
   \   00000014   FF70A0E3           MOV      R7,#+255
   \   00000018   FF7C87E3           ORR      R7,R7,#0xFF00
   \   0000001C   0720A0E1           MOV      R2,R7
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   5D0100EF           SWI      +349
    884            text = TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN);
   \   00000028   ........           LDR      R3,??DataTable74  ;; Pets
   \   0000002C   0050A0E1           MOV      R5,R0
   \   00000030   440FA0E3           MOV      R0,#+272
   \   00000034   903623E0           MLA      R3,R0,R6,R3
   \   00000038   0720A0E1           MOV      R2,R7
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   400083E2           ADD      R0,R3,#+64
   \   00000044   5D0100EF           SWI      +349
   \   00000048   0060A0E1           MOV      R6,R0
    885            FREE_GUI(bk->text_input);
   \   0000004C   1C0094E5           LDR      R0,[R4, #+28]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0200000A           BEQ      ??ChangeName_2
   \   00000058   CE0100EF           SWI      +462
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   1C0084E5           STR      R0,[R4, #+28]
    886            bk->text_input = CreateStringInputVA(0,
    887                                                    VAR_HEADER_TEXT(header_name),
    888                                                    VAR_STRINP_MIN_LEN(1),
    889                                                    VAR_STRINP_MAX_LEN(MAXELEMS(Pets[indx].Status.name)),
    890                                                    VAR_STRINP_MODE(IT_STRING),
    891                                                    VAR_BOOK(bk),
    892                                                    VAR_STRINP_TEXT(text),
    893                                                    VAR_PREV_ACTION_PROC(OnBackChangeName),
    894                                                    VAR_OK_PROC(OnOkChangeName),
    895                                                    VAR_STRINP_IS_PASS_MODE(0),
    896                                                    0);
   \                     ??ChangeName_2:
   \   00000064   94309FE5           LDR      R3,??ChangeName_1+0x4  ;; VAR_ARG_STRINP_MIN_LEN
   \   00000068   94109FE5           LDR      R1,??ChangeName_1+0x8  ;; VAR_ARG_HTEXT
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   0520A0E1           MOV      R2,R5
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   01002DE9           PUSH     {R0}
   \   0000007C   84009FE5           LDR      R0,??ChangeName_1+0xC  ;; VAR_ARG_STRINP_IS_PASS_MODE
   \   00000080   01002DE9           PUSH     {R0}
   \   00000084   80009FE5           LDR      R0,??ChangeName_1+0x10  ;; ??OnOkChangeName
   \   00000088   01002DE9           PUSH     {R0}
   \   0000008C   7C009FE5           LDR      R0,??ChangeName_1+0x14  ;; VAR_ARG_CALL_BACK_OK
   \   00000090   01002DE9           PUSH     {R0}
   \   00000094   78009FE5           LDR      R0,??ChangeName_1+0x18  ;; ??OnBackChangeName
   \   00000098   01002DE9           PUSH     {R0}
   \   0000009C   74009FE5           LDR      R0,??ChangeName_1+0x1C  ;; VAR_ARG_CALL_BACK_PREV_ACT
   \   000000A0   01002DE9           PUSH     {R0}
   \   000000A4   70009FE5           LDR      R0,??ChangeName_1+0x20  ;; VAR_ARG_STRINP_TEXT
   \   000000A8   40002DE9           PUSH     {R6}
   \   000000AC   01002DE9           PUSH     {R0}
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   01002DE9           PUSH     {R0}
   \   000000B8   60009FE5           LDR      R0,??ChangeName_1+0x24  ;; VAR_ARG_BOOK
   \   000000BC   01002DE9           PUSH     {R0}
   \   000000C0   0100A0E3           MOV      R0,#+1
   \   000000C4   01002DE9           PUSH     {R0}
   \   000000C8   54009FE5           LDR      R0,??ChangeName_1+0x28  ;; VAR_ARG_STRINP_MODE
   \   000000CC   01002DE9           PUSH     {R0}
   \   000000D0   4000A0E3           MOV      R0,#+64
   \   000000D4   01002DE9           PUSH     {R0}
   \   000000D8   48009FE5           LDR      R0,??ChangeName_1+0x2C  ;; VAR_ARG_STRINP_MAX_LEN
   \   000000DC   01002DE9           PUSH     {R0}
   \   000000E0   0100A0E3           MOV      R0,#+1
   \   000000E4   01002DE9           PUSH     {R0}
   \   000000E8   0000A0E3           MOV      R0,#+0
   \   000000EC   440100EF           SWI      +324
   \   000000F0   40D08DE2           ADD      SP,SP,#+64
   \   000000F4   1C0084E5           STR      R0,[R4, #+28]
    897          }
   \   000000F8   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??ChangeName_1:
   \   000000FC   ........           DC32     `?<Constant L"\\x43\\x68\\x61\\x6e\\x67\\x65\\x20\\x6e\\`
   \   00000100   ........           DC32     VAR_ARG_STRINP_MIN_LEN
   \   00000104   ........           DC32     VAR_ARG_HTEXT
   \   00000108   ........           DC32     VAR_ARG_STRINP_IS_PASS_MODE
   \   0000010C   ........           DC32     ??OnOkChangeName
   \   00000110   ........           DC32     VAR_ARG_CALL_BACK_OK
   \   00000114   ........           DC32     ??OnBackChangeName
   \   00000118   ........           DC32     VAR_ARG_CALL_BACK_PREV_ACT
   \   0000011C   ........           DC32     VAR_ARG_STRINP_TEXT
   \   00000120   ........           DC32     VAR_ARG_BOOK
   \   00000124   ........           DC32     VAR_ARG_STRINP_MODE
   \   00000128   ........           DC32     VAR_ARG_STRINP_MAX_LEN
    898          
    899          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
    900          void FamilyLifeUpdate(int indx)
    901          {
    902            if((indx == 0) && (Pets[0].Status.Count > 1))
   \                     ??FamilyLifeUpdate:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   1EFF2F11           BXNE     LR
   \   00000008   ........           LDR      R0,??DataTable74  ;; Pets
   \   0000000C   C41090E5           LDR      R1,[R0, #+196]
   \   00000010   020051E3           CMP      R1,#+2
   \   00000014   1EFF2FB1           BXLT     LR
    903            {
    904              if((Pets[0].Status.Age >= PARENT_AGE) && (Pets[1].Status.Age >= PARENT_AGE))
   \   00000018   ........           LDR      R1,??DataTable66  ;; PARENT_AGE
   \   0000001C   003090E5           LDR      R3,[R0, #+0]
   \   00000020   001091E5           LDR      R1,[R1, #+0]
   \   00000024   762FA0E3           MOV      R2,#+472
   \   00000028   010053E1           CMP      R3,R1
   \   0000002C   10319025           LDRCS    R3,[R0, #+272]
   \   00000030   01005321           CMPCS    R3,R1
   \   00000034   0200003A           BCC      ??FamilyLifeUpdate_1
    905              {
    906                ++Pets[0].Status.FamilyLife;
   \   00000038   C81090E5           LDR      R1,[R0, #+200]
   \   0000003C   011081E2           ADD      R1,R1,#+1
   \   00000040   000000EA           B        ??FamilyLifeUpdate_2
    907                Pets[1].Status.FamilyLife = Pets[0].Status.FamilyLife;
    908              }
    909              else
    910              {
    911                Pets[0].Status.FamilyLife = 0;
   \                     ??FamilyLifeUpdate_1:
   \   00000044   0010A0E3           MOV      R1,#+0
   \                     ??FamilyLifeUpdate_2:
   \   00000048   C81080E5           STR      R1,[R0, #+200]
    912                Pets[1].Status.FamilyLife = 0;
   \   0000004C   001082E7           STR      R1,[R2, +R0]
    913              }
    914            }
    915          }
   \   00000050   1EFF2FE1           BX       LR               ;; return
    916          

   \                                 In segment CODE, align 4, keep-with-next
    917          int NewBabyCheck(int indx)
    918          {
   \                     ??NewBabyCheck:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    919            if(indx == 0)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   2000001A           BNE      ??NewBabyCheck_1
    920            {
    921              if((Pets[0].Status.Count > 1) && (Pets[0].Status.Count < (MAX_PET_COUNT - 1)))
   \   0000000C   ........           LDR      R4,??DataTable74  ;; Pets
   \   00000010   C40094E5           LDR      R0,[R4, #+196]
   \   00000014   020050E3           CMP      R0,#+2
   \   00000018   1C0000BA           BLT      ??NewBabyCheck_1
   \   0000001C   ........           LDR      R1,??DataTable68  ;; MAX_PET_COUNT
   \   00000020   001091E5           LDR      R1,[R1, #+0]
   \   00000024   012041E2           SUB      R2,R1,#+1
   \   00000028   020050E1           CMP      R0,R2
   \   0000002C   1700002A           BCS      ??NewBabyCheck_1
    922              {
    923                if(Pets[0].Status.FamilyLife >= ((Pets[0].Status.Count - 1) * 2))
   \   00000030   C82094E5           LDR      R2,[R4, #+200]
   \   00000034   010040E2           SUB      R0,R0,#+1
   \   00000038   800052E1           CMP      R2,R0, LSL #+1
   \   0000003C   130000BA           BLT      ??NewBabyCheck_1
    924                {
    925                  int NewCount = (Pets[0].Status.FamilyLife/2) + 2;
   \   00000040   A20F82E0           ADD      R0,R2,R2, LSR #+31
   \   00000044   0220A0E3           MOV      R2,#+2
   \   00000048   C05082E0           ADD      R5,R2,R0, ASR #+1
    926                  if(NewCount > MAX_PET_COUNT) NewCount = MAX_PET_COUNT;
   \   0000004C   050051E1           CMP      R1,R5
   \   00000050   0900002A           BCS      ??NewBabyCheck_2
   \   00000054   0150A0E1           MOV      R5,R1
   \   00000058   070000EA           B        ??NewBabyCheck_2
    927                  while(Pets[0].Status.Count < NewCount)
    928                  {
    929                    InitStatus(Pets[0].Status.Count, 0, 2);
   \                     ??NewBabyCheck_3:
   \   0000005C   0220A0E3           MOV      R2,#+2
   \   00000060   0010A0E3           MOV      R1,#+0
   \   00000064   ........           BL       ??InitStatus
    930                    InitPetVar(Pets[0].Status.Count);
   \   00000068   C40094E5           LDR      R0,[R4, #+196]
   \   0000006C   ........           BL       ??InitPetVar
    931                    ++Pets[0].Status.Count;
   \   00000070   C40094E5           LDR      R0,[R4, #+196]
   \   00000074   010080E2           ADD      R0,R0,#+1
   \   00000078   C40084E5           STR      R0,[R4, #+196]
    932                  }
   \                     ??NewBabyCheck_2:
   \   0000007C   C40094E5           LDR      R0,[R4, #+196]
   \   00000080   050050E1           CMP      R0,R5
   \   00000084   F4FFFFBA           BLT      ??NewBabyCheck_3
    933                  return 1;
   \   00000088   0100A0E3           MOV      R0,#+1
   \   0000008C   3080BDE8           POP      {R4,R5,PC}
    934                }
    935              }
    936            }
    937            return 0;
   \                     ??NewBabyCheck_1:
   \   00000090   0000A0E3           MOV      R0,#+0
   \   00000094   3080BDE8           POP      {R4,R5,PC}       ;; return
    938          }
    939          
    940          // ----------------------------------------------------------------------------
    941          

   \                                 In segment CODE, align 4, keep-with-next
    942          void onTimer_save (u16 timerID, LPARAM lparam)
    943          {
   \                     ??onTimer_save:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    944            Randomize();
    945            for(int i=0; i < Pets[0].Status.Count; i++) { SaveStatus(i); }
   \   00000004   ........           LDR      R5,??DataTable74  ;; Pets
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0040A0E3           MOV      R4,#+0
   \   00000010   ........           BL       ??Randomize
   \   00000014   C40095E5           LDR      R0,[R5, #+196]
   \   00000018   010050E3           CMP      R0,#+1
   \   0000001C   030000AA           BGE      ??onTimer_save_1
   \   00000020   050000EA           B        ??onTimer_save_2
   \                     ??onTimer_save_3:
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           BL       ??SaveStatus
   \   0000002C   014084E2           ADD      R4,R4,#+1
   \                     ??onTimer_save_1:
   \   00000030   C40095E5           LDR      R0,[R5, #+196]
   \   00000034   000054E1           CMP      R4,R0
   \   00000038   F9FFFFBA           BLT      ??onTimer_save_3
    946            Timer_ReSet(&timer_save,TMR_SECOND*60*5,onTimer_save,0);
   \                     ??onTimer_save_2:
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           _BLF     ??LPARAM,??LPARAM??rA
   \   00000048   00309DE5           LDR      R3,[SP, #+0]
   \   0000004C   ........           LDR      R2,??DataTable70  ;; ??onTimer_save
   \   00000050   ........           LDR      R0,??DataTable71  ;; timer_save
   \   00000054   491AA0E3           MOV      R1,#+299008
   \   00000058   F81F81E3           ORR      R1,R1,#0x3E0
   \   0000005C   280100EF           SWI      +296
    947          }
   \   00000060   3180BDE8           POP      {R0,R4,R5,PC}    ;; return
    948          

   \                                 In segment CODE, align 4, keep-with-next
    949          void UpdatePosition(int indx)
    950          {
    951            if((Pets[indx].Sleep == 0) && (Pets[indx].Status.StatusDeath != 1))
   \                     ??UpdatePosition:
   \   00000000   ........           LDR      R2,??DataTable74  ;; Pets
   \   00000004   441FA0E3           MOV      R1,#+272
   \   00000008   912020E0           MLA      R0,R1,R0,R2
   \   0000000C   DC1090E5           LDR      R1,[R0, #+220]
   \   00000010   000051E3           CMP      R1,#+0
   \   00000014   1EFF2F11           BXNE     LR
   \   00000018   381090E5           LDR      R1,[R0, #+56]
   \   0000001C   010051E3           CMP      R1,#+1
   \   00000020   1EFF2F01           BXEQ     LR
    952            {
    953              if ((Pets[indx].x > (DisplayWidth - Pets[indx].img_size - 5)) && (Pets[indx].dx > 0)) Pets[indx].dx = 0-Pets[indx].dx;
   \   00000024   ........           LDR      R1,??DataTable75  ;; timer_save
   \   00000028   FC3090E5           LDR      R3,[R0, #+252]
   \   0000002C   302091E5           LDR      R2,[R1, #+48]
   \   00000030   032042E0           SUB      R2,R2,R3
   \   00000034   003190E5           LDR      R3,[R0, #+256]
   \   00000038   052042E2           SUB      R2,R2,#+5
   \   0000003C   030052E1           CMP      R2,R3
   \   00000040   030000AA           BGE      ??UpdatePosition_1
   \   00000044   082190E5           LDR      R2,[R0, #+264]
   \   00000048   010052E3           CMP      R2,#+1
   \   0000004C   002062A2           RSBGE    R2,R2,#+0
   \   00000050   082180A5           STRGE    R2,[R0, #+264]
    954              if ((Pets[indx].x < 5) && (Pets[indx].dx < 0)) Pets[indx].dx = 0-Pets[indx].dx;
   \                     ??UpdatePosition_1:
   \   00000054   050053E3           CMP      R3,#+5
   \   00000058   030000AA           BGE      ??UpdatePosition_2
   \   0000005C   082190E5           LDR      R2,[R0, #+264]
   \   00000060   000052E3           CMP      R2,#+0
   \   00000064   00206242           RSBMI    R2,R2,#+0
   \   00000068   08218045           STRMI    R2,[R0, #+264]
    955              Pets[indx].x += Pets[indx].dx;
   \                     ??UpdatePosition_2:
   \   0000006C   0320A0E1           MOV      R2,R3
   \   00000070   083190E5           LDR      R3,[R0, #+264]
   \   00000074   022083E0           ADD      R2,R3,R2
   \   00000078   002180E5           STR      R2,[R0, #+256]
    956          
    957              if ((Pets[indx].y > (DisplayHeight - SoftBarHeight - Pets[indx].img_size - 5)) && (Pets[indx].dy > 0)) Pets[indx].dy = 0-Pets[indx].dy;
   \   0000007C   342091E5           LDR      R2,[R1, #+52]
   \   00000080   383091E5           LDR      R3,[R1, #+56]
   \   00000084   032042E0           SUB      R2,R2,R3
   \   00000088   FC3090E5           LDR      R3,[R0, #+252]
   \   0000008C   032042E0           SUB      R2,R2,R3
   \   00000090   043190E5           LDR      R3,[R0, #+260]
   \   00000094   052042E2           SUB      R2,R2,#+5
   \   00000098   030052E1           CMP      R2,R3
   \   0000009C   030000AA           BGE      ??UpdatePosition_3
   \   000000A0   0C2190E5           LDR      R2,[R0, #+268]
   \   000000A4   010052E3           CMP      R2,#+1
   \   000000A8   002062A2           RSBGE    R2,R2,#+0
   \   000000AC   0C2180A5           STRGE    R2,[R0, #+268]
    958              if ((Pets[indx].y < (StatusBarHeight + 5)) && (Pets[indx].dy < 0)) Pets[indx].dy = 0-Pets[indx].dy;
   \                     ??UpdatePosition_3:
   \   000000B0   3C1091E5           LDR      R1,[R1, #+60]
   \   000000B4   051081E2           ADD      R1,R1,#+5
   \   000000B8   010053E1           CMP      R3,R1
   \   000000BC   030000AA           BGE      ??UpdatePosition_4
   \   000000C0   0C1190E5           LDR      R1,[R0, #+268]
   \   000000C4   000051E3           CMP      R1,#+0
   \   000000C8   00106142           RSBMI    R1,R1,#+0
   \   000000CC   0C118045           STRMI    R1,[R0, #+268]
    959              Pets[indx].y += Pets[indx].dy;
   \                     ??UpdatePosition_4:
   \   000000D0   0C2190E5           LDR      R2,[R0, #+268]
   \   000000D4   031082E0           ADD      R1,R2,R3
   \   000000D8   041180E5           STR      R1,[R0, #+260]
    960            }
    961          }
   \   000000DC   1EFF2FE1           BX       LR               ;; return
    962          

   \                                 In segment CODE, align 4, keep-with-next
    963          void onTimer_refresh (u16 timerID, LPARAM lparam)
    964          {
    965            if(Motion_Ena)
   \                     ??onTimer_refresh:
   \   00000000   94009FE5           LDR      R0,??onTimer_refresh_1  ;; Motion_Ena
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0B00000A           BEQ      ??onTimer_refresh_2
    966            {
    967              for(int i=0; i<Pets[0].Status.Count; i++)
   \   00000018   ........           LDR      R5,??DataTable74  ;; Pets
   \   0000001C   0040A0E3           MOV      R4,#+0
   \   00000020   C40095E5           LDR      R0,[R5, #+196]
   \   00000024   010050E3           CMP      R0,#+1
   \   00000028   030000AA           BGE      ??onTimer_refresh_3
   \   0000002C   050000EA           B        ??onTimer_refresh_2
    968              {
    969                UpdatePosition(i);
   \                     ??onTimer_refresh_4:
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       ??UpdatePosition
    970              }
   \   00000038   014084E2           ADD      R4,R4,#+1
   \                     ??onTimer_refresh_3:
   \   0000003C   C40095E5           LDR      R0,[R5, #+196]
   \   00000040   000054E1           CMP      R4,R0
   \   00000044   F9FFFFBA           BLT      ??onTimer_refresh_4
    971            }
    972            if(GUI_display) DispObject_InvalidateRect(GUI_display,0);
   \                     ??onTimer_refresh_2:
   \   00000048   ........           LDR      R4,??DataTable75  ;; timer_save
   \   0000004C   1C0094E5           LDR      R0,[R4, #+28]
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0100000A           BEQ      ??onTimer_refresh_5
   \   00000058   0010A0E3           MOV      R1,#+0
   \   0000005C   EF0100EF           SWI      +495
    973            Timer_ReSet(&timer_refresh,REFRESH*TMR_SECOND/10,onTimer_refresh,0);
   \                     ??onTimer_refresh_5:
   \   00000060   0010A0E3           MOV      R1,#+0
   \   00000064   ........           LDR      R5,??DataTable76  ;; 0xffffffffcccccccd
   \   00000068   0D00A0E1           MOV      R0,SP
   \   0000006C   ........           _BLF     ??LPARAM,??LPARAM??rA
   \   00000070   ........           LDR      R0,??DataTable77  ;; REFRESH
   \   00000074   00309DE5           LDR      R3,[SP, #+0]
   \   00000078   000090E5           LDR      R0,[R0, #+0]
   \   0000007C   ........           LDR      R2,??DataTable78  ;; ??onTimer_refresh
   \   00000080   FA1FA0E3           MOV      R1,#+1000
   \   00000084   910000E0           MUL      R0,R1,R0
   \   00000088   95C081E0           UMULL    R12,R1,R5,R0
   \   0000008C   020084E2           ADD      R0,R4,#+2
   \   00000090   A111A0E1           LSR      R1,R1,#+3
   \   00000094   280100EF           SWI      +296
    974          }
   \   00000098   3180BDE8           POP      {R0,R4,R5,PC}    ;; return
   \                     ??onTimer_refresh_1:
   \   0000009C   ........           DC32     Motion_Ena
    975          
    976          //главна€ процедура жизненного цикла питомца

   \                                 In segment CODE, align 4, keep-with-next
    977          void life_proc(int indx, BOOK *bk, int snd)
    978          {
   \                     ??life_proc:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
   \   00000004   ........           LDR      R1,??DataTable104  ;; Pets
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   440FA0E3           MOV      R0,#+272
   \   00000010   901426E0           MLA      R6,R0,R4,R1
   \   00000014   9ADF4DE2           SUB      SP,SP,#+616
   \   00000018   40DE4DE2           SUB      SP,SP,#+1024
   \   0000001C   380096E5           LDR      R0,[R6, #+56]
   \   00000020   0250A0E1           MOV      R5,R2
   \   00000024   010050E3           CMP      R0,#+1
   \   00000028   0300001A           BNE      ??life_proc_1
    979            wchar_t  sound_path[128];
    980          
    981            if (Pets[indx].Status.StatusDeath == 1)
    982            {
    983              Pets[indx].simg_status = NULL_ICN;
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   F80086E5           STR      R0,[R6, #+248]
    984              ChangeStatusImage(indx, bk, snd);
   \                     ??life_proc_2:
   \   00000034   68169DE5           LDR      R1,[SP, #+1640]
   \   00000038   510000EA           B        ??life_proc_3
    985              return ;
    986            }
    987          
    988            BATT batt;
    989            int isCharging = 0;
    990            GetBatteryState(SYNC,&batt);
   \                     ??life_proc_1:
   \   0000003C   ........           LDR      R0,??DataTable80  ;; SYNC
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   04108DE5           STR      R1,[SP, #+4]
   \   0000004C   861F8DE2           ADD      R1,SP,#+536
   \   00000050   401E81E2           ADD      R1,R1,#+1024
   \   00000054   E40100EF           SWI      +484
    991            if((batt.ChargingState == 2) || (batt.ChargingState == 8))
   \   00000058   1806DDE5           LDRB     R0,[SP, #+1560]
    992            {
    993              isCharging = 1;
    994            }
    995          
    996            if (Night_Ena)
   \   0000005C   0290A0E3           MOV      R9,#+2
   \   00000060   020050E3           CMP      R0,#+2
   \   00000064   08005013           CMPNE    R0,#+8
   \   00000068   ........           LDR      R0,??DataTable81  ;; Night_Ena
   \   0000006C   0110A003           MOVEQ    R1,#+1
   \   00000070   04108D05           STREQ    R1,[SP, #+4]
   \   00000074   000090E5           LDR      R0,[R0, #+0]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   2100000A           BEQ      ??life_proc_4
    997            {
    998                //проверка ночи
    999                int fNight=isNight();
   \   00000080   ........           BL       ??isNight
   1000                //если включена зар€дка и можно поесть, то просыпаемс€ и едим
   1001                if(isCharging && (Pets[indx].Status.Hunger > 0)) fNight = 0;
   \   00000084   04109DE5           LDR      R1,[SP, #+4]
   \   00000088   000051E3           CMP      R1,#+0
   \   0000008C   0200000A           BEQ      ??life_proc_5
   \   00000090   101096E5           LDR      R1,[R6, #+16]
   \   00000094   010051E3           CMP      R1,#+1
   \   00000098   0000A0A3           MOVGE    R0,#+0
   1002          
   1003                if (Pets[indx].Sleep!=5)
   \                     ??life_proc_5:
   \   0000009C   DC1096E5           LDR      R1,[R6, #+220]
   \   000000A0   050051E3           CMP      R1,#+5
   \   000000A4   0F00000A           BEQ      ??life_proc_6
   1004                {
   1005                  //не спит
   1006                  if (fNight)
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   1500000A           BEQ      ??life_proc_4
   1007                  {
   1008                    if (Pets[indx].Sleep!=0) NightSleep(indx, bk, snd);
   \   000000B0   000051E3           CMP      R1,#+0
   \   000000B4   0300000A           BEQ      ??life_proc_7
   \   000000B8   68169DE5           LDR      R1,[SP, #+1640]
   \   000000BC   0520A0E1           MOV      R2,R5
   \   000000C0   0400A0E1           MOV      R0,R4
   \   000000C4   ........           BL       ??NightSleep
   1009                    Pets[indx].Sleep=5;
   \                     ??life_proc_7:
   \   000000C8   0500A0E3           MOV      R0,#+5
   \   000000CC   DC0086E5           STR      R0,[R6, #+220]
   1010                    Pets[indx].Bathe=0;
   \   000000D0   0000A0E3           MOV      R0,#+0
   \   000000D4   E40086E5           STR      R0,[R6, #+228]
   1011                    Pets[indx].Status.ImageStatus=DREAM_ICN;
   \   000000D8   3C9086E5           STR      R9,[R6, #+60]
   1012                    Pets[indx].simg_status=MOON_ICN;
   \   000000DC   F89086E5           STR      R9,[R6, #+248]
   1013                    ChangeStatusImage(indx, bk, snd);
   \                     ??life_proc_8:
   \   000000E0   0520A0E1           MOV      R2,R5
   \   000000E4   D2FFFFEA           B        ??life_proc_2
   1014                    return;
   1015                  }
   1016                }
   1017                if (Pets[indx].Sleep==5)
   1018                {
   1019                  //спит
   1020                  if (!fNight)
   \                     ??life_proc_6:
   \   000000E8   000050E3           CMP      R0,#+0
   \   000000EC   2000001A           BNE      ??life_proc_9
   1021                  {
   1022                   NightSleep(indx, bk, snd);
   \   000000F0   68169DE5           LDR      R1,[SP, #+1640]
   \   000000F4   0520A0E1           MOV      R2,R5
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   ........           BL       ??NightSleep
   1023                   Pets[indx].simg_status=NULL_ICN;
   \   00000100   0000A0E3           MOV      R0,#+0
   \   00000104   F80086E5           STR      R0,[R6, #+248]
   1024                  }
   1025                  else
   1026                  {
   1027                   Pets[indx].Status.ImageStatus=DREAM_ICN;
   1028                   Pets[indx].simg_status=MOON_ICN;
   1029                   ChangeStatusImage(indx, bk, snd);
   1030                   return;
   1031                  }
   1032                }
   1033            }
   1034          
   1035            getdir(sound_path,SOUND_PATH);
   \                     ??life_proc_4:
   \   00000108   ........           LDR      R1,??DataTable82  ;; SOUND_PATH
   \   0000010C   18008DE2           ADD      R0,SP,#+24
   \   00000110   400E80E2           ADD      R0,R0,#+1024
   \   00000114   ........           _BLF     ??getdir,??getdir??rA
   1036          
   1037          // усталость =100 сон
   1038          // усталость =0 подъем
   1039            if ((Pets[indx].Fatigue >= 100))
   \   00000118   D80096E5           LDR      R0,[R6, #+216]
   \   0000011C   640050E3           CMP      R0,#+100
   \   00000120   030000BA           BLT      ??life_proc_10
   1040              FatigueSleep(indx, bk, snd);
   \   00000124   68169DE5           LDR      R1,[SP, #+1640]
   \   00000128   0520A0E1           MOV      R2,R5
   \   0000012C   0400A0E1           MOV      R0,R4
   \   00000130   ........           BL       ??FatigueSleep
   1041            if ((Pets[indx].Sleep != 0) && (Pets[indx].Fatigue <= 0))
   \                     ??life_proc_10:
   \   00000134   DC0096E5           LDR      R0,[R6, #+220]
   \   00000138   000050E3           CMP      R0,#+0
   \   0000013C   0600000A           BEQ      ??life_proc_11
   \   00000140   D80096E5           LDR      R0,[R6, #+216]
   \   00000144   010050E3           CMP      R0,#+1
   \   00000148   030000AA           BGE      ??life_proc_11
   1042              FatigueSleep(indx, bk, snd);
   \   0000014C   68169DE5           LDR      R1,[SP, #+1640]
   \   00000150   0520A0E1           MOV      R2,R5
   \   00000154   0400A0E1           MOV      R0,R4
   \   00000158   ........           BL       ??FatigueSleep
   1043            if (Pets[indx].Sleep == 0) ++Pets[indx].Fatigue; else --Pets[indx].Fatigue;
   \                     ??life_proc_11:
   \   0000015C   DC0096E5           LDR      R0,[R6, #+220]
   \   00000160   000050E3           CMP      R0,#+0
   \   00000164   D80096E5           LDR      R0,[R6, #+216]
   \   00000168   01004012           SUBNE    R0,R0,#+1
   \   0000016C   01008002           ADDEQ    R0,R0,#+1
   \   00000170   080000EA           B        ??life_proc_12
   \                     ??life_proc_9:
   \   00000174   3C9086E5           STR      R9,[R6, #+60]
   \   00000178   F89086E5           STR      R9,[R6, #+248]
   \   0000017C   68169DE5           LDR      R1,[SP, #+1640]
   \   00000180   0520A0E1           MOV      R2,R5
   \                     ??life_proc_3:
   \   00000184   0400A0E1           MOV      R0,R4
   \   00000188   ........           BL       ??ChangeStatusImage
   \   0000018C   9BDF8DE2           ADD      SP,SP,#+620
   \   00000190   40DE8DE2           ADD      SP,SP,#+1024
   \   00000194   F08FBDE8           POP      {R4-R11,PC}
   1044          
   1045          //  ++Behaviour;
   1046            ++Pets[indx].Status.TimeAge;
   1047            if (Pets[indx].Status.TimeAge >= Pets[indx].Status.Age*10+100)
   \                     ??life_proc_12:
   \   00000198   3C8B9FE5           LDR      R8,??life_proc_13  ;; SpeakMessage
   \   0000019C   D80086E5           STR      R0,[R6, #+216]
   \   000001A0   040096E5           LDR      R0,[R6, #+4]
   \   000001A4   0A20A0E3           MOV      R2,#+10
   \   000001A8   010080E2           ADD      R0,R0,#+1
   \   000001AC   040086E5           STR      R0,[R6, #+4]
   \   000001B0   001096E5           LDR      R1,[R6, #+0]
   \   000001B4   FF70A0E3           MOV      R7,#+255
   \   000001B8   920103E0           MUL      R3,R2,R1
   \   000001BC   FF7C87E3           ORR      R7,R7,#0xFF00
   \   000001C0   642083E2           ADD      R2,R3,#+100
   \   000001C4   020050E1           CMP      R0,R2
   \   000001C8   5A0000BA           BLT      ??life_proc_14
   1048            {
   1049              ++Pets[indx].Status.Age;
   \   000001CC   010081E2           ADD      R0,R1,#+1
   1050              Pets[indx].Status.TimeAge       = 0;
   1051              Pets[indx].Status.MaxHealth    += 2;
   1052              Pets[indx].Status.MaxHunger    += 2;
   1053              Pets[indx].Status.MaxHappiness += 2;
   1054              Pets[indx].Status.MaxDirtiness += 2;
   1055              Pets[indx].Status.MaxBoredom   += 2;
   1056              Pets[indx].Status.MaxBehaviour += 2;
   1057          
   1058              //StatusPet.Health=StatusPet.MaxHealth;
   1059              //StatusPet.Hunger=0;
   1060              Pets[indx].Status.Happiness = Pets[indx].Status.MaxHappiness;
   1061              Pets[indx].Status.Boredom=0;
   1062              Pets[indx].Status.Behaviour = (int)2*Pets[indx].Status.MaxBehaviour/3;
   \   000001D0   ........           LDR      R1,??DataTable94  ;; 0x55555556
   \   000001D4   000086E5           STR      R0,[R6, #+0]
   \   000001D8   0000A0E3           MOV      R0,#+0
   \   000001DC   040086E5           STR      R0,[R6, #+4]
   \   000001E0   0C0096E5           LDR      R0,[R6, #+12]
   \   000001E4   020080E2           ADD      R0,R0,#+2
   \   000001E8   0C0086E5           STR      R0,[R6, #+12]
   \   000001EC   140096E5           LDR      R0,[R6, #+20]
   \   000001F0   020080E2           ADD      R0,R0,#+2
   \   000001F4   140086E5           STR      R0,[R6, #+20]
   \   000001F8   1C0096E5           LDR      R0,[R6, #+28]
   \   000001FC   020080E2           ADD      R0,R0,#+2
   \   00000200   1C0086E5           STR      R0,[R6, #+28]
   \   00000204   240096E5           LDR      R0,[R6, #+36]
   \   00000208   020080E2           ADD      R0,R0,#+2
   \   0000020C   240086E5           STR      R0,[R6, #+36]
   \   00000210   2C0096E5           LDR      R0,[R6, #+44]
   \   00000214   020080E2           ADD      R0,R0,#+2
   \   00000218   2C0086E5           STR      R0,[R6, #+44]
   \   0000021C   340096E5           LDR      R0,[R6, #+52]
   \   00000220   020080E2           ADD      R0,R0,#+2
   \   00000224   340086E5           STR      R0,[R6, #+52]
   \   00000228   1C0096E5           LDR      R0,[R6, #+28]
   \   0000022C   180086E5           STR      R0,[R6, #+24]
   \   00000230   0000A0E3           MOV      R0,#+0
   \   00000234   280086E5           STR      R0,[R6, #+40]
   \   00000238   340096E5           LDR      R0,[R6, #+52]
   \   0000023C   8000A0E1           LSL      R0,R0,#+1
   \   00000240   9120C3E0           SMULL    R2,R3,R1,R0
   \   00000244   A00F83E0           ADD      R0,R3,R0, LSR #+31
   \   00000248   300086E5           STR      R0,[R6, #+48]
   1063          
   1064              FamilyLifeUpdate(indx);
   \   0000024C   0400A0E1           MOV      R0,R4
   \   00000250   ........           BL       ??FamilyLifeUpdate
   1065              if(NewBabyCheck(indx))
   \   00000254   0400A0E1           MOV      R0,R4
   \   00000258   ........           BL       ??NewBabyCheck
   \   0000025C   000050E3           CMP      R0,#+0
   \   00000260   0F00000A           BEQ      ??life_proc_15
   1066              {
   1067                  if(snd) PlayFileV(sound_path, SoundName[CRY_SND], sndVolume);
   \   00000264   000055E3           CMP      R5,#+0
   \   00000268   0700000A           BEQ      ??life_proc_16
   \   0000026C   ........           LDR      R0,??DataTable100  ;; sndVolume
   \   00000270   002090E5           LDR      R2,[R0, #+0]
   \   00000274   FC00A0E3           MOV      R0,#+252
   \   00000278   600E80E3           ORR      R0,R0,#0x600
   \   0000027C   081080E0           ADD      R1,R0,R8
   \   00000280   18008DE2           ADD      R0,SP,#+24
   \   00000284   400E80E2           ADD      R0,R0,#+1024
   \   00000288   4A0200EF           SWI      +586
   1068                  start_vibra();
   \                     ??life_proc_16:
   \   0000028C   ........           BL       ??start_vibra
   1069                  Light();
   \   00000290   ........           BL       ??Light
   1070                  MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_MSGNEWPET,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   00000294   0720A0E1           MOV      R2,R7
   \   00000298   0010A0E3           MOV      R1,#+0
   \   0000029C   410E88E2           ADD      R0,R8,#+1040
   \   000002A0   100000EA           B        ??life_proc_17
   1071              }
   1072              else
   1073              {
   1074                if(snd) PlayFileV(sound_path, SoundName[BIRTHDAY_SND], sndVolume);
   \                     ??life_proc_15:
   \   000002A4   000055E3           CMP      R5,#+0
   \   000002A8   0700000A           BEQ      ??life_proc_18
   \   000002AC   ........           LDR      R0,??DataTable100  ;; sndVolume
   \   000002B0   002090E5           LDR      R2,[R0, #+0]
   \   000002B4   B800A0E3           MOV      R0,#+184
   \   000002B8   500E80E3           ORR      R0,R0,#0x500
   \   000002BC   081080E0           ADD      R1,R0,R8
   \   000002C0   18008DE2           ADD      R0,SP,#+24
   \   000002C4   400E80E2           ADD      R0,R0,#+1024
   \   000002C8   4A0200EF           SWI      +586
   1075                start_vibra();
   \                     ??life_proc_18:
   \   000002CC   ........           BL       ??start_vibra
   1076                Light();
   \   000002D0   ........           BL       ??Light
   1077                MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_MSGAGE,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   000002D4   0720A0E1           MOV      R2,R7
   \   000002D8   0010A0E3           MOV      R1,#+0
   \   000002DC   3C00A0E3           MOV      R0,#+60
   \   000002E0   400E80E3           ORR      R0,R0,#0x400
   \   000002E4   080080E0           ADD      R0,R0,R8
   \                     ??life_proc_17:
   \   000002E8   5D0100EF           SWI      +349
   \   000002EC   00A0A0E1           MOV      R10,R0
   \   000002F0   0720A0E1           MOV      R2,R7
   \   000002F4   0010A0E3           MOV      R1,#+0
   \   000002F8   400086E2           ADD      R0,R6,#+64
   \   000002FC   5D0100EF           SWI      +349
   \   00000300   0010A0E3           MOV      R1,#+0
   \   00000304   02002DE9           PUSH     {R1}
   \   00000308   ........           LDR      R1,??DataTable101  ;; msgShowTime
   \   0000030C   8820A0E3           MOV      R2,#+136
   \   00000310   001091E5           LDR      R1,[R1, #+0]
   \   00000314   4C2D82E3           ORR      R2,R2,#0x1300
   \   00000318   920101E0           MUL      R1,R2,R1
   \   0000031C   0130A0E3           MOV      R3,#+1
   \   00000320   02002DE9           PUSH     {R1}
   \   00000324   0720A0E1           MOV      R2,R7
   \   00000328   0A10A0E1           MOV      R1,R10
   \   0000032C   570200EF           SWI      +599
   \   00000330   08D08DE2           ADD      SP,SP,#+8
   1078              }
   1079          
   1080              UpdateName();
   \   00000334   ........           BL       ??UpdateName
   1081            }
   1082          
   1083            // сон - процессы замедл€ютс€
   1084            if ((Pets[indx].Sleep != 0) && (Pets[indx].Sleep != 3))
   \                     ??life_proc_14:
   \   00000338   DC0096E5           LDR      R0,[R6, #+220]
   \   0000033C   000050E3           CMP      R0,#+0
   \   00000340   0F00000A           BEQ      ??life_proc_19
   \   00000344   030050E3           CMP      R0,#+3
   \   00000348   0300000A           BEQ      ??life_proc_20
   1085            {
   1086              ++ Pets[indx].Sleep;
   \   0000034C   010080E2           ADD      R0,R0,#+1
   \   00000350   DC0086E5           STR      R0,[R6, #+220]
   1087              Pets[indx].Status.ImageStatus = DREAM_ICN;
   \   00000354   3C9086E5           STR      R9,[R6, #+60]
   1088              ChangeStatusImage(indx, bk, snd);
   \   00000358   60FFFFEA           B        ??life_proc_8
   1089              return;
   1090            }
   1091          
   1092            if (Pets[indx].Sleep != 0) Pets[indx].Sleep = 1;
   \                     ??life_proc_20:
   \   0000035C   0100A0E3           MOV      R0,#+1
   \   00000360   DC0086E5           STR      R0,[R6, #+220]
   1093          
   1094            //во врем€ сна
   1095            if (Pets[indx].Sleep != 0)
   1096            {
   1097              ++Pets[indx].Status.Happiness;
   \   00000364   180096E5           LDR      R0,[R6, #+24]
   \   00000368   010080E2           ADD      R0,R0,#+1
   \   0000036C   180086E5           STR      R0,[R6, #+24]
   1098              Pets[indx].Bathe = 0;
   \   00000370   0000A0E3           MOV      R0,#+0
   \   00000374   E40086E5           STR      R0,[R6, #+228]
   1099            }
   1100          
   1101            //когда не спит
   1102            if (Pets[indx].Sleep == 0)
   \   00000378   DC0096E5           LDR      R0,[R6, #+220]
   \   0000037C   000050E3           CMP      R0,#+0
   \   00000380   B000001A           BNE      ??life_proc_21
   1103            {
   1104                if(!isCharging) --Pets[indx].Status.Behaviour; // дисциплина
   \                     ??life_proc_19:
   \   00000384   04009DE5           LDR      R0,[SP, #+4]
   \   00000388   000050E3           CMP      R0,#+0
   \   0000038C   30009605           LDREQ    R0,[R6, #+48]
   \   00000390   01004002           SUBEQ    R0,R0,#+1
   \   00000394   30008605           STREQ    R0,[R6, #+48]
   1105                // пакость = убивает процесс, если совсем дисциплина на нуле,
   1106                // и чтобы сильно не ругали дисциплина увеличиваетс€ до 30%
   1107          
   1108                 if ((Pets[indx].Status.Behaviour <= 0) && Malware_Ena)
   \   00000398   300096E5           LDR      R0,[R6, #+48]
   \   0000039C   010050E3           CMP      R0,#+1
   \   000003A0   0D0000AA           BGE      ??life_proc_22
   \   000003A4   34099FE5           LDR      R0,??life_proc_13+0x4  ;; Malware_Ena
   \   000003A8   000090E5           LDR      R0,[R0, #+0]
   \   000003AC   000050E3           CMP      R0,#+0
   \   000003B0   0900000A           BEQ      ??life_proc_22
   1109                 {
   1110                   int i,j,k;
   1111                   int mask=((int)LastExtDB())&0xF8000000;
   \   000003B4   558200EF           SWI      +33365
   \   000003B8   F80400E2           AND      R0,R0,#0xF8000000
   \   000003BC   10008DE5           STR      R0,[SP, #+16]
   1112                   BOOK * book;
   1113                   UI_APP_SESSION * session;
   1114                   int fkill=1;
   \   000003C0   01A0A0E3           MOV      R10,#+1
   1115          
   1116                   i=root_list_get_session_count();
   \   000003C4   F30100EF           SWI      +499
   \   000003C8   00008DE5           STR      R0,[SP, #+0]
   1117                   for (j=0;j<i;j++)
   \   000003CC   0010A0E3           MOV      R1,#+0
   \   000003D0   08108DE5           STR      R1,[SP, #+8]
   \   000003D4   010050E3           CMP      R0,#+1
   \   000003D8   100000AA           BGE      ??life_proc_23
   1118                   {
   1119                     session=root_list_get_session(j);
   1120                     for (k=0;k<session->listbook->FirstFree;k++)
   1121                     {
   1122                       book=(BOOK*)List_Get(session->listbook,k);
   1123                       if (fkill)
   1124                       if (!isBookmanDaemonBook(book))
   1125                       {
   1126                         if((book->xguilist->guilist->FirstFree)||(((((int)book->onClose)&0xF8000000)!=mask)))
   1127                         {
   1128                           if((!IsVolumeControllerBook(book))&&(!IsRightNowBook(book)))
   1129                           {
   1130                             if (((((int)book->onClose)&0xF8000000)==mask))
   1131                             {// book or java
   1132                               if (Find_StandbyBook()!=book)
   1133                               {
   1134                                 if (int nameID = GetJavaName(book))
   1135                                 {
   1136                                   JavaSession_Manager(0x0E);
   1137                                 }
   1138                                 else
   1139                                 {
   1140                                   UI_Event_toBookID(RETURN_TO_STANDBY_EVENT,BookObj_GetBookID(book));
   1141                                   UI_Event_toBookID(TERMINATE_SESSION_EVENT,BookObj_GetBookID(book));
   1142                                 }
   1143                                 fkill=0;
   1144                                 Pets[indx].Status.Behaviour = Pets[indx].Status.MaxBehaviour/3;
   1145                                 if(snd) PlayFileV(sound_path, SoundName[OHDEER_SND], sndVolume);
   1146                               }
   1147                             }
   1148                             else
   1149                             {// elf
   1150                               if(!isTamagochiBook(book))
   1151                               {
   1152                                 if(Find_StandbyBook()!=book)
   1153                                 {
   1154                                   if (CheckEv(book,ELF_TERMINATE_EVENT))
   1155                                   {
   1156                                     UI_Event_toBookID(ELF_TERMINATE_EVENT,BookObj_GetBookID(book));
   1157                                     fkill=0;
   1158                                     Pets[indx].Status.Behaviour = Pets[indx].Status.MaxBehaviour/3;
   1159                                     if(snd) PlayFileV(sound_path, SoundName[OHDEER_SND], sndVolume);
   1160                                   }
   1161                                 }
   1162                               }
   1163                             }
   1164                           }
   1165                         }
   1166                       }
   1167                     }
   1168                   }
   1169                 }
   1170          
   1171                // проверка на наличие в процессах игр
   1172                if (Scan_Game_Ena)
   \                     ??life_proc_22:
   \   000003DC   00099FE5           LDR      R0,??life_proc_13+0x8  ;; Scan_Game_Ena
   \   000003E0   000090E5           LDR      R0,[R0, #+0]
   \   000003E4   000050E3           CMP      R0,#+0
   \   000003E8   7E00000A           BEQ      ??life_proc_24
   1173                {
   1174                  if (GameDetected())
   \   000003EC   ........           BL       ??GameDetected
   \   000003F0   000050E3           CMP      R0,#+0
   \   000003F4   7300000A           BEQ      ??life_proc_25
   1175                  {
   1176                    --Pets[indx].Status.Boredom; // скука
   \   000003F8   280096E5           LDR      R0,[R6, #+40]
   \   000003FC   010040E2           SUB      R0,R0,#+1
   \   00000400   280086E5           STR      R0,[R6, #+40]
   1177                    ++Pets[indx].Status.Happiness;
   \   00000404   180096E5           LDR      R0,[R6, #+24]
   \   00000408   010080E2           ADD      R0,R0,#+1
   \   0000040C   180086E5           STR      R0,[R6, #+24]
   \   00000410   790000EA           B        ??life_proc_26
   1178                  }
   \                     ??life_proc_27:
   \   00000414   08109DE5           LDR      R1,[SP, #+8]
   \   00000418   011081E2           ADD      R1,R1,#+1
   \   0000041C   08108DE5           STR      R1,[SP, #+8]
   \                     ??life_proc_23:
   \   00000420   08009DE5           LDR      R0,[SP, #+8]
   \   00000424   00109DE5           LDR      R1,[SP, #+0]
   \   00000428   010050E1           CMP      R0,R1
   \   0000042C   EAFFFFAA           BGE      ??life_proc_22
   \   00000430   F40100EF           SWI      +500
   \   00000434   0C008DE5           STR      R0,[SP, #+12]
   \   00000438   000090E5           LDR      R0,[R0, #+0]
   \   0000043C   0090A0E3           MOV      R9,#+0
   \   00000440   B200D0E1           LDRH     R0,[R0, #+2]
   \   00000444   000050E3           CMP      R0,#+0
   \   00000448   2400001A           BNE      ??life_proc_28
   \   0000044C   F0FFFFEA           B        ??life_proc_27
   \                     ??life_proc_29:
   \   00000450   0B00A0E1           MOV      R0,R11
   \   00000454   ........           BL       ??isTamagochiBook
   \   00000458   000050E3           CMP      R0,#+0
   \   0000045C   1E00001A           BNE      ??life_proc_30
   \   00000460   310100EF           SWI      +305
   \   00000464   0B0050E1           CMP      R0,R11
   \   00000468   1B00000A           BEQ      ??life_proc_30
   \   0000046C   E510A0E3           MOV      R1,#+229
   \   00000470   C01F81E3           ORR      R1,R1,#0x300
   \   00000474   0B00A0E1           MOV      R0,R11
   \   00000478   ........           BL       ??CheckEv
   \   0000047C   000050E3           CMP      R0,#+0
   \   00000480   1500000A           BEQ      ??life_proc_30
   \   00000484   0B00A0E1           MOV      R0,R11
   \   00000488   FA0100EF           SWI      +506
   \   0000048C   0010A0E1           MOV      R1,R0
   \   00000490   E500A0E3           MOV      R0,#+229
   \   00000494   C00F80E3           ORR      R0,R0,#0x300
   \                     ??life_proc_31:
   \   00000498   AA0100EF           SWI      +426
   \                     ??life_proc_32:
   \   0000049C   340096E5           LDR      R0,[R6, #+52]
   \   000004A0   ........           LDR      R1,??DataTable94  ;; 0x55555556
   \   000004A4   00A0A0E3           MOV      R10,#+0
   \   000004A8   9120C3E0           SMULL    R2,R3,R1,R0
   \   000004AC   000055E3           CMP      R5,#+0
   \   000004B0   A00F83E0           ADD      R0,R3,R0, LSR #+31
   \   000004B4   300086E5           STR      R0,[R6, #+48]
   \   000004B8   0700000A           BEQ      ??life_proc_30
   \   000004BC   ........           LDR      R0,??DataTable100  ;; sndVolume
   \   000004C0   002090E5           LDR      R2,[R0, #+0]
   \   000004C4   9400A0E3           MOV      R0,#+148
   \   000004C8   600E80E3           ORR      R0,R0,#0x600
   \   000004CC   081080E0           ADD      R1,R0,R8
   \   000004D0   18008DE2           ADD      R0,SP,#+24
   \   000004D4   400E80E2           ADD      R0,R0,#+1024
   \   000004D8   4A0200EF           SWI      +586
   \                     ??life_proc_30:
   \   000004DC   019089E2           ADD      R9,R9,#+1
   \                     ??life_proc_28:
   \   000004E0   0C009DE5           LDR      R0,[SP, #+12]
   \   000004E4   000090E5           LDR      R0,[R0, #+0]
   \   000004E8   B210D0E1           LDRH     R1,[R0, #+2]
   \   000004EC   010059E1           CMP      R9,R1
   \   000004F0   C7FFFFAA           BGE      ??life_proc_27
   \   000004F4   0910A0E1           MOV      R1,R9
   \   000004F8   AD0100EF           SWI      +429
   \   000004FC   00B0A0E1           MOV      R11,R0
   \   00000500   00005AE3           CMP      R10,#+0
   \   00000504   F4FFFF0A           BEQ      ??life_proc_30
   \   00000508   ........           BL       ??isBookmanDaemonBook
   \   0000050C   000050E3           CMP      R0,#+0
   \   00000510   F1FFFF1A           BNE      ??life_proc_30
   \   00000514   14009BE5           LDR      R0,[R11, #+20]
   \   00000518   040090E5           LDR      R0,[R0, #+4]
   \   0000051C   B200D0E1           LDRH     R0,[R0, #+2]
   \   00000520   000050E3           CMP      R0,#+0
   \   00000524   0400001A           BNE      ??life_proc_33
   \   00000528   04009BE5           LDR      R0,[R11, #+4]
   \   0000052C   10109DE5           LDR      R1,[SP, #+16]
   \   00000530   F80400E2           AND      R0,R0,#0xF8000000
   \   00000534   010050E1           CMP      R0,R1
   \   00000538   E7FFFF0A           BEQ      ??life_proc_30
   \                     ??life_proc_33:
   \   0000053C   0B00A0E1           MOV      R0,R11
   \   00000540   C90100EF           SWI      +457
   \   00000544   000050E3           CMP      R0,#+0
   \   00000548   E3FFFF1A           BNE      ??life_proc_30
   \   0000054C   0B00A0E1           MOV      R0,R11
   \   00000550   C80100EF           SWI      +456
   \   00000554   000050E3           CMP      R0,#+0
   \   00000558   DFFFFF1A           BNE      ??life_proc_30
   \   0000055C   04009BE5           LDR      R0,[R11, #+4]
   \   00000560   10109DE5           LDR      R1,[SP, #+16]
   \   00000564   F80400E2           AND      R0,R0,#0xF8000000
   \   00000568   010050E1           CMP      R0,R1
   \   0000056C   B7FFFF1A           BNE      ??life_proc_29
   \   00000570   310100EF           SWI      +305
   \   00000574   0B0050E1           CMP      R0,R11
   \   00000578   D7FFFF0A           BEQ      ??life_proc_30
   \   0000057C   0B00A0E1           MOV      R0,R11
   \   00000580   ........           BL       ??GetJavaName
   \   00000584   000050E3           CMP      R0,#+0
   \   00000588   0200000A           BEQ      ??life_proc_34
   \   0000058C   0E00A0E3           MOV      R0,#+14
   \   00000590   400200EF           SWI      +576
   \   00000594   C0FFFFEA           B        ??life_proc_32
   \                     ??life_proc_34:
   \   00000598   0B00A0E1           MOV      R0,R11
   \   0000059C   FA0100EF           SWI      +506
   \   000005A0   0010A0E1           MOV      R1,R0
   \   000005A4   3C079FE5           LDR      R0,??life_proc_13+0xC  ;; RETURN_TO_STANDBY_EVENT
   \   000005A8   000090E5           LDR      R0,[R0, #+0]
   \   000005AC   AA0100EF           SWI      +426
   \   000005B0   0B00A0E1           MOV      R0,R11
   \   000005B4   FA0100EF           SWI      +506
   \   000005B8   0010A0E1           MOV      R1,R0
   \   000005BC   28079FE5           LDR      R0,??life_proc_13+0x10  ;; TERMINATE_SESSION_EVENT
   \   000005C0   000090E5           LDR      R0,[R0, #+0]
   \   000005C4   B3FFFFEA           B        ??life_proc_31
   1179                  else
   1180                  {
   1181                    //--StatusPet.Happiness;
   1182                    if(Pets[indx].Bathe == 0) ++Pets[indx].Status.Boredom; // скука
   \                     ??life_proc_25:
   \   000005C8   E40096E5           LDR      R0,[R6, #+228]
   \   000005CC   000050E3           CMP      R0,#+0
   \   000005D0   28009605           LDREQ    R0,[R6, #+40]
   \   000005D4   01008002           ADDEQ    R0,R0,#+1
   \   000005D8   28008605           STREQ    R0,[R6, #+40]
   1183                    Pets[indx].simg_status=0;
   \   000005DC   0000A0E3           MOV      R0,#+0
   \   000005E0   F80086E5           STR      R0,[R6, #+248]
   \   000005E4   040000EA           B        ??life_proc_26
   1184                  }
   1185                }
   1186                else
   1187                {
   1188                    if(Pets[indx].Bathe == 0) ++Pets[indx].Status.Boredom; // скука
   \                     ??life_proc_24:
   \   000005E8   E40096E5           LDR      R0,[R6, #+228]
   \   000005EC   000050E3           CMP      R0,#+0
   \   000005F0   28009605           LDREQ    R0,[R6, #+40]
   \   000005F4   01008002           ADDEQ    R0,R0,#+1
   \   000005F8   28008605           STREQ    R0,[R6, #+40]
   1189                }
   1190                // если скучно включаем музыку (если разрешили)
   1191                if(Music_Ena)
   \                     ??life_proc_26:
   \   000005FC   EC069FE5           LDR      R0,??life_proc_13+0x14  ;; Music_Ena
   \   00000600   000090E5           LDR      R0,[R0, #+0]
   \   00000604   000050E3           CMP      R0,#+0
   \   00000608   1F00000A           BEQ      ??life_proc_35
   1192                if(Pets[indx].Status.Boredom > (Pets[indx].Status.MaxBoredom - 10))
   \   0000060C   2C0096E5           LDR      R0,[R6, #+44]
   \   00000610   281096E5           LDR      R1,[R6, #+40]
   \   00000614   0A0040E2           SUB      R0,R0,#+10
   \   00000618   010050E1           CMP      R0,R1
   \   0000061C   1A0000AA           BGE      ??life_proc_35
   1193                {
   1194                  if(!FindBook(get_IsAudioPlayerBook()) && (!FindBook(get_IsFmRadioBook())))
   \   00000620   8B8200EF           SWI      +33419
   \   00000624   300100EF           SWI      +304
   \   00000628   000050E3           CMP      R0,#+0
   \   0000062C   1600001A           BNE      ??life_proc_35
   \   00000630   8A8200EF           SWI      +33418
   \   00000634   300100EF           SWI      +304
   \   00000638   000050E3           CMP      R0,#+0
   \   0000063C   1200001A           BNE      ??life_proc_35
   1195                  {
   1196                    GoMusic();
   \   00000640   470200EF           SWI      +583
   \   00000644   100000EA           B        ??life_proc_35
   1197                  }
   1198                }
   1199            }
   1200            else
   1201            {
   1202                // проверка на наличие в процессах игр
   1203                if (Scan_Game_Ena)
   \                     ??life_proc_21:
   \   00000648   94069FE5           LDR      R0,??life_proc_13+0x8  ;; Scan_Game_Ena
   \   0000064C   000090E5           LDR      R0,[R0, #+0]
   \   00000650   000050E3           CMP      R0,#+0
   \   00000654   0C00000A           BEQ      ??life_proc_35
   1204                {
   1205                  // ≈сли игры найдены, то просыпаемс€ поиграть
   1206                  if (GameDetected())
   \   00000658   ........           BL       ??GameDetected
   \   0000065C   000050E3           CMP      R0,#+0
   \   00000660   0900000A           BEQ      ??life_proc_35
   1207                  {
   1208                    SleepCommand(indx, bk, snd);
   \   00000664   68169DE5           LDR      R1,[SP, #+1640]
   \   00000668   0520A0E1           MOV      R2,R5
   \   0000066C   0400A0E1           MOV      R0,R4
   \   00000670   ........           BL       ??SleepCommand
   1209                    --Pets[indx].Status.Boredom; // скука
   \   00000674   280096E5           LDR      R0,[R6, #+40]
   \   00000678   010040E2           SUB      R0,R0,#+1
   \   0000067C   280086E5           STR      R0,[R6, #+40]
   1210                    ++Pets[indx].Status.Happiness;
   \   00000680   180096E5           LDR      R0,[R6, #+24]
   \   00000684   010080E2           ADD      R0,R0,#+1
   \   00000688   180086E5           STR      R0,[R6, #+24]
   1211                  }
   1212                }
   1213            }
   1214          
   1215            // питание
   1216            if(!isCharging) ++Pets[indx].Status.Hunger;
   \                     ??life_proc_35:
   \   0000068C   04009DE5           LDR      R0,[SP, #+4]
   1217            // проверка наличи€ жратвы и наличие мусора
   1218            int Eat=0;
   1219            if (Pets[indx].Status.Hunger > (int)Pets[indx].Status.MaxHunger/3) Eat=1;
   \   00000690   ........           LDR      R1,??DataTable94  ;; 0x55555556
   \   00000694   000050E3           CMP      R0,#+0
   \   00000698   10009605           LDREQ    R0,[R6, #+16]
   \   0000069C   0090A0E3           MOV      R9,#+0
   \   000006A0   01008002           ADDEQ    R0,R0,#+1
   \   000006A4   10008605           STREQ    R0,[R6, #+16]
   \   000006A8   140096E5           LDR      R0,[R6, #+20]
   \   000006AC   9120C3E0           SMULL    R2,R3,R1,R0
   \   000006B0   101096E5           LDR      R1,[R6, #+16]
   \   000006B4   A00F83E0           ADD      R0,R3,R0, LSR #+31
   \   000006B8   010050E1           CMP      R0,R1
   1220            // ест только когда не спит
   1221            if (Pets[indx].Sleep!=0) Eat=0;
   \   000006BC   DC0096E5           LDR      R0,[R6, #+220]
   \   000006C0   0190A0B3           MOVLT    R9,#+1
   \   000006C4   000050E3           CMP      R0,#+0
   1222            //если зар€дка, то будем кушать
   1223            if(isCharging) Eat=1;
   \   000006C8   04009DE5           LDR      R0,[SP, #+4]
   \   000006CC   0090A013           MOVNE    R9,#+0
   \   000006D0   000050E3           CMP      R0,#+0
   \   000006D4   0190A013           MOVNE    R9,#+1
   1224          
   1225            int findgvn=0;
   \   000006D8   0010A0E3           MOV      R1,#+0
   \   000006DC   14108DE5           STR      R1,[SP, #+20]
   1226            int fEat=0;
   \   000006E0   0C108DE5           STR      R1,[SP, #+12]
   1227            wchar_t eat_path[256];
   1228            wchar_t eat_filter[128];
   1229            DIR_HANDLE * dirHandle = 0;
   1230            wchar_t * ext;
   1231          
   1232            getdir(eat_path, ROOM_PATH);
   \   000006E4   08169FE5           LDR      R1,??life_proc_13+0x18  ;; ROOM_PATH
   \   000006E8   860F8DE2           ADD      R0,SP,#+536
   \   000006EC   ........           _BLF     ??getdir,??getdir??rA
   1233            wstrcpy(eat_filter,eat_path);
   \   000006F0   861F8DE2           ADD      R1,SP,#+536
   \   000006F4   460F8DE2           ADD      R0,SP,#+280
   \   000006F8   400E80E2           ADD      R0,R0,#+1024
   \   000006FC   520100EF           SWI      +338
   1234            wstrcat(eat_filter,L"/*.*");
   \   00000700   6400A0E3           MOV      R0,#+100
   \   00000704   400E80E3           ORR      R0,R0,#0x400
   \   00000708   081080E0           ADD      R1,R0,R8
   \   0000070C   460F8DE2           ADD      R0,SP,#+280
   \   00000710   400E80E2           ADD      R0,R0,#+1024
   \   00000714   540100EF           SWI      +340
   1235          
   1236            dirHandle = AllocDirHandle(eat_path);
   \   00000718   860F8DE2           ADD      R0,SP,#+536
   \   0000071C   1D0100EF           SWI      +285
   \   00000720   00008DE5           STR      R0,[SP, #+0]
   1237            if(dirHandle)
   \   00000724   000050E3           CMP      R0,#+0
   \   00000728   6E00000A           BEQ      ??life_proc_36
   1238            {
   1239              DirHandle_SetFilterStr(dirHandle, eat_filter);
   \   0000072C   461F8DE2           ADD      R1,SP,#+280
   \   00000730   401E81E2           ADD      R1,R1,#+1024
   \   00000734   FF0200EF           SWI      +767
   1240              FILELISTITEM *buf = (FILELISTITEM *)malloc(sizeof(FILELISTITEM));
   \   00000738   C00FA0E3           MOV      R0,#+768
   \   0000073C   030100EF           SWI      +259
   \   00000740   10008DE5           STR      R0,[SP, #+16]
   1241              FILELISTITEM *item = GetFname(dirHandle,buf);
   \   00000744   0010A0E1           MOV      R1,R0
   \   00000748   00009DE5           LDR      R0,[SP, #+0]
   \   0000074C   1E0100EF           SWI      +286
   \   00000750   00A0B0E1           MOVS     R10,R0
   \   00000754   5E00000A           BEQ      ??life_proc_37
   1242              FSTAT _fstat;
   1243              while(item)
   1244              {
   1245                ext = getFileExtention(item->fname);
   \                     ??life_proc_38:
   \   00000758   08009AE5           LDR      R0,[R10, #+8]
   \   0000075C   260100EF           SWI      +294
   1246                fstat(item->path,item->fname,&_fstat);
   \   00000760   08109AE5           LDR      R1,[R10, #+8]
   \   00000764   00B0A0E1           MOV      R11,R0
   \   00000768   04009AE5           LDR      R0,[R10, #+4]
   \   0000076C   932F8DE2           ADD      R2,SP,#+588
   \   00000770   402E82E2           ADD      R2,R2,#+1024
   \   00000774   1C0100EF           SWI      +284
   1247          
   1248                chmod(item->path,item->fname, 0x1FF);
   \   00000778   04009AE5           LDR      R0,[R10, #+4]
   \   0000077C   08109AE5           LDR      R1,[R10, #+8]
   \   00000780   FE2CC7E3           BIC      R2,R7,#0xFE00
   \   00000784   910200EF           SWI      +657
   1249          
   1250                if(wstrncmp(ext,L"gvn",3) == 0)
   \   00000788   0320A0E3           MOV      R2,#+3
   \   0000078C   7C00A0E3           MOV      R0,#+124
   \   00000790   400E80E3           ORR      R0,R0,#0x400
   \   00000794   081080E0           ADD      R1,R0,R8
   \   00000798   0B00A0E1           MOV      R0,R11
   \   0000079C   FB0100EF           SWI      +507
   \   000007A0   000050E3           CMP      R0,#+0
   \   000007A4   0F00001A           BNE      ??life_proc_39
   1251                {
   1252                  int err = 0;
   \   000007A8   0010A0E3           MOV      R1,#+0
   \   000007AC   08108DE5           STR      R1,[SP, #+8]
   1253                  if((findgvn < BATHE_THRESHOLD) && (Pets[indx].Bathe)) FileDelete(item->path,item->fname,&err);
   \   000007B0   14009DE5           LDR      R0,[SP, #+20]
   \   000007B4   030050E3           CMP      R0,#+3
   \   000007B8   060000AA           BGE      ??life_proc_40
   \   000007BC   E40096E5           LDR      R0,[R6, #+228]
   \   000007C0   000050E3           CMP      R0,#+0
   \   000007C4   0300000A           BEQ      ??life_proc_40
   \   000007C8   08109AE5           LDR      R1,[R10, #+8]
   \   000007CC   04009AE5           LDR      R0,[R10, #+4]
   \   000007D0   08208DE2           ADD      R2,SP,#+8
   \   000007D4   0A0200EF           SWI      +522
   1254                  ++findgvn;
   \                     ??life_proc_40:
   \   000007D8   14109DE5           LDR      R1,[SP, #+20]
   \   000007DC   011081E2           ADD      R1,R1,#+1
   \   000007E0   14108DE5           STR      R1,[SP, #+20]
   \   000007E4   290000EA           B        ??life_proc_41
   1255                }
   1256                else
   1257                {
   1258                  //кормимс€
   1259                  if (Eat)
   \                     ??life_proc_39:
   \   000007E8   000059E3           CMP      R9,#+0
   \   000007EC   2700000A           BEQ      ??life_proc_41
   1260                  if (Pets[indx].Status.Hunger > 0)
   \   000007F0   100096E5           LDR      R0,[R6, #+16]
   \   000007F4   010050E3           CMP      R0,#+1
   \   000007F8   240000BA           BLT      ??life_proc_41
   1261                  // ≈сли зар€дка включена, то вместо файлов питаемс€ от зар€дки.
   1262                  if(isCharging)
   \   000007FC   04109DE5           LDR      R1,[SP, #+4]
   \   00000800   000051E3           CMP      R1,#+0
   \   00000804   0500000A           BEQ      ??life_proc_42
   1263                  {
   1264                    Pets[indx].Status.Hunger -= 5;
   \   00000808   050040E2           SUB      R0,R0,#+5
   \   0000080C   100086E5           STR      R0,[R6, #+16]
   1265                    fEat=1;
   \   00000810   0110A0E3           MOV      R1,#+1
   \   00000814   0C108DE5           STR      R1,[SP, #+12]
   1266                    Eat = 0; // при зар€дке едим один раз за цикл
   \   00000818   0090A0E3           MOV      R9,#+0
   \   0000081C   1B0000EA           B        ??life_proc_41
   1267                  }
   1268                  else
   1269                  {
   1270                    if (_fstat.fsize < (Pets[indx].Status.Age+1+5)*1024)
   \                     ??life_proc_42:
   \   00000820   54069DE5           LDR      R0,[SP, #+1620]
   \   00000824   001096E5           LDR      R1,[R6, #+0]
   \   00000828   061081E2           ADD      R1,R1,#+6
   \   0000082C   010550E1           CMP      R0,R1, LSL #+10
   \   00000830   160000AA           BGE      ??life_proc_41
   1271                    {
   1272                      int in = (int)_fstat.fsize/1024;
   \   00000834   C014A0E1           ASR      R1,R0,#+9
   \   00000838   210B80E0           ADD      R0,R0,R1, LSR #+22
   1273                      if (in == 0) in = 1;
   1274                      Pets[indx].Status.Hunger -= in;
   \   0000083C   101096E5           LDR      R1,[R6, #+16]
   \   00000840   4005B0E1           ASRS     R0,R0,#+10
   \   00000844   0100A003           MOVEQ    R0,#+1
   \   00000848   000041E0           SUB      R0,R1,R0
   \   0000084C   100086E5           STR      R0,[R6, #+16]
   1275                      // файл перименовываем в мусор
   1276                      wchar_t name2[256];
   1277                      wstrcpy(name2,item->fname);
   \   00000850   08109AE5           LDR      R1,[R10, #+8]
   \   00000854   18008DE2           ADD      R0,SP,#+24
   \   00000858   520100EF           SWI      +338
   1278                      wstrcat(name2,L".gvn");
   \   0000085C   471E88E2           ADD      R1,R8,#+1136
   \   00000860   18008DE2           ADD      R0,SP,#+24
   \   00000864   540100EF           SWI      +340
   1279                      rename(item->path, item->fname, item->path, name2, 0);
   \   00000868   04009AE5           LDR      R0,[R10, #+4]
   \   0000086C   0010A0E3           MOV      R1,#+0
   \   00000870   02002DE9           PUSH     {R1}
   \   00000874   08109AE5           LDR      R1,[R10, #+8]
   \   00000878   1C308DE2           ADD      R3,SP,#+28
   \   0000087C   0020A0E1           MOV      R2,R0
   \   00000880   920200EF           SWI      +658
   1280                      fEat=1;
   \   00000884   0110A0E3           MOV      R1,#+1
   \   00000888   10108DE5           STR      R1,[SP, #+16]
   \   0000088C   04D08DE2           ADD      SP,SP,#+4
   1281                    }
   1282                  }
   1283                }
   1284                item = GetFname(dirHandle,buf);
   \                     ??life_proc_41:
   \   00000890   00009DE5           LDR      R0,[SP, #+0]
   \   00000894   10109DE5           LDR      R1,[SP, #+16]
   \   00000898   1E0100EF           SWI      +286
   \   0000089C   00A0B0E1           MOVS     R10,R0
   1285              }
   \   000008A0   ACFFFF1A           BNE      ??life_proc_38
   1286              if(fEat && snd) PlayFileV(sound_path, SoundName[OHDEER_SND], sndVolume);
   \   000008A4   0C009DE5           LDR      R0,[SP, #+12]
   \   000008A8   000050E3           CMP      R0,#+0
   \   000008AC   00005513           CMPNE    R5,#+0
   \   000008B0   0700000A           BEQ      ??life_proc_37
   \   000008B4   ........           LDR      R0,??DataTable100  ;; sndVolume
   \   000008B8   002090E5           LDR      R2,[R0, #+0]
   \   000008BC   9400A0E3           MOV      R0,#+148
   \   000008C0   600E80E3           ORR      R0,R0,#0x600
   \   000008C4   081080E0           ADD      R1,R0,R8
   \   000008C8   18008DE2           ADD      R0,SP,#+24
   \   000008CC   400E80E2           ADD      R0,R0,#+1024
   \   000008D0   4A0200EF           SWI      +586
   1287              mfree(buf);
   \                     ??life_proc_37:
   \   000008D4   10009DE5           LDR      R0,[SP, #+16]
   \   000008D8   040100EF           SWI      +260
   1288              DestroyDirHandle(dirHandle);
   \   000008DC   00009DE5           LDR      R0,[SP, #+0]
   \   000008E0   540200EF           SWI      +596
   \   000008E4   210000EA           B        ??life_proc_43
   1289            }
   1290            else
   1291            {
   1292              if(snd) PlayFileV(sound_path, SoundName[OHDEER_SND], sndVolume);
   \                     ??life_proc_36:
   \   000008E8   000055E3           CMP      R5,#+0
   \   000008EC   0700000A           BEQ      ??life_proc_44
   \   000008F0   ........           LDR      R0,??DataTable100  ;; sndVolume
   \   000008F4   002090E5           LDR      R2,[R0, #+0]
   \   000008F8   9400A0E3           MOV      R0,#+148
   \   000008FC   600E80E3           ORR      R0,R0,#0x600
   \   00000900   081080E0           ADD      R1,R0,R8
   \   00000904   18008DE2           ADD      R0,SP,#+24
   \   00000908   400E80E2           ADD      R0,R0,#+1024
   \   0000090C   4A0200EF           SWI      +586
   1293              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_MSGROOMERR,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \                     ??life_proc_44:
   \   00000910   0720A0E1           MOV      R2,R7
   \   00000914   0010A0E3           MOV      R1,#+0
   \   00000918   8400A0E3           MOV      R0,#+132
   \   0000091C   400E80E3           ORR      R0,R0,#0x400
   \   00000920   080080E0           ADD      R0,R0,R8
   \   00000924   5D0100EF           SWI      +349
   \   00000928   0090A0E1           MOV      R9,R0
   \   0000092C   0720A0E1           MOV      R2,R7
   \   00000930   0010A0E3           MOV      R1,#+0
   \   00000934   400086E2           ADD      R0,R6,#+64
   \   00000938   5D0100EF           SWI      +349
   \   0000093C   0010A0E3           MOV      R1,#+0
   \   00000940   02002DE9           PUSH     {R1}
   \   00000944   ........           LDR      R1,??DataTable101  ;; msgShowTime
   \   00000948   8820A0E3           MOV      R2,#+136
   \   0000094C   001091E5           LDR      R1,[R1, #+0]
   \   00000950   4C2D82E3           ORR      R2,R2,#0x1300
   \   00000954   920101E0           MUL      R1,R2,R1
   \   00000958   0130A0E3           MOV      R3,#+1
   \   0000095C   02002DE9           PUSH     {R1}
   \   00000960   0720A0E1           MOV      R2,R7
   \   00000964   0910A0E1           MOV      R1,R9
   \   00000968   570200EF           SWI      +599
   \   0000096C   08D08DE2           ADD      SP,SP,#+8
   1294            }
   1295            // голод
   1296            if (Pets[indx].Status.Hunger > 2*Pets[indx].Status.MaxHunger/3)
   \                     ??life_proc_43:
   \   00000970   140096E5           LDR      R0,[R6, #+20]
   \   00000974   ........           LDR      R1,??DataTable94  ;; 0x55555556
   \   00000978   8000A0E1           LSL      R0,R0,#+1
   \   0000097C   9120C3E0           SMULL    R2,R3,R1,R0
   \   00000980   101096E5           LDR      R1,[R6, #+16]
   \   00000984   A00F83E0           ADD      R0,R3,R0, LSR #+31
   \   00000988   010050E1           CMP      R0,R1
   \   0000098C   0B0000AA           BGE      ??life_proc_45
   1297            {
   1298              if(!isCharging) --Pets[indx].Status.Happiness;
   \   00000990   04009DE5           LDR      R0,[SP, #+4]
   \   00000994   000050E3           CMP      R0,#+0
   \   00000998   18009605           LDREQ    R0,[R6, #+24]
   \   0000099C   01004002           SUBEQ    R0,R0,#+1
   \   000009A0   18008605           STREQ    R0,[R6, #+24]
   1299              if (Pets[indx].Sleep!=0) HungerSleep(indx, bk, snd);
   \   000009A4   DC0096E5           LDR      R0,[R6, #+220]
   \   000009A8   000050E3           CMP      R0,#+0
   \   000009AC   0300000A           BEQ      ??life_proc_45
   \   000009B0   68169DE5           LDR      R1,[SP, #+1640]
   \   000009B4   0520A0E1           MOV      R2,R5
   \   000009B8   0400A0E1           MOV      R0,R4
   \   000009BC   ........           BL       ??HungerSleep
   1300            }
   1301            // сытый
   1302            if (Pets[indx].Status.Hunger==0) ++Pets[indx].Status.Happiness;
   \                     ??life_proc_45:
   \   000009C0   100096E5           LDR      R0,[R6, #+16]
   \   000009C4   000050E3           CMP      R0,#+0
   \   000009C8   18009605           LDREQ    R0,[R6, #+24]
   \   000009CC   01008002           ADDEQ    R0,R0,#+1
   \   000009D0   18008605           STREQ    R0,[R6, #+24]
   1303          
   1304            // чистота
   1305            Pets[indx].Status.Dirtiness = findgvn;
   \   000009D4   14009DE5           LDR      R0,[SP, #+20]
   \   000009D8   200086E5           STR      R0,[R6, #+32]
   1306            if (Pets[indx].Status.Dirtiness == 0) Pets[indx].Bathe = 0;
   \   000009DC   000050E3           CMP      R0,#+0
   \   000009E0   E4008605           STREQ    R0,[R6, #+228]
   1307            if (Pets[indx].Status.Dirtiness > Pets[indx].Status.MaxDirtiness/2) --Pets[indx].Status.Health;
   \   000009E4   240096E5           LDR      R0,[R6, #+36]
   \   000009E8   201096E5           LDR      R1,[R6, #+32]
   \   000009EC   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   000009F0   C00051E1           CMP      R1,R0, ASR #+1
   \   000009F4   080096C5           LDRGT    R0,[R6, #+8]
   1308            if (Pets[indx].Status.Dirtiness > 2*Pets[indx].Status.MaxDirtiness/3) --Pets[indx].Status.Happiness;
   \   000009F8   ........           LDR      R1,??DataTable94  ;; 0x55555556
   \   000009FC   010040C2           SUBGT    R0,R0,#+1
   \   00000A00   080086C5           STRGT    R0,[R6, #+8]
   \   00000A04   240096E5           LDR      R0,[R6, #+36]
   \   00000A08   8000A0E1           LSL      R0,R0,#+1
   \   00000A0C   9120C3E0           SMULL    R2,R3,R1,R0
   \   00000A10   201096E5           LDR      R1,[R6, #+32]
   \   00000A14   A00F83E0           ADD      R0,R3,R0, LSR #+31
   \   00000A18   010050E1           CMP      R0,R1
   \   00000A1C   180096B5           LDRLT    R0,[R6, #+24]
   1309          
   1310            if (Pets[indx].Status.Behaviour <= Pets[indx].Status.MaxBehaviour/10) --Pets[indx].Status.Health;
   \   00000A20   D0129FE5           LDR      R1,??life_proc_13+0x1C  ;; 0x66666667
   \   00000A24   010040B2           SUBLT    R0,R0,#+1
   \   00000A28   180086B5           STRLT    R0,[R6, #+24]
   \   00000A2C   340096E5           LDR      R0,[R6, #+52]
   \   00000A30   9120C3E0           SMULL    R2,R3,R1,R0
   \   00000A34   301096E5           LDR      R1,[R6, #+48]
   \   00000A38   4331A0E1           ASR      R3,R3,#+2
   \   00000A3C   A00F83E0           ADD      R0,R3,R0, LSR #+31
   \   00000A40   010050E1           CMP      R0,R1
   \   00000A44   080096A5           LDRGE    R0,[R6, #+8]
   \   00000A48   010040A2           SUBGE    R0,R0,#+1
   \   00000A4C   080086A5           STRGE    R0,[R6, #+8]
   1311            if (Pets[indx].Status.Boredom   >  Pets[indx].Status.MaxBoredom/2) --Pets[indx].Status.Happiness;
   \   00000A50   2C0096E5           LDR      R0,[R6, #+44]
   \   00000A54   281096E5           LDR      R1,[R6, #+40]
   \   00000A58   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   00000A5C   C00051E1           CMP      R1,R0, ASR #+1
   \   00000A60   180096C5           LDRGT    R0,[R6, #+24]
   \   00000A64   010040C2           SUBGT    R0,R0,#+1
   \   00000A68   180086C5           STRGT    R0,[R6, #+24]
   1312            if (Pets[indx].Status.Happiness <= Pets[indx].Status.MaxHappiness/2) --Pets[indx].Status.Health;
   \   00000A6C   1C0096E5           LDR      R0,[R6, #+28]
   \   00000A70   181096E5           LDR      R1,[R6, #+24]
   \   00000A74   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   00000A78   C00051E1           CMP      R1,R0, ASR #+1
   \   00000A7C   080096D5           LDRLE    R0,[R6, #+8]
   \   00000A80   010040D2           SUBLE    R0,R0,#+1
   \   00000A84   080086D5           STRLE    R0,[R6, #+8]
   1313          
   1314            // проверки максимальных - минимальных значений
   1315            VerifyStatus(indx);
   \   00000A88   0400A0E1           MOV      R0,R4
   \   00000A8C   ........           BL       ??VerifyStatus
   1316          
   1317            // только дл€ основного питомца
   1318            if(indx == 0)
   \   00000A90   000054E3           CMP      R4,#+0
   \   00000A94   4500001A           BNE      ??life_proc_46
   1319            {
   1320          //    MyBOOK* book = (MyBOOK *)bk;
   1321              if(Pets[0].Status.Age >= PARENT_AGE)
   \   00000A98   ........           LDR      R0,??DataTable104  ;; Pets
   \   00000A9C   ........           LDR      R1,??DataTable122  ;; PARENT_AGE
   \   00000AA0   000090E5           LDR      R0,[R0, #+0]
   \   00000AA4   001091E5           LDR      R1,[R1, #+0]
   \   00000AA8   010050E1           CMP      R0,R1
   \   00000AAC   3F00003A           BCC      ??life_proc_46
   1322              if(Pets[0].Status.Count == 1)
   \   00000AB0   44029FE5           LDR      R0,??life_proc_13+0x20  ;; Pets + 196
   \   00000AB4   000090E5           LDR      R0,[R0, #+0]
   \   00000AB8   010050E3           CMP      R0,#+1
   \   00000ABC   3800001A           BNE      ??life_proc_47
   1323              {
   1324                if(Pets[0].Sleep == 0)
   \   00000AC0   38029FE5           LDR      R0,??life_proc_13+0x24  ;; Pets + 220
   \   00000AC4   000090E5           LDR      R0,[R0, #+0]
   \   00000AC8   000050E3           CMP      R0,#+0
   \   00000ACC   3700001A           BNE      ??life_proc_46
   1325                if((Pets[0].Status.TimeAge & 0xF) == 0)
   \   00000AD0   2C029FE5           LDR      R0,??life_proc_13+0x28  ;; Pets + 4
   \   00000AD4   000090E5           LDR      R0,[R0, #+0]
   \   00000AD8   0F0010E3           TST      R0,#0xF
   \   00000ADC   3300001A           BNE      ??life_proc_46
   1326                if((Pets[0].Status.Sex == 0) || (Pets[0].Status.Sex == 1))
   \   00000AE0   20029FE5           LDR      R0,??life_proc_13+0x2C  ;; Pets + 192
   \   00000AE4   000090E5           LDR      R0,[R0, #+0]
   \   00000AE8   000050E3           CMP      R0,#+0
   \   00000AEC   2800000A           BEQ      ??life_proc_48
   \   00000AF0   010050E3           CMP      R0,#+1
   \   00000AF4   2D00001A           BNE      ??life_proc_46
   1327                {
   1328                  if(Pets[0].Status.Sex == 0)
   1329                    MessageBox(TextID_Create(Pets[0].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_MSGNEEDFRIEND,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   1330                  else
   1331                    MessageBox(TextID_Create(Pets[0].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_MSGNEEDGIRL,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   00000AF8   0720A0E1           MOV      R2,R7
   \   00000AFC   0010A0E3           MOV      R1,#+0
   \   00000B00   F800A0E3           MOV      R0,#+248
   \                     ??life_proc_49:
   \   00000B04   400E80E3           ORR      R0,R0,#0x400
   \   00000B08   080080E0           ADD      R0,R0,R8
   \   00000B0C   5D0100EF           SWI      +349
   \   00000B10   0090A0E1           MOV      R9,R0
   \   00000B14   F0019FE5           LDR      R0,??life_proc_13+0x30  ;; Pets + 64
   \   00000B18   0720A0E1           MOV      R2,R7
   \   00000B1C   0010A0E3           MOV      R1,#+0
   \   00000B20   5D0100EF           SWI      +349
   \   00000B24   0010A0E3           MOV      R1,#+0
   \   00000B28   02002DE9           PUSH     {R1}
   \   00000B2C   ........           LDR      R1,??DataTable101  ;; msgShowTime
   \   00000B30   8820A0E3           MOV      R2,#+136
   \   00000B34   001091E5           LDR      R1,[R1, #+0]
   \   00000B38   4C2D82E3           ORR      R2,R2,#0x1300
   \   00000B3C   920101E0           MUL      R1,R2,R1
   \   00000B40   0130A0E3           MOV      R3,#+1
   \   00000B44   02002DE9           PUSH     {R1}
   \   00000B48   0720A0E1           MOV      R2,R7
   \   00000B4C   0910A0E1           MOV      R1,R9
   \   00000B50   570200EF           SWI      +599
   \   00000B54   08D08DE2           ADD      SP,SP,#+8
   1332          
   1333                  if(snd) PlayFileV(sound_path, SoundName[OW_SND], sndVolume);
   \   00000B58   000055E3           CMP      R5,#+0
   \   00000B5C   0700000A           BEQ      ??life_proc_50
   \   00000B60   ........           LDR      R0,??DataTable100  ;; sndVolume
   \   00000B64   002090E5           LDR      R2,[R0, #+0]
   \   00000B68   D400A0E3           MOV      R0,#+212
   \   00000B6C   600E80E3           ORR      R0,R0,#0x600
   \   00000B70   081080E0           ADD      R1,R0,R8
   \   00000B74   18008DE2           ADD      R0,SP,#+24
   \   00000B78   400E80E2           ADD      R0,R0,#+1024
   \   00000B7C   4A0200EF           SWI      +586
   1334                  start_vibra();
   \                     ??life_proc_50:
   \   00000B80   ........           BL       ??start_vibra
   1335                  Light();
   \   00000B84   ........           BL       ??Light
   1336                  Pets[0].Status.needFriend = 1;
   \   00000B88   80019FE5           LDR      R0,??life_proc_13+0x34  ;; Pets + 204
   \   00000B8C   0110A0E3           MOV      R1,#+1
   \   00000B90   050000EA           B        ??life_proc_51
   \                     ??life_proc_48:
   \   00000B94   0720A0E1           MOV      R2,R7
   \   00000B98   0010A0E3           MOV      R1,#+0
   \   00000B9C   D400A0E3           MOV      R0,#+212
   \   00000BA0   D7FFFFEA           B        ??life_proc_49
   1337                }
   1338              }
   1339              else
   1340              {
   1341                Pets[0].Status.needFriend = 0;
   \                     ??life_proc_47:
   \   00000BA4   64019FE5           LDR      R0,??life_proc_13+0x34  ;; Pets + 204
   \   00000BA8   0010A0E3           MOV      R1,#+0
   \                     ??life_proc_51:
   \   00000BAC   001080E5           STR      R1,[R0, #+0]
   1342              }
   1343            }
   1344          
   1345            // суицид и смерть
   1346            if ((Pets[indx].Status.Health == 0) ||
   1347                (Pets[indx].Status.Hunger >= Pets[indx].Status.MaxHunger) ||
   1348                (Pets[indx].Status.Happiness == 0))
   \                     ??life_proc_46:
   \   00000BB0   080096E5           LDR      R0,[R6, #+8]
   \   00000BB4   000050E3           CMP      R0,#+0
   \   00000BB8   0600000A           BEQ      ??life_proc_52
   \   00000BBC   100096E5           LDR      R0,[R6, #+16]
   \   00000BC0   141096E5           LDR      R1,[R6, #+20]
   \   00000BC4   010050E1           CMP      R0,R1
   \   00000BC8   020000AA           BGE      ??life_proc_52
   \   00000BCC   180096E5           LDR      R0,[R6, #+24]
   \   00000BD0   000050E3           CMP      R0,#+0
   \   00000BD4   0B00001A           BNE      ??life_proc_53
   1349            {
   1350              Pets[indx].Status.StatusDeath=1;
   \                     ??life_proc_52:
   \   00000BD8   0100A0E3           MOV      R0,#+1
   \   00000BDC   380086E5           STR      R0,[R6, #+56]
   1351              if(snd) PlayFileV(sound_path, SoundName[BYEBYE_SND], sndVolume);
   \   00000BE0   000055E3           CMP      R5,#+0
   \   00000BE4   0500000A           BEQ      ??life_proc_54
   \   00000BE8   ........           LDR      R0,??DataTable100  ;; sndVolume
   \   00000BEC   621E88E2           ADD      R1,R8,#+1568
   \   00000BF0   002090E5           LDR      R2,[R0, #+0]
   \   00000BF4   18008DE2           ADD      R0,SP,#+24
   \   00000BF8   400E80E2           ADD      R0,R0,#+1024
   \   00000BFC   4A0200EF           SWI      +586
   1352              start_vibra();
   \                     ??life_proc_54:
   \   00000C00   ........           BL       ??start_vibra
   1353              Light();
   \   00000C04   ........           BL       ??Light
   1354            }
   1355          
   1356            ChangeStatusImage(indx, bk, snd);
   \                     ??life_proc_53:
   \   00000C08   68169DE5           LDR      R1,[SP, #+1640]
   \   00000C0C   0520A0E1           MOV      R2,R5
   \   00000C10   0400A0E1           MOV      R0,R4
   \   00000C14   ........           BL       ??ChangeStatusImage
   1357          
   1358            // звуки и сообщени€
   1359            // дисциплина
   1360            if (Pets[indx].Status.StatusDeath !=1)
   \   00000C18   380096E5           LDR      R0,[R6, #+56]
   \   00000C1C   010050E3           CMP      R0,#+1
   \   00000C20   2A00000A           BEQ      ??life_proc_55
   1361            if (Pets[indx].Sleep==0)
   \   00000C24   DC0096E5           LDR      R0,[R6, #+220]
   \   00000C28   000050E3           CMP      R0,#+0
   \   00000C2C   2700001A           BNE      ??life_proc_55
   1362            if (Pets[indx].Behaviour >= Pets[indx].Status.Behaviour)
   \   00000C30   E00096E5           LDR      R0,[R6, #+224]
   \   00000C34   301096E5           LDR      R1,[R6, #+48]
   \   00000C38   010050E1           CMP      R0,R1
   \   00000C3C   230000BA           BLT      ??life_proc_55
   1363            {
   1364              if(snd) PlayFileV(sound_path, SoundName[GLOBAL_SND], sndVolume);
   \   00000C40   000055E3           CMP      R5,#+0
   \   00000C44   0500000A           BEQ      ??life_proc_56
   \   00000C48   ........           LDR      R0,??DataTable100  ;; sndVolume
   \   00000C4C   5A1E88E2           ADD      R1,R8,#+1440
   \   00000C50   002090E5           LDR      R2,[R0, #+0]
   \   00000C54   18008DE2           ADD      R0,SP,#+24
   \   00000C58   400E80E2           ADD      R0,R0,#+1024
   \   00000C5C   4A0200EF           SWI      +586
   1365              start_vibra();
   \                     ??life_proc_56:
   \   00000C60   ........           BL       ??start_vibra
   1366              Light();
   \   00000C64   ........           BL       ??Light
   1367              Pets[indx].Behaviour=0;
   \   00000C68   0000A0E3           MOV      R0,#+0
   \   00000C6C   E00086E5           STR      R0,[R6, #+224]
   1368              MessageBox(TextID_Create(Pets[indx].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(SpeakMessage[Random() & mess_mask],ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   00000C70   ........           _BLF     ??Random,??Random??rA
   \   00000C74   1F0000E2           AND      R0,R0,#0x1F
   \   00000C78   000198E7           LDR      R0,[R8, +R0, LSL #+2]
   \   00000C7C   0720A0E1           MOV      R2,R7
   \   00000C80   0010A0E3           MOV      R1,#+0
   \   00000C84   5D0100EF           SWI      +349
   \   00000C88   0040A0E1           MOV      R4,R0
   \   00000C8C   0720A0E1           MOV      R2,R7
   \   00000C90   0010A0E3           MOV      R1,#+0
   \   00000C94   400086E2           ADD      R0,R6,#+64
   \   00000C98   5D0100EF           SWI      +349
   \   00000C9C   0010A0E3           MOV      R1,#+0
   \   00000CA0   02002DE9           PUSH     {R1}
   \   00000CA4   ........           LDR      R1,??DataTable101  ;; msgShowTime
   \   00000CA8   8820A0E3           MOV      R2,#+136
   \   00000CAC   001091E5           LDR      R1,[R1, #+0]
   \   00000CB0   4C2D82E3           ORR      R2,R2,#0x1300
   \   00000CB4   920101E0           MUL      R1,R2,R1
   \   00000CB8   0130A0E3           MOV      R3,#+1
   \   00000CBC   02002DE9           PUSH     {R1}
   \   00000CC0   0720A0E1           MOV      R2,R7
   \   00000CC4   0410A0E1           MOV      R1,R4
   \   00000CC8   570200EF           SWI      +599
   \   00000CCC   08D08DE2           ADD      SP,SP,#+8
   \                     ??life_proc_55:
   \   00000CD0   9BDF8DE2           ADD      SP,SP,#+620
   \   00000CD4   40DE8DE2           ADD      SP,SP,#+1024
   \   00000CD8   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??life_proc_13:
   \   00000CDC   ........           DC32     SpeakMessage
   \   00000CE0   ........           DC32     Malware_Ena
   \   00000CE4   ........           DC32     Scan_Game_Ena
   \   00000CE8   ........           DC32     RETURN_TO_STANDBY_EVENT
   \   00000CEC   ........           DC32     TERMINATE_SESSION_EVENT
   \   00000CF0   ........           DC32     Music_Ena
   \   00000CF4   ........           DC32     ROOM_PATH
   \   00000CF8   67666666           DC32     0x66666667
   \   00000CFC   ........           DC32     Pets + 196
   \   00000D00   ........           DC32     Pets + 220
   \   00000D04   ........           DC32     Pets + 4
   \   00000D08   ........           DC32     Pets + 192
   \   00000D0C   ........           DC32     Pets + 64
   \   00000D10   ........           DC32     Pets + 204
   1369            }
   1370          }
   1371          

   \                                 In segment CODE, align 4, keep-with-next
   1372          void onTimer_life (u16 timerID, LPARAM lparam)
   1373          {
   \                     ??onTimer_life:
   \   00000000   F2402DE9           PUSH     {R1,R4-R7,LR}
   1374            BOOK *bk = (BOOK *)lparam;
   \   00000004   0D00A0E1           MOV      R0,SP
   \   00000008   ........           _BLF     `??operator void *`,`??operator void *??rA`
   \   0000000C   0040A0E1           MOV      R4,R0
   1375            int snd = (!GetSilent() || sndOnSilent) && sndEnable && (!isNight());
   \   00000010   4B0200EF           SWI      +587
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0300000A           BEQ      ??onTimer_life_1
   \   0000001C   ........           LDR      R0,??DataTable146  ;; sndOnSilent
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0700000A           BEQ      ??onTimer_life_2
   \                     ??onTimer_life_1:
   \   0000002C   ........           LDR      R0,??DataTable147  ;; sndEnable
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0300000A           BEQ      ??onTimer_life_2
   \   0000003C   ........           BL       ??isNight
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0150A003           MOVEQ    R5,#+1
   \   00000048   0000000A           BEQ      ??onTimer_life_3
   \                     ??onTimer_life_2:
   \   0000004C   0050A0E3           MOV      R5,#+0
   1376          
   1377            for(int i=0; i<Pets[0].Status.Count; i++) life_proc(i, bk, snd);
   \                     ??onTimer_life_3:
   \   00000050   ........           LDR      R7,??DataTable104  ;; Pets
   \   00000054   0060A0E3           MOV      R6,#+0
   \   00000058   C40097E5           LDR      R0,[R7, #+196]
   \   0000005C   010050E3           CMP      R0,#+1
   \   00000060   050000AA           BGE      ??onTimer_life_4
   \   00000064   070000EA           B        ??onTimer_life_5
   \                     ??onTimer_life_6:
   \   00000068   0520A0E1           MOV      R2,R5
   \   0000006C   0410A0E1           MOV      R1,R4
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           BL       ??life_proc
   \   00000078   016086E2           ADD      R6,R6,#+1
   \                     ??onTimer_life_4:
   \   0000007C   C40097E5           LDR      R0,[R7, #+196]
   \   00000080   000056E1           CMP      R6,R0
   \   00000084   F7FFFFBA           BLT      ??onTimer_life_6
   1378          
   1379            Timer_ReSet(&timer_life,TMR_SECOND*60*(SpeedLife+1),onTimer_life,lparam);
   \                     ??onTimer_life_5:
   \   00000088   24009FE5           LDR      R0,??onTimer_life_7  ;; SpeedLife
   \   0000008C   00309DE5           LDR      R3,[SP, #+0]
   \   00000090   000090E5           LDR      R0,[R0, #+0]
   \   00000094   ........           LDR      R2,??DataTable132  ;; ??onTimer_life
   \   00000098   010080E2           ADD      R0,R0,#+1
   \   0000009C   6040A0E3           MOV      R4,#+96
   \   000000A0   EA4C84E3           ORR      R4,R4,#0xEA00
   \   000000A4   940001E0           MUL      R1,R4,R0
   \   000000A8   08009FE5           LDR      R0,??onTimer_life_7+0x4  ;; timer_save + 4
   \   000000AC   280100EF           SWI      +296
   1380          }
   \   000000B0   F180BDE8           POP      {R0,R4-R7,PC}    ;; return
   \                     ??onTimer_life_7:
   \   000000B4   ........           DC32     SpeedLife
   \   000000B8   ........           DC32     timer_save + 4
   1381          
   1382          // ----------------------------------------------------------------------------
   1383          

   \                                 In segment CODE, align 4, keep-with-next
   1384          int NewKey(int key, int r1 , int mode, LPARAM, DISP_OBJ*)
   1385          {
   \                     ??NewKey:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0250A0E1           MOV      R5,R2
   1386            if(!isKeylocked())
   \   0000000C   B70100EF           SWI      +439
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0A00001A           BNE      ??NewKey_1
   1387            {
   1388              if (mode==ACTIVE_KEY_STYLE)
   \   00000018   60009FE5           LDR      R0,??NewKey_2    ;; ACTIVE_KEY_STYLE
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000055E1           CMP      R5,R0
   \   00000024   0600001A           BNE      ??NewKey_1
   1389              {
   1390                if (key==ACTIVE_KEY)
   \   00000028   54009FE5           LDR      R0,??NewKey_2+0x4  ;; ACTIVE_KEY
   \   0000002C   000090E5           LDR      R0,[R0, #+0]
   \   00000030   000054E1           CMP      R4,R0
   \   00000034   0200001A           BNE      ??NewKey_1
   1391                {
   1392                  if (isKeylocked()) return(0);
   \   00000038   B70100EF           SWI      +439
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0100000A           BEQ      ??NewKey_3
   \                     ??NewKey_1:
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   3080BDE8           POP      {R4,R5,PC}       ;; return
   1393                  if(MyBOOK * bk = (MyBOOK *)FindBook(isTamagochiBook))
   \                     ??NewKey_3:
   \   0000004C   ........           LDR      R0,??DataTable106  ;; ??isTamagochiBook
   \   00000050   300100EF           SWI      +304
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   3080BD08           POPEQ    {R4,R5,PC}
   1394                  {
   1395                    if(!bk->gui)
   \   0000005C   281090E5           LDR      R1,[R0, #+40]
   \   00000060   000051E3           CMP      R1,#+0
   \   00000064   0200001A           BNE      ??NewKey_4
   1396                    {
   1397                      ShowMenu((BOOK *)bk);
   \   00000068   ........           _BLF     ??ShowMenu,??ShowMenu??rA
   1398                      return(-1);
   \   0000006C   0000E0E3           MVN      R0,#+0
   \   00000070   3080BDE8           POP      {R4,R5,PC}
   1399                    }
   1400                    else
   1401                    {
   1402                      CloseMenu((BOOK *)bk);
   \                     ??NewKey_4:
   \   00000074   ........           _BLF     ??CloseMenu,??CloseMenu??rA
   \   00000078   0000A0E3           MOV      R0,#+0
   \   0000007C   3080BDE8           POP      {R4,R5,PC}
   \                     ??NewKey_2:
   \   00000080   ........           DC32     ACTIVE_KEY_STYLE
   \   00000084   ........           DC32     ACTIVE_KEY
   1403                    }
   1404                  }
   1405                }
   1406              }
   1407            }
   1408            return(0);
   1409          }
   1410          
   1411          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1412          void DrawParams(int y)
   1413          {
   \                     ??DrawParams:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   1414            GC *GC_DISP=get_DisplayGC ();
   1415            for(int i=0; i<Pets[0].Status.Count; i++)
   \   00000004   ........           LDR      R7,??DataTable148  ;; Pets
   \   00000008   ........           LDR      R9,??DataTable108  ;; img_names
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   E50100EF           SWI      +485
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   C40097E5           LDR      R0,[R7, #+196]
   \   0000001C   0060A0E3           MOV      R6,#+0
   \   00000020   010050E3           CMP      R0,#+1
   \   00000024   260000AA           BGE      ??DrawParams_1
   \   00000028   F083BDE8           POP      {R4-R9,PC}
   1416            {
   1417              GC_PutChar(GC_DISP, Pets[i].x, Pets[i].y - y, Pets[i].img_size, Pets[i].img_size, img_names[Pets[i].Status.ImageStatus]);
   \                     ??DrawParams_2:
   \   0000002C   440FA0E3           MOV      R0,#+272
   \   00000030   907628E0           MLA      R8,R0,R6,R7
   \   00000034   FC3098E5           LDR      R3,[R8, #+252]
   \   00000038   3C0098E5           LDR      R0,[R8, #+60]
   \   0000003C   800089E0           ADD      R0,R9,R0, LSL #+1
   \   00000040   B000D0E1           LDRH     R0,[R0, #+0]
   \   00000044   01002DE9           PUSH     {R0}
   \   00000048   0300A0E1           MOV      R0,R3
   \   0000004C   01002DE9           PUSH     {R0}
   \   00000050   001198E5           LDR      R1,[R8, #+256]
   \   00000054   040198E5           LDR      R0,[R8, #+260]
   \   00000058   042040E0           SUB      R2,R0,R4
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   400100EF           SWI      +320
   1418              if(Pets[i].simg_status) GC_PutChar(GC_DISP, Pets[i].x + Pets[i].img_size - StatSize, Pets[i].y + Pets[i].img_size - StatSize - y, StatSize, StatSize, img_status[Pets[i].simg_status]);
   \   00000064   F81098E5           LDR      R1,[R8, #+248]
   \   00000068   08D08DE2           ADD      SP,SP,#+8
   \   0000006C   000051E3           CMP      R1,#+0
   \   00000070   1200000A           BEQ      ??DrawParams_3
   \   00000074   500099E5           LDR      R0,[R9, #+80]
   \   00000078   811089E0           ADD      R1,R9,R1, LSL #+1
   \   0000007C   B811D1E1           LDRH     R1,[R1, #+24]
   \   00000080   0030A0E1           MOV      R3,R0
   \   00000084   02002DE9           PUSH     {R1}
   \   00000088   0010A0E1           MOV      R1,R0
   \   0000008C   02002DE9           PUSH     {R1}
   \   00000090   FC2098E5           LDR      R2,[R8, #+252]
   \   00000094   041198E5           LDR      R1,[R8, #+260]
   \   00000098   011082E0           ADD      R1,R2,R1
   \   0000009C   001041E0           SUB      R1,R1,R0
   \   000000A0   042041E0           SUB      R2,R1,R4
   \   000000A4   001198E5           LDR      R1,[R8, #+256]
   \   000000A8   FC8098E5           LDR      R8,[R8, #+252]
   \   000000AC   011088E0           ADD      R1,R8,R1
   \   000000B0   001041E0           SUB      R1,R1,R0
   \   000000B4   0500A0E1           MOV      R0,R5
   \   000000B8   400100EF           SWI      +320
   \   000000BC   08D08DE2           ADD      SP,SP,#+8
   1419            }
   \                     ??DrawParams_3:
   \   000000C0   016086E2           ADD      R6,R6,#+1
   \                     ??DrawParams_1:
   \   000000C4   C40097E5           LDR      R0,[R7, #+196]
   \   000000C8   000056E1           CMP      R6,R0
   \   000000CC   D6FFFFBA           BLT      ??DrawParams_2
   1420          //  if(ImageID != NOIMAGE) DrawString(ImageID + 0x78000000,0,50,50,150,150,1,1,clGreen,clRed);
   1421          //  if(ImageID != NOIMAGE) GC_PutChar(GC_DISP, 150, 150, 0, 0, ImageID);
   1422          }
   \   000000D0   F083BDE8           POP      {R4-R9,PC}       ;; return
   1423          

   \                                 In segment CODE, align 4, keep-with-next
   1424          void Display_ReDraw(DISP_OBJ* DO,int a,int b,int c)
   1425          {
   \                     ??Display_ReDraw:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   1426            DrawParams(StatusBarY);
   \   00000004   ........           LDR      R8,??DataTable140  ;; timer_save
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   440098E5           LDR      R0,[R8, #+68]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   0370A0E1           MOV      R7,R3
   \   0000001C   ........           BL       ??DrawParams
   1427            if(Display_oldReDraw) Display_oldReDraw(DO,a,b,c);
   \   00000020   188098E5           LDR      R8,[R8, #+24]
   \   00000024   000058E3           CMP      R8,#+0
   \   00000028   F081BD08           POPEQ    {R4-R8,PC}
   \   0000002C   0730A0E1           MOV      R3,R7
   \   00000030   0620A0E1           MOV      R2,R6
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   38FF2FE1           BLX      R8
   1428          }
   \   00000040   F081BDE8           POP      {R4-R8,PC}       ;; return
   1429          

   \                                 In segment CODE, align 4, keep-with-next
   1430          void Status_ReDraw(DISP_OBJ * d, int a, int b, int c)
   1431          {
   \                     ??Status_ReDraw:
   \   00000000   14C09FE5           LDR      R12,??Status_ReDraw_1  ;; timer_save + 12
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   00C09CE5           LDR      R12,[R12, #+0]
   \   0000000C   00005CE3           CMP      R12,#+0
   \   00000010   0080BD08           POPEQ    {PC}
   1432            if(Status_oldReDraw) Status_oldReDraw(d, a, b, c);
   \   00000014   3CFF2FE1           BLX      R12
   1433          //  DrawParams(0);
   1434          }
   \   00000018   0080BDE8           POP      {PC}             ;; return
   \                     ??Status_ReDraw_1:
   \   0000001C   ........           DC32     timer_save + 12
   1435          

   \                                 In segment CODE, align 4, keep-with-next
   1436          void Soft_ReDraw(DISP_OBJ* DO,int a,int b,int c)
   1437          {
   \                     ??Soft_ReDraw:
   \   00000000   14C09FE5           LDR      R12,??Soft_ReDraw_1  ;; timer_save + 36
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   00C09CE5           LDR      R12,[R12, #+0]
   \   0000000C   00005CE3           CMP      R12,#+0
   \   00000010   0080BD08           POPEQ    {PC}
   1438          //  DrawParams(SoftBarY);
   1439            if(Soft_oldReDraw) Soft_oldReDraw(DO,a,b,c);
   \   00000014   3CFF2FE1           BLX      R12
   1440          }
   \   00000018   0080BDE8           POP      {PC}             ;; return
   \                     ??Soft_ReDraw_1:
   \   0000001C   ........           DC32     timer_save + 36
   1441          

   \                                 In segment CODE, align 4, keep-with-next
   1442          void InitStatus(int indx, int age, int sex)
   1443          {
   \                     ??InitStatus:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0030A0E1           MOV      R3,R0
   1444              Pets[indx].Status.TimeAge      = 0;
   \   00000008   ........           LDR      R0,??DataTable148  ;; Pets
   \   0000000C   0240A0E1           MOV      R4,R2
   \   00000010   442FA0E3           MOV      R2,#+272
   \   00000014   920325E0           MLA      R5,R2,R3,R0
   \   00000018   0060A0E3           MOV      R6,#+0
   \   0000001C   046085E5           STR      R6,[R5, #+4]
   1445              Pets[indx].Status.Age          = age;
   \   00000020   001085E5           STR      R1,[R5, #+0]
   \   00000024   6420A0E3           MOV      R2,#+100
   \   00000028   811082E0           ADD      R1,R2,R1, LSL #+1
   \   0000002C   081085E5           STR      R1,[R5, #+8]
   1446              Pets[indx].Status.Health       = 100 + (2*age);
   1447              Pets[indx].Status.MaxHealth    = 100 + (2*age);
   \   00000030   0C1085E5           STR      R1,[R5, #+12]
   1448              Pets[indx].Status.Hunger       = 0;
   \   00000034   106085E5           STR      R6,[R5, #+16]
   1449              Pets[indx].Status.MaxHunger    = 100 + (2*age);
   \   00000038   141085E5           STR      R1,[R5, #+20]
   1450              Pets[indx].Status.Happiness    = 100 + (2*age);
   \   0000003C   181085E5           STR      R1,[R5, #+24]
   1451              Pets[indx].Status.MaxHappiness = 100 + (2*age);
   \   00000040   1C1085E5           STR      R1,[R5, #+28]
   1452              Pets[indx].Status.Dirtiness    = 0;
   \   00000044   206085E5           STR      R6,[R5, #+32]
   1453              Pets[indx].Status.MaxDirtiness = 100 + (2*age);
   \   00000048   241085E5           STR      R1,[R5, #+36]
   1454              Pets[indx].Status.Boredom      = 0;
   \   0000004C   286085E5           STR      R6,[R5, #+40]
   1455              Pets[indx].Status.MaxBoredom   = 100 + (2*age);
   \   00000050   2C1085E5           STR      R1,[R5, #+44]
   1456              Pets[indx].Status.Behaviour    = 100 + (2*age);
   \   00000054   301085E5           STR      R1,[R5, #+48]
   1457              Pets[indx].Status.MaxBehaviour = 100 + (2*age);
   \   00000058   341085E5           STR      R1,[R5, #+52]
   1458              Pets[indx].Status.StatusDeath  = 0;
   1459              Pets[indx].Status.ImageStatus  = SMILE_ICN;
   1460              if(indx == 0)
   \   0000005C   68109FE5           LDR      R1,??InitStatus_1  ;; `?<Constant L"\\x50\\x65\\x74">`
   \   00000060   386085E5           STR      R6,[R5, #+56]
   \   00000064   3C6085E5           STR      R6,[R5, #+60]
   \   00000068   000053E3           CMP      R3,#+0
   \   0000006C   0300001A           BNE      ??InitStatus_2
   1461                wstrncpy(Pets[indx].Status.name,L"Pet",MAXELEMS(Pets[indx].Status.name));
   \   00000070   4020A0E3           MOV      R2,#+64
   \   00000074   400080E2           ADD      R0,R0,#+64
   \   00000078   530100EF           SWI      +339
   \   0000007C   030000EA           B        ??InitStatus_3
   1462              else
   1463                snwprintf(Pets[indx].Status.name,MAXELEMS(Pets[indx].Status.name)-1,L"Pet%d",indx);
   \                     ??InitStatus_2:
   \   00000080   082081E2           ADD      R2,R1,#+8
   \   00000084   3F10A0E3           MOV      R1,#+63
   \   00000088   400085E2           ADD      R0,R5,#+64
   \   0000008C   150100EF           SWI      +277
   1464              Pets[indx].Status.Sex = 2;
   \                     ??InitStatus_3:
   \   00000090   0200A0E3           MOV      R0,#+2
   \   00000094   C00085E5           STR      R0,[R5, #+192]
   1465              Pets[indx].Status.Count = 1;
   \   00000098   0100A0E3           MOV      R0,#+1
   \   0000009C   C40085E5           STR      R0,[R5, #+196]
   1466              if((sex == 0) || (sex == 1)) Pets[indx].Status.Sex = sex;
   \   000000A0   000054E3           CMP      R4,#+0
   \   000000A4   01005413           CMPNE    R4,#+1
   \   000000A8   C0408505           STREQ    R4,[R5, #+192]
   1467              Pets[indx].Status.FamilyLife = 0;
   \   000000AC   C86085E5           STR      R6,[R5, #+200]
   1468              Pets[indx].Status.needFriend = 0;
   \   000000B0   CC6085E5           STR      R6,[R5, #+204]
   1469              Pets[indx].Status.haveFriend = 0;
   \   000000B4   D06085E5           STR      R6,[R5, #+208]
   1470              Pets[indx].Status.crc = myCrc32((unsigned char *)&Pets[indx].Status, sizeof(TStatusPet) - sizeof(unsigned int));
   \   000000B8   D410A0E3           MOV      R1,#+212
   \   000000BC   0500A0E1           MOV      R0,R5
   \   000000C0   ........           _BLF     ??myCrc32,??myCrc32??rA
   \   000000C4   D40085E5           STR      R0,[R5, #+212]
   1471          }
   \   000000C8   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??InitStatus_1:
   \   000000CC   ........           DC32     `?<Constant L"\\x50\\x65\\x74">`
   1472          

   \                                 In segment CODE, align 4, keep-with-next
   1473          int LoadStatus(int indx)
   1474          {
   1475            FSTAT _fstat,_fstat2;
   1476            int f, l;
   1477            wchar_t path[64];
   1478            wchar_t name[64];
   1479            unsigned  char inp[sizeof(TStatusPet)], out[sizeof(TStatusPet)];
   1480          
   1481            getdir(path,PET_PATH);
   \                     ??LoadStatus:
   \   00000000   ........           LDR      R1,??DataTable114  ;; PET_PATH
   \   00000004   F0412DE9           PUSH     {R4-R8,LR}
   1482            if(indx == 0)
   \   00000008   ........           LDR      R4,??DataTable119  ;; `?<Constant L"\\x50\\x65\\x74\\x2e\\x63\\x66\\x67">`
   \   0000000C   BBDF4DE2           SUB      SP,SP,#+748
   \   00000010   0060A0E1           MOV      R6,R0
   \   00000014   740F8DE2           ADD      R0,SP,#+464
   \   00000018   ........           _BLF     ??getdir,??getdir??rA
   \   0000001C   000056E3           CMP      R6,#+0
   \   00000020   0400001A           BNE      ??LoadStatus_1
   1483            {
   1484              wstrncpy(name,CFG_NAME,MAXELEMS(name));
   \   00000024   4020A0E3           MOV      R2,#+64
   \   00000028   0410A0E1           MOV      R1,R4
   \   0000002C   940F8DE2           ADD      R0,SP,#+592
   \   00000030   530100EF           SWI      +339
   \   00000034   040000EA           B        ??LoadStatus_2
   1485            }
   1486            else
   1487            {
   1488              snwprintf(name,MAXELEMS(name)-1,CFG_NAME_FORMAT,indx);
   \                     ??LoadStatus_1:
   \   00000038   0630A0E1           MOV      R3,R6
   \   0000003C   102084E2           ADD      R2,R4,#+16
   \   00000040   3F10A0E3           MOV      R1,#+63
   \   00000044   940F8DE2           ADD      R0,SP,#+592
   \   00000048   150100EF           SWI      +277
   1489            }
   1490          
   1491            if (fstat(path,name,&_fstat) != -1)
   \                     ??LoadStatus_2:
   \   0000004C   0050E0E3           MVN      R5,#+0
   \   00000050   04208DE2           ADD      R2,SP,#+4
   \   00000054   941F8DE2           ADD      R1,SP,#+592
   \   00000058   740F8DE2           ADD      R0,SP,#+464
   \   0000005C   1C0100EF           SWI      +284
   \   00000060   050050E1           CMP      R0,R5
   \   00000064   1700000A           BEQ      ??LoadStatus_3
   1492            {
   1493              if ((f=_fopen(path,name,FSX_O_RDONLY,FSX_S_IREAD|FSX_S_IWRITE,0))>=0)
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   01002DE9           PUSH     {R0}
   \   00000070   603FA0E3           MOV      R3,#+384
   \   00000074   0120A0E3           MOV      R2,#+1
   \   00000078   951F8DE2           ADD      R1,SP,#+596
   \   0000007C   750F8DE2           ADD      R0,SP,#+468
   \   00000080   160100EF           SWI      +278
   \   00000084   0070B0E1           MOVS     R7,R0
   \   00000088   04D08DE2           ADD      SP,SP,#+4
   \   0000008C   0D00004A           BMI      ??LoadStatus_3
   1494              {
   1495                InitStatus(indx, 0, 2);
   \   00000090   0220A0E3           MOV      R2,#+2
   \   00000094   0010A0E3           MOV      R1,#+0
   \   00000098   0600A0E1           MOV      R0,R6
   \   0000009C   ........           BL       ??InitStatus
   1496                l = fread(f,&inp, sizeof(TStatusPet));
   \   000000A0   D820A0E3           MOV      R2,#+216
   \   000000A4   20108DE2           ADD      R1,SP,#+32
   \   000000A8   0700A0E1           MOV      R0,R7
   \   000000AC   180100EF           SWI      +280
   \   000000B0   0080A0E1           MOV      R8,R0
   1497                fclose(f);
   \   000000B4   0700A0E1           MOV      R0,R7
   \   000000B8   170100EF           SWI      +279
   1498          
   1499                if(l !=_fstat.fsize)
   \   000000BC   0C009DE5           LDR      R0,[SP, #+12]
   \   000000C0   000058E1           CMP      R8,R0
   \   000000C4   0200000A           BEQ      ??LoadStatus_4
   1500                {
   1501                  return -1;
   \                     ??LoadStatus_3:
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   BBDF8DE2           ADD      SP,SP,#+748
   \   000000D0   F081BDE8           POP      {R4-R8,PC}
   1502                }
   1503                unsigned int len = _fstat.fsize - sizeof(unsigned int);
   \                     ??LoadStatus_4:
   \   000000D4   047040E2           SUB      R7,R0,#+4
   1504                unsigned int crc;
   1505                memcpy(&crc, &inp[len], sizeof(unsigned int));
   \   000000D8   0420A0E3           MOV      R2,#+4
   \   000000DC   20008DE2           ADD      R0,SP,#+32
   \   000000E0   001087E0           ADD      R1,R7,R0
   \   000000E4   0D00A0E1           MOV      R0,SP
   \   000000E8   130100EF           SWI      +275
   1506                decrypt(out, inp, len, crc);
   \   000000EC   00309DE5           LDR      R3,[SP, #+0]
   \   000000F0   0720A0E1           MOV      R2,R7
   \   000000F4   20108DE2           ADD      R1,SP,#+32
   \   000000F8   F8008DE2           ADD      R0,SP,#+248
   \   000000FC   ........           _BLF     ??decrypt,??decrypt??rA
   1507                if(crc == myCrc32(out, len))
   \   00000100   0710A0E1           MOV      R1,R7
   \   00000104   F8008DE2           ADD      R0,SP,#+248
   \   00000108   ........           _BLF     ??myCrc32,??myCrc32??rA
   \   0000010C   ........           LDR      R2,??DataTable148  ;; Pets
   \   00000110   441FA0E3           MOV      R1,#+272
   \   00000114   912626E0           MLA      R6,R1,R6,R2
   \   00000118   00109DE5           LDR      R1,[SP, #+0]
   \   0000011C   000051E1           CMP      R1,R0
   1508                {
   1509                  memcpy(&Pets[indx].Status, out, len);
   \   00000120   0720A001           MOVEQ    R2,R7
   \   00000124   F8108D02           ADDEQ    R1,SP,#+248
   \   00000128   0700000A           BEQ      ??LoadStatus_5
   1510                }
   1511                else
   1512                {
   1513                  if (fstat(TESTPATH,TESTFILE,&_fstat2) != -1)
   \   0000012C   B42F8DE2           ADD      R2,SP,#+720
   \   00000130   501084E2           ADD      R1,R4,#+80
   \   00000134   240084E2           ADD      R0,R4,#+36
   \   00000138   1C0100EF           SWI      +284
   \   0000013C   050050E1           CMP      R0,R5
   \   00000140   0300001A           BNE      ??LoadStatus_6
   1514                  {
   1515                  }
   1516                  else
   1517                  {
   1518                    memcpy(&Pets[indx].Status, inp, _fstat.fsize);
   \   00000144   0C209DE5           LDR      R2,[SP, #+12]
   \   00000148   20108DE2           ADD      R1,SP,#+32
   \                     ??LoadStatus_5:
   \   0000014C   0600A0E1           MOV      R0,R6
   \   00000150   130100EF           SWI      +275
   1519                  }
   1520                }
   1521                return 0;
   \                     ??LoadStatus_6:
   \   00000154   0000A0E3           MOV      R0,#+0
   \   00000158   BBDF8DE2           ADD      SP,SP,#+748
   \   0000015C   F081BDE8           POP      {R4-R8,PC}       ;; return
   1522              }
   1523            }
   1524            return -1;
   1525          }
   1526          

   \                                 In segment CODE, align 4, keep-with-next
   1527          int SaveStatus(int indx)
   1528          {
   \                     ??SaveStatus:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   76DF4DE2           SUB      SP,SP,#+472
   \   00000008   0040A0E1           MOV      R4,R0
   1529            int f;
   1530            wchar_t path[64];
   1531            wchar_t name[64];
   1532            TStatusPet out;
   1533          
   1534            if(indx >= MAX_PET_COUNT_GLB) return -1;
   \   0000000C   200054E3           CMP      R4,#+32
   \   00000010   2F0000AA           BGE      ??SaveStatus_1
   1535          
   1536            getdir(path,PET_PATH);
   \   00000014   ........           LDR      R1,??DataTable114  ;; PET_PATH
   \   00000018   D8008DE2           ADD      R0,SP,#+216
   \   0000001C   ........           _BLF     ??getdir,??getdir??rA
   1537            if(indx == 0)
   \   00000020   ........           LDR      R1,??DataTable119  ;; `?<Constant L"\\x50\\x65\\x74\\x2e\\x63\\x66\\x67">`
   \   00000024   000054E3           CMP      R4,#+0
   \   00000028   0300001A           BNE      ??SaveStatus_2
   1538            {
   1539              wstrncpy(name,CFG_NAME,MAXELEMS(name));
   \   0000002C   4020A0E3           MOV      R2,#+64
   \   00000030   560F8DE2           ADD      R0,SP,#+344
   \   00000034   530100EF           SWI      +339
   \   00000038   040000EA           B        ??SaveStatus_3
   1540            }
   1541            else
   1542            {
   1543              snwprintf(name,MAXELEMS(name)-1,CFG_NAME_FORMAT,indx);
   \                     ??SaveStatus_2:
   \   0000003C   0430A0E1           MOV      R3,R4
   \   00000040   102081E2           ADD      R2,R1,#+16
   \   00000044   3F10A0E3           MOV      R1,#+63
   \   00000048   560F8DE2           ADD      R0,SP,#+344
   \   0000004C   150100EF           SWI      +277
   1544            }
   1545            if ((f=_fopen(path,name,FSX_O_RDWR|FSX_O_TRUNC,FSX_S_IREAD|FSX_S_IWRITE,0))>=0)
   \                     ??SaveStatus_3:
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   01002DE9           PUSH     {R0}
   \   00000058   603FA0E3           MOV      R3,#+384
   \   0000005C   812FA0E3           MOV      R2,#+516
   \   00000060   571F8DE2           ADD      R1,SP,#+348
   \   00000064   DC008DE2           ADD      R0,SP,#+220
   \   00000068   160100EF           SWI      +278
   \   0000006C   0050B0E1           MOVS     R5,R0
   \   00000070   04D08DE2           ADD      SP,SP,#+4
   \   00000074   1600004A           BMI      ??SaveStatus_1
   1546            {
   1547              unsigned int len = sizeof(TStatusPet) - sizeof(unsigned int);
   1548              Pets[indx].Status.crc = myCrc32((unsigned char *)&Pets[indx].Status, len);
   \   00000078   ........           LDR      R1,??DataTable148  ;; Pets
   \   0000007C   440FA0E3           MOV      R0,#+272
   \   00000080   901424E0           MLA      R4,R0,R4,R1
   \   00000084   D410A0E3           MOV      R1,#+212
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   ........           _BLF     ??myCrc32,??myCrc32??rA
   \   00000090   D40084E5           STR      R0,[R4, #+212]
   1549              encrypt(&out, &Pets[indx].Status, len, Pets[indx].Status.crc);
   \   00000094   0030A0E1           MOV      R3,R0
   \   00000098   D420A0E3           MOV      R2,#+212
   \   0000009C   0410A0E1           MOV      R1,R4
   \   000000A0   0D00A0E1           MOV      R0,SP
   \   000000A4   ........           _BLF     ??encrypt,??encrypt??rA
   1550              out.crc = Pets[indx].Status.crc;
   \   000000A8   D41094E5           LDR      R1,[R4, #+212]
   1551              fwrite(f,&out, sizeof(TStatusPet));
   \   000000AC   D820A0E3           MOV      R2,#+216
   \   000000B0   D4108DE5           STR      R1,[SP, #+212]
   \   000000B4   0D10A0E1           MOV      R1,SP
   \   000000B8   0500A0E1           MOV      R0,R5
   \   000000BC   190100EF           SWI      +281
   1552              fclose(f);
   \   000000C0   0500A0E1           MOV      R0,R5
   \   000000C4   170100EF           SWI      +279
   1553              return 0;
   \   000000C8   0000A0E3           MOV      R0,#+0
   \   000000CC   76DF8DE2           ADD      SP,SP,#+472
   \   000000D0   3080BDE8           POP      {R4,R5,PC}
   1554            }
   1555            return -1;
   \                     ??SaveStatus_1:
   \   000000D4   0000E0E3           MVN      R0,#+0
   \   000000D8   76DF8DE2           ADD      SP,SP,#+472
   \   000000DC   3080BDE8           POP      {R4,R5,PC}       ;; return
   1556          }
   1557          

   \                                 In segment CODE, align 4, keep-with-next
   1558          void InitPetPos(int indx)
   1559          {
   1560            Pets[indx].x = POS_X + 10 * indx;
   \                     ??InitPetPos:
   \   00000000   ........           LDR      R2,??DataTable148  ;; Pets
   \   00000004   10402DE9           PUSH     {R4,LR}
   \   00000008   441FA0E3           MOV      R1,#+272
   \   0000000C   912024E0           MLA      R4,R1,R0,R2
   \   00000010   0A10A0E3           MOV      R1,#+10
   \   00000014   910000E0           MUL      R0,R1,R0
   \   00000018   44109FE5           LDR      R1,??InitPetPos_1  ;; POS_X
   \   0000001C   001091E5           LDR      R1,[R1, #+0]
   \   00000020   011080E0           ADD      R1,R0,R1
   \   00000024   001184E5           STR      R1,[R4, #+256]
   1561            Pets[indx].y = POS_Y + 10 * indx;
   \   00000028   38109FE5           LDR      R1,??InitPetPos_1+0x4  ;; POS_Y
   \   0000002C   001091E5           LDR      R1,[R1, #+0]
   \   00000030   010080E0           ADD      R0,R0,R1
   \   00000034   040184E5           STR      R0,[R4, #+260]
   1562            Pets[indx].dx = (Random() > 128) ? 2 : -2;
   \   00000038   ........           _BLF     ??Random,??Random??rA
   \   0000003C   810050E3           CMP      R0,#+129
   \   00000040   0200A023           MOVCS    R0,#+2
   \   00000044   0100E033           MVNCC    R0,#+1
   \   00000048   080184E5           STR      R0,[R4, #+264]
   1563            Pets[indx].dy = (Random() > 128) ? 3 : -3;
   \   0000004C   ........           _BLF     ??Random,??Random??rA
   \   00000050   810050E3           CMP      R0,#+129
   \   00000054   0300A023           MOVCS    R0,#+3
   \   00000058   0200E033           MVNCC    R0,#+2
   \   0000005C   0C0184E5           STR      R0,[R4, #+268]
   1564          }
   \   00000060   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??InitPetPos_1:
   \   00000064   ........           DC32     POS_X
   \   00000068   ........           DC32     POS_Y
   1565          

   \                                 In segment CODE, align 4, keep-with-next
   1566          void InitPetVar(int indx)
   1567          {
   1568            Pets[indx].Fatigue=0; //усталость
   \                     ??InitPetVar:
   \   00000000   ........           LDR      R1,??DataTable148  ;; Pets
   \   00000004   442FA0E3           MOV      R2,#+272
   \   00000008   921021E0           MLA      R1,R2,R0,R1
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   D82081E5           STR      R2,[R1, #+216]
   1569            Pets[indx].Sleep=0;
   \   00000014   DC2081E5           STR      R2,[R1, #+220]
   1570            Pets[indx].Behaviour=0;
   \   00000018   E02081E5           STR      R2,[R1, #+224]
   1571            Pets[indx].Bathe=0;
   \   0000001C   E42081E5           STR      R2,[R1, #+228]
   1572          
   1573            // дл€ отрисовки смайла и статуса
   1574            Pets[indx].Smile = 0;
   \   00000020   E82081E5           STR      R2,[R1, #+232]
   1575            Pets[indx].StatImg = 0;
   \   00000024   EC2081E5           STR      R2,[R1, #+236]
   1576            Pets[indx].old_img_status  = 99;
   \   00000028   6330A0E3           MOV      R3,#+99
   \   0000002C   F03081E5           STR      R3,[R1, #+240]
   1577            Pets[indx].old_simg_status = 99;
   \   00000030   F43081E5           STR      R3,[R1, #+244]
   1578            Pets[indx].simg_status     = 0;
   \   00000034   F82081E5           STR      R2,[R1, #+248]
   1579            Pets[indx].img_size        = 0;
   \   00000038   FC2081E5           STR      R2,[R1, #+252]
   1580            InitPetPos(indx);
   \   0000003C   ........           B        ??InitPetPos     ;; tailcall
   1581          }
   1582          

   \                                 In segment CODE, align 4, keep-with-next
   1583          void CreateTestFile()
   1584          {
   \                     ??CreateTestFile:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1585            FSTAT _fstat;
   1586            int f;
   1587            if (fstat(TESTPATH,TESTFILE,&_fstat) != -1) return;
   \   00000004   ........           LDR      R4,??DataTable119  ;; `?<Constant L"\\x50\\x65\\x74\\x2e\\x63\\x66\\x67">`
   \   00000008   1CD04DE2           SUB      SP,SP,#+28
   \   0000000C   0D20A0E1           MOV      R2,SP
   \   00000010   501084E2           ADD      R1,R4,#+80
   \   00000014   240084E2           ADD      R0,R4,#+36
   \   00000018   1C0100EF           SWI      +284
   \   0000001C   010070E3           CMN      R0,#+1
   \   00000020   0A00001A           BNE      ??CreateTestFile_1
   1588            if ((f=_fopen(TESTPATH,TESTFILE,FSX_O_RDWR|FSX_O_TRUNC,FSX_S_IREAD|FSX_S_IWRITE,0))>=0) fclose(f);
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   01002DE9           PUSH     {R0}
   \   0000002C   603FA0E3           MOV      R3,#+384
   \   00000030   812FA0E3           MOV      R2,#+516
   \   00000034   501084E2           ADD      R1,R4,#+80
   \   00000038   240084E2           ADD      R0,R4,#+36
   \   0000003C   160100EF           SWI      +278
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   04D08DE2           ADD      SP,SP,#+4
   \   00000048   0000004A           BMI      ??CreateTestFile_1
   \   0000004C   170100EF           SWI      +279
   \                     ??CreateTestFile_1:
   \   00000050   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   00000054   1080BDE8           POP      {R4,PC}          ;; return
   1589          }
   1590          

   \                                 In segment CODE, align 4, keep-with-next
   1591          void LoadAllPets()
   1592          {
   \                     ??LoadAllPets:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   1593            LoadStatus(0);
   1594            if(Pets[0].Status.Count > MAX_PET_COUNT) Pets[0].Status.Count = MAX_PET_COUNT;
   \   00000004   ........           LDR      R4,??DataTable148  ;; Pets
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   ........           BL       ??LoadStatus
   \   00000010   ........           LDR      R0,??DataTable121  ;; MAX_PET_COUNT
   \   00000014   C41094E5           LDR      R1,[R4, #+196]
   \   00000018   000090E5           LDR      R0,[R0, #+0]
   \   0000001C   010050E1           CMP      R0,R1
   1595            if(Pets[0].Status.Age >= PARENT_AGE)
   \   00000020   ........           LDR      R1,??DataTable122  ;; PARENT_AGE
   \   00000024   C4008435           STRCC    R0,[R4, #+196]
   \   00000028   000094E5           LDR      R0,[R4, #+0]
   \   0000002C   001091E5           LDR      R1,[R1, #+0]
   \   00000030   010050E1           CMP      R0,R1
   \   00000034   3080BD38           POPCC    {R4,R5,PC}
   1596            {
   1597              for(int i = 1; i < Pets[0].Status.Count; i++)
   \   00000038   C40094E5           LDR      R0,[R4, #+196]
   \   0000003C   0150A0E3           MOV      R5,#+1
   \   00000040   020050E3           CMP      R0,#+2
   \   00000044   070000AA           BGE      ??LoadAllPets_1
   1598              {
   1599                if(LoadStatus(i))
   1600                {
   1601                  if(i == 1)
   1602                  {
   1603                    InitStatus(i, 0, Pets[0].Status.Sex ^ 1);
   1604                  }
   1605                  else
   1606                  {
   1607                    InitStatus(i, 0, 2);
   1608                  }
   1609                }
   1610                InitPetVar(i);
   1611              }
   1612            }
   1613          }
   \   00000048   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??LoadAllPets_2:
   \   0000004C   0220A0E3           MOV      R2,#+2
   \   00000050   0010A0E3           MOV      R1,#+0
   \   00000054   0500A0E1           MOV      R0,R5
   \                     ??LoadAllPets_3:
   \   00000058   ........           BL       ??InitStatus
   \                     ??LoadAllPets_4:
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   ........           BL       ??InitPetVar
   \   00000064   015085E2           ADD      R5,R5,#+1
   \                     ??LoadAllPets_1:
   \   00000068   C40094E5           LDR      R0,[R4, #+196]
   \   0000006C   000055E1           CMP      R5,R0
   \   00000070   3080BDA8           POPGE    {R4,R5,PC}
   \   00000074   0500A0E1           MOV      R0,R5
   \   00000078   ........           BL       ??LoadStatus
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   F5FFFF0A           BEQ      ??LoadAllPets_4
   \   00000084   010055E3           CMP      R5,#+1
   \   00000088   EFFFFF1A           BNE      ??LoadAllPets_2
   \   0000008C   C00094E5           LDR      R0,[R4, #+192]
   \   00000090   0010A0E3           MOV      R1,#+0
   \   00000094   012020E2           EOR      R2,R0,#0x1
   \   00000098   0100A0E3           MOV      R0,#+1
   \   0000009C   EDFFFFEA           B        ??LoadAllPets_3
   1614          
   1615          // ----------------------------------------------------------------------------

   \                                 In segment CODE, align 4, keep-with-next
   1616          static int MainPageOnCreate(void *, BOOK *bk)
   1617          {
   \                     ??MainPageOnCreate:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   1618            load_icons();
   1619            load_strings();
   1620          
   1621            if(LoadStatus(0))
   \   00000004   ........           LDR      R6,??DataTable148  ;; Pets
   \   00000008   AADF4DE2           SUB      SP,SP,#+680
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   ........           BL       ??load_icons
   \   00000014   ........           BL       ??load_strings
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   ........           BL       ??LoadStatus
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   2000000A           BEQ      ??MainPageOnCreate_1
   1622            {
   1623              InitStatus(0, 0, 2);
   \   00000028   0220A0E3           MOV      R2,#+2
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   ........           BL       ??InitStatus
   1624              if(SaveStatus(0))
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   ........           BL       ??SaveStatus
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   1800000A           BEQ      ??MainPageOnCreate_1
   1625              {
   1626                MessageBox(TextID_Create(Pets[0].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_ERRSTATUS,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   00000048   38039FE5           LDR      R0,??MainPageOnCreate_2  ;; `?<Constant L"\\x45\\x72\\x72\\x6f\\x72\\x20\\x73\\x61\\`
   \   0000004C   FF50A0E3           MOV      R5,#+255
   \   00000050   FF5C85E3           ORR      R5,R5,#0xFF00
   \   00000054   0520A0E1           MOV      R2,R5
   \   00000058   0010A0E3           MOV      R1,#+0
   \   0000005C   5D0100EF           SWI      +349
   \   00000060   0070A0E1           MOV      R7,R0
   \   00000064   0520A0E1           MOV      R2,R5
   \   00000068   0010A0E3           MOV      R1,#+0
   \   0000006C   400086E2           ADD      R0,R6,#+64
   \   00000070   5D0100EF           SWI      +349
   \   00000074   0010A0E3           MOV      R1,#+0
   \   00000078   02002DE9           PUSH     {R1}
   \   0000007C   ........           LDR      R1,??DataTable171  ;; msgShowTime
   \   00000080   8820A0E3           MOV      R2,#+136
   \   00000084   001091E5           LDR      R1,[R1, #+0]
   \   00000088   4C2D82E3           ORR      R2,R2,#0x1300
   \   0000008C   920101E0           MUL      R1,R2,R1
   \   00000090   0130A0E3           MOV      R3,#+1
   \   00000094   02002DE9           PUSH     {R1}
   \   00000098   0520A0E1           MOV      R2,R5
   \   0000009C   0710A0E1           MOV      R1,R7
   \   000000A0   570200EF           SWI      +599
   \   000000A4   08D08DE2           ADD      SP,SP,#+8
   1627              }
   1628            }
   1629            InitPetVar(0);
   \   000000A8   0000A0E3           MOV      R0,#+0
   \                     ??MainPageOnCreate_1:
   \   000000AC   ........           BL       ??InitPetVar
   1630          
   1631            //≈сли достигли возраста родител€, то пробуем загрузить остальных
   1632            LoadAllPets();
   \   000000B0   ........           BL       ??LoadAllPets
   1633            CreateTestFile();
   \   000000B4   ........           BL       ??CreateTestFile
   1634          
   1635            if(Pets[0].Status.Count > 1)
   \   000000B8   C40096E5           LDR      R0,[R6, #+196]
   \   000000BC   0070A0E3           MOV      R7,#+0
   \   000000C0   020050E3           CMP      R0,#+2
   \   000000C4   050000BA           BLT      ??MainPageOnCreate_3
   1636            {
   1637              Pets[0].Status.needFriend = 0;
   \   000000C8   CC7086E5           STR      R7,[R6, #+204]
   1638              Pets[0].Status.haveFriend = 1;
   \   000000CC   0100A0E3           MOV      R0,#+1
   \   000000D0   D00086E5           STR      R0,[R6, #+208]
   1639              Pets[1].Status.needFriend = 0;
   \   000000D4   DC7186E5           STR      R7,[R6, #+476]
   1640              Pets[1].Status.haveFriend = 1;
   \   000000D8   E00186E5           STR      R0,[R6, #+480]
   \   000000DC   000000EA           B        ??MainPageOnCreate_4
   1641            }
   1642            else
   1643              Pets[0].Status.haveFriend = 0;
   \                     ??MainPageOnCreate_3:
   \   000000E0   D07086E5           STR      R7,[R6, #+208]
   1644          
   1645            FSTAT _fstat;
   1646            int f, sz;
   1647            wchar_t path[256];
   1648            wchar_t name[64];
   1649          
   1650            //«агрузка списка игр
   1651            extractdir(path, name, GAMELIST_PATH);
   1652            game_list[0] = 0;
   \                     ??MainPageOnCreate_4:
   \   000000E4   ........           LDR      R5,??DataTable159  ;; timer_save
   \   000000E8   9C229FE5           LDR      R2,??MainPageOnCreate_2+0x4  ;; GAMELIST_PATH
   \   000000EC   831F8DE2           ADD      R1,SP,#+524
   \   000000F0   0C008DE2           ADD      R0,SP,#+12
   \   000000F4   ........           _BLF     ??extractdir,??extractdir??rA
   \   000000F8   5070C5E5           STRB     R7,[R5, #+80]
   1653            if(fstat(path,name,&_fstat)!= -1)
   \   000000FC   FF80A0E3           MOV      R8,#+255
   \   00000100   C08F88E3           ORR      R8,R8,#0x300
   \   00000104   0790E0E1           MVN      R9,R7
   \   00000108   A32F8DE2           ADD      R2,SP,#+652
   \   0000010C   831F8DE2           ADD      R1,SP,#+524
   \   00000110   0C008DE2           ADD      R0,SP,#+12
   \   00000114   1C0100EF           SWI      +284
   \   00000118   090050E1           CMP      R0,R9
   \   0000011C   1200000A           BEQ      ??MainPageOnCreate_5
   1654            {
   1655              if ((f=_fopen(path,name,FSX_O_RDONLY,FSX_S_IREAD|FSX_S_IWRITE,0))>=0)
   \   00000120   0000A0E3           MOV      R0,#+0
   \   00000124   01002DE9           PUSH     {R0}
   \   00000128   603FA0E3           MOV      R3,#+384
   \   0000012C   0120A0E3           MOV      R2,#+1
   \   00000130   841F8DE2           ADD      R1,SP,#+528
   \   00000134   10008DE2           ADD      R0,SP,#+16
   \   00000138   160100EF           SWI      +278
   \   0000013C   00A0B0E1           MOVS     R10,R0
   \   00000140   04D08DE2           ADD      SP,SP,#+4
   \   00000144   0800004A           BMI      ??MainPageOnCreate_5
   1656              {
   1657                sz = fread(f,game_list, GAME_PLAYER_LIST_LEN - 1);
   \   00000148   0820A0E1           MOV      R2,R8
   \   0000014C   501085E2           ADD      R1,R5,#+80
   \   00000150   180100EF           SWI      +280
   \   00000154   00B0A0E1           MOV      R11,R0
   1658                fclose(f);
   \   00000158   0A00A0E1           MOV      R0,R10
   \   0000015C   170100EF           SWI      +279
   1659                if(sz >= 0) game_list[sz] = 0;
   \   00000160   00005BE3           CMP      R11,#+0
   \   00000164   05008B50           ADDPL    R0,R11,R5
   \   00000168   5070C055           STRBPL   R7,[R0, #+80]
   1660              }
   1661            }
   1662          
   1663            //«агрузка списка плейеров
   1664            extractdir(path, name, PLAYERLIST_PATH);
   \                     ??MainPageOnCreate_5:
   \   0000016C   1C229FE5           LDR      R2,??MainPageOnCreate_2+0x8  ;; PLAYERLIST_PATH
   \   00000170   831F8DE2           ADD      R1,SP,#+524
   \   00000174   0C008DE2           ADD      R0,SP,#+12
   \   00000178   ........           _BLF     ??extractdir,??extractdir??rA
   1665            player_list[0] = 0;
   \   0000017C   45BEA0E3           MOV      R11,#+1104
   \   00000180   0570CBE7           STRB     R7,[R11, +R5]
   1666            if(fstat(path,name,&_fstat)!= -1)
   \   00000184   A32F8DE2           ADD      R2,SP,#+652
   \   00000188   831F8DE2           ADD      R1,SP,#+524
   \   0000018C   0C008DE2           ADD      R0,SP,#+12
   \   00000190   1C0100EF           SWI      +284
   \   00000194   090050E1           CMP      R0,R9
   \   00000198   1200000A           BEQ      ??MainPageOnCreate_6
   1667            {
   1668              if ((f=_fopen(path,name,FSX_O_RDONLY,FSX_S_IREAD|FSX_S_IWRITE,0))>=0)
   \   0000019C   0000A0E3           MOV      R0,#+0
   \   000001A0   01002DE9           PUSH     {R0}
   \   000001A4   603FA0E3           MOV      R3,#+384
   \   000001A8   0120A0E3           MOV      R2,#+1
   \   000001AC   841F8DE2           ADD      R1,SP,#+528
   \   000001B0   10008DE2           ADD      R0,SP,#+16
   \   000001B4   160100EF           SWI      +278
   \   000001B8   00A0B0E1           MOVS     R10,R0
   \   000001BC   04D08DE2           ADD      SP,SP,#+4
   \   000001C0   0800004A           BMI      ??MainPageOnCreate_6
   1669              {
   1670                sz = fread(f,player_list, GAME_PLAYER_LIST_LEN - 1);
   \   000001C4   0820A0E1           MOV      R2,R8
   \   000001C8   05108BE0           ADD      R1,R11,R5
   \   000001CC   180100EF           SWI      +280
   \   000001D0   00B0A0E1           MOV      R11,R0
   1671                fclose(f);
   \   000001D4   0A00A0E1           MOV      R0,R10
   \   000001D8   170100EF           SWI      +279
   1672                if(sz >= 0) player_list[sz] = 0;
   \   000001DC   00005BE3           CMP      R11,#+0
   \   000001E0   05008B50           ADDPL    R0,R11,R5
   \   000001E4   5074C055           STRBPL   R7,[R0, #+1104]
   1673              }
   1674            }
   1675          
   1676            UpdateName();
   \                     ??MainPageOnCreate_6:
   \   000001E8   ........           BL       ??UpdateName
   1677            int snd = (!GetSilent() || sndOnSilent) && sndEnable && (!isNight());
   \   000001EC   4B0200EF           SWI      +587
   \   000001F0   000050E3           CMP      R0,#+0
   \   000001F4   0300000A           BEQ      ??MainPageOnCreate_7
   \   000001F8   ........           LDR      R0,??DataTable146  ;; sndOnSilent
   \   000001FC   000090E5           LDR      R0,[R0, #+0]
   \   00000200   000050E3           CMP      R0,#+0
   \   00000204   0600000A           BEQ      ??MainPageOnCreate_8
   \                     ??MainPageOnCreate_7:
   \   00000208   ........           LDR      R0,??DataTable147  ;; sndEnable
   \   0000020C   000090E5           LDR      R0,[R0, #+0]
   \   00000210   000050E3           CMP      R0,#+0
   \   00000214   0200000A           BEQ      ??MainPageOnCreate_8
   \   00000218   ........           BL       ??isNight
   \   0000021C   000050E3           CMP      R0,#+0
   \   00000220   0170A003           MOVEQ    R7,#+1
   1678            for(int i=0; i<Pets[0].Status.Count; i++) ChangeStatusImage(i, bk, snd);
   \                     ??MainPageOnCreate_8:
   \   00000224   C40096E5           LDR      R0,[R6, #+196]
   \   00000228   0080A0E3           MOV      R8,#+0
   \   0000022C   010050E3           CMP      R0,#+1
   \   00000230   050000AA           BGE      ??MainPageOnCreate_9
   \   00000234   070000EA           B        ??MainPageOnCreate_10
   \                     ??MainPageOnCreate_11:
   \   00000238   0720A0E1           MOV      R2,R7
   \   0000023C   0410A0E1           MOV      R1,R4
   \   00000240   0800A0E1           MOV      R0,R8
   \   00000244   ........           BL       ??ChangeStatusImage
   \   00000248   018088E2           ADD      R8,R8,#+1
   \                     ??MainPageOnCreate_9:
   \   0000024C   C40096E5           LDR      R0,[R6, #+196]
   \   00000250   000058E1           CMP      R8,R0
   \   00000254   F7FFFFBA           BLT      ??MainPageOnCreate_11
   1679          
   1680            if(!GUI_status)
   \                     ??MainPageOnCreate_10:
   \   00000258   100095E5           LDR      R0,[R5, #+16]
   \   0000025C   000050E3           CMP      R0,#+0
   \   00000260   0B00001A           BNE      ??MainPageOnCreate_12
   1681            {
   1682              GUI_status = StatusRow_p();
   \   00000264   F28100EF           SWI      +33266
   \   00000268   100085E5           STR      R0,[R5, #+16]
   1683              Status_desc = DispObject_GetDESC (* GUI_status);
   \   0000026C   000090E5           LDR      R0,[R0, #+0]
   \   00000270   1F0200EF           SWI      +543
   \   00000274   140085E5           STR      R0,[R5, #+20]
   1684              Status_oldReDraw = DispObject_GetOnRedraw (* GUI_status);
   \   00000278   100095E5           LDR      R0,[R5, #+16]
   \   0000027C   000090E5           LDR      R0,[R0, #+0]
   \   00000280   290200EF           SWI      +553
   1685              DISP_DESC_SetOnRedraw (Status_desc, (DISP_OBJ_ONREDRAW_METHOD)Status_ReDraw);
   \   00000284   ........           LDR      R1,??DataTable141  ;; ??Status_ReDraw
   \   00000288   0C0085E5           STR      R0,[R5, #+12]
   \   0000028C   140095E5           LDR      R0,[R5, #+20]
   \   00000290   280200EF           SWI      +552
   1686            }
   1687            if(!GUI_soft)
   \                     ??MainPageOnCreate_12:
   \   00000294   280095E5           LDR      R0,[R5, #+40]
   \   00000298   000050E3           CMP      R0,#+0
   \   0000029C   0900001A           BNE      ??MainPageOnCreate_13
   1688            {
   1689              GUI_soft = DispObject_SoftKeys_Get();
   \   000002A0   A30200EF           SWI      +675
   \   000002A4   280085E5           STR      R0,[R5, #+40]
   1690              Soft_desc = DispObject_GetDESC (GUI_soft);
   \   000002A8   1F0200EF           SWI      +543
   \   000002AC   2C0085E5           STR      R0,[R5, #+44]
   1691              Soft_oldReDraw = DispObject_GetOnRedraw(GUI_soft);
   \   000002B0   280095E5           LDR      R0,[R5, #+40]
   \   000002B4   290200EF           SWI      +553
   1692              DISP_DESC_SetOnRedraw(Soft_desc, (DISP_OBJ_ONREDRAW_METHOD)Soft_ReDraw);
   \   000002B8   ........           LDR      R1,??DataTable143  ;; ??Soft_ReDraw
   \   000002BC   240085E5           STR      R0,[R5, #+36]
   \   000002C0   2C0095E5           LDR      R0,[R5, #+44]
   \   000002C4   280200EF           SWI      +552
   1693            }
   1694            if(!GUI_display)
   \                     ??MainPageOnCreate_13:
   \   000002C8   1C0095E5           LDR      R0,[R5, #+28]
   \   000002CC   000050E3           CMP      R0,#+0
   \   000002D0   0A00001A           BNE      ??MainPageOnCreate_14
   1695            {
   1696              GUI_display = GUIObject_GetDispObject( SBY_GetStatusIndication(Find_StandbyBook()) );
   \   000002D4   310100EF           SWI      +305
   \   000002D8   180200EF           SWI      +536
   \   000002DC   680100EF           SWI      +360
   \   000002E0   1C0085E5           STR      R0,[R5, #+28]
   1697              Display_oldReDraw = DispObject_GetOnRedraw(GUI_display);
   \   000002E4   290200EF           SWI      +553
   \   000002E8   180085E5           STR      R0,[R5, #+24]
   1698              Display_desc = DispObject_GetDESC (GUI_display);
   \   000002EC   1C0095E5           LDR      R0,[R5, #+28]
   \   000002F0   1F0200EF           SWI      +543
   1699              DISP_DESC_SetOnRedraw(Display_desc, Display_ReDraw);
   \   000002F4   ........           LDR      R1,??DataTable142  ;; ??Display_ReDraw
   \   000002F8   200085E5           STR      R0,[R5, #+32]
   \   000002FC   280200EF           SWI      +552
   1700            }
   1701          
   1702            //запуск жизненного цикла
   1703            Timer_ReSet(&timer_life,TMR_SECOND,onTimer_life,(LPARAM)bk);
   \                     ??MainPageOnCreate_14:
   \   00000300   0410A0E1           MOV      R1,R4
   1704            Timer_ReSet(&timer_save,TMR_SECOND*60*5,onTimer_save,0);
   1705            Timer_ReSet(&timer_refresh,REFRESH*TMR_SECOND/10,onTimer_refresh,0);
   \   00000304   ........           LDR      R4,??DataTable131  ;; 0xffffffffcccccccd
   \   00000308   0D00A0E1           MOV      R0,SP
   \   0000030C   ........           _BLF     ??LPARAM_1,??LPARAM??rA_1
   \   00000310   00309DE5           LDR      R3,[SP, #+0]
   \   00000314   ........           LDR      R2,??DataTable132  ;; ??onTimer_life
   \   00000318   FA1FA0E3           MOV      R1,#+1000
   \   0000031C   040085E2           ADD      R0,R5,#+4
   \   00000320   280100EF           SWI      +296
   \   00000324   0010A0E3           MOV      R1,#+0
   \   00000328   04008DE2           ADD      R0,SP,#+4
   \   0000032C   ........           _BLF     ??LPARAM,??LPARAM??rA
   \   00000330   04309DE5           LDR      R3,[SP, #+4]
   \   00000334   ........           LDR      R2,??DataTable133  ;; ??onTimer_save
   \   00000338   491AA0E3           MOV      R1,#+299008
   \   0000033C   F81F81E3           ORR      R1,R1,#0x3E0
   \   00000340   0500A0E1           MOV      R0,R5
   \   00000344   280100EF           SWI      +296
   \   00000348   0010A0E3           MOV      R1,#+0
   \   0000034C   08008DE2           ADD      R0,SP,#+8
   \   00000350   ........           _BLF     ??LPARAM,??LPARAM??rA
   \   00000354   ........           LDR      R0,??DataTable134  ;; REFRESH
   \   00000358   08309DE5           LDR      R3,[SP, #+8]
   \   0000035C   000090E5           LDR      R0,[R0, #+0]
   \   00000360   ........           LDR      R2,??DataTable135  ;; ??onTimer_refresh
   \   00000364   FA1FA0E3           MOV      R1,#+1000
   \   00000368   910000E0           MUL      R0,R1,R0
   \   0000036C   946081E0           UMULL    R6,R1,R4,R0
   \   00000370   020085E2           ADD      R0,R5,#+2
   \   00000374   A111A0E1           LSR      R1,R1,#+3
   \   00000378   280100EF           SWI      +296
   1706          
   1707            return 1;
   \   0000037C   0100A0E3           MOV      R0,#+1
   \   00000380   AADF8DE2           ADD      SP,SP,#+680
   \   00000384   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??MainPageOnCreate_2:
   \   00000388   ........           DC32     `?<Constant L"\\x45\\x72\\x72\\x6f\\x72\\x20\\x73\\x61\\`
   \   0000038C   ........           DC32     GAMELIST_PATH
   \   00000390   ........           DC32     PLAYERLIST_PATH
   1708          }
   1709          

   \                                 In segment DYN_PAGE, align 4, align-sorted
   1710          const PAGE_MSG Tamagochi_MainPageEvents[]@ "DYN_PAGE" ={
   \                     Tamagochi_MainPageEvents:
   \   00000000   42000000....       DC32 66, ??MainPageOnCreate, 64, 0H
   \              ....40000000
   \              00000000    
   1711            PAGE_ENTER_EVENT_TAG, MainPageOnCreate,
   1712            NIL_EVENT_TAG,        NULL
   1713          };
   1714          
   1715          PAGE_DESC main_page ={"Tamagochi_MainPage",0,Tamagochi_MainPageEvents};
   1716          

   \                                 In segment CODE, align 4, keep-with-next
   1717          void Send_REDRAW_RELEASE()
   1718          {
   \                     ??Send_REDRAW_RELEASE:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1719            REDRAW_RELEASE_MESSAGE * sbm = new REDRAW_RELEASE_MESSAGE;
   \   00000004   1800A0E3           MOV      R0,#+24
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   0040A0E1           MOV      R4,R0
   1720          
   1721            // Status
   1722            sbm->SI_OldOnRedraw = Status_oldReDraw;
   \   00000010   ........           LDR      R0,??DataTable140  ;; timer_save
   \   00000014   0C1090E5           LDR      R1,[R0, #+12]
   \   00000018   081084E5           STR      R1,[R4, #+8]
   1723            sbm->SI_NewOnRedraw = Status_ReDraw;
   \   0000001C   ........           LDR      R1,??DataTable141  ;; ??Status_ReDraw
   \   00000020   0C1084E5           STR      R1,[R4, #+12]
   1724            // Screen
   1725            sbm->SB_OldOnRedraw = Display_oldReDraw;
   \   00000024   181090E5           LDR      R1,[R0, #+24]
   \   00000028   001084E5           STR      R1,[R4, #+0]
   1726            sbm->SB_NewOnRedraw = Display_ReDraw;
   \   0000002C   ........           LDR      R1,??DataTable142  ;; ??Display_ReDraw
   \   00000030   041084E5           STR      R1,[R4, #+4]
   1727            // Soft
   1728            sbm->SK_OldOnRedraw = Soft_oldReDraw;
   \   00000034   240090E5           LDR      R0,[R0, #+36]
   \   00000038   100084E5           STR      R0,[R4, #+16]
   1729            sbm->SK_NewOnRedraw = Soft_ReDraw;
   \   0000003C   ........           LDR      R0,??DataTable143  ;; ??Soft_ReDraw
   \   00000040   140084E5           STR      R0,[R4, #+20]
   1730          
   1731            // посылаем всем  мессагу со старыми и своими методами Redraw
   1732            UI_Event_wData(SBY_REDRAW_RELEASE_EVENT, sbm, (void (*)(void*))mfree_adr());
   \   00000044   048100EF           SWI      +33028
   \   00000048   0020A0E1           MOV      R2,R0
   \   0000004C   0410A0E1           MOV      R1,R4
   \   00000050   E300A0E3           MOV      R0,#+227
   \   00000054   C00F80E3           ORR      R0,R0,#0x300
   \   00000058   A90100EF           SWI      +425
   1733          }
   \   0000005C   1080BDE8           POP      {R4,PC}          ;; return
   1734          

   \                                 In segment CODE, align 4, keep-with-next
   1735          int SB_ELF_Killed(void *mess, BOOK* book)
   1736          {
   \                     ??SB_ELF_Killed:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   1737            // если был убит эльф рисующий на √Ё или просто нужно перетосовать методы
   1738            REDRAW_RELEASE_MESSAGE * sbm =(REDRAW_RELEASE_MESSAGE*)mess;
   1739            REDRAW_RELEASE_MESSAGE * ms = 0;
   1740          
   1741            //ѕроверим статус
   1742            //его ли метод мы используем в качестве oldRedraw?
   1743            if (sbm->SI_NewOnRedraw == Status_oldReDraw)
   \   00000004   ........           LDR      R7,??DataTable140  ;; timer_save
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0C0096E5           LDR      R0,[R6, #+12]
   \   00000010   0C1097E5           LDR      R1,[R7, #+12]
   \   00000014   0050A0E3           MOV      R5,#+0
   \   00000018   0540E0E1           MVN      R4,R5
   \   0000001C   010050E1           CMP      R0,R1
   \   00000020   1000001A           BNE      ??SB_ELF_Killed_1
   1744            {
   1745              ms = new REDRAW_RELEASE_MESSAGE;
   1746              memcpy(ms, sbm, sizeof(REDRAW_RELEASE_MESSAGE));
   1747          
   1748              // если он был убит, то замен€ем свой oldRedraw на его..
   1749              if (sbm->SI_OldOnRedraw!=EMPTY_REDRAW_METHOD) Status_oldReDraw = sbm->SI_OldOnRedraw;
   1750          
   1751              // ставим свой метод наверх
   1752              DISP_DESC_SetOnRedraw(DispObject_GetDESC(*GUI_status), Status_ReDraw);
   \   00000024   ........           LDR      R8,??DataTable141  ;; ??Status_ReDraw
   \   00000028   1800A0E3           MOV      R0,#+24
   \   0000002C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000030   0050A0E1           MOV      R5,R0
   \   00000034   1820A0E3           MOV      R2,#+24
   \   00000038   0610A0E1           MOV      R1,R6
   \   0000003C   130100EF           SWI      +275
   \   00000040   080096E5           LDR      R0,[R6, #+8]
   \   00000044   040050E1           CMP      R0,R4
   \   00000048   0C008715           STRNE    R0,[R7, #+12]
   \   0000004C   100097E5           LDR      R0,[R7, #+16]
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   1F0200EF           SWI      +543
   \   00000058   0810A0E1           MOV      R1,R8
   \   0000005C   280200EF           SWI      +552
   1753          
   1754              // и шлЄм мессагу снова, чтоб следующие ельфы сделали тоже самое
   1755              ms->SI_OldOnRedraw = EMPTY_REDRAW_METHOD;
   \   00000060   084085E5           STR      R4,[R5, #+8]
   1756              ms->SI_NewOnRedraw = Status_ReDraw;
   \   00000064   0C8085E5           STR      R8,[R5, #+12]
   1757            }
   1758          
   1759            //ѕроверим главный экран
   1760            //его ли метод мы используем в качестве oldRedraw?
   1761            if (sbm->SB_NewOnRedraw == Display_oldReDraw)
   \                     ??SB_ELF_Killed_1:
   \   00000068   040096E5           LDR      R0,[R6, #+4]
   \   0000006C   181097E5           LDR      R1,[R7, #+24]
   \   00000070   010050E1           CMP      R0,R1
   \   00000074   1100001A           BNE      ??SB_ELF_Killed_2
   1762            {
   1763              if(!ms)
   \   00000078   000055E3           CMP      R5,#+0
   \   0000007C   0500001A           BNE      ??SB_ELF_Killed_3
   1764              {
   1765                ms = new REDRAW_RELEASE_MESSAGE;
   \   00000080   1800A0E3           MOV      R0,#+24
   \   00000084   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000088   0050A0E1           MOV      R5,R0
   1766                memcpy(ms, sbm, sizeof(REDRAW_RELEASE_MESSAGE));
   \   0000008C   1820A0E3           MOV      R2,#+24
   \   00000090   0610A0E1           MOV      R1,R6
   \   00000094   130100EF           SWI      +275
   1767              }
   1768          
   1769              // если он был убит, то замен€ем свой oldRedraw на его..
   1770              if (sbm->SB_OldOnRedraw!=EMPTY_REDRAW_METHOD) Display_oldReDraw = sbm->SB_OldOnRedraw;
   \                     ??SB_ELF_Killed_3:
   \   00000098   000096E5           LDR      R0,[R6, #+0]
   1771          
   1772              // ставим сdой метод наверх
   1773              DISP_DESC_SetOnRedraw(DispObject_GetDESC(GUI_display), Display_ReDraw);
   \   0000009C   ........           LDR      R8,??DataTable142  ;; ??Display_ReDraw
   \   000000A0   040050E1           CMP      R0,R4
   \   000000A4   18008715           STRNE    R0,[R7, #+24]
   \   000000A8   1C0097E5           LDR      R0,[R7, #+28]
   \   000000AC   1F0200EF           SWI      +543
   \   000000B0   0810A0E1           MOV      R1,R8
   \   000000B4   280200EF           SWI      +552
   1774          
   1775              // и шлЄм мессагу снова, чтоб следующие ельфы сделали тоже самое
   1776              ms->SB_OldOnRedraw = EMPTY_REDRAW_METHOD;
   \   000000B8   004085E5           STR      R4,[R5, #+0]
   1777              ms->SB_NewOnRedraw = Display_ReDraw;
   \   000000BC   048085E5           STR      R8,[R5, #+4]
   1778            }
   1779          
   1780            //ѕроверим софт
   1781            //его ли метод мы используем в качестве oldRedraw?
   1782            if (sbm->SK_NewOnRedraw == Soft_oldReDraw)
   \                     ??SB_ELF_Killed_2:
   \   000000C0   140096E5           LDR      R0,[R6, #+20]
   \   000000C4   241097E5           LDR      R1,[R7, #+36]
   \   000000C8   010050E1           CMP      R0,R1
   \   000000CC   1100001A           BNE      ??SB_ELF_Killed_4
   1783            {
   1784              if(!ms)
   \   000000D0   000055E3           CMP      R5,#+0
   \   000000D4   0500001A           BNE      ??SB_ELF_Killed_5
   1785              {
   1786                ms = new REDRAW_RELEASE_MESSAGE;
   \   000000D8   1800A0E3           MOV      R0,#+24
   \   000000DC   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000E0   0050A0E1           MOV      R5,R0
   1787                memcpy(ms, sbm, sizeof(REDRAW_RELEASE_MESSAGE));
   \   000000E4   1820A0E3           MOV      R2,#+24
   \   000000E8   0610A0E1           MOV      R1,R6
   \   000000EC   130100EF           SWI      +275
   1788              }
   1789          
   1790              // если он был убит, то замен€ем свой oldRedraw на его..
   1791              if (sbm->SK_OldOnRedraw!=EMPTY_REDRAW_METHOD) Soft_oldReDraw = sbm->SK_OldOnRedraw;
   \                     ??SB_ELF_Killed_5:
   \   000000F0   100096E5           LDR      R0,[R6, #+16]
   1792          
   1793              // ставим сdой метод наверх
   1794              DISP_DESC_SetOnRedraw(DispObject_GetDESC(GUI_soft), Soft_ReDraw);
   \   000000F4   ........           LDR      R6,??DataTable143  ;; ??Soft_ReDraw
   \   000000F8   040050E1           CMP      R0,R4
   \   000000FC   24008715           STRNE    R0,[R7, #+36]
   \   00000100   280097E5           LDR      R0,[R7, #+40]
   \   00000104   1F0200EF           SWI      +543
   \   00000108   0610A0E1           MOV      R1,R6
   \   0000010C   280200EF           SWI      +552
   1795          
   1796              // и шлЄм мессагу снова, чтоб следующие ельфы сделали тоже самое
   1797              ms->SK_OldOnRedraw = EMPTY_REDRAW_METHOD;
   \   00000110   104085E5           STR      R4,[R5, #+16]
   1798              ms->SK_NewOnRedraw = Soft_ReDraw;
   \   00000114   146085E5           STR      R6,[R5, #+20]
   1799            }
   1800            if(ms)
   \                     ??SB_ELF_Killed_4:
   \   00000118   000055E3           CMP      R5,#+0
   \   0000011C   0800000A           BEQ      ??SB_ELF_Killed_6
   1801            {
   1802              UI_Event_wData(SBY_REDRAW_RELEASE_EVENT ,ms,(void (*)(void*))mfree_adr());
   \   00000120   048100EF           SWI      +33028
   \   00000124   0020A0E1           MOV      R2,R0
   \   00000128   0510A0E1           MOV      R1,R5
   \   0000012C   E300A0E3           MOV      R0,#+227
   \   00000130   C00F80E3           ORR      R0,R0,#0x300
   \   00000134   A90100EF           SWI      +425
   1803              return(BLOCK_EVENT_GLOBALLY);
   \   00000138   9A00A0E3           MOV      R0,#+154
   \   0000013C   800F80E3           ORR      R0,R0,#0x200
   \   00000140   F081BDE8           POP      {R4-R8,PC}
   1804            }
   1805            return(0);
   \                     ??SB_ELF_Killed_6:
   \   00000144   0000A0E3           MOV      R0,#+0
   \   00000148   F081BDE8           POP      {R4-R8,PC}       ;; return
   1806          }
   1807          

   \                                 In segment CODE, align 4, keep-with-next
   1808          int TerminateElf(void *, BOOK* book)
   1809          {
   \                     ??TerminateElf:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
   1810            Send_REDRAW_RELEASE();
   \   0000000C   ........           BL       ??Send_REDRAW_RELEASE
   1811            FreeBook(book);
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   2F0100EF           SWI      +303
   1812            ModifyKeyHook(NewKey,KEY_HOOK_REMOVE,NULL);
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           _BLF     ??LPARAM,??LPARAM??rA
   \   00000024   00209DE5           LDR      R2,[SP, #+0]
   \   00000028   ........           LDR      R0,??DataTable170  ;; ??NewKey
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   070100EF           SWI      +263
   1813            return(1);
   \   00000034   0100A0E3           MOV      R0,#+1
   \   00000038   1280BDE8           POP      {R1,R4,PC}       ;; return
   1814          }
   1815          

   \                                 In segment CODE, align 4, keep-with-next
   1816          int ShowAuthorInfo(void *mess ,BOOK* book)
   1817          {
   \                     ??ShowAuthorInfo:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   1818            MSG * msg = (MSG*)mess;
   1819          #if (!defined(LANG_RU) && !defined(LANG_EN))
   1820            MessageBox(EMPTY_TEXTID,TextID_Create( LELFNAME _T("\n") LELFVERSION _T("\n") LAUTHORINFO _T("\n") LTRANSLATED TRANSLATED_BY,0,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, msg->book);
   1821          #else
   1822            MessageBox(EMPTY_TEXTID,TextID_Create( LELFNAME _T("\n") LELFVERSION _T("\n") LAUTHORINFO,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, msg->book);
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   3C009FE5           LDR      R0,??ShowAuthorInfo_1  ;; `?<Constant L"\\x54\\x61\\x6d\\x61\\x67\\x6f\\x63\\x68\\_3`
   \   00000010   FF50A0E3           MOV      R5,#+255
   \   00000014   FF5C85E3           ORR      R5,R5,#0xFF00
   \   00000018   0520A0E1           MOV      R2,R5
   \   0000001C   5D0100EF           SWI      +349
   \   00000020   001094E5           LDR      R1,[R4, #+0]
   \   00000024   0130A0E3           MOV      R3,#+1
   \   00000028   02002DE9           PUSH     {R1}
   \   0000002C   0520A0E1           MOV      R2,R5
   \   00000030   8810A0E3           MOV      R1,#+136
   \   00000034   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000038   02002DE9           PUSH     {R1}
   \   0000003C   0010A0E1           MOV      R1,R0
   \   00000040   9004E0E3           MVN      R0,#-1879048192
   \   00000044   570200EF           SWI      +599
   1823          #endif
   1824            return(1);
   \   00000048   0100A0E3           MOV      R0,#+1
   \   0000004C   3680BDE8           POP      {R1,R2,R4,R5,PC}  ;; return
   \                     ??ShowAuthorInfo_1:
   \   00000050   ........           DC32     `?<Constant L"\\x54\\x61\\x6d\\x61\\x67\\x6f\\x63\\x68\\_3`
   1825          }
   1826          

   \                                 In segment CODE, align 4, keep-with-next
   1827          static int onReconfigElf(void *mess , BOOK *book)
   1828          {
   \                     ??onReconfigElf:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   1829            RECONFIG_EVENT_DATA *reconf=(RECONFIG_EVENT_DATA *)mess;
   1830            int result=0;
   1831            if (wstrcmpi(reconf->path,successed_config_path)==0 && wstrcmpi(reconf->name,successed_config_name)==0)
   \   00000008   44019FE5           LDR      R0,??onReconfigElf_1  ;; successed_config_path
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0060A0E3           MOV      R6,#+0
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   9F0200EF           SWI      +671
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   4800001A           BNE      ??onReconfigElf_2
   \   00000028   28019FE5           LDR      R0,??onReconfigElf_1+0x4  ;; successed_config_name
   \   0000002C   001090E5           LDR      R1,[R0, #+0]
   \   00000030   800085E2           ADD      R0,R5,#+128
   \   00000034   9F0200EF           SWI      +671
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   4200001A           BNE      ??onReconfigElf_2
   1832            {
   1833              MessageBox(EMPTY_TEXTID, TextID_Create(LG_UPDSETTING,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   00000040   14019FE5           LDR      R0,??onReconfigElf_1+0x8  ;; `?<Constant L"\\x54\\x61\\x6d\\x61\\x67\\x6f\\x63\\x68\\_4`
   \   00000044   FF50A0E3           MOV      R5,#+255
   \   00000048   FF5C85E3           ORR      R5,R5,#0xFF00
   \   0000004C   0520A0E1           MOV      R2,R5
   \   00000050   0010A0E3           MOV      R1,#+0
   \   00000054   5D0100EF           SWI      +349
   \   00000058   0610A0E1           MOV      R1,R6
   \   0000005C   02002DE9           PUSH     {R1}
   \   00000060   ........           LDR      R1,??DataTable171  ;; msgShowTime
   \   00000064   8820A0E3           MOV      R2,#+136
   \   00000068   001091E5           LDR      R1,[R1, #+0]
   \   0000006C   4C2D82E3           ORR      R2,R2,#0x1300
   \   00000070   920101E0           MUL      R1,R2,R1
   \   00000074   0130A0E3           MOV      R3,#+1
   \   00000078   02002DE9           PUSH     {R1}
   \   0000007C   0520A0E1           MOV      R2,R5
   \   00000080   0010A0E1           MOV      R1,R0
   \   00000084   9004E0E3           MVN      R0,#-1879048192
   \   00000088   570200EF           SWI      +599
   1834              InitConfig();
   \   0000008C   ........           _BLF     ??InitConfig,??InitConfig??rA
   1835              load_icons();
   \   00000090   ........           BL       ??load_icons
   1836              load_strings();
   \   00000094   ........           BL       ??load_strings
   1837              set_all_old_img_status(99);
   \   00000098   6300A0E3           MOV      R0,#+99
   \   0000009C   ........           BL       ??set_all_old_img_status
   1838              int snd = (!GetSilent() || sndOnSilent) && sndEnable;
   \   000000A0   4B0200EF           SWI      +587
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   08D08DE2           ADD      SP,SP,#+8
   \   000000AC   0300000A           BEQ      ??onReconfigElf_3
   \   000000B0   ........           LDR      R0,??DataTable146  ;; sndOnSilent
   \   000000B4   000090E5           LDR      R0,[R0, #+0]
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   0400000A           BEQ      ??onReconfigElf_4
   \                     ??onReconfigElf_3:
   \   000000C0   ........           LDR      R0,??DataTable147  ;; sndEnable
   \   000000C4   000090E5           LDR      R0,[R0, #+0]
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   0150A013           MOVNE    R5,#+1
   \   000000D0   0000001A           BNE      ??onReconfigElf_5
   \                     ??onReconfigElf_4:
   \   000000D4   0050A0E3           MOV      R5,#+0
   1839              for(int i=0; i < Pets[0].Status.Count; i++) { SaveStatus(i); }
   \                     ??onReconfigElf_5:
   \   000000D8   ........           LDR      R6,??DataTable148  ;; Pets
   \   000000DC   0070A0E3           MOV      R7,#+0
   \   000000E0   C40096E5           LDR      R0,[R6, #+196]
   \   000000E4   010050E3           CMP      R0,#+1
   \   000000E8   030000AA           BGE      ??onReconfigElf_6
   \   000000EC   050000EA           B        ??onReconfigElf_7
   \                     ??onReconfigElf_8:
   \   000000F0   0700A0E1           MOV      R0,R7
   \   000000F4   ........           BL       ??SaveStatus
   \   000000F8   017087E2           ADD      R7,R7,#+1
   \                     ??onReconfigElf_6:
   \   000000FC   C40096E5           LDR      R0,[R6, #+196]
   \   00000100   000057E1           CMP      R7,R0
   \   00000104   F9FFFFBA           BLT      ??onReconfigElf_8
   1840          
   1841              LoadAllPets();
   \                     ??onReconfigElf_7:
   \   00000108   ........           BL       ??LoadAllPets
   1842          
   1843              for(int i=0; i<Pets[0].Status.Count; i++)
   \   0000010C   C40096E5           LDR      R0,[R6, #+196]
   \   00000110   0070A0E3           MOV      R7,#+0
   \   00000114   010050E3           CMP      R0,#+1
   \   00000118   070000AA           BGE      ??onReconfigElf_9
   \   0000011C   090000EA           B        ??onReconfigElf_10
   1844              {
   1845                InitPetPos(i);
   \                     ??onReconfigElf_11:
   \   00000120   0700A0E1           MOV      R0,R7
   \   00000124   ........           BL       ??InitPetPos
   1846                ChangeStatusImage(i, book, snd);
   \   00000128   0520A0E1           MOV      R2,R5
   \   0000012C   0410A0E1           MOV      R1,R4
   \   00000130   0700A0E1           MOV      R0,R7
   \   00000134   ........           BL       ??ChangeStatusImage
   1847              }
   \   00000138   017087E2           ADD      R7,R7,#+1
   \                     ??onReconfigElf_9:
   \   0000013C   C40096E5           LDR      R0,[R6, #+196]
   \   00000140   000057E1           CMP      R7,R0
   \   00000144   F5FFFFBA           BLT      ??onReconfigElf_11
   1848              result=1;
   \                     ??onReconfigElf_10:
   \   00000148   0160A0E3           MOV      R6,#+1
   1849            }
   1850            return(result);
   \                     ??onReconfigElf_2:
   \   0000014C   0600A0E1           MOV      R0,R6
   \   00000150   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??onReconfigElf_1:
   \   00000154   ........           DC32     successed_config_path
   \   00000158   ........           DC32     successed_config_name
   \   0000015C   ........           DC32     `?<Constant L"\\x54\\x61\\x6d\\x61\\x67\\x6f\\x63\\x68\\_4`
   1851          }
   1852          

   \                                 In segment CODE, align 4, keep-with-next
   1853          int onBcfgConfig(void* mess, BOOK* bk)
   1854          {
   \                     ??onBcfgConfig:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   1855            int snd = (!GetSilent() || sndOnSilent) && sndEnable;
   \   00000008   4B0200EF           SWI      +587
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0300000A           BEQ      ??onBcfgConfig_1
   \   00000014   ........           LDR      R0,??DataTable161  ;; sndOnSilent
   \   00000018   000090E5           LDR      R0,[R0, #+0]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0400000A           BEQ      ??onBcfgConfig_2
   \                     ??onBcfgConfig_1:
   \   00000024   ........           LDR      R0,??DataTable162  ;; sndEnable
   \   00000028   000090E5           LDR      R0,[R0, #+0]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0120A013           MOVNE    R2,#+1
   \   00000034   0000001A           BNE      ??onBcfgConfig_3
   \                     ??onBcfgConfig_2:
   \   00000038   0020A0E3           MOV      R2,#+0
   1856            EditConfig(0, bk, snd);
   \                     ??onBcfgConfig_3:
   \   0000003C   0410A0E1           MOV      R1,R4
   \   00000040   0000A0E3           MOV      R0,#+0
   \   00000044   ........           _BLF     ??EditConfig,??EditConfig??rA
   1857            return 1;
   \   00000048   0100A0E3           MOV      R0,#+1
   \   0000004C   1080BDE8           POP      {R4,PC}          ;; return
   1858          }
   1859          

   \                                 In segment CODE, align 4, keep-with-next
   1860          int onHelloMsg(void* mess, BOOK* book)
   1861          {
   \                     ??onHelloMsg:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   1862            HELLO_MSG * msg = (HELLO_MSG*)mess;
   1863            MyBOOK * bk = (MyBOOK *) FindBook(isTamagochiBook);
   1864            if(!wstrcmp(msg->name,LELFNAME))
   \   00000004   ........           LDR      R5,??DataTable169  ;; SpeakMessage
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   ........           LDR      R0,??DataTable167  ;; ??isTamagochiBook
   \   00000010   40DF4DE2           SUB      SP,SP,#+256
   \   00000014   0140A0E1           MOV      R4,R1
   \   00000018   300100EF           SWI      +304
   \   0000001C   5C00A0E3           MOV      R0,#+92
   \   00000020   500E80E3           ORR      R0,R0,#0x500
   \   00000024   051080E0           ADD      R1,R0,R5
   \   00000028   040086E2           ADD      R0,R6,#+4
   \   0000002C   560100EF           SWI      +342
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   6500001A           BNE      ??onHelloMsg_1
   1865            {
   1866              if((Pets[0].Status.needFriend == 1) && (Pets[0].Status.Count == 1) && ((Pets[0].Status.Sex == 0) || (Pets[0].Status.Sex == 1)))
   \   00000038   ........           LDR      R8,??DataTable164  ;; Pets
   \   0000003C   8860A0E3           MOV      R6,#+136
   \   00000040   CC0098E5           LDR      R0,[R8, #+204]
   \   00000044   4C6D86E3           ORR      R6,R6,#0x1300
   \   00000048   010050E3           CMP      R0,#+1
   \   0000004C   C4009805           LDREQ    R0,[R8, #+196]
   \   00000050   FF70A0E3           MOV      R7,#+255
   \   00000054   FF7C87E3           ORR      R7,R7,#0xFF00
   \   00000058   01005003           CMPEQ    R0,#+1
   \   0000005C   4C00001A           BNE      ??onHelloMsg_2
   \   00000060   C00098E5           LDR      R0,[R8, #+192]
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   01005013           CMPNE    R0,#+1
   \   0000006C   4800001A           BNE      ??onHelloMsg_2
   1867              {
   1868                int indx_snd;
   1869                wchar_t  sound_path[128];
   1870                getdir(sound_path,SOUND_PATH);
   \   00000070   ........           LDR      R1,??DataTable160  ;; SOUND_PATH
   \   00000074   0D00A0E1           MOV      R0,SP
   \   00000078   ........           _BLF     ??getdir,??getdir??rA
   1871          
   1872                if(Pets[0].Status.Sex == 0)
   \   0000007C   C00098E5           LDR      R0,[R8, #+192]
   \   00000080   000050E3           CMP      R0,#+0
   \   00000084   0600001A           BNE      ??onHelloMsg_3
   1873                {
   1874                  InitStatus(1,Pets[0].Status.Age+1,1);
   \   00000088   000098E5           LDR      R0,[R8, #+0]
   \   0000008C   0120A0E3           MOV      R2,#+1
   \   00000090   011080E2           ADD      R1,R0,#+1
   \   00000094   0100A0E3           MOV      R0,#+1
   \   00000098   ........           BL       ??InitStatus
   1875                  indx_snd = CHEER_F_SND;
   \   0000009C   1390A0E3           MOV      R9,#+19
   \   000000A0   050000EA           B        ??onHelloMsg_4
   1876                }
   1877                else
   1878                {
   1879                  InitStatus(1,Pets[0].Status.Age-1,0);
   \                     ??onHelloMsg_3:
   \   000000A4   000098E5           LDR      R0,[R8, #+0]
   \   000000A8   0020A0E3           MOV      R2,#+0
   \   000000AC   011040E2           SUB      R1,R0,#+1
   \   000000B0   0100A0E3           MOV      R0,#+1
   \   000000B4   ........           BL       ??InitStatus
   1880                  indx_snd = CHEER_M_SND;
   \   000000B8   1490A0E3           MOV      R9,#+20
   1881                }
   1882                InitPetVar(1);
   \                     ??onHelloMsg_4:
   \   000000BC   0100A0E3           MOV      R0,#+1
   \   000000C0   ........           BL       ??InitPetVar
   1883                int snd = (!GetSilent() || sndOnSilent) && sndEnable;
   \   000000C4   4B0200EF           SWI      +587
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   0300000A           BEQ      ??onHelloMsg_5
   \   000000D0   ........           LDR      R0,??DataTable161  ;; sndOnSilent
   \   000000D4   000090E5           LDR      R0,[R0, #+0]
   \   000000D8   000050E3           CMP      R0,#+0
   \   000000DC   0400000A           BEQ      ??onHelloMsg_6
   \                     ??onHelloMsg_5:
   \   000000E0   ........           LDR      R0,??DataTable162  ;; sndEnable
   \   000000E4   000090E5           LDR      R0,[R0, #+0]
   \   000000E8   000050E3           CMP      R0,#+0
   \   000000EC   01A0A013           MOVNE    R10,#+1
   \   000000F0   0000001A           BNE      ??onHelloMsg_7
   \                     ??onHelloMsg_6:
   \   000000F4   00A0A0E3           MOV      R10,#+0
   1884                Pets[0].Status.needFriend = 0;
   \                     ??onHelloMsg_7:
   \   000000F8   0000A0E3           MOV      R0,#+0
   \   000000FC   CC0088E5           STR      R0,[R8, #+204]
   1885                Pets[0].Status.haveFriend = 1;
   \   00000100   0100A0E3           MOV      R0,#+1
   \   00000104   D00088E5           STR      R0,[R8, #+208]
   1886                Pets[1].Status.haveFriend = 1;
   \   00000108   E00188E5           STR      R0,[R8, #+480]
   1887                ChangeStatusImage(0, book, snd);
   \   0000010C   0A20A0E1           MOV      R2,R10
   \   00000110   0410A0E1           MOV      R1,R4
   \   00000114   0000A0E3           MOV      R0,#+0
   \   00000118   ........           BL       ??ChangeStatusImage
   1888                ChangeStatusImage(1, book, snd);
   \   0000011C   0A20A0E1           MOV      R2,R10
   \   00000120   0410A0E1           MOV      R1,R4
   \   00000124   0100A0E3           MOV      R0,#+1
   \   00000128   ........           BL       ??ChangeStatusImage
   1889                Pets[0].Status.Count = 2;
   \   0000012C   0200A0E3           MOV      R0,#+2
   \   00000130   C40088E5           STR      R0,[R8, #+196]
   1890          
   1891                if(snd) PlayFileV(sound_path, SoundName[indx_snd], sndVolume);
   \   00000134   00005AE3           CMP      R10,#+0
   \   00000138   0500000A           BEQ      ??onHelloMsg_8
   \   0000013C   ........           LDR      R0,??DataTable163  ;; sndVolume
   \   00000140   002090E5           LDR      R2,[R0, #+0]
   \   00000144   090185E0           ADD      R0,R5,R9, LSL #+2
   \   00000148   941090E5           LDR      R1,[R0, #+148]
   \   0000014C   0D00A0E1           MOV      R0,SP
   \   00000150   4A0200EF           SWI      +586
   1892                MessageBox(TextID_Create(Pets[0].Status.name,ENC_UCS2,TEXTID_ANY_LEN), TextID_Create(LG_MSGNEWPET,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
   \                     ??onHelloMsg_8:
   \   00000154   0720A0E1           MOV      R2,R7
   \   00000158   0010A0E3           MOV      R1,#+0
   \   0000015C   410E85E2           ADD      R0,R5,#+1040
   \   00000160   5D0100EF           SWI      +349
   \   00000164   0040A0E1           MOV      R4,R0
   \   00000168   0720A0E1           MOV      R2,R7
   \   0000016C   0010A0E3           MOV      R1,#+0
   \   00000170   400088E2           ADD      R0,R8,#+64
   \   00000174   5D0100EF           SWI      +349
   \   00000178   0010A0E3           MOV      R1,#+0
   \   0000017C   02002DE9           PUSH     {R1}
   \   00000180   40002DE9           PUSH     {R6}
   \   00000184   0130A0E3           MOV      R3,#+1
   \   00000188   0720A0E1           MOV      R2,R7
   \   0000018C   0410A0E1           MOV      R1,R4
   \   00000190   0C0000EA           B        ??onHelloMsg_9
   1893          
   1894              }
   1895              else
   1896              {
   1897                MessageBox(EMPTY_TEXTID, TextID_Create(LELFNAME _T("\n") LG_ALREADY_STARTED,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
   \                     ??onHelloMsg_2:
   \   00000194   0720A0E1           MOV      R2,R7
   \   00000198   0010A0E3           MOV      R1,#+0
   \   0000019C   2400A0E3           MOV      R0,#+36
   \   000001A0   500E80E3           ORR      R0,R0,#0x500
   \   000001A4   050080E0           ADD      R0,R0,R5
   \   000001A8   5D0100EF           SWI      +349
   \   000001AC   0010A0E1           MOV      R1,R0
   \   000001B0   0000A0E3           MOV      R0,#+0
   \   000001B4   01002DE9           PUSH     {R0}
   \   000001B8   40002DE9           PUSH     {R6}
   \   000001BC   0130A0E3           MOV      R3,#+1
   \   000001C0   0720A0E1           MOV      R2,R7
   \   000001C4   9004E0E3           MVN      R0,#-1879048192
   \                     ??onHelloMsg_9:
   \   000001C8   570200EF           SWI      +599
   \   000001CC   08D08DE2           ADD      SP,SP,#+8
   1898              }
   1899            }
   1900            return 1;
   \                     ??onHelloMsg_1:
   \   000001D0   0100A0E3           MOV      R0,#+1
   \   000001D4   40DF8DE2           ADD      SP,SP,#+256
   \   000001D8   F087BDE8           POP      {R4-R10,PC}      ;; return
   1901          }
   1902          

   \                                 In segment DYN_PAGE, align 4, align-sorted
   1903          const PAGE_MSG Tamagochi_BasePageEvents[]@ "DYN_PAGE" ={
   \                     Tamagochi_BasePageEvents:
   \   00000000   E3030000....       DC32 995, ??SB_ELF_Killed, 997, ??TerminateElf, 998, ??ShowAuthorInfo
   \              ....E5030000
   \              ........E603
   \              0000........
   \   00000018   E4030000....       DC32 996, ??onReconfigElf, 777, ??onHelloMsg, 64, 0H
   \              ....09030000
   \              ........4000
   \              000000000000

   \                                 In segment DATA_I, align 4, align-sorted
   \                     timer_save:
   \   00000000                      DS8 2
   \   00000002                      REQUIRE `?<Initializer for timer_save>`
   \                     timer_refresh:
   \   00000002                      DS8 2
   \   00000004                      REQUIRE `?<Initializer for timer_refresh>`
   \                     timer_life:
   \   00000004                      DS8 2
   \   00000006                      REQUIRE `?<Initializer for timer_life>`
   \                     timerScreen:
   \   00000006                      DS8 2
   \   00000008                      REQUIRE `?<Initializer for timerScreen>`
   \                     offtimerScreen:
   \   00000008                      DS8 2
   \   0000000A                      REQUIRE `?<Initializer for offtimerScreen>`
   \   0000000A                      DS8 2
   \                     Status_oldReDraw:
   \   0000000C                      DS8 4
   \   00000010                      REQUIRE `?<Initializer for Status_oldReDraw>`
   \                     GUI_status:
   \   00000010                      DS8 4
   \   00000014                      REQUIRE `?<Initializer for GUI_status>`
   \                     Status_desc:
   \   00000014                      DS8 4
   \   00000018                      REQUIRE `?<Initializer for Status_desc>`
   \                     Display_oldReDraw:
   \   00000018                      DS8 4
   \   0000001C                      REQUIRE `?<Initializer for Display_oldReDraw>`
   \                     GUI_display:
   \   0000001C                      DS8 4
   \   00000020                      REQUIRE `?<Initializer for GUI_display>`
   \                     Display_desc:
   \   00000020                      DS8 4
   \   00000024                      REQUIRE `?<Initializer for Display_desc>`
   \                     Soft_oldReDraw:
   \   00000024                      DS8 4
   \   00000028                      REQUIRE `?<Initializer for Soft_oldReDraw>`
   \                     GUI_soft:
   \   00000028                      DS8 4
   \   0000002C                      REQUIRE `?<Initializer for GUI_soft>`
   \                     Soft_desc:
   \   0000002C                      DS8 4
   \   00000030                      REQUIRE `?<Initializer for Soft_desc>`
   \                     DisplayWidth:
   \   00000030                      DS8 4
   \   00000034                      REQUIRE `?<Initializer for DisplayWidth>`
   \                     DisplayHeight:
   \   00000034                      DS8 4
   \   00000038                      REQUIRE `?<Initializer for DisplayHeight>`
   \                     SoftBarHeight:
   \   00000038                      DS8 4
   \   0000003C                      REQUIRE `?<Initializer for SoftBarHeight>`
   \                     StatusBarHeight:
   \   0000003C                      DS8 4
   \   00000040                      REQUIRE `?<Initializer for StatusBarHeight>`
   \                     SoftBarY:
   \   00000040                      DS8 4
   \   00000044                      REQUIRE `?<Initializer for SoftBarY>`
   \                     StatusBarY:
   \   00000044                      DS8 4
   \   00000048                      REQUIRE `?<Initializer for StatusBarY>`
   \                     TamagochiBook:
   \   00000048                      DS8 4
   \   0000004C                      REQUIRE `?<Initializer for TamagochiBook>`
   \                     screen:
   \   0000004C                      DS8 4
   \   00000050                      REQUIRE `?<Initializer for screen>`
   \                     game_list:
   \   00000050                      DS8 1024
   \   00000450                      REQUIRE `?<Initializer for game_list>`
   \                     player_list:
   \   00000450                      DS8 1024
   \   00000850                      REQUIRE `?<Initializer for player_list>`
   \   00000850                      DS8 128
   \   000008D0                      REQUIRE `?<Initializer for myappname>`
   \                     main_page:
   \   000008D0                      DS8 12
   \   000008DC                      REQUIRE `?<Initializer for main_page>`
   1904            SBY_REDRAW_RELEASE_EVENT,  SB_ELF_Killed,
   1905            ELF_TERMINATE_EVENT,       TerminateElf,
   1906            ELF_SHOW_INFO_EVENT,       ShowAuthorInfo,
   1907            ELF_RECONFIG_EVENT,        onReconfigElf,
   1908            ELF_HELLO_MSG_EVENT,       onHelloMsg,
   1909            NIL_EVENT_TAG,             NULL
   1910          };
   1911          
   1912          PAGE_DESC base_page ={"Tamagochi_BasePage",0,Tamagochi_BasePageEvents};
   \                     base_page:
   \   000008DC                      DS8 12
   \   000008E8                      REQUIRE `?<Initializer for base_page>`

   \                                 In segment DATA_I, align 4, align-sorted
   \                     img_names:
   \   00000000                      DS8 24
   \   00000018                      REQUIRE `?<Initializer for img_names>`
   \                     img_status:
   \   00000018                      DS8 8
   \   00000020                      REQUIRE `?<Initializer for img_status>`
   \                     img_menu:
   \   00000020                      DS8 44
   \   0000004C                      REQUIRE `?<Initializer for img_menu>`
   \                     SmileSize:
   \   0000004C                      DS8 4
   \   00000050                      REQUIRE `?<Initializer for SmileSize>`
   \                     StatSize:
   \   00000050                      DS8 4
   \   00000054                      REQUIRE `?<Initializer for StatSize>`
   1913          

   \                                 In segment CODE, align 4, keep-with-next
   1914          void elf_exit(void)
   1915          {
   \                     ??elf_exit:
   \   00000000   00402DE9           PUSH     {LR}
   1916            kill_data(&ELF_BEGIN, (void(*)(void*))mfree_adr());
   \   00000004   048100EF           SWI      +33028
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??elf_exit_1  ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??elf_exit_1:
   \   00000018   ........           DC32     ELF_BEGIN
   1917          }
   1918          

   \                                 In segment CODE, align 4, keep-with-next
   1919          int isTamagochiBook(BOOK * book)
   1920          {
   \                     ??isTamagochiBook:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1921            if(!strncmp(book->xbook->name, myappname, strlen(ELFNAME))) return 1;
   \   00000008   ........           LDR      R0,??DataTable158  ;; `?<Constant "Tamagochi">`
   \   0000000C   5A0100EF           SWI      +346
   \   00000010   20109FE5           LDR      R1,??isTamagochiBook_1  ;; timer_save + 2128
   \   00000014   0020A0E1           MOV      R2,R0
   \   00000018   000094E5           LDR      R0,[R4, #+0]
   \   0000001C   040090E5           LDR      R0,[R0, #+4]
   \   00000020   7E0200EF           SWI      +638
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0100A003           MOVEQ    R0,#+1
   \   0000002C   1080BD08           POPEQ    {R4,PC}
   1922            return 0;
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??isTamagochiBook_1:
   \   00000038   ........           DC32     timer_save + 2128
   1923          }
   1924          

   \                                 In segment CODE, align 4, keep-with-next
   1925          void onCloseTamagochiBook(BOOK * book)
   1926          {
   \                     ??onCloseTamagochiBook:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   41DF4DE2           SUB      SP,SP,#+260
   \   00000008   0040B0E1           MOVS     R4,R0
   1927            wchar_t  sound_path[128];
   1928            MyBOOK *bk = (MyBOOK *)book;
   1929          
   1930            if (bk)
   \   0000000C   7300000A           BEQ      ??onCloseTamagochiBook_1
   1931            {
   1932              if(timer_refresh) { Timer_Kill(&timer_refresh); }
   \   00000010   ........           LDR      R5,??DataTable159  ;; timer_save
   \   00000014   B200D5E1           LDRH     R0,[R5, #+2]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0100000A           BEQ      ??onCloseTamagochiBook_2
   \   00000020   020085E2           ADD      R0,R5,#+2
   \   00000024   2A0100EF           SWI      +298
   1933              if(timer_save)    { Timer_Kill(&timer_save); }
   \                     ??onCloseTamagochiBook_2:
   \   00000028   B000D5E1           LDRH     R0,[R5, #+0]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0100000A           BEQ      ??onCloseTamagochiBook_3
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   2A0100EF           SWI      +298
   1934              if(timer_life)    { Timer_Kill(&timer_life); }
   \                     ??onCloseTamagochiBook_3:
   \   0000003C   B400D5E1           LDRH     R0,[R5, #+4]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0100000A           BEQ      ??onCloseTamagochiBook_4
   \   00000048   040085E2           ADD      R0,R5,#+4
   \   0000004C   2A0100EF           SWI      +298
   1935          
   1936              if(timerScreen)    offTimerScreen(0,0);
   \                     ??onCloseTamagochiBook_4:
   \   00000050   B600D5E1           LDRH     R0,[R5, #+6]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0500000A           BEQ      ??onCloseTamagochiBook_5
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   0D00A0E1           MOV      R0,SP
   \   00000064   ........           _BLF     ??LPARAM,??LPARAM??rA
   \   00000068   00109DE5           LDR      R1,[SP, #+0]
   \   0000006C   0000A0E3           MOV      R0,#+0
   \   00000070   ........           BL       ??offTimerScreen
   1937              if(offtimerScreen) Timer_Kill(&offtimerScreen);
   \                     ??onCloseTamagochiBook_5:
   \   00000074   B800D5E1           LDRH     R0,[R5, #+8]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0100000A           BEQ      ??onCloseTamagochiBook_6
   \   00000080   080085E2           ADD      R0,R5,#+8
   \   00000084   2A0100EF           SWI      +298
   1938          
   1939              if(Display_desc) DISP_DESC_SetOnRedraw(Display_desc, Display_oldReDraw);
   \                     ??onCloseTamagochiBook_6:
   \   00000088   200095E5           LDR      R0,[R5, #+32]
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   0100000A           BEQ      ??onCloseTamagochiBook_7
   \   00000094   181095E5           LDR      R1,[R5, #+24]
   \   00000098   280200EF           SWI      +552
   1940              if(Status_desc)  DISP_DESC_SetOnRedraw(Status_desc, Status_oldReDraw);
   \                     ??onCloseTamagochiBook_7:
   \   0000009C   140095E5           LDR      R0,[R5, #+20]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0100000A           BEQ      ??onCloseTamagochiBook_8
   \   000000A8   0C1095E5           LDR      R1,[R5, #+12]
   \   000000AC   280200EF           SWI      +552
   1941              if(Soft_desc)    DISP_DESC_SetOnRedraw(Soft_desc, Soft_oldReDraw);
   \                     ??onCloseTamagochiBook_8:
   \   000000B0   2C0095E5           LDR      R0,[R5, #+44]
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   0100000A           BEQ      ??onCloseTamagochiBook_9
   \   000000BC   241095E5           LDR      R1,[R5, #+36]
   \   000000C0   280200EF           SWI      +552
   1942          
   1943              getdir(sound_path,SOUND_PATH);
   \                     ??onCloseTamagochiBook_9:
   \   000000C4   ........           LDR      R1,??DataTable160  ;; SOUND_PATH
   \   000000C8   04008DE2           ADD      R0,SP,#+4
   \   000000CC   ........           _BLF     ??getdir,??getdir??rA
   1944              if((!GetSilent() || sndOnSilent) && sndEnable) PlayFileV(sound_path, SoundName[BYEBYE_SND], sndVolume);
   \   000000D0   4B0200EF           SWI      +587
   \   000000D4   000050E3           CMP      R0,#+0
   \   000000D8   0300000A           BEQ      ??onCloseTamagochiBook_10
   \   000000DC   ........           LDR      R0,??DataTable161  ;; sndOnSilent
   \   000000E0   000090E5           LDR      R0,[R0, #+0]
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   0800000A           BEQ      ??onCloseTamagochiBook_11
   \                     ??onCloseTamagochiBook_10:
   \   000000EC   ........           LDR      R0,??DataTable162  ;; sndEnable
   \   000000F0   000090E5           LDR      R0,[R0, #+0]
   \   000000F4   000050E3           CMP      R0,#+0
   \   000000F8   0400000A           BEQ      ??onCloseTamagochiBook_11
   \   000000FC   ........           LDR      R0,??DataTable163  ;; sndVolume
   \   00000100   E0109FE5           LDR      R1,??onCloseTamagochiBook_12  ;; SpeakMessage + 1568
   \   00000104   002090E5           LDR      R2,[R0, #+0]
   \   00000108   04008DE2           ADD      R0,SP,#+4
   \   0000010C   4A0200EF           SWI      +586
   1945          
   1946              free_icons();
   1947              free_strings();
   1948          
   1949              for(int i=0; i < Pets[0].Status.Count; i++) { SaveStatus(i); }
   \                     ??onCloseTamagochiBook_11:
   \   00000110   ........           LDR      R6,??DataTable164  ;; Pets
   \   00000114   ........           BL       ??free_icons
   \   00000118   ........           BL       ??free_strings
   \   0000011C   C40096E5           LDR      R0,[R6, #+196]
   \   00000120   0050A0E3           MOV      R5,#+0
   \   00000124   010050E3           CMP      R0,#+1
   \   00000128   030000AA           BGE      ??onCloseTamagochiBook_13
   \   0000012C   050000EA           B        ??onCloseTamagochiBook_14
   \                     ??onCloseTamagochiBook_15:
   \   00000130   0500A0E1           MOV      R0,R5
   \   00000134   ........           BL       ??SaveStatus
   \   00000138   015085E2           ADD      R5,R5,#+1
   \                     ??onCloseTamagochiBook_13:
   \   0000013C   C40096E5           LDR      R0,[R6, #+196]
   \   00000140   000055E1           CMP      R5,R0
   \   00000144   F9FFFFBA           BLT      ??onCloseTamagochiBook_15
   1950          
   1951              if(bk->gui)
   \                     ??onCloseTamagochiBook_14:
   \   00000148   280094E5           LDR      R0,[R4, #+40]
   \   0000014C   0050A0E3           MOV      R5,#+0
   \   00000150   000050E3           CMP      R0,#+0
   \   00000154   0100000A           BEQ      ??onCloseTamagochiBook_16
   1952              {
   1953                GUIObject_Destroy( bk->gui);
   \   00000158   CE0100EF           SWI      +462
   1954                bk->gui = 0;
   \   0000015C   285084E5           STR      R5,[R4, #+40]
   1955              }
   1956          
   1957              FREE_GUI(bk->stat_list);
   \                     ??onCloseTamagochiBook_16:
   \   00000160   2C0194E5           LDR      R0,[R4, #+300]
   \   00000164   000050E3           CMP      R0,#+0
   \   00000168   0100000A           BEQ      ??onCloseTamagochiBook_17
   \   0000016C   CE0100EF           SWI      +462
   \   00000170   2C5184E5           STR      R5,[R4, #+300]
   1958              FREE_GUI(bk->cbox_gui);
   \                     ??onCloseTamagochiBook_17:
   \   00000174   180094E5           LDR      R0,[R4, #+24]
   \   00000178   000050E3           CMP      R0,#+0
   \   0000017C   0100000A           BEQ      ??onCloseTamagochiBook_18
   \   00000180   CE0100EF           SWI      +462
   \   00000184   185084E5           STR      R5,[R4, #+24]
   1959              FREE_GUI(bk->text_input);
   \                     ??onCloseTamagochiBook_18:
   \   00000188   1C0094E5           LDR      R0,[R4, #+28]
   \   0000018C   000050E3           CMP      R0,#+0
   \   00000190   0100000A           BEQ      ??onCloseTamagochiBook_19
   \   00000194   CE0100EF           SWI      +462
   \   00000198   1C5084E5           STR      R5,[R4, #+28]
   1960              FREE_GUI(bk->yesno);
   \                     ??onCloseTamagochiBook_19:
   \   0000019C   240094E5           LDR      R0,[R4, #+36]
   \   000001A0   000050E3           CMP      R0,#+0
   \   000001A4   0100000A           BEQ      ??onCloseTamagochiBook_20
   \   000001A8   CE0100EF           SWI      +462
   \   000001AC   245084E5           STR      R5,[R4, #+36]
   1961          
   1962              for(int i=0; i < MAX_PET_COUNT_GLB; i++)
   \                     ??onCloseTamagochiBook_20:
   \   000001B0   0060A0E3           MOV      R6,#+0
   1963              {
   1964                FREE_GUI(bk->menu_list[i]);
   \                     ??onCloseTamagochiBook_21:
   \   000001B4   067184E0           ADD      R7,R4,R6, LSL #+2
   \   000001B8   2C0097E5           LDR      R0,[R7, #+44]
   \   000001BC   000050E3           CMP      R0,#+0
   \   000001C0   0100000A           BEQ      ??onCloseTamagochiBook_22
   \   000001C4   CE0100EF           SWI      +462
   \   000001C8   2C5087E5           STR      R5,[R7, #+44]
   1965              }
   \                     ??onCloseTamagochiBook_22:
   \   000001CC   016086E2           ADD      R6,R6,#+1
   \   000001D0   200056E3           CMP      R6,#+32
   \   000001D4   F6FFFFBA           BLT      ??onCloseTamagochiBook_21
   1966          
   1967              SUBPROC(elf_exit);
   \   000001D8   ........           LDR      R0,??DataTable168  ;; ??elf_exit
   \   000001DC   080100EF           SWI      +264
   1968            }
   1969          }
   \                     ??onCloseTamagochiBook_1:
   \   000001E0   41DF8DE2           ADD      SP,SP,#+260      ;; stack cleaning
   \   000001E4   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??onCloseTamagochiBook_12:
   \   000001E8   ........           DC32     SpeakMessage + 1568
   1970          

   \                                 In segment CODE, align 4, keep-with-next
   1971          int main (void)
   1972          {
   \                     main:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   1973            BOOK *bk;
   1974            DisplayHeight = Display_GetHeight(0);
   \   00000004   ........           LDR      R4,??DataTable166  ;; timer_save
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   580200EF           SWI      +600
   \   00000014   340084E5           STR      R0,[R4, #+52]
   1975            DisplayWidth  = Display_GetWidth(0);
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   590200EF           SWI      +601
   \   00000020   300084E5           STR      R0,[R4, #+48]
   1976          
   1977            switch(DisplayHeight){
   \   00000024   340094E5           LDR      R0,[R4, #+52]
   \   00000028   1210A0E3           MOV      R1,#+18
   \   0000002C   802050E2           SUBS     R2,R0,#+128
   \   00000030   20205212           SUBSNE   R2,R2,#+32
   \   00000034   0500000A           BEQ      ??main_0
   \   00000038   302052E2           SUBS     R2,R2,#+48
   \   0000003C   0C205212           SUBSNE   R2,R2,#+12
   \   00000040   0900000A           BEQ      ??main_1
   \   00000044   642052E2           SUBS     R2,R2,#+100
   \   00000048   0D00000A           BEQ      ??main_2
   \   0000004C   130000EA           B        ??main_3
   1978              case 128:
   1979                  StatusBarY = STATUS_HEIGHT_128;
   \                     ??main_0:
   \   00000050   0E20A0E3           MOV      R2,#+14
   \   00000054   442084E5           STR      R2,[R4, #+68]
   1980                  SoftBarY   = DisplayHeight - SOFT_HEIGHT_128;
   \   00000058   120040E2           SUB      R0,R0,#+18
   \   0000005C   400084E5           STR      R0,[R4, #+64]
   1981                  StatusBarHeight = STATUS_HEIGHT_128;
   \   00000060   3C2084E5           STR      R2,[R4, #+60]
   1982                  SoftBarHeight   = SOFT_HEIGHT_128;
   \   00000064   381084E5           STR      R1,[R4, #+56]
   \   00000068   0C0000EA           B        ??main_3
   1983                  break;
   1984              case 160:
   1985                  StatusBarY = STATUS_HEIGHT_160;
   1986                  SoftBarY   = DisplayHeight - SOFT_HEIGHT_160;
   1987                  StatusBarHeight = STATUS_HEIGHT_160;
   1988                  SoftBarHeight   = SOFT_HEIGHT_160;
   1989                  break;
   1990              case 208:
   1991                  StatusBarY = STATUS_HEIGHT_208;
   \                     ??main_1:
   \   0000006C   441084E5           STR      R1,[R4, #+68]
   1992                  SoftBarY   = DisplayHeight - SOFT_HEIGHT_208;
   \   00000070   1A0040E2           SUB      R0,R0,#+26
   \   00000074   400084E5           STR      R0,[R4, #+64]
   1993                  StatusBarHeight = STATUS_HEIGHT_208;
   \   00000078   3C1084E5           STR      R1,[R4, #+60]
   1994                  SoftBarHeight   = SOFT_HEIGHT_208;
   \   0000007C   1A00A0E3           MOV      R0,#+26
   \   00000080   050000EA           B        ??main_4
   1995                  break;
   1996              case 220:
   1997                  StatusBarY = STATUS_HEIGHT_220;
   1998                  SoftBarY   = DisplayHeight - SOFT_HEIGHT_220;
   1999                  StatusBarHeight = STATUS_HEIGHT_220;
   2000                  SoftBarHeight   = SOFT_HEIGHT_220;
   2001                  break;
   2002              case 320:
   2003                  StatusBarY = STATUS_HEIGHT_320;
   \                     ??main_2:
   \   00000084   1910A0E3           MOV      R1,#+25
   \   00000088   441084E5           STR      R1,[R4, #+68]
   2004                  SoftBarY   = DisplayHeight - SOFT_HEIGHT_320;
   \   0000008C   1E0040E2           SUB      R0,R0,#+30
   \   00000090   400084E5           STR      R0,[R4, #+64]
   2005                  StatusBarHeight = STATUS_HEIGHT_320;
   \   00000094   3C1084E5           STR      R1,[R4, #+60]
   2006                  SoftBarHeight   = SOFT_HEIGHT_320;
   \   00000098   1E00A0E3           MOV      R0,#+30
   \                     ??main_4:
   \   0000009C   380084E5           STR      R0,[R4, #+56]
   2007                  break;
   2008            }
   2009          
   2010            bk = FindBook(isTamagochiBook);
   \                     ??main_3:
   \   000000A0   ........           LDR      R0,??DataTable167  ;; ??isTamagochiBook
   2011            if(bk)
   \   000000A4   ........           LDR      R6,??DataTable168  ;; ??elf_exit
   \   000000A8   ........           LDR      R7,??DataTable169  ;; SpeakMessage
   \   000000AC   300100EF           SWI      +304
   \   000000B0   0050B0E1           MOVS     R5,R0
   \   000000B4   FF80A0E3           MOV      R8,#+255
   \   000000B8   FF8C88E3           ORR      R8,R8,#0xFF00
   \   000000BC   2D00000A           BEQ      ??main_5
   2012            {
   2013              if(CheckEv(bk,ELF_HELLO_MSG_EVENT))
   \   000000C0   0940A0E3           MOV      R4,#+9
   \   000000C4   C04F84E3           ORR      R4,R4,#0x300
   \   000000C8   0410A0E1           MOV      R1,R4
   \   000000CC   ........           BL       ??CheckEv
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   1500000A           BEQ      ??main_6
   2014              {
   2015                HELLO_MSG * msg = new HELLO_MSG;
   \   000000D8   8400A0E3           MOV      R0,#+132
   \   000000DC   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000E0   0080A0E1           MOV      R8,R0
   2016                msg->book = 0;
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   000088E5           STR      R0,[R8, #+0]
   2017                snwprintf(msg->name,NAME_LEN - 1,L"%ls",LELFNAME);
   \   000000EC   5C00A0E3           MOV      R0,#+92
   \   000000F0   500E80E3           ORR      R0,R0,#0x500
   \   000000F4   073080E0           ADD      R3,R0,R7
   \   000000F8   572E87E2           ADD      R2,R7,#+1392
   \   000000FC   3F10A0E3           MOV      R1,#+63
   \   00000100   040088E2           ADD      R0,R8,#+4
   \   00000104   150100EF           SWI      +277
   2018                UI_Event_toBookIDwData(ELF_HELLO_MSG_EVENT,BookObj_GetBookID(bk),msg,(void(*)(void*))mfree_adr());
   \   00000108   048100EF           SWI      +33028
   \   0000010C   0070A0E1           MOV      R7,R0
   \   00000110   0500A0E1           MOV      R0,R5
   \   00000114   FA0100EF           SWI      +506
   \   00000118   0730A0E1           MOV      R3,R7
   \   0000011C   0820A0E1           MOV      R2,R8
   \   00000120   0010A0E1           MOV      R1,R0
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   AB0100EF           SWI      +427
   \   0000012C   280000EA           B        ??main_7
   2019              }
   2020              else
   2021              {
   2022                MessageBox(EMPTY_TEXTID, TextID_Create(LELFNAME _T("\n") LG_ALREADY_STARTED,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, 0);
   \                     ??main_6:
   \   00000130   0820A0E1           MOV      R2,R8
   \   00000134   0010A0E3           MOV      R1,#+0
   \   00000138   2400A0E3           MOV      R0,#+36
   \   0000013C   500E80E3           ORR      R0,R0,#0x500
   \   00000140   070080E0           ADD      R0,R0,R7
   \   00000144   5D0100EF           SWI      +349
   \   00000148   0010A0E1           MOV      R1,R0
   \   0000014C   0000A0E3           MOV      R0,#+0
   \   00000150   01002DE9           PUSH     {R0}
   \   00000154   0130A0E3           MOV      R3,#+1
   \   00000158   0820A0E1           MOV      R2,R8
   \   0000015C   8800A0E3           MOV      R0,#+136
   \   00000160   4C0D80E3           ORR      R0,R0,#0x1300
   \   00000164   01002DE9           PUSH     {R0}
   \   00000168   9004E0E3           MVN      R0,#-1879048192
   \   0000016C   570200EF           SWI      +599
   \   00000170   08D08DE2           ADD      SP,SP,#+8
   2023              }
   2024              SUBPROC(elf_exit);
   \   00000174   160000EA           B        ??main_7
   2025              return 0;
   2026            }
   2027          
   2028            InitConfig();
   \                     ??main_5:
   \   00000178   ........           _BLF     ??InitConfig,??InitConfig??rA
   2029            TamagochiBook = new MyBOOK;
   \   0000017C   4D0FA0E3           MOV      R0,#+308
   \   00000180   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000184   480084E5           STR      R0,[R4, #+72]
   2030            memset(TamagochiBook,0,sizeof(MyBOOK));
   \   00000188   4D2FA0E3           MOV      R2,#+308
   \   0000018C   0010A0E3           MOV      R1,#+0
   \   00000190   120100EF           SWI      +274
   2031            if(!CreateBook((BOOK*)TamagochiBook,onCloseTamagochiBook,&base_page,myappname,-1,0))
   \   00000194   D8109FE5           LDR      R1,??main_8      ;; ??onCloseTamagochiBook
   \   00000198   0000A0E3           MOV      R0,#+0
   \   0000019C   01002DE9           PUSH     {R0}
   \   000001A0   853E84E2           ADD      R3,R4,#+2128
   \   000001A4   0000E0E1           MVN      R0,R0
   \   000001A8   01002DE9           PUSH     {R0}
   \   000001AC   DC00A0E3           MOV      R0,#+220
   \   000001B0   800E80E3           ORR      R0,R0,#0x800
   \   000001B4   042080E0           ADD      R2,R0,R4
   \   000001B8   480094E5           LDR      R0,[R4, #+72]
   \   000001BC   2B0100EF           SWI      +299
   \   000001C0   000050E3           CMP      R0,#+0
   \   000001C4   08D08DE2           ADD      SP,SP,#+8
   \   000001C8   0500001A           BNE      ??main_9
   2032            {
   2033              delete TamagochiBook;
   \   000001CC   480094E5           LDR      R0,[R4, #+72]
   \   000001D0   ........           _BLF     `??operator delete`,`??operator delete??rA`
   2034              SUBPROC(elf_exit);
   \                     ??main_7:
   \   000001D4   0600A0E1           MOV      R0,R6
   \   000001D8   080100EF           SWI      +264
   2035              return 0;
   \   000001DC   0000A0E3           MOV      R0,#+0
   \   000001E0   F281BDE8           POP      {R1,R4-R8,PC}
   2036            }
   2037            ModifyKeyHook(NewKey,KEY_HOOK_ADD,NULL);
   \                     ??main_9:
   \   000001E4   0010A0E3           MOV      R1,#+0
   \   000001E8   0D00A0E1           MOV      R0,SP
   \   000001EC   ........           _BLF     ??LPARAM,??LPARAM??rA
   \   000001F0   00209DE5           LDR      R2,[SP, #+0]
   \   000001F4   ........           LDR      R0,??DataTable170  ;; ??NewKey
   \   000001F8   0110A0E3           MOV      R1,#+1
   \   000001FC   070100EF           SWI      +263
   2038            if(ENA_HELLO_MSG) MessageBox(EMPTY_TEXTID, TextID_Create(LG_LOADING,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000*msgShowTime, 0);
   \   00000200   70009FE5           LDR      R0,??main_8+0x4  ;; ENA_HELLO_MSG
   \   00000204   000090E5           LDR      R0,[R0, #+0]
   \   00000208   000050E3           CMP      R0,#+0
   \   0000020C   1300000A           BEQ      ??main_10
   \   00000210   0820A0E1           MOV      R2,R8
   \   00000214   0010A0E3           MOV      R1,#+0
   \   00000218   7800A0E3           MOV      R0,#+120
   \   0000021C   500E80E3           ORR      R0,R0,#0x500
   \   00000220   070080E0           ADD      R0,R0,R7
   \   00000224   5D0100EF           SWI      +349
   \   00000228   0010A0E3           MOV      R1,#+0
   \   0000022C   02002DE9           PUSH     {R1}
   \   00000230   ........           LDR      R1,??DataTable171  ;; msgShowTime
   \   00000234   8820A0E3           MOV      R2,#+136
   \   00000238   001091E5           LDR      R1,[R1, #+0]
   \   0000023C   4C2D82E3           ORR      R2,R2,#0x1300
   \   00000240   920101E0           MUL      R1,R2,R1
   \   00000244   0130A0E3           MOV      R3,#+1
   \   00000248   02002DE9           PUSH     {R1}
   \   0000024C   0820A0E1           MOV      R2,R8
   \   00000250   0010A0E1           MOV      R1,R0
   \   00000254   9004E0E3           MVN      R0,#-1879048192
   \   00000258   570200EF           SWI      +599
   \   0000025C   08D08DE2           ADD      SP,SP,#+8
   2039            BookObj_GotoPage((BOOK *)TamagochiBook,&main_page);
   \                     ??main_10:
   \   00000260   480094E5           LDR      R0,[R4, #+72]
   \   00000264   8D1E84E2           ADD      R1,R4,#+2256
   \   00000268   2D0100EF           SWI      +301
   2040            return 0;
   \   0000026C   0000A0E3           MOV      R0,#+0
   \   00000270   F281BDE8           POP      {R1,R4-R8,PC}
   \                     ??main_8:
   \   00000274   ........           DC32     ??onCloseTamagochiBook
   \   00000278   ........           DC32     ENA_HELLO_MSG
   2041          }

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     `?<Constant "Tamagochi">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     Night_Ena

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     SYNC

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   CDCCCCCC           DC32     0xffffffffcccccccd

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     cfg_screen_level

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   ........           DC32     cfg_screen_blink_speed

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   ........           DC32     ??onTimerScreen

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   ........           DC32     timer_save

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable23:
   \   00000000   ........           DC32     img_names

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   56555555           DC32     0x55555556

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable47:
   \   00000000   ........           DC32     Pets

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable57:
   \   00000000   ........           DC32     SOUND_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable58:
   \   00000000   ........           DC32     SpeakMessage

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable60:
   \   00000000   ........           DC32     sndVolume

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable62:
   \   00000000   ........           DC32     msgShowTime

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable66:
   \   00000000   ........           DC32     PARENT_AGE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable68:
   \   00000000   ........           DC32     MAX_PET_COUNT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable70:
   \   00000000   ........           DC32     ??onTimer_save

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable71:
   \   00000000   ........           DC32     timer_save

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable74:
   \   00000000   ........           DC32     Pets

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable75:
   \   00000000   ........           DC32     timer_save

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable76:
   \   00000000   CDCCCCCC           DC32     0xffffffffcccccccd

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable77:
   \   00000000   ........           DC32     REFRESH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable78:
   \   00000000   ........           DC32     ??onTimer_refresh

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable80:
   \   00000000   ........           DC32     SYNC

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable81:
   \   00000000   ........           DC32     Night_Ena

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable82:
   \   00000000   ........           DC32     SOUND_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable94:
   \   00000000   56555555           DC32     0x55555556

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable100:
   \   00000000   ........           DC32     sndVolume

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable101:
   \   00000000   ........           DC32     msgShowTime

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable104:
   \   00000000   ........           DC32     Pets

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable106:
   \   00000000   ........           DC32     ??isTamagochiBook

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable108:
   \   00000000   ........           DC32     img_names

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable114:
   \   00000000   ........           DC32     PET_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable119:
   \   00000000   ........           DC32     `?<Constant L"\\x50\\x65\\x74\\x2e\\x63\\x66\\x67">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable121:
   \   00000000   ........           DC32     MAX_PET_COUNT

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable122:
   \   00000000   ........           DC32     PARENT_AGE

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable131:
   \   00000000   CDCCCCCC           DC32     0xffffffffcccccccd

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable132:
   \   00000000   ........           DC32     ??onTimer_life

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable133:
   \   00000000   ........           DC32     ??onTimer_save

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable134:
   \   00000000   ........           DC32     REFRESH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable135:
   \   00000000   ........           DC32     ??onTimer_refresh

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable140:
   \   00000000   ........           DC32     timer_save

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable141:
   \   00000000   ........           DC32     ??Status_ReDraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable142:
   \   00000000   ........           DC32     ??Display_ReDraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable143:
   \   00000000   ........           DC32     ??Soft_ReDraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable146:
   \   00000000   ........           DC32     sndOnSilent

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable147:
   \   00000000   ........           DC32     sndEnable

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable148:
   \   00000000   ........           DC32     Pets

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable158:
   \   00000000   ........           DC32     `?<Constant "Tamagochi">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable159:
   \   00000000   ........           DC32     timer_save

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable160:
   \   00000000   ........           DC32     SOUND_PATH

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable161:
   \   00000000   ........           DC32     sndOnSilent

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable162:
   \   00000000   ........           DC32     sndEnable

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable163:
   \   00000000   ........           DC32     sndVolume

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable164:
   \   00000000   ........           DC32     Pets

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable166:
   \   00000000   ........           DC32     timer_save

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable167:
   \   00000000   ........           DC32     ??isTamagochiBook

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable168:
   \   00000000   ........           DC32     ??elf_exit

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable169:
   \   00000000   ........           DC32     SpeakMessage

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable170:
   \   00000000   ........           DC32     ??NewKey

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable171:
   \   00000000   ........           DC32     msgShowTime

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for timer_save>`:
   \   00000000   0000               DC16 0
   \                     `?<Initializer for timer_refresh>`:
   \   00000002   0000               DC16 0
   \                     `?<Initializer for timer_life>`:
   \   00000004   0000               DC16 0
   \                     `?<Initializer for timerScreen>`:
   \   00000006   0000               DC16 0
   \                     `?<Initializer for offtimerScreen>`:
   \   00000008   0000               DC16 0
   \   0000000A   0000               DC8 0, 0
   \                     `?<Initializer for Status_oldReDraw>`:
   \   0000000C   00000000           DC32 0H
   \                     `?<Initializer for GUI_status>`:
   \   00000010   00000000           DC32 0H
   \                     `?<Initializer for Status_desc>`:
   \   00000014   00000000           DC32 0H
   \                     `?<Initializer for Display_oldReDraw>`:
   \   00000018   00000000           DC32 0H
   \                     `?<Initializer for GUI_display>`:
   \   0000001C   00000000           DC32 0H
   \                     `?<Initializer for Display_desc>`:
   \   00000020   00000000           DC32 0H
   \                     `?<Initializer for Soft_oldReDraw>`:
   \   00000024   00000000           DC32 0H
   \                     `?<Initializer for GUI_soft>`:
   \   00000028   00000000           DC32 0H
   \                     `?<Initializer for Soft_desc>`:
   \   0000002C   00000000           DC32 0H
   \                     `?<Initializer for DisplayWidth>`:
   \   00000030   00000000           DC32 0
   \                     `?<Initializer for DisplayHeight>`:
   \   00000034   00000000           DC32 0
   \                     `?<Initializer for SoftBarHeight>`:
   \   00000038   00000000           DC32 0
   \                     `?<Initializer for StatusBarHeight>`:
   \   0000003C   00000000           DC32 0
   \                     `?<Initializer for SoftBarY>`:
   \   00000040   00000000           DC32 0
   \                     `?<Initializer for StatusBarY>`:
   \   00000044   00000000           DC32 0
   \                     `?<Initializer for TamagochiBook>`:
   \   00000048   00000000           DC32 0H
   \                     `?<Initializer for screen>`:
   \   0000004C   00000000           DC32 0
   \                     `?<Initializer for game_list>`:
   \   00000050   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000060   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000070   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000080   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000090   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000B0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000E0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000100   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000110   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000120   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000130   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000140   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000150   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000160   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000170   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000180   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000190   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001B0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001E0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000200   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000210   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000220   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000230   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000240   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000250   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000260   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000270   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000280   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000290   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002B0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002E0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000300   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000310   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000320   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000330   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000340   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000350   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000360   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000370   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000380   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000390   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003B0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003E0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000400   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000410   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000420   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000430   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000440   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for player_list>`:
   \   00000450   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000460   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000470   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000480   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000490   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004B0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004E0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000004F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000500   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000510   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000520   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000530   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000540   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000550   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000560   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000570   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000580   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000590   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005B0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005E0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000005F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000600   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000610   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000620   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000630   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000640   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000650   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000660   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000670   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000680   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000690   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006B0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006E0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000006F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000700   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000710   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000720   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000730   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000740   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000750   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000760   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000770   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000780   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000790   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007A0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007B0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007C0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007D0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007E0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000007F0   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000800   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000810   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000820   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000830   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000840   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     `?<Initializer for myappname>`:
   \   00000850   54616D61676F       DC8 "Tamagochi"
   \              63686900    
   \   0000085A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000086A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000087A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000088A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000089A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008AA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000008BA   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00000000    
   \                     `?<Initializer for main_page>`:
   \   000008D0   ........0000       DC32 `?<Constant "Tamagochi_MainPage">`, 0H, Tamagochi_MainPageEvents
   \              0000........
   \                     `?<Initializer for base_page>`:
   \   000008DC   ........0000       DC32 `?<Constant "Tamagochi_BasePage">`, 0H, Tamagochi_BasePageEvents
   \              0000........

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for img_names>`:
   \   00000000   FFFFFFFFFFFF       DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
   \              FFFFFFFFFFFF
   \              FFFFFFFFFFFF
   \   00000012   FFFFFFFF           DC16 65535, 65535
   \   00000016   0000               DC8 0, 0
   \                     `?<Initializer for img_status>`:
   \   00000018   FFFFFFFFFFFF       DC16 65535, 65535, 65535, 65535
   \              FFFF        
   \                     `?<Initializer for img_menu>`:
   \   00000020   FFFFFFFFFFFF       DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
   \              FFFFFFFFFFFF
   \              FFFFFFFFFFFF
   \   00000032   FFFFFFFFFFFF       DC16 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535, 65535
   \              FFFFFFFFFFFF
   \              FFFFFFFFFFFF
   \   00000044   FFFFFFFFFFFF       DC16 65535, 65535, 65535, 65535
   \              FFFF        
   \                     `?<Initializer for SmileSize>`:
   \   0000004C   00000000           DC32 0
   \                     `?<Initializer for StatSize>`:
   \   00000050   00000000           DC32 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x46\\x69\\x6c\\x65\\x73\\x79\\x73\\x74\\`:
   \   00000000   460069006C00       DC8 46H, 0, 69H, 0, 6CH, 0, 65H, 0
   \              6500        
   \   00000008   730079007300       DC8 73H, 0, 79H, 0, 73H, 0, 74H, 0
   \              7400        
   \   00000010   65006D002000       DC8 65H, 0, 6DH, 0, 20H, 0, 65H, 0
   \              6500        
   \   00000018   720072006F00       DC8 72H, 0, 72H, 0, 6FH, 0, 72H, 0
   \              7200        
   \   00000020   21000000           DC8 21H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Tamagochi">`:
   \   00000000   54616D61676F       DC8 "Tamagochi"
   \              63686900    
   \   0000000A   0000               DC8 0, 0
   \   0000000C   2573202D2025       DC8 "%s - %d age"
   \              642061676500

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "CUIDisplayableBook">`:
   \   00000000   435549446973       DC8 "CUIDisplayableBook"
   \              706C61796162
   \              6C65426F6F6B
   \              00          
   \   00000013   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x6d\\x69\\x6e\\x5f\\x73\\x74\\x72\\x69\\`:
   \   00000000   6D0069006E00       DC8 6DH, 0, 69H, 0, 6EH, 0, 5FH, 0
   \              5F00        
   \   00000008   730074007200       DC8 73H, 0, 74H, 0, 72H, 0, 69H, 0
   \              6900        
   \   00000010   6E0067005F00       DC8 6EH, 0, 67H, 0, 5FH, 0, 6CH, 0
   \              6C00        
   \   00000018   65006E003A00       DC8 65H, 0, 6EH, 0, 3AH, 0, 20H, 0
   \              2000        
   \   00000020   31000A006D00       DC8 31H, 0, 0AH, 0, 6DH, 0, 61H, 0
   \              6100        
   \   00000028   78005F007300       DC8 78H, 0, 5FH, 0, 73H, 0, 74H, 0
   \              7400        
   \   00000030   720069006E00       DC8 72H, 0, 69H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000038   5F006C006500       DC8 5FH, 0, 6CH, 0, 65H, 0, 6EH, 0
   \              6E00        
   \   00000040   3A0020002500       DC8 3AH, 0, 20H, 0, 25H, 0, 64H, 0
   \              6400        
   \   00000048   0000               DC8 0, 0
   \   0000004A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x64\\x65\\x61\\x74\\x68\\x2e\\x70\\x6e\\`:
   \   00000000   640065006100       DC8 64H, 0, 65H, 0, 61H, 0, 74H, 0
   \              7400        
   \   00000008   68002E007000       DC8 68H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000010   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x50\\x65\\x74">`:
   \   00000000   500065007400       DC8 50H, 0, 65H, 0, 74H, 0, 0, 0
   \              0000        
   \   00000008   500065007400       DC8 50H, 0, 65H, 0, 74H, 0, 25H, 0
   \              2500        
   \   00000010   64000000           DC8 64H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x50\\x65\\x74\\x2e\\x63\\x66\\x67">`:
   \   00000000   500065007400       DC8 50H, 0, 65H, 0, 74H, 0, 2EH, 0
   \              2E00        
   \   00000008   630066006700       DC8 63H, 0, 66H, 0, 67H, 0, 0, 0
   \              0000        
   \   00000010   500065007400       DC8 50H, 0, 65H, 0, 74H, 0, 25H, 0
   \              2500        
   \   00000018   64002E006300       DC8 64H, 0, 2EH, 0, 63H, 0, 66H, 0
   \              6600        
   \   00000020   67000000           DC8 67H, 0, 0, 0
   \   00000024   2F0074007000       DC8 2FH, 0, 74H, 0, 70H, 0, 61H, 0
   \              6100        
   \   0000002C   2F0073007900       DC8 2FH, 0, 73H, 0, 79H, 0, 73H, 0
   \              7300        
   \   00000034   740065006D00       DC8 74H, 0, 65H, 0, 6DH, 0, 2FH, 0
   \              2F00        
   \   0000003C   730065007400       DC8 73H, 0, 65H, 0, 74H, 0, 74H, 0
   \              7400        
   \   00000044   69006E006700       DC8 69H, 0, 6EH, 0, 67H, 0, 73H, 0
   \              7300        
   \   0000004C   0000               DC8 0, 0
   \   0000004E   0000               DC8 0, 0
   \   00000050   660069006C00       DC8 66H, 0, 69H, 0, 6CH, 0, 65H, 0
   \              6500        
   \   00000058   740079007000       DC8 74H, 0, 79H, 0, 70H, 0, 65H, 0
   \              6500        
   \   00000060   2E0062006900       DC8 2EH, 0, 62H, 0, 69H, 0, 6EH, 0
   \              6E00        
   \   00000068   0000               DC8 0, 0
   \   0000006A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x45\\x72\\x72\\x6f\\x72\\x20\\x73\\x61\\`:
   \   00000000   450072007200       DC8 45H, 0, 72H, 0, 72H, 0, 6FH, 0
   \              6F00        
   \   00000008   720020007300       DC8 72H, 0, 20H, 0, 73H, 0, 61H, 0
   \              6100        
   \   00000010   760065002000       DC8 76H, 0, 65H, 0, 20H, 0, 50H, 0
   \              5000        
   \   00000018   650074002E00       DC8 65H, 0, 74H, 0, 2EH, 0, 63H, 0
   \              6300        
   \   00000020   660067002100       DC8 66H, 0, 67H, 0, 21H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x54\\x61\\x6d\\x61\\x67\\x6f\\x63\\x68\\_3`:
   \   00000000   540061006D00       DC8 54H, 0, 61H, 0, 6DH, 0, 61H, 0
   \              6100        
   \   00000008   67006F006300       DC8 67H, 0, 6FH, 0, 63H, 0, 68H, 0
   \              6800        
   \   00000010   69000A007600       DC8 69H, 0, 0AH, 0, 76H, 0, 34H, 0
   \              3400        
   \   00000018   2E0031000A00       DC8 2EH, 0, 31H, 0, 0AH, 0, 0A9H, 0
   \              A900        
   \   00000020   200042006900       DC8 20H, 0, 42H, 0, 69H, 0, 67H, 0
   \              6700        
   \   00000028   480065007200       DC8 48H, 0, 65H, 0, 72H, 0, 63H, 0
   \              6300        
   \   00000030   75006C006500       DC8 75H, 0, 6CH, 0, 65H, 0, 73H, 0
   \              7300        
   \   00000038   200026002000       DC8 20H, 0, 26H, 0, 20H, 0, 50H, 0
   \              5000        
   \   00000040   6C006F006900       DC8 6CH, 0, 6FH, 0, 69H, 0, 6BH, 0
   \              6B00        
   \   00000048   0A000A004F00       DC8 0AH, 0, 0AH, 0, 4FH, 0, 72H, 0
   \              7200        
   \   00000050   690067006900       DC8 69H, 0, 67H, 0, 69H, 0, 6EH, 0
   \              6E00        
   \   00000058   61006C002000       DC8 61H, 0, 6CH, 0, 20H, 0, 69H, 0
   \              6900        
   \   00000060   640065006100       DC8 64H, 0, 65H, 0, 61H, 0, 3AH, 0
   \              3A00        
   \   00000068   200045007200       DC8 20H, 0, 45H, 0, 72H, 0, 61H, 0
   \              6100        
   \   00000070   730065007200       DC8 73H, 0, 65H, 0, 72H, 0, 20H, 0
   \              2000        
   \   00000078   280053006900       DC8 28H, 0, 53H, 0, 69H, 0, 65H, 0
   \              6500        
   \   00000080   6D0065006E00       DC8 6DH, 0, 65H, 0, 6EH, 0, 73H, 0
   \              7300        
   \   00000088   29000000           DC8 29H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x54\\x61\\x6d\\x61\\x67\\x6f\\x63\\x68\\_4`:
   \   00000000   540061006D00       DC8 54H, 0, 61H, 0, 6DH, 0, 61H, 0
   \              6100        
   \   00000008   67006F006300       DC8 67H, 0, 6FH, 0, 63H, 0, 68H, 0
   \              6800        
   \   00000010   690020007300       DC8 69H, 0, 20H, 0, 73H, 0, 65H, 0
   \              6500        
   \   00000018   740074006900       DC8 74H, 0, 74H, 0, 69H, 0, 6EH, 0
   \              6E00        
   \   00000020   670073002000       DC8 67H, 0, 73H, 0, 20H, 0, 75H, 0
   \              7500        
   \   00000028   700064006100       DC8 70H, 0, 64H, 0, 61H, 0, 74H, 0
   \              7400        
   \   00000030   650064002100       DC8 65H, 0, 64H, 0, 21H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x49\\x20\\x6b\\x6e\\x6f\\x77\\x20\\x62\\`:
   \   00000000   490020006B00       DC8 49H, 0, 20H, 0, 6BH, 0, 6EH, 0
   \              6E00        
   \   00000008   6F0077002000       DC8 6FH, 0, 77H, 0, 20H, 0, 62H, 0
   \              6200        
   \   00000010   610064002000       DC8 61H, 0, 64H, 0, 20H, 0, 77H, 0
   \              7700        
   \   00000018   6F0072006400       DC8 6FH, 0, 72H, 0, 64H, 0, 73H, 0
   \              7300        
   \   00000020   21000000           DC8 21H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x42\\x69\\x74\\x63\\x68\\x21\\x20\\x3a\\`:
   \   00000000   420069007400       DC8 42H, 0, 69H, 0, 74H, 0, 63H, 0
   \              6300        
   \   00000008   680021002000       DC8 68H, 0, 21H, 0, 20H, 0, 3AH, 0
   \              3A00        
   \   00000010   29000000           DC8 29H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x47\\x61\\x79\\x21\\x20\\x3a\\x29">`:
   \   00000000   470061007900       DC8 47H, 0, 61H, 0, 79H, 0, 21H, 0
   \              2100        
   \   00000008   20003A002900       DC8 20H, 0, 3AH, 0, 29H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x4d\\x6f\\x72\\x6f\\x6e\\x21\\x20\\x3a\\`:
   \   00000000   4D006F007200       DC8 4DH, 0, 6FH, 0, 72H, 0, 6FH, 0
   \              6F00        
   \   00000008   6E0021002000       DC8 6EH, 0, 21H, 0, 20H, 0, 3AH, 0
   \              3A00        
   \   00000010   29000000           DC8 29H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x49\\x20\\x77\\x61\\x6e\\x74\\x20\\x73\\`:
   \   00000000   490020007700       DC8 49H, 0, 20H, 0, 77H, 0, 61H, 0
   \              6100        
   \   00000008   6E0074002000       DC8 6EH, 0, 74H, 0, 20H, 0, 73H, 0
   \              7300        
   \   00000010   650078002100       DC8 65H, 0, 78H, 0, 21H, 0, 20H, 0
   \              2000        
   \   00000018   3A0029000000       DC8 3AH, 0, 29H, 0, 0, 0
   \   0000001E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x49\\x20\\x6c\\x69\\x6b\\x65\\x20\\x62\\`:
   \   00000000   490020006C00       DC8 49H, 0, 20H, 0, 6CH, 0, 69H, 0
   \              6900        
   \   00000008   6B0065002000       DC8 6BH, 0, 65H, 0, 20H, 0, 62H, 0
   \              6200        
   \   00000010   690067002000       DC8 69H, 0, 67H, 0, 20H, 0, 74H, 0
   \              7400        
   \   00000018   690074007300       DC8 69H, 0, 74H, 0, 73H, 0, 21H, 0
   \              2100        
   \   00000020   20003A002900       DC8 20H, 0, 3AH, 0, 29H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x44\\x69\\x64\\x20\\x79\\x6f\\x75\\x20\\`:
   \   00000000   440069006400       DC8 44H, 0, 69H, 0, 64H, 0, 20H, 0
   \              2000        
   \   00000008   79006F007500       DC8 79H, 0, 6FH, 0, 75H, 0, 20H, 0
   \              2000        
   \   00000010   6D0061007300       DC8 6DH, 0, 61H, 0, 73H, 0, 74H, 0
   \              7400        
   \   00000018   750072006200       DC8 75H, 0, 72H, 0, 62H, 0, 61H, 0
   \              6100        
   \   00000020   740065002000       DC8 74H, 0, 65H, 0, 20H, 0, 74H, 0
   \              7400        
   \   00000028   6F0064006100       DC8 6FH, 0, 64H, 0, 61H, 0, 79H, 0
   \              7900        
   \   00000030   3F0020003A00       DC8 3FH, 0, 20H, 0, 3AH, 0, 29H, 0
   \              2900        
   \   00000038   0000               DC8 0, 0
   \   0000003A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x49\\x27\\x76\\x65\\x20\\x64\\x65\\x6c\\`:
   \   00000000   490027007600       DC8 49H, 0, 27H, 0, 76H, 0, 65H, 0
   \              6500        
   \   00000008   200064006500       DC8 20H, 0, 64H, 0, 65H, 0, 6CH, 0
   \              6C00        
   \   00000010   650074006500       DC8 65H, 0, 74H, 0, 65H, 0, 64H, 0
   \              6400        
   \   00000018   200073006F00       DC8 20H, 0, 73H, 0, 6FH, 0, 6DH, 0
   \              6D00        
   \   00000020   650020006600       DC8 65H, 0, 20H, 0, 66H, 0, 69H, 0
   \              6900        
   \   00000028   6C0065007300       DC8 6CH, 0, 65H, 0, 73H, 0, 20H, 0
   \              2000        
   \   00000030   660072006F00       DC8 66H, 0, 72H, 0, 6FH, 0, 6DH, 0
   \              6D00        
   \   00000038   20007A006200       DC8 20H, 0, 7AH, 0, 62H, 0, 69H, 0
   \              6900        
   \   00000040   6E002F006500       DC8 6EH, 0, 2FH, 0, 65H, 0, 74H, 0
   \              7400        
   \   00000048   63002E002E00       DC8 63H, 0, 2EH, 0, 2EH, 0, 20H, 0
   \              2000        
   \   00000050   3A0029000000       DC8 3AH, 0, 29H, 0, 0, 0
   \   00000056   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x4d\\x61\\x79\\x20\\x69\\x20\\x66\\x6f\\`:
   \   00000000   4D0061007900       DC8 4DH, 0, 61H, 0, 79H, 0, 20H, 0
   \              2000        
   \   00000008   690020006600       DC8 69H, 0, 20H, 0, 66H, 0, 6FH, 0
   \              6F00        
   \   00000010   72006D006100       DC8 72H, 0, 6DH, 0, 61H, 0, 74H, 0
   \              7400        
   \   00000018   20006D006D00       DC8 20H, 0, 6DH, 0, 6DH, 0, 63H, 0
   \              6300        
   \   00000020   610072006400       DC8 61H, 0, 72H, 0, 64H, 0, 20H, 0
   \              2000        
   \   00000028   6E006F007700       DC8 6EH, 0, 6FH, 0, 77H, 0, 3FH, 0
   \              3F00        
   \   00000030   0000               DC8 0, 0
   \   00000032   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x42\\x6c\\x75\\x65\\x54\\x6f\\x6f\\x74\\`:
   \   00000000   42006C007500       DC8 42H, 0, 6CH, 0, 75H, 0, 65H, 0
   \              6500        
   \   00000008   54006F006F00       DC8 54H, 0, 6FH, 0, 6FH, 0, 74H, 0
   \              7400        
   \   00000010   680020007300       DC8 68H, 0, 20H, 0, 73H, 0, 65H, 0
   \              6500        
   \   00000018   720076006900       DC8 72H, 0, 76H, 0, 69H, 0, 63H, 0
   \              6300        
   \   00000020   650020007300       DC8 65H, 0, 20H, 0, 73H, 0, 74H, 0
   \              7400        
   \   00000028   6F0070007000       DC8 6FH, 0, 70H, 0, 70H, 0, 65H, 0
   \              6500        
   \   00000030   640021000000       DC8 64H, 0, 21H, 0, 0, 0
   \   00000036   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x4e\\x65\\x74\\x77\\x6f\\x72\\x6b\\x20\\`:
   \   00000000   4E0065007400       DC8 4EH, 0, 65H, 0, 74H, 0, 77H, 0
   \              7700        
   \   00000008   6F0072006B00       DC8 6FH, 0, 72H, 0, 6BH, 0, 20H, 0
   \              2000        
   \   00000010   690073002000       DC8 69H, 0, 73H, 0, 20H, 0, 6CH, 0
   \              6C00        
   \   00000018   6F0073007400       DC8 6FH, 0, 73H, 0, 74H, 0, 21H, 0
   \              2100        
   \   00000020   0000               DC8 0, 0
   \   00000022   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x53\\x69\\x6d\\x20\\x63\\x61\\x72\\x64\\`:
   \   00000000   530069006D00       DC8 53H, 0, 69H, 0, 6DH, 0, 20H, 0
   \              2000        
   \   00000008   630061007200       DC8 63H, 0, 61H, 0, 72H, 0, 64H, 0
   \              6400        
   \   00000010   200069007300       DC8 20H, 0, 69H, 0, 73H, 0, 20H, 0
   \              2000        
   \   00000018   62006C006F00       DC8 62H, 0, 6CH, 0, 6FH, 0, 63H, 0
   \              6300        
   \   00000020   6B0065006400       DC8 6BH, 0, 65H, 0, 64H, 0, 21H, 0
   \              2100        
   \   00000028   0000               DC8 0, 0
   \   0000002A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x50\\x49\\x4e\\x20\\x69\\x73\\x20\\x75\\`:
   \   00000000   500049004E00       DC8 50H, 0, 49H, 0, 4EH, 0, 20H, 0
   \              2000        
   \   00000008   690073002000       DC8 69H, 0, 73H, 0, 20H, 0, 75H, 0
   \              7500        
   \   00000010   6E0061007600       DC8 6EH, 0, 61H, 0, 76H, 0, 61H, 0
   \              6100        
   \   00000018   69006C006100       DC8 69H, 0, 6CH, 0, 61H, 0, 62H, 0
   \              6200        
   \   00000020   6C0065002000       DC8 6CH, 0, 65H, 0, 20H, 0, 6EH, 0
   \              6E00        
   \   00000028   6F0077002100       DC8 6FH, 0, 77H, 0, 21H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x4d\\x61\\x73\\x74\\x65\\x72\\x20\\x72\\`:
   \   00000000   4D0061007300       DC8 4DH, 0, 61H, 0, 73H, 0, 74H, 0
   \              7400        
   \   00000008   650072002000       DC8 65H, 0, 72H, 0, 20H, 0, 72H, 0
   \              7200        
   \   00000010   650073006500       DC8 65H, 0, 73H, 0, 65H, 0, 74H, 0
   \              7400        
   \   00000018   200073007400       DC8 20H, 0, 73H, 0, 74H, 0, 61H, 0
   \              6100        
   \   00000020   720074007300       DC8 72H, 0, 74H, 0, 73H, 0, 21H, 0
   \              2100        
   \   00000028   0000               DC8 0, 0
   \   0000002A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x47\\x69\\x76\\x65\\x20\\x6d\\x65\\x20\\`:
   \   00000000   470069007600       DC8 47H, 0, 69H, 0, 76H, 0, 65H, 0
   \              6500        
   \   00000008   20006D006500       DC8 20H, 0, 6DH, 0, 65H, 0, 20H, 0
   \              2000        
   \   00000010   79006F007500       DC8 79H, 0, 6FH, 0, 75H, 0, 72H, 0
   \              7200        
   \   00000018   20006D006100       DC8 20H, 0, 6DH, 0, 61H, 0, 6DH, 0
   \              6D00        
   \   00000020   610021002000       DC8 61H, 0, 21H, 0, 20H, 0, 3AH, 0
   \              3A00        
   \   00000028   29000000           DC8 29H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x50\\x72\\x65\\x73\\x73\\x20\\x6f\\x6e\\`:
   \   00000000   500072006500       DC8 50H, 0, 72H, 0, 65H, 0, 73H, 0
   \              7300        
   \   00000008   730020006F00       DC8 73H, 0, 20H, 0, 6FH, 0, 6EH, 0
   \              6E00        
   \   00000010   20006D006500       DC8 20H, 0, 6DH, 0, 65H, 0, 21H, 0
   \              2100        
   \   00000018   20004C006F00       DC8 20H, 0, 4CH, 0, 6FH, 0, 77H, 0
   \              7700        
   \   00000020   650072002E00       DC8 65H, 0, 72H, 0, 2EH, 0, 2EH, 0
   \              2E00        
   \   00000028   20004C006F00       DC8 20H, 0, 4CH, 0, 6FH, 0, 77H, 0
   \              7700        
   \   00000030   650072002E00       DC8 65H, 0, 72H, 0, 2EH, 0, 2EH, 0
   \              2E00        
   \   00000038   2E000000           DC8 2EH, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x54\\x65\\x61\\x63\\x68\\x20\\x6d\\x65\\`:
   \   00000000   540065006100       DC8 54H, 0, 65H, 0, 61H, 0, 63H, 0
   \              6300        
   \   00000008   680020006D00       DC8 68H, 0, 20H, 0, 6DH, 0, 65H, 0
   \              6500        
   \   00000010   200068006F00       DC8 20H, 0, 68H, 0, 6FH, 0, 77H, 0
   \              7700        
   \   00000018   200074006F00       DC8 20H, 0, 74H, 0, 6FH, 0, 20H, 0
   \              2000        
   \   00000020   730074006500       DC8 73H, 0, 74H, 0, 65H, 0, 61H, 0
   \              6100        
   \   00000028   6C0020006D00       DC8 6CH, 0, 20H, 0, 6DH, 0, 6FH, 0
   \              6F00        
   \   00000030   6E0065007900       DC8 6EH, 0, 65H, 0, 79H, 0, 21H, 0
   \              2100        
   \   00000038   0000               DC8 0, 0
   \   0000003A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x4e\\x65\\x77\\x20\\x73\\x79\\x73\\x74\\`:
   \   00000000   4E0065007700       DC8 4EH, 0, 65H, 0, 77H, 0, 20H, 0
   \              2000        
   \   00000008   730079007300       DC8 73H, 0, 79H, 0, 73H, 0, 74H, 0
   \              7400        
   \   00000010   65006D002000       DC8 65H, 0, 6DH, 0, 20H, 0, 74H, 0
   \              7400        
   \   00000018   69006D006500       DC8 69H, 0, 6DH, 0, 65H, 0, 20H, 0
   \              2000        
   \   00000020   610063006300       DC8 61H, 0, 63H, 0, 63H, 0, 65H, 0
   \              6500        
   \   00000028   700074006500       DC8 70H, 0, 74H, 0, 65H, 0, 64H, 0
   \              6400        
   \   00000030   21000000           DC8 21H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x68\\x65\\x6c\\x6c\\x6f\\x2e\\x77\\x61\\`:
   \   00000000   680065006C00       DC8 68H, 0, 65H, 0, 6CH, 0, 6CH, 0
   \              6C00        
   \   00000008   6F002E007700       DC8 6FH, 0, 2EH, 0, 77H, 0, 61H, 0
   \              6100        
   \   00000010   76000000           DC8 76H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x61\\x6c\\x61\\x72\\x6d\\x2e\\x77\\x61\\`:
   \   00000000   61006C006100       DC8 61H, 0, 6CH, 0, 61H, 0, 72H, 0
   \              7200        
   \   00000008   6D002E007700       DC8 6DH, 0, 2EH, 0, 77H, 0, 61H, 0
   \              6100        
   \   00000010   76000000           DC8 76H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x66\\x69\\x72\\x73\\x74\\x62\\x6c\\x6f\\`:
   \   00000000   660069007200       DC8 66H, 0, 69H, 0, 72H, 0, 73H, 0
   \              7300        
   \   00000008   740062006C00       DC8 74H, 0, 62H, 0, 6CH, 0, 6FH, 0
   \              6F00        
   \   00000010   6F0064002E00       DC8 6FH, 0, 64H, 0, 2EH, 0, 77H, 0
   \              7700        
   \   00000018   610076000000       DC8 61H, 0, 76H, 0, 0, 0
   \   0000001E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x63\\x68\\x65\\x65\\x72\\x5f\\x66\\x65\\`:
   \   00000000   630068006500       DC8 63H, 0, 68H, 0, 65H, 0, 65H, 0
   \              6500        
   \   00000008   72005F006600       DC8 72H, 0, 5FH, 0, 66H, 0, 65H, 0
   \              6500        
   \   00000010   6D0061006C00       DC8 6DH, 0, 61H, 0, 6CH, 0, 65H, 0
   \              6500        
   \   00000018   2E0077006100       DC8 2EH, 0, 77H, 0, 61H, 0, 76H, 0
   \              7600        
   \   00000020   0000               DC8 0, 0
   \   00000022   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x63\\x68\\x65\\x65\\x72\\x5f\\x6d\\x61\\`:
   \   00000000   630068006500       DC8 63H, 0, 68H, 0, 65H, 0, 65H, 0
   \              6500        
   \   00000008   72005F006D00       DC8 72H, 0, 5FH, 0, 6DH, 0, 61H, 0
   \              6100        
   \   00000010   6C0065002E00       DC8 6CH, 0, 65H, 0, 2EH, 0, 77H, 0
   \              7700        
   \   00000018   610076000000       DC8 61H, 0, 76H, 0, 0, 0
   \   0000001E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x69\\x6c\\x65\\x2e\\x70\\x6e\\`:
   \   00000000   73006D006900       DC8 73H, 0, 6DH, 0, 69H, 0, 6CH, 0
   \              6C00        
   \   00000008   65002E007000       DC8 65H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000010   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x43\\x68\\x61\\x6e\\x67\\x65\\x20\\x6e\\`:
   \   00000000   430068006100       DC8 43H, 0, 68H, 0, 61H, 0, 6EH, 0
   \              6E00        
   \   00000008   670065002000       DC8 67H, 0, 65H, 0, 20H, 0, 6EH, 0
   \              6E00        
   \   00000010   61006D006500       DC8 61H, 0, 6DH, 0, 65H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x64\\x72\\x65\\x61\\x6d\\x2e\\x70\\x6e\\`:
   \   00000000   640072006500       DC8 64H, 0, 72H, 0, 65H, 0, 61H, 0
   \              6100        
   \   00000008   6D002E007000       DC8 6DH, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000010   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x68\\x75\\x6e\\x67\\x65\\x72\\x2e\\x70\\`:
   \   00000000   680075006E00       DC8 68H, 0, 75H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000008   650072002E00       DC8 65H, 0, 72H, 0, 2EH, 0, 70H, 0
   \              7000        
   \   00000010   6E0067000000       DC8 6EH, 0, 67H, 0, 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x48\\x65\\x61\\x6c\\x74\\x68\\x2e\\x70\\`:
   \   00000000   480065006100       DC8 48H, 0, 65H, 0, 61H, 0, 6CH, 0
   \              6C00        
   \   00000008   740068002E00       DC8 74H, 0, 68H, 0, 2EH, 0, 70H, 0
   \              7000        
   \   00000010   6E0067000000       DC8 6EH, 0, 67H, 0, 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x48\\x61\\x70\\x70\\x69\\x6e\\x65\\x73\\`:
   \   00000000   480061007000       DC8 48H, 0, 61H, 0, 70H, 0, 70H, 0
   \              7000        
   \   00000008   69006E006500       DC8 69H, 0, 6EH, 0, 65H, 0, 73H, 0
   \              7300        
   \   00000010   73002E007000       DC8 73H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000018   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x44\\x69\\x72\\x74\\x69\\x6e\\x65\\x73\\`:
   \   00000000   440069007200       DC8 44H, 0, 69H, 0, 72H, 0, 74H, 0
   \              7400        
   \   00000008   69006E006500       DC8 69H, 0, 6EH, 0, 65H, 0, 73H, 0
   \              7300        
   \   00000010   73002E007000       DC8 73H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000018   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x42\\x6f\\x72\\x65\\x64\\x6f\\x6d\\x2e\\`:
   \   00000000   42006F007200       DC8 42H, 0, 6FH, 0, 72H, 0, 65H, 0
   \              6500        
   \   00000008   64006F006D00       DC8 64H, 0, 6FH, 0, 6DH, 0, 2EH, 0
   \              2E00        
   \   00000010   70006E006700       DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x42\\x65\\x68\\x61\\x76\\x69\\x6f\\x75\\`:
   \   00000000   420065006800       DC8 42H, 0, 65H, 0, 68H, 0, 61H, 0
   \              6100        
   \   00000008   760069006F00       DC8 76H, 0, 69H, 0, 6FH, 0, 75H, 0
   \              7500        
   \   00000010   72002E007000       DC8 72H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000018   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x69\\x6e\\x67\\x6c\\x65\\x2e\\x70\\`:
   \   00000000   730069006E00       DC8 73H, 0, 69H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000008   6C0065002E00       DC8 6CH, 0, 65H, 0, 2EH, 0, 70H, 0
   \              7000        
   \   00000010   6E0067000000       DC8 6EH, 0, 67H, 0, 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x69\\x6e\\x5f\\x6c\\x6f\\x76\\x65\\x2e\\`:
   \   00000000   69006E005F00       DC8 69H, 0, 6EH, 0, 5FH, 0, 6CH, 0
   \              6C00        
   \   00000008   6F0076006500       DC8 6FH, 0, 76H, 0, 65H, 0, 2EH, 0
   \              2E00        
   \   00000010   70006E006700       DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x62\\x61\\x74\\x68\\x65\\x2e\\x70\\x6e\\`:
   \   00000000   620061007400       DC8 62H, 0, 61H, 0, 74H, 0, 68H, 0
   \              6800        
   \   00000008   65002E007000       DC8 65H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000010   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x6e\\x75\\x6c\\x6c\\x2e\\x70\\x6e\\x67"`:
   \   00000000   6E0075006C00       DC8 6EH, 0, 75H, 0, 6CH, 0, 6CH, 0
   \              6C00        
   \   00000008   2E0070006E00       DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x67\\x61\\x6d\\x65\\x2e\\x70\\x6e\\x67"`:
   \   00000000   670061006D00       DC8 67H, 0, 61H, 0, 6DH, 0, 65H, 0
   \              6500        
   \   00000008   2E0070006E00       DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x6d\\x6f\\x6f\\x6e\\x2e\\x70\\x6e\\x67"`:
   \   00000000   6D006F006F00       DC8 6DH, 0, 6FH, 0, 6FH, 0, 6EH, 0
   \              6E00        
   \   00000008   2E0070006E00       DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x6d\\x75\\x73\\x69\\x63\\x2e\\x70\\x6e\\`:
   \   00000000   6D0075007300       DC8 6DH, 0, 75H, 0, 73H, 0, 69H, 0
   \              6900        
   \   00000008   63002E007000       DC8 63H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000010   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x76\\x61\\x63\\x63\\x69\\x6e\\x61\\x74\\`:
   \   00000000   760061006300       DC8 76H, 0, 61H, 0, 63H, 0, 63H, 0
   \              6300        
   \   00000008   69006E006100       DC8 69H, 0, 6EH, 0, 61H, 0, 74H, 0
   \              7400        
   \   00000010   65002E007000       DC8 65H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000018   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x64\\x69\\x73\\x63\\x69\\x70\\x6c\\x69\\`:
   \   00000000   640069007300       DC8 64H, 0, 69H, 0, 73H, 0, 63H, 0
   \              6300        
   \   00000008   690070006C00       DC8 69H, 0, 70H, 0, 6CH, 0, 69H, 0
   \              6900        
   \   00000010   6E0065002E00       DC8 6EH, 0, 65H, 0, 2EH, 0, 70H, 0
   \              7000        
   \   00000018   6E0067000000       DC8 6EH, 0, 67H, 0, 0, 0
   \   0000001E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6c\\x65\\x65\\x70\\x2e\\x70\\x6e\\`:
   \   00000000   73006C006500       DC8 73H, 0, 6CH, 0, 65H, 0, 65H, 0
   \              6500        
   \   00000008   70002E007000       DC8 70H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000010   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x74\\x61\\x74\\x75\\x73\\x2e\\x70\\`:
   \   00000000   730074006100       DC8 73H, 0, 74H, 0, 61H, 0, 74H, 0
   \              7400        
   \   00000008   750073002E00       DC8 75H, 0, 73H, 0, 2EH, 0, 70H, 0
   \              7000        
   \   00000010   6E0067000000       DC8 6EH, 0, 67H, 0, 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x5f\\x73\\x6d\\x69\\x6c\\x65\\`:
   \   00000000   73006D005F00       DC8 73H, 0, 6DH, 0, 5FH, 0, 73H, 0
   \              7300        
   \   00000008   6D0069006C00       DC8 6DH, 0, 69H, 0, 6CH, 0, 65H, 0
   \              6500        
   \   00000010   2E0070006E00       DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000018   0000               DC8 0, 0
   \   0000001A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x65\\x74\\x74\\x69\\x6e\\x67\\x73\\`:
   \   00000000   730065007400       DC8 73H, 0, 65H, 0, 74H, 0, 74H, 0
   \              7400        
   \   00000008   69006E006700       DC8 69H, 0, 6EH, 0, 67H, 0, 73H, 0
   \              7300        
   \   00000010   2E0070006E00       DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000018   0000               DC8 0, 0
   \   0000001A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x61\\x62\\x6f\\x75\\x74\\x2e\\x70\\x6e\\`:
   \   00000000   610062006F00       DC8 61H, 0, 62H, 0, 6FH, 0, 75H, 0
   \              7500        
   \   00000008   74002E007000       DC8 74H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000010   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x68\\x65\\x61\\x72\\x74\\x2e\\x70\\x6e\\`:
   \   00000000   680065006100       DC8 68H, 0, 65H, 0, 61H, 0, 72H, 0
   \              7200        
   \   00000008   74002E007000       DC8 74H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000010   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x5f\\x68\\x75\\x6e\\x67\\x65\\`:
   \   00000000   73006D005F00       DC8 73H, 0, 6DH, 0, 5FH, 0, 68H, 0
   \              6800        
   \   00000008   75006E006700       DC8 75H, 0, 6EH, 0, 67H, 0, 65H, 0
   \              6500        
   \   00000010   72002E007000       DC8 72H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000018   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x5f\\x48\\x61\\x70\\x70\\x69\\`:
   \   00000000   73006D005F00       DC8 73H, 0, 6DH, 0, 5FH, 0, 48H, 0
   \              4800        
   \   00000008   610070007000       DC8 61H, 0, 70H, 0, 70H, 0, 69H, 0
   \              6900        
   \   00000010   6E0065007300       DC8 6EH, 0, 65H, 0, 73H, 0, 73H, 0
   \              7300        
   \   00000018   2E0070006E00       DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000020   0000               DC8 0, 0
   \   00000022   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x5f\\x44\\x69\\x72\\x74\\x69\\`:
   \   00000000   73006D005F00       DC8 73H, 0, 6DH, 0, 5FH, 0, 44H, 0
   \              4400        
   \   00000008   690072007400       DC8 69H, 0, 72H, 0, 74H, 0, 69H, 0
   \              6900        
   \   00000010   6E0065007300       DC8 6EH, 0, 65H, 0, 73H, 0, 73H, 0
   \              7300        
   \   00000018   2E0070006E00       DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000020   0000               DC8 0, 0
   \   00000022   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x5f\\x42\\x6f\\x72\\x65\\x64\\`:
   \   00000000   73006D005F00       DC8 73H, 0, 6DH, 0, 5FH, 0, 42H, 0
   \              4200        
   \   00000008   6F0072006500       DC8 6FH, 0, 72H, 0, 65H, 0, 64H, 0
   \              6400        
   \   00000010   6F006D002E00       DC8 6FH, 0, 6DH, 0, 2EH, 0, 70H, 0
   \              7000        
   \   00000018   6E0067000000       DC8 6EH, 0, 67H, 0, 0, 0
   \   0000001E   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x5f\\x42\\x65\\x68\\x61\\x76\\`:
   \   00000000   73006D005F00       DC8 73H, 0, 6DH, 0, 5FH, 0, 42H, 0
   \              4200        
   \   00000008   650068006100       DC8 65H, 0, 68H, 0, 61H, 0, 76H, 0
   \              7600        
   \   00000010   69006F007500       DC8 69H, 0, 6FH, 0, 75H, 0, 72H, 0
   \              7200        
   \   00000018   2E0070006E00       DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000020   0000               DC8 0, 0
   \   00000022   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x5f\\x64\\x72\\x65\\x61\\x6d\\`:
   \   00000000   73006D005F00       DC8 73H, 0, 6DH, 0, 5FH, 0, 64H, 0
   \              6400        
   \   00000008   720065006100       DC8 72H, 0, 65H, 0, 61H, 0, 6DH, 0
   \              6D00        
   \   00000010   2E0070006E00       DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000018   0000               DC8 0, 0
   \   0000001A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x5f\\x73\\x65\\x78\\x2e\\x70\\`:
   \   00000000   73006D005F00       DC8 73H, 0, 6DH, 0, 5FH, 0, 73H, 0
   \              7300        
   \   00000008   650078002E00       DC8 65H, 0, 78H, 0, 2EH, 0, 70H, 0
   \              7000        
   \   00000010   6E0067000000       DC8 6EH, 0, 67H, 0, 0, 0
   \   00000016   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x5f\\x6d\\x61\\x6c\\x65\\x2e\\`:
   \   00000000   73006D005F00       DC8 73H, 0, 6DH, 0, 5FH, 0, 6DH, 0
   \              6D00        
   \   00000008   61006C006500       DC8 61H, 0, 6CH, 0, 65H, 0, 2EH, 0
   \              2E00        
   \   00000010   70006E006700       DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0
   \              0000        

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x5f\\x66\\x65\\x6d\\x61\\x6c\\`:
   \   00000000   73006D005F00       DC8 73H, 0, 6DH, 0, 5FH, 0, 66H, 0
   \              6600        
   \   00000008   65006D006100       DC8 65H, 0, 6DH, 0, 61H, 0, 6CH, 0
   \              6C00        
   \   00000010   65002E007000       DC8 65H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000018   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x5f\\x66\\x61\\x6d\\x69\\x6c\\`:
   \   00000000   73006D005F00       DC8 73H, 0, 6DH, 0, 5FH, 0, 66H, 0
   \              6600        
   \   00000008   61006D006900       DC8 61H, 0, 6DH, 0, 69H, 0, 6CH, 0
   \              6C00        
   \   00000010   79002E007000       DC8 79H, 0, 2EH, 0, 70H, 0, 6EH, 0
   \              6E00        
   \   00000018   67000000           DC8 67H, 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x73\\x6d\\x5f\\x62\\x61\\x74\\x68\\x65\\`:
   \   00000000   73006D005F00       DC8 73H, 0, 6DH, 0, 5FH, 0, 62H, 0
   \              6200        
   \   00000008   610074006800       DC8 61H, 0, 74H, 0, 68H, 0, 65H, 0
   \              6500        
   \   00000010   2E0070006E00       DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000018   0000               DC8 0, 0
   \   0000001A   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x72\\x6f\\x6f\\x6d\\x2e\\x70\\x6e\\x67"`:
   \   00000000   72006F006F00       DC8 72H, 0, 6FH, 0, 6FH, 0, 6DH, 0
   \              6D00        
   \   00000008   2E0070006E00       DC8 2EH, 0, 70H, 0, 6EH, 0, 67H, 0
   \              6700        
   \   00000010   0000               DC8 0, 0
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Tamagochi_MainPage">`:
   \   00000000   54616D61676F       DC8 "Tamagochi_MainPage"
   \              6368695F4D61
   \              696E50616765
   \              00          
   \   00000013   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "Tamagochi_BasePage">`:
   \   00000000   54616D61676F       DC8 "Tamagochi_BasePage"
   \              6368695F4261
   \              736550616765
   \              00          
   \   00000013   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "BookManagerDaemon">`:
   \   00000000   426F6F6B4D61       DC8 "BookManagerDaemon"
   \              6E6167657244
   \              61656D6F6E00
   \   00000012   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x46\\x6f\\x72\\x65\\x69\\x67\\x6e\\x20\\`:
   \   00000000   46006F007200       DC8 46H, 0, 6FH, 0, 72H, 0, 65H, 0
   \              6500        
   \   00000008   690067006E00       DC8 69H, 0, 67H, 0, 6EH, 0, 20H, 0
   \              2000        
   \   00000010   610070007000       DC8 61H, 0, 70H, 0, 70H, 0, 0, 0
   \              0000        
   \   00000018   4A0061007600       DC8 4AH, 0, 61H, 0, 76H, 0, 61H, 0
   \              6100        
   \   00000020   0000               DC8 0, 0
   \   00000022   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x54\\x61\\x6d\\x61\\x67\\x6f\\x63\\x68\\_5`:
   \   00000000   540061006D00       DC8 54H, 0, 61H, 0, 6DH, 0, 61H, 0
   \              6100        
   \   00000008   67006F006300       DC8 67H, 0, 6FH, 0, 63H, 0, 68H, 0
   \              6800        
   \   00000010   69004C006F00       DC8 69H, 0, 4CH, 0, 6FH, 0, 67H, 0
   \              6700        
   \   00000018   2E0074007800       DC8 2EH, 0, 74H, 0, 78H, 0, 74H, 0
   \              7400        
   \   00000020   0000               DC8 0, 0
   \   00000022   0000               DC8 0, 0
   \   00000024   253032643A25       DC8 "%02d:%02d:%02d %s\012"
   \              3032643A2530
   \              32642025730A
   \              00          
   \   00000037   00                 DC8 0
   2042          
   2043          /*
   2044          Revision history:
   2045            4.1
   2046                + “еперь, если умер, то ничего не просит.
   2047                + The brazilian portuguese version was added.
   2048                + улучшени€/исправлени€/оптимизаци€
   2049            4.0
   2050                + »зменени€ в конигурационном файле.
   2051                + ƒобавлена возможность помыть питомца.
   2052                + ƒобавлен переход в комнату с едой из меню.
   2053                + ƒобавлено мигание экраном.
   2054                + улучшени€/исправлени€/оптимизаци€
   2055            3.0
   2056                + »зменени€ в конигурационном файле.
   2057                + ѕереработан алгоритм жизненного цикла :-)
   2058                + улучшени€/исправлени€/оптимизаци€
   2059            2.0
   2060                + »зменени€ в конигурационном файле.
   2061                + ѕереработан код
   2062                + ћожно дать им€ питомцу (отбражаетс€ в меню/статусе)
   2063                + ћожно задать/посмотреть пол питомца (отбражаетс€ в статусе)
   2064                + ƒинамическое движение по экрану
   2065                + »зменен алгоритм засыпани€.
   2066                + «агрузка внешнего списка игр/плейеров, размером не более 1кбайта (один раз при старте)
   2067                + ѕросыпаетс€ если включаетс€ музыка/радио/игры
   2068                + улучшени€/исправлени€/оптимизаци€
   2069            1.2.1
   2070                + Ќебольшое исправление ошибок и оптимизаци€.
   2071            1.2
   2072                + »зменени€ в конигурационном файле.
   2073                + ѕри низкой дисциплине капризничает  (не ложитс€ спать, не лечитс€)
   2074                + ƒобавлена вибраци€.
   2075                + ƒобавлена возможность использовать дл€ навигации цифровые клавиши в меню/статусе.
   2076                + ¬ыбор времени показа сообщений.
   2077                + улучшени€/исправлени€/оптимизаци€
   2078            1.1
   2079                + »зменени€ в конигурационном файле.
   2080                + ќтображение возраста в букменеджере
   2081                + ¬озожность отключать звуки во врем€ ночного сна (за исключением действий в меню).
   2082                + ≈сли не спит, то при скуке включает музыку (плейер/радио)
   2083                +  ушает если включена зар€дка
   2084            1.0
   2085                + Ќачальна€ верси€
   2086          */
   2087          

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     BatheCommand(int, BOOK *, int)   292
     ChangeName(int, BOOK *, int)      84
     ChangeStatusImage(int, BOOK *, int)
                                      292
     CheckEv(BOOK *, int)               0
     CreateTestFile()                  40
     Discipline(int, BOOK *, int)     292
     Display_ReDraw(DISP_OBJ *, int, int, int)
                                       24
     DrawParams(int)                   36
     FamilyLifeUpdate(int)              0
     FatigueSleep(int, BOOK *, int)     4
     FindName()                       328
     GameDetected()                     4
     GamePlay(int, BOOK *, int)       292
     GetJavaName(BOOK *)              208
     HungerSleep(int, BOOK *, int)      4
     InfoStatus(int, BOOK *, int)       4
     InitPetPos(int)                    8
     InitPetVar(int)                    4
     InitStatus(int, int, int)         16
     LPARAM::LPARAM(int)                0
     LPARAM::LPARAM(void *)             0
     LPARAM::operator void *()          0
     Light()                           16
     LoadAllPets()                     12
     LoadStatus(int)                  776
     MainPageOnCreate(void *, BOOK *)
                                      724
     NewBabyCheck(int)                 12
     NewKey(int, int, int, LPARAM, DISP_OBJ *)
                                       12
     NightSleep(int, BOOK *, int)       4
     OnBackChangeName(BOOK *, u16 *, int)
                                        8
     OnOkChangeName(BOOK *, wchar_t *, int)
                                      148
     Random()                           0
     Randomize()                       12
     SB_ELF_Killed(void *, BOOK *)     24
     SaveStatus(int)                  488
     Send_REDRAW_RELEASE()              8
     ShowAuthorInfo(void *, BOOK *)    20
     SleepCommand(int, BOOK *, int)     4
     SleepProc(int, BOOK *, int, int)
                                      296
     Soft_ReDraw(DISP_OBJ *, int, int, int)
                                        4
     Status_ReDraw(DISP_OBJ *, int, int, int)
                                        4
     TerminateElf(void *, BOOK *)      12
     UpdateName()                      12
     UpdatePosition(int)                0
     Vaccinate(int, BOOK *, int)      292
     VerifyStatus(int)                  0
     WriteLog(char *)                1056
     elf_exit()                         4
     free_icons()                      20
     free_strings()                     0
     isBookmanDaemonBook(BOOK *)        4
     isNight()                         12
     isTamagochiBook(BOOK *)            8
     life_proc(int, BOOK *, int)     1688
     load_icons()                     312
     load_strings()                     4
     main()                            36
     offTimerScreen(u16, LPARAM)       12
     onBcfgConfig(void *, BOOK *)       8
     onCloseTamagochiBook(BOOK *)     280
     onHelloMsg(void *, BOOK *)       296
     onReconfigElf(void *, BOOK *)     28
     onTimerScreen(u16, LPARAM)        12
     onTimer_life(u16, LPARAM)         24
     onTimer_refresh(u16, LPARAM)      16
     onTimer_save(u16, LPARAM)         16
     set_all_old_img_status(int)        0
     set_all_simg_status(int)           0
     start_vibra()                     16


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     LPARAM::LPARAM(int)               8
     LPARAM::LPARAM(void *)            8
     LPARAM::operator void *()         8
     rndtable                        256
     rndindex                          1
     Randomize()                      44
     Random()                         40
     SpeakMessage                   1824
     icons_names                     152
     Pets                           8704
     isBookmanDaemonBook(BOOK *)      44
     CheckEv(BOOK *, int)             72
     GetJavaName(BOOK *)             104
     WriteLog(char *)                180
     free_strings()                    4
     load_strings()                    4
     free_icons()                    140
     load_icons()                    304
     UpdateName()                    100
     isNight()                       124
     start_vibra()                   128
     offTimerScreen(u16, LPARAM)      60
     onTimerScreen(u16, LPARAM)       80
     Light()                         164
     set_all_simg_status(int)         36
     set_all_old_img_status(int)      36
     FindName()                      320
     GameDetected()                   88
     ChangeStatusImage(int, BOOK *, int)
                                     972
     VerifyStatus(int)               216
     InfoStatus(int, BOOK *, int)      8
     GamePlay(int, BOOK *, int)      452
     Vaccinate(int, BOOK *, int)     492
     Discipline(int, BOOK *, int)    440
     SleepProc(int, BOOK *, int, int)
                                     604
     NightSleep(int, BOOK *, int)      8
     FatigueSleep(int, BOOK *, int)    8
     HungerSleep(int, BOOK *, int)     8
     SleepCommand(int, BOOK *, int)    8
     BatheCommand(int, BOOK *, int)  412
     OnBackChangeName(BOOK *, u16 *, int)
                                      36
     OnOkChangeName(BOOK *, wchar_t *, int)
                                     184
     ChangeName(int, BOOK *, int)    300
     FamilyLifeUpdate(int)            84
     NewBabyCheck(int)               152
     onTimer_save(u16, LPARAM)       100
     UpdatePosition(int)             224
     onTimer_refresh(u16, LPARAM)    160
     life_proc(int, BOOK *, int)    3348
     onTimer_life(u16, LPARAM)       188
     NewKey(int, int, int, LPARAM, DISP_OBJ *)
                                     136
     DrawParams(int)                 212
     Display_ReDraw(DISP_OBJ *, int, int, int)
                                      68
     Status_ReDraw(DISP_OBJ *, int, int, int)
                                      32
     Soft_ReDraw(DISP_OBJ *, int, int, int)
                                      32
     InitStatus(int, int, int)       208
     LoadStatus(int)                 352
     SaveStatus(int)                 224
     InitPetPos(int)                 108
     InitPetVar(int)                  64
     CreateTestFile()                 88
     LoadAllPets()                   160
     MainPageOnCreate(void *, BOOK *)
                                     916
     Tamagochi_MainPageEvents         16
     Send_REDRAW_RELEASE()            96
     SB_ELF_Killed(void *, BOOK *)   332
     TerminateElf(void *, BOOK *)     60
     ShowAuthorInfo(void *, BOOK *)   84
     onReconfigElf(void *, BOOK *)   352
     onBcfgConfig(void *, BOOK *)     80
     onHelloMsg(void *, BOOK *)      476
     Tamagochi_BasePageEvents         48
     timer_save                     2280
     img_names                        84
     elf_exit()                       28
     isTamagochiBook(BOOK *)          60
     onCloseTamagochiBook(BOOK *)    492
     main()                          636
     ??DataTable4                      4
     ??DataTable7                      4
     ??DataTable8                      4
     ??DataTable9                      4
     ??DataTable12                     4
     ??DataTable17                     4
     ??DataTable18                     4
     ??DataTable21                     4
     ??DataTable23                     4
     ??DataTable24                     4
     ??DataTable47                     4
     ??DataTable57                     4
     ??DataTable58                     4
     ??DataTable60                     4
     ??DataTable62                     4
     ??DataTable66                     4
     ??DataTable68                     4
     ??DataTable70                     4
     ??DataTable71                     4
     ??DataTable74                     4
     ??DataTable75                     4
     ??DataTable76                     4
     ??DataTable77                     4
     ??DataTable78                     4
     ??DataTable80                     4
     ??DataTable81                     4
     ??DataTable82                     4
     ??DataTable94                     4
     ??DataTable100                    4
     ??DataTable101                    4
     ??DataTable104                    4
     ??DataTable106                    4
     ??DataTable108                    4
     ??DataTable114                    4
     ??DataTable119                    4
     ??DataTable121                    4
     ??DataTable122                    4
     ??DataTable131                    4
     ??DataTable132                    4
     ??DataTable133                    4
     ??DataTable134                    4
     ??DataTable135                    4
     ??DataTable140                    4
     ??DataTable141                    4
     ??DataTable142                    4
     ??DataTable143                    4
     ??DataTable146                    4
     ??DataTable147                    4
     ??DataTable148                    4
     ??DataTable158                    4
     ??DataTable159                    4
     ??DataTable160                    4
     ??DataTable161                    4
     ??DataTable162                    4
     ??DataTable163                    4
     ??DataTable164                    4
     ??DataTable166                    4
     ??DataTable167                    4
     ??DataTable168                    4
     ??DataTable169                    4
     ??DataTable170                    4
     ??DataTable171                    4
     ?<Initializer for timer_save>  2280
     ?<Initializer for img_names>     84
     ?<Constant L"\x46\x69\x6c\x65\x73\x79\x73\x74\
                                      36
     ?<Constant "Tamagochi">          24
     ?<Constant "CUIDisplayableBook">
                                      20
     ?<Constant L"\x6d\x69\x6e\x5f\x73\x74\x72\x69\
                                      76
     ?<Constant L"\x64\x65\x61\x74\x68\x2e\x70\x6e\
                                      20
     ?<Constant L"\x50\x65\x74">      20
     ?<Constant L"\x50\x65\x74\x2e\x63\x66\x67">
                                     108
     ?<Constant L"\x45\x72\x72\x6f\x72\x20\x73\x61\
                                      40
     ?<Constant L"\x54\x61\x6d\x61\x67\x6f\x63\x68\_3
                                     140
     ?<Constant L"\x54\x61\x6d\x61\x67\x6f\x63\x68\_4
                                      56
     ?<Constant L"\x49\x20\x6b\x6e\x6f\x77\x20\x62\
                                      36
     ?<Constant L"\x42\x69\x74\x63\x68\x21\x20\x3a\
                                      20
     ?<Constant L"\x47\x61\x79\x21\x20\x3a\x29">
                                      16
     ?<Constant L"\x4d\x6f\x72\x6f\x6e\x21\x20\x3a\
                                      20
     ?<Constant L"\x49\x20\x77\x61\x6e\x74\x20\x73\
                                      32
     ?<Constant L"\x49\x20\x6c\x69\x6b\x65\x20\x62\
                                      40
     ?<Constant L"\x44\x69\x64\x20\x79\x6f\x75\x20\
                                      60
     ?<Constant L"\x49\x27\x76\x65\x20\x64\x65\x6c\
                                      88
     ?<Constant L"\x4d\x61\x79\x20\x69\x20\x66\x6f\
                                      52
     ?<Constant L"\x42\x6c\x75\x65\x54\x6f\x6f\x74\
                                      56
     ?<Constant L"\x4e\x65\x74\x77\x6f\x72\x6b\x20\
                                      36
     ?<Constant L"\x53\x69\x6d\x20\x63\x61\x72\x64\
                                      44
     ?<Constant L"\x50\x49\x4e\x20\x69\x73\x20\x75\
                                      48
     ?<Constant L"\x4d\x61\x73\x74\x65\x72\x20\x72\
                                      44
     ?<Constant L"\x47\x69\x76\x65\x20\x6d\x65\x20\
                                      44
     ?<Constant L"\x50\x72\x65\x73\x73\x20\x6f\x6e\
                                      60
     ?<Constant L"\x54\x65\x61\x63\x68\x20\x6d\x65\
                                      60
     ?<Constant L"\x4e\x65\x77\x20\x73\x79\x73\x74\
                                      52
     ?<Constant L"\x68\x65\x6c\x6c\x6f\x2e\x77\x61\
                                      20
     ?<Constant L"\x61\x6c\x61\x72\x6d\x2e\x77\x61\
                                      20
     ?<Constant L"\x66\x69\x72\x73\x74\x62\x6c\x6f\
                                      32
     ?<Constant L"\x63\x68\x65\x65\x72\x5f\x66\x65\
                                      36
     ?<Constant L"\x63\x68\x65\x65\x72\x5f\x6d\x61\
                                      32
     ?<Constant L"\x73\x6d\x69\x6c\x65\x2e\x70\x6e\
                                      20
     ?<Constant L"\x43\x68\x61\x6e\x67\x65\x20\x6e\
                                      24
     ?<Constant L"\x64\x72\x65\x61\x6d\x2e\x70\x6e\
                                      20
     ?<Constant L"\x68\x75\x6e\x67\x65\x72\x2e\x70\
                                      24
     ?<Constant L"\x48\x65\x61\x6c\x74\x68\x2e\x70\
                                      24
     ?<Constant L"\x48\x61\x70\x70\x69\x6e\x65\x73\
                                      28
     ?<Constant L"\x44\x69\x72\x74\x69\x6e\x65\x73\
                                      28
     ?<Constant L"\x42\x6f\x72\x65\x64\x6f\x6d\x2e\
                                      24
     ?<Constant L"\x42\x65\x68\x61\x76\x69\x6f\x75\
                                      28
     ?<Constant L"\x73\x69\x6e\x67\x6c\x65\x2e\x70\
                                      24
     ?<Constant L"\x69\x6e\x5f\x6c\x6f\x76\x65\x2e\
                                      24
     ?<Constant L"\x62\x61\x74\x68\x65\x2e\x70\x6e\
                                      20
     ?<Constant L"\x6e\x75\x6c\x6c\x2e\x70\x6e\x67"
                                      20
     ?<Constant L"\x67\x61\x6d\x65\x2e\x70\x6e\x67"
                                      20
     ?<Constant L"\x6d\x6f\x6f\x6e\x2e\x70\x6e\x67"
                                      20
     ?<Constant L"\x6d\x75\x73\x69\x63\x2e\x70\x6e\
                                      20
     ?<Constant L"\x76\x61\x63\x63\x69\x6e\x61\x74\
                                      28
     ?<Constant L"\x64\x69\x73\x63\x69\x70\x6c\x69\
                                      32
     ?<Constant L"\x73\x6c\x65\x65\x70\x2e\x70\x6e\
                                      20
     ?<Constant L"\x73\x74\x61\x74\x75\x73\x2e\x70\
                                      24
     ?<Constant L"\x73\x6d\x5f\x73\x6d\x69\x6c\x65\
                                      28
     ?<Constant L"\x73\x65\x74\x74\x69\x6e\x67\x73\
                                      28
     ?<Constant L"\x61\x62\x6f\x75\x74\x2e\x70\x6e\
                                      20
     ?<Constant L"\x68\x65\x61\x72\x74\x2e\x70\x6e\
                                      20
     ?<Constant L"\x73\x6d\x5f\x68\x75\x6e\x67\x65\
                                      28
     ?<Constant L"\x73\x6d\x5f\x48\x61\x70\x70\x69\
                                      36
     ?<Constant L"\x73\x6d\x5f\x44\x69\x72\x74\x69\
                                      36
     ?<Constant L"\x73\x6d\x5f\x42\x6f\x72\x65\x64\
                                      32
     ?<Constant L"\x73\x6d\x5f\x42\x65\x68\x61\x76\
                                      36
     ?<Constant L"\x73\x6d\x5f\x64\x72\x65\x61\x6d\
                                      28
     ?<Constant L"\x73\x6d\x5f\x73\x65\x78\x2e\x70\
                                      24
     ?<Constant L"\x73\x6d\x5f\x6d\x61\x6c\x65\x2e\
                                      24
     ?<Constant L"\x73\x6d\x5f\x66\x65\x6d\x61\x6c\
                                      28
     ?<Constant L"\x73\x6d\x5f\x66\x61\x6d\x69\x6c\
                                      28
     ?<Constant L"\x73\x6d\x5f\x62\x61\x74\x68\x65\
                                      28
     ?<Constant L"\x72\x6f\x6f\x6d\x2e\x70\x6e\x67"
                                      20
     ?<Constant "Tamagochi_MainPage">
                                      20
     ?<Constant "Tamagochi_BasePage">
                                      20
     ?<Constant "BookManagerDaemon">
                                      20
     ?<Constant L"\x46\x6f\x72\x65\x69\x67\x6e\x20\
                                      36
     ?<Constant L"\x54\x61\x6d\x61\x67\x6f\x63\x68\_5
                                      56
      Others                         488

 
 16 508 bytes in segment CODE
  4 788 bytes in segment DATA_C
  2 364 bytes in segment DATA_I
  2 364 bytes in segment DATA_ID
  8 705 bytes in segment DATA_Z
     64 bytes in segment DYN_PAGE
     24 bytes in segment INITTAB
 
 15 980 bytes of CODE  memory (+ 552 bytes shared)
  7 216 bytes of CONST memory
 11 069 bytes of DATA  memory

Errors: none
Warnings: none
