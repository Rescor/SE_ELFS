//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:48:56 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\AdvSoftkeys\b /
//                       ooks.cpp                                            /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\AdvSoftkeys\b /
//                       ooks.cpp -D NDEBUG -D OLDFUNCTIONS -lC              /
//                       Z:\home\perk11\www\perk11.info\svn\SE\AdvSoftkeys\R /
//                       elease\List\ -lA Z:\home\perk11\www\perk11.info\svn /
//                       \SE\AdvSoftkeys\Release\List\ -o                    /
//                       Z:\home\perk11\www\perk11.info\svn\SE\AdvSoftkeys\R /
//                       elease\Obj\ -s9 --cpu_mode arm --endian little      /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --fpu None --eec++ --dlib_config                    /
//                       Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8n.h -I        /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\AdvSoftkeys\R /
//                       elease\List\books.s79                               /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME books

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

??DataTable0 EQU 0
        PUBLIC ??isImageViewer
        FUNCTION ??isImageViewer,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??isImageViewer??rT
        PUBLIC ??isImageViewerBook
        FUNCTION ??isImageViewerBook,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??isImageViewerBook??rT
        PUBLIC ??isMMBrowserBook
        FUNCTION ??isMMBrowserBook,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??isMMBrowserBook??rT
        PUBLIC ??isMenuBook
        FUNCTION ??isMenuBook,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??isMenuBook??rT
        PUBLIC ??isSoftkeysBook
        FUNCTION ??isSoftkeysBook,0203H
        MULTWEAK ??isSoftkeysBook??rT
        PUBLIC ??isSoftkeysBook_ByName
        FUNCTION ??isSoftkeysBook_ByName,0203H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??isSoftkeysBook_ByName??rT
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        

??isImageViewer??rT SYMBOL "??rT", ??isImageViewer

??isImageViewerBook??rT SYMBOL "??rT", ??isImageViewerBook

??isMMBrowserBook??rT SYMBOL "??rT", ??isMMBrowserBook

??isMenuBook??rT    SYMBOL "??rT", ??isMenuBook

??isSoftkeysBook??rT SYMBOL "??rT", ??isSoftkeysBook

??isSoftkeysBook_ByName??rT SYMBOL "??rT", ??isSoftkeysBook_ByName

        EXTERN ??MyBook_OnClose
        FUNCTION ??MyBook_OnClose,0602H
        EXTERN DB


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??isSoftkeysBook_ByName??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??isSoftkeysBook_ByName
// Z:\home\perk11\www\perk11.info\svn\SE\AdvSoftkeys\books.cpp
//    1 #include "..\include\Lib_Clara.h"
//    2 #include "..\include\Dir.h"
//    3 #include "header\structs.h"
//    4 #include "header\presets.h"
//    5 extern int DB;
//    6 void MyBook_OnClose(BOOK * book);
//    7 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??isSoftkeysBook_ByName
        ARM
//    8 int isSoftkeysBook_ByName(BOOK *bk)
//    9 {
//   10   if (strcmp(bk->xbook->name,"Softkeys")==0)return 1;
??isSoftkeysBook_ByName:
        LDR      R1,??isSoftkeysBook_ByName_1  ;; `?<Constant "Softkeys">`
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R0,[R0, #+0]
        LDR      R0,[R0, #+4]
        SWI      +345
        CMP      R0,#+0
        MOVEQ    R0,#+1
        POPEQ    {PC}
//   11   return 0;
        MOV      R0,#+0
        POP      {PC}             ;; return
        DATA
??isSoftkeysBook_ByName_1:
        DC32     `?<Constant "Softkeys">`
        CFI EndBlock cfiBlock1
//   12 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??isMMBrowserBook??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??isMMBrowserBook
//   13 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??isMMBrowserBook
        ARM
//   14 int isMMBrowserBook(BOOK *bk)
//   15 {
//   16   if (strstr(bk->xbook->name,"MM_Browser")) return 1;
??isMMBrowserBook:
        LDR      R1,??isMMBrowserBook_1  ;; `?<Constant "MM_Browser">`
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R0,[R0, #+0]
        LDR      R0,[R0, #+4]
        SWI      +664
        CMP      R0,#+0
        MOVNE    R0,#+1
//   17   return 0;
        POP      {PC}             ;; return
        DATA
??isMMBrowserBook_1:
        DC32     `?<Constant "MM_Browser">`
        CFI EndBlock cfiBlock3
//   18 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??isMenuBook??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??isMenuBook
//   19 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??isMenuBook
        ARM
//   20 int isMenuBook(BOOK *bk)
//   21 {
??isMenuBook:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
//   22   if (!strcmp(bk->xbook->name,"MenuBook"))return 1;
        LDR      R5,??isMenuBook_1  ;; `?<Constant "MenuBook">`
        MOV      R4,R0
        LDR      R0,[R4, #+0]
        MOV      R1,R5
        LDR      R0,[R0, #+4]
        SWI      +345
        CMP      R0,#+0
        BEQ      ??isMenuBook_2
//   23   if (!strcmp(bk->xbook->name,"Menu_Globals"))return 1;
        LDR      R0,[R4, #+0]
        ADD      R1,R5,#+12
        LDR      R0,[R0, #+4]
        SWI      +345
        CMP      R0,#+0
        BNE      ??isMenuBook_3
??isMenuBook_2:
        MOV      R0,#+1
        POP      {R4,R5,PC}
//   24   return 0;
??isMenuBook_3:
        MOV      R0,#+0
        POP      {R4,R5,PC}       ;; return
        DATA
??isMenuBook_1:
        DC32     `?<Constant "MenuBook">`
        CFI EndBlock cfiBlock5
//   25 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??isImageViewerBook??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??isImageViewerBook
//   26 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??isImageViewerBook
        ARM
//   27 int isImageViewerBook(BOOK *bk)
//   28 {
//   29   if (!strcmp(bk->xbook->name,"ImageViewerBook"))return 1;
??isImageViewerBook:
        LDR      R1,??DataTable1  ;; `?<Constant "ImageViewerBook">`
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R0,[R0, #+0]
        LDR      R0,[R0, #+4]
        SWI      +345
        CMP      R0,#+0
        MOVEQ    R0,#+1
        POPEQ    {PC}
//   30   return 0;
        MOV      R0,#+0
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock7
//   31 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??isSoftkeysBook??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??isSoftkeysBook
//   32 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??isSoftkeysBook
        ARM
//   33 int isSoftkeysBook(BOOK *bk)
//   34 {
//   35   if (bk->onClose == MyBook_OnClose)return 1;
??isSoftkeysBook:
        LDR      R0,[R0, #+4]
        LDR      R1,??isSoftkeysBook_1  ;; ??MyBook_OnClose
        CMP      R0,R1
        MOVEQ    R0,#+1
        BXEQ     LR
//   36   return 0;
        MOV      R0,#+0
        BX       LR               ;; return
        DATA
??isSoftkeysBook_1:
        DC32     ??MyBook_OnClose
        CFI EndBlock cfiBlock9
//   37 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??isImageViewer??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??isImageViewer
//   38 
//   39 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??isImageViewer
        ARM
//   40 int isImageViewer(BOOK *bk)
//   41 {
??isImageViewer:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
//   42   if (bk->xbook->name[0]=='I')
        LDR      R0,[R0, #+0]
        LDR      R1,[R0, #+4]
        LDRB     R1,[R1, #+0]
        CMP      R1,#+73
        BNE      ??isImageViewer_1
//   43   {
//   44     if (bk->xbook->name[1]=='m')
        LDR      R1,[R0, #+4]
        LDRB     R1,[R1, #+1]
        CMP      R1,#+109
        BNE      ??isImageViewer_1
//   45     {
//   46       if (strcmp(bk->xbook->name,"ImageViewerBook")==0)
        LDR      R0,[R0, #+4]
        LDR      R1,??DataTable1  ;; `?<Constant "ImageViewerBook">`
        SWI      +345
        CMP      R0,#+0
        BNE      ??isImageViewer_1
//   47       {
//   48         if (DB==2010)return 1;
        LDR      R0,??isImageViewer_2  ;; DB
        MOV      R1,#+218
        LDR      R0,[R0, #+0]
        ORR      R1,R1,#0x700
        CMP      R0,R1
        MOVEQ    R0,#+1
        POPEQ    {PC}
//   49       }
//   50     }
//   51   }
//   52   return 0;
??isImageViewer_1:
        MOV      R0,#+0
        POP      {PC}             ;; return
        DATA
??isImageViewer_2:
        DC32     DB
        CFI EndBlock cfiBlock11
//   53 };

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable1:
        DC32     `?<Constant "ImageViewerBook">`

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "Softkeys">`:
        DATA
        DC8 "Softkeys"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "MM_Browser">`:
        DATA
        DC8 "MM_Browser"
        DC8 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "MenuBook">`:
        DATA
        DC8 "MenuBook"
        DC8 0, 0, 0
        DC8 "Menu_Globals"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "ImageViewerBook">`:
        DATA
        DC8 "ImageViewerBook"

        END
// 
// 360 bytes in segment CODE
//  68 bytes in segment DATA_C
// 
// 336 bytes of CODE  memory (+ 24 bytes shared)
//  68 bytes of CONST memory
//
//Errors: none
//Warnings: none
