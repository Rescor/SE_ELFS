//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:56:07 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\profi /
//                       le.c                                                /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\profi /
//                       le.c -D NDEBUG -D OLDFUNCTIONS -lC                  /
//                       Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\List\ -lA Z:\home\perk11\www\perk11.info\svn\SE\ /
//                       EvtEdit\Release\List\ -o                            /
//                       Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\Obj\ -s9 --cpu_mode arm --endian little --cpu    /
//                       ARM926EJ-S --stack_align 4 --interwork -e           /
//                       --enable_multibytes --fpu None --eec++              /
//                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl /
//                       8n.h -I Z:\home\perk11\IAR2\arm\INC\                /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\List\profile.s79                                 /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME profile

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBWEAK `?*?DATA_ID`
??DataTable0 EQU 0
        PUBLIC ??Profiles_CreateGuiList
        FUNCTION ??Profiles_CreateGuiList,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??Profiles_CreateGuiList??rT
        PUBLIC ??Profiles_OnBack
        FUNCTION ??Profiles_OnBack,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??Profiles_OnBack??rT
        FUNCTION ??Profiles_OnEnter,0603H
        LOCFRAME CSTACK, 4, STACK
        FUNCTION ??Profiles_OnExit,0603H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC ??Profiles_OnSelect
        FUNCTION ??Profiles_OnSelect,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??Profiles_OnSelect??rT
        PUBLIC ??Profiles_onLBMessage
        FUNCTION ??Profiles_onLBMessage,0603H
        LOCFRAME CSTACK, 28, STACK
        MULTWEAK ??Profiles_onLBMessage??rT
        PUBLIC ??create_profiles
        FUNCTION ??create_profiles,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??create_profiles??rT
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new[]??rA`
        PUBWEAK ?init?tab?DATA_I
        PUBLIC bk_profiles
        PUBLIC picns
        PUBLIC profiles
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        



??Profiles_CreateGuiList??rT SYMBOL "??rT", ??Profiles_CreateGuiList

??Profiles_OnBack??rT SYMBOL "??rT", ??Profiles_OnBack

??Profiles_OnSelect??rT SYMBOL "??rT", ??Profiles_OnSelect

??Profiles_onLBMessage??rT SYMBOL "??rT", ??Profiles_onLBMessage

??create_profiles??rT SYMBOL "??rT", ??create_profiles
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new[]??rA` SYMBOL "??rA", `??operator new[]`

        EXTERN ??isEvtEditBook
        FUNCTION ??isEvtEditBook,0602H
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new[]`
        FUNCTION `??operator new[]`,0202H
        EXTERN ACTION_BACK
        EXTERN ACTION_SELECT1
        EXTERN PREVIOUS_EVENT
        EXTERN bk_main
        EXTERN lng

// Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\profile.c
//    1 #include "..\deleaker\mem2.h"
//    2 #include "..\include\Lib_Clara.h" 
//    3 #include "..\include\Dir.h" 
//    4 #include "header\structs.h"
//    5 #include "header\pages.h"
//    6 #include "header\lng.h"
//    7 #include "header\externals.h"

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//    8 wchar_t *profiles[]={L"IA_AUTOMATIC_TXT",L"NORMAL_TXT",L"MEETING_TXT",L"IN_CAR_TXT",L"OUTDOORS_TXT",L"HANDSFREE_PROFILE_TXT",L"HOME_TXT",L"OFFICE_TXT"};
profiles:
        DS8 32
        REQUIRE `?<Initializer for profiles>`
//    9 wchar_t *picns[]={L"JOYSTICK_DESKTOP_MENU_ICN",L"PROFILE_NORMAL_LIST_ICN", L"PROFILE_MEETING_LIST_ICN", L"PROFILE_INCAR_LIST_ICN", L"PROFILE_OUTDOORS_LIST_ICN", L"PROFILE_PHF_LIST_ICN", L"PROFILE_HOME_LIST_ICN", L"PROFILE_OFFICE_LIST_ICN"};
picns:
        DS8 32
        REQUIRE `?<Initializer for picns>`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??Profiles_OnSelect??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??Profiles_OnSelect
//   10 
//   11 int isEvtEditBook(BOOK * struc);
//   12 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??Profiles_OnSelect
        ARM
//   13 void Profiles_OnSelect(BOOK *bk, GUI* )
//   14 {
??Profiles_OnSelect:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
//   15   MyBOOK *mbk=(MyBOOK *)bk;
//   16   int item=ListMenu_GetSelectedItem(mbk->profiles);
        LDR      R0,[R4, #+108]
        SWI      +318
        MOV      R5,R0
//   17   if (mbk->selev->param)delete(mbk->selev->param);
        LDR      R0,[R4, #+28]
        LDR      R0,[R0, #+52]
        CMP      R0,#+0
        BEQ      ??Profiles_OnSelect_1
        LDR      R0,[R4, #+28]
        LDR      R0,[R0, #+52]
        _BLF     `??operator delete`,`??operator delete??rA`
//   18   mbk->selev->param=new wchar_t[2];
??Profiles_OnSelect_1:
        MOV      R0,#+4
        _BLF     `??operator new[]`,`??operator new[]??rA`
        LDR      R1,[R4, #+28]
//   19   snwprintf(mbk->selev->param,1,L"%d",item);
        LDR      R2,??Profiles_OnSelect_2  ;; `?<Constant L"\\x25\\x64">`
        STR      R0,[R1, #+52]
        LDR      R0,[R4, #+28]
        MOV      R3,R5
        LDR      R0,[R0, #+52]
        MOV      R1,#+1
        SWI      +277
//   20   BookObj_ReturnPage(bk, PREVIOUS_EVENT);
        LDR      R0,??DataTable1  ;; PREVIOUS_EVENT
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        SWI      +302
//   21   BookObj_CallPage(bk,&bk_main);
        LDR      R1,??Profiles_OnSelect_2+0x4  ;; bk_main
        MOV      R0,R4
        SWI      +696
//   22 };
        POP      {R4,R5,PC}       ;; return
        DATA
??Profiles_OnSelect_2:
        DC32     `?<Constant L"\\x25\\x64">`
        DC32     bk_main
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??Profiles_onLBMessage??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??Profiles_onLBMessage
//   23 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??Profiles_onLBMessage
        ARM
//   24 int Profiles_onLBMessage(GUI_MESSAGE * msg)
//   25 {
??Profiles_onLBMessage:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        SUB      SP,SP,#+8
        CFI CFA R13+28
        MOV      R4,R0
//   26   switch( GUIonMessage_GetMsg(msg) )
        SWI      +884
        CMP      R0,#+1
        BNE      ??Profiles_onLBMessage_1
//   27   {
//   28   case 1:
//   29     MyBOOK *mbk=(MyBOOK*)FindBook(isEvtEditBook);
        LDR      R0,??Profiles_onLBMessage_2  ;; ??isEvtEditBook
//   30     int item=GUIonMessage_GetCreatedItemIndex(msg);
//   31     int id=EMPTY_TEXTID;
//   32     textidname2id(profiles[item],0xFFFFFFFF,&id);
        LDR      R7,??Profiles_onLBMessage_2+0x4  ;; profiles
        SWI      +304
        MOV      R5,R0
        MOV      R0,R4
        SWI      +311
        MOV      R6,R0
        MVN      R1,#-1879048192
        STR      R1,[SP, #+0]
        LDR      R0,[R7, +R6, LSL #+2]
        MOV      R2,SP
        ORR      R1,R1,#0x90000000
        SWI      +647
//   33     GUIonMessage_SetMenuItemText(msg,id);
        LDR      R1,[SP, #+0]
        MOV      R0,R4
        SWI      +312
//   34     int ic=NOIMAGE;
        MOV      R1,#+255
        ORR      R1,R1,#0xFF00
        STR      R1,[SP, #+4]
//   35     iconidname2id(picns[item],0xFFFFFFFF,&ic);
        ADD      R2,SP,#+4
        MVN      R1,#+0
        ADD      R0,R7,R6, LSL #+2
        LDR      R0,[R0, #+32]
        SWI      +646
//   36     GUIonMessage_SetMenuItemIcon (msg,0, ic);
        LDR      R2,[SP, #+4]
        MOV      R1,#+0
        MOV      R2,R2, LSL #+16
        MOV      R2,R2, LSR #+16
        MOV      R0,R4
        SWI      +316
//   37     if (item==0 && mbk->prof_type==1)
        CMP      R6,#+0
        LDREQ    R0,[R5, #+156]
        CMPEQ    R0,#+1
        BNE      ??Profiles_onLBMessage_1
//   38     {
//   39       GUIonMessage_SetItemDisabled(msg, 1);
        MOV      R1,#+1
        MOV      R0,R4
        SWI      +642
//   40     }
//   41   }
//   42   return(1);
??Profiles_onLBMessage_1:
        MOV      R0,#+1
        POP      {R1,R2,R4-R7,PC}  ;; return
        DATA
??Profiles_onLBMessage_2:
        DC32     ??isEvtEditBook
        DC32     profiles
        CFI EndBlock cfiBlock3
//   43 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??Profiles_OnBack??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??Profiles_OnBack
//   44 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??Profiles_OnBack
        ARM
//   45 void Profiles_OnBack(BOOK *bk, GUI* )
//   46 {
//   47   BookObj_ReturnPage(bk, PREVIOUS_EVENT);
??Profiles_OnBack:
        LDR      R1,??DataTable1  ;; PREVIOUS_EVENT
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R1,[R1, #+0]
        SWI      +302
//   48 };
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable1:
        DC32     PREVIOUS_EVENT

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??Profiles_CreateGuiList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??Profiles_CreateGuiList
//   49 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??Profiles_CreateGuiList
        ARM
//   50 GUI_LIST * Profiles_CreateGuiList(BOOK * book)
//   51 {
??Profiles_CreateGuiList:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
//   52   GUI_LIST * lo=0;
//   53   if (lo=CreateListMenu(book,0))
        MOV      R1,#+0
        SWI      +448
        MOVS     R4,R0
        BEQ      ??Profiles_CreateGuiList_1
//   54   {
//   55     GUIObject_SetTitleText(lo,TextID_Create(lng[CHOOSE_PROF],ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R0,??Profiles_CreateGuiList_2  ;; lng + 160
        MOV      R2,#+255
        LDR      R0,[R0, #+0]
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +307
//   56     ListMenu_SetItemCount(lo,8);
        MOV      R1,#+8
        MOV      R0,R4
        SWI      +449
//   57     ListMenu_SetCursorToItem(lo,0);
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +309
//   58     ListMenu_SetOnMessage(lo,Profiles_onLBMessage);
        LDR      R1,??Profiles_CreateGuiList_2+0x4  ;; ??Profiles_onLBMessage
        MOV      R0,R4
        SWI      +372
//   59     ListMenu_SetItemStyle(lo,0);
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +319
//   60     GUIObject_SoftKeys_SetAction(lo,ACTION_BACK, Profiles_OnBack);
        LDR      R0,??Profiles_CreateGuiList_2+0x8  ;; ACTION_BACK
        LDR      R2,??Profiles_CreateGuiList_2+0xC  ;; ??Profiles_OnBack
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//   61     GUIObject_SoftKeys_SetAction(lo,ACTION_SELECT1,Profiles_OnSelect);
        LDR      R0,??Profiles_CreateGuiList_2+0x10  ;; ACTION_SELECT1
        LDR      R2,??Profiles_CreateGuiList_2+0x14  ;; ??Profiles_OnSelect
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//   62   }
//   63   return(lo);
??Profiles_CreateGuiList_1:
        MOV      R0,R4
        POP      {R4,PC}          ;; return
        DATA
??Profiles_CreateGuiList_2:
        DC32     lng + 160
        DC32     ??Profiles_onLBMessage
        DC32     ACTION_BACK
        DC32     ??Profiles_OnBack
        DC32     ACTION_SELECT1
        DC32     ??Profiles_OnSelect
        CFI EndBlock cfiBlock7
//   64 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??create_profiles??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??create_profiles
//   65 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??create_profiles
        ARM
//   66 GUI_LIST *create_profiles(BOOK *book)
//   67 {
??create_profiles:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
//   68   MyBOOK *mbk=(MyBOOK *)book;
//   69   mbk->profiles=Profiles_CreateGuiList(book);
        BL       ??Profiles_CreateGuiList
        STR      R0,[R4, #+108]
//   70   GUIObject_Show(mbk->profiles);
        SWI      +308
//   71   return(mbk->profiles);
        LDR      R0,[R4, #+108]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock9
//   72 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??Profiles_OnEnter??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??Profiles_OnEnter
//   73 
//   74 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??Profiles_OnEnter
        ARM
//   75 static int Profiles_OnEnter(void *, BOOK * bk)
//   76 {
??Profiles_OnEnter:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R0,R1
//   77   create_profiles(bk);
        BL       ??create_profiles
//   78   return 1;
        MOV      R0,#+1
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock11
//   79 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??Profiles_OnExit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??Profiles_OnExit
//   80 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??Profiles_OnExit
        ARM
//   81 static int Profiles_OnExit(void *, BOOK * bk)
//   82 {
??Profiles_OnExit:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R1
//   83   MyBOOK *mbk=(MyBOOK *)bk;
//   84   FREE_GUI(mbk->profiles);
        LDR      R0,[R4, #+108]
        CMP      R0,#+0
        BEQ      ??Profiles_OnExit_1
        SWI      +462
        STR      R0,[R4, #+108]
//   85   return (1);  
??Profiles_OnExit_1:
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock13
//   86 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine7_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine7_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock14

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new[]??rA`:
        LDR      R12,??Subroutine8_0  ;; `??operator new[]`
        BX       R12
        DATA
??Subroutine8_0:
        DC32     `??operator new[]`
        CFI EndBlock cfiBlock15
//   87 

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
//   88 const PAGE_MSG bk_msglst_profiles[] @ "DYN_PAGE"  = 
bk_msglst_profiles:
        DATA
        DC32 66, ??Profiles_OnEnter, 67, ??Profiles_OnExit, 64, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x49\\x41\\x5f\\x41\\x55\\x54\\x4f\\x4d\\`:
        DATA
        DC8 49H, 0, 41H, 0, 5FH, 0, 41H, 0
        DC8 55H, 0, 54H, 0, 4FH, 0, 4DH, 0
        DC8 41H, 0, 54H, 0, 49H, 0, 43H, 0
        DC8 5FH, 0, 54H, 0, 58H, 0, 54H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4e\\x4f\\x52\\x4d\\x41\\x4c\\x5f\\x54\\`:
        DATA
        DC8 4EH, 0, 4FH, 0, 52H, 0, 4DH, 0
        DC8 41H, 0, 4CH, 0, 5FH, 0, 54H, 0
        DC8 58H, 0, 54H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4d\\x45\\x45\\x54\\x49\\x4e\\x47\\x5f\\`:
        DATA
        DC8 4DH, 0, 45H, 0, 45H, 0, 54H, 0
        DC8 49H, 0, 4EH, 0, 47H, 0, 5FH, 0
        DC8 54H, 0, 58H, 0, 54H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x49\\x4e\\x5f\\x43\\x41\\x52\\x5f\\x54\\`:
        DATA
        DC8 49H, 0, 4EH, 0, 5FH, 0, 43H, 0
        DC8 41H, 0, 52H, 0, 5FH, 0, 54H, 0
        DC8 58H, 0, 54H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4f\\x55\\x54\\x44\\x4f\\x4f\\x52\\x53\\`:
        DATA
        DC8 4FH, 0, 55H, 0, 54H, 0, 44H, 0
        DC8 4FH, 0, 4FH, 0, 52H, 0, 53H, 0
        DC8 5FH, 0, 54H, 0, 58H, 0, 54H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x48\\x41\\x4e\\x44\\x53\\x46\\x52\\x45\\`:
        DATA
        DC8 48H, 0, 41H, 0, 4EH, 0, 44H, 0
        DC8 53H, 0, 46H, 0, 52H, 0, 45H, 0
        DC8 45H, 0, 5FH, 0, 50H, 0, 52H, 0
        DC8 4FH, 0, 46H, 0, 49H, 0, 4CH, 0
        DC8 45H, 0, 5FH, 0, 54H, 0, 58H, 0
        DC8 54H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x48\\x4f\\x4d\\x45\\x5f\\x54\\x58\\x54"`:
        DATA
        DC8 48H, 0, 4FH, 0, 4DH, 0, 45H, 0
        DC8 5FH, 0, 54H, 0, 58H, 0, 54H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4f\\x46\\x46\\x49\\x43\\x45\\x5f\\x54\\`:
        DATA
        DC8 4FH, 0, 46H, 0, 46H, 0, 49H, 0
        DC8 43H, 0, 45H, 0, 5FH, 0, 54H, 0
        DC8 58H, 0, 54H, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4a\\x4f\\x59\\x53\\x54\\x49\\x43\\x4b\\`:
        DATA
        DC8 4AH, 0, 4FH, 0, 59H, 0, 53H, 0
        DC8 54H, 0, 49H, 0, 43H, 0, 4BH, 0
        DC8 5FH, 0, 44H, 0, 45H, 0, 53H, 0
        DC8 4BH, 0, 54H, 0, 4FH, 0, 50H, 0
        DC8 5FH, 0, 4DH, 0, 45H, 0, 4EH, 0
        DC8 55H, 0, 5FH, 0, 49H, 0, 43H, 0
        DC8 4EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\`:
        DATA
        DC8 50H, 0, 52H, 0, 4FH, 0, 46H, 0
        DC8 49H, 0, 4CH, 0, 45H, 0, 5FH, 0
        DC8 4EH, 0, 4FH, 0, 52H, 0, 4DH, 0
        DC8 41H, 0, 4CH, 0, 5FH, 0, 4CH, 0
        DC8 49H, 0, 53H, 0, 54H, 0, 5FH, 0
        DC8 49H, 0, 43H, 0, 4EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\_1`:
        DATA
        DC8 50H, 0, 52H, 0, 4FH, 0, 46H, 0
        DC8 49H, 0, 4CH, 0, 45H, 0, 5FH, 0
        DC8 4DH, 0, 45H, 0, 45H, 0, 54H, 0
        DC8 49H, 0, 4EH, 0, 47H, 0, 5FH, 0
        DC8 4CH, 0, 49H, 0, 53H, 0, 54H, 0
        DC8 5FH, 0, 49H, 0, 43H, 0, 4EH, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\_2`:
        DATA
        DC8 50H, 0, 52H, 0, 4FH, 0, 46H, 0
        DC8 49H, 0, 4CH, 0, 45H, 0, 5FH, 0
        DC8 49H, 0, 4EH, 0, 43H, 0, 41H, 0
        DC8 52H, 0, 5FH, 0, 4CH, 0, 49H, 0
        DC8 53H, 0, 54H, 0, 5FH, 0, 49H, 0
        DC8 43H, 0, 4EH, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\_3`:
        DATA
        DC8 50H, 0, 52H, 0, 4FH, 0, 46H, 0
        DC8 49H, 0, 4CH, 0, 45H, 0, 5FH, 0
        DC8 4FH, 0, 55H, 0, 54H, 0, 44H, 0
        DC8 4FH, 0, 4FH, 0, 52H, 0, 53H, 0
        DC8 5FH, 0, 4CH, 0, 49H, 0, 53H, 0
        DC8 54H, 0, 5FH, 0, 49H, 0, 43H, 0
        DC8 4EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\_4`:
        DATA
        DC8 50H, 0, 52H, 0, 4FH, 0, 46H, 0
        DC8 49H, 0, 4CH, 0, 45H, 0, 5FH, 0
        DC8 50H, 0, 48H, 0, 46H, 0, 5FH, 0
        DC8 4CH, 0, 49H, 0, 53H, 0, 54H, 0
        DC8 5FH, 0, 49H, 0, 43H, 0, 4EH, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\_5`:
        DATA
        DC8 50H, 0, 52H, 0, 4FH, 0, 46H, 0
        DC8 49H, 0, 4CH, 0, 45H, 0, 5FH, 0
        DC8 48H, 0, 4FH, 0, 4DH, 0, 45H, 0
        DC8 5FH, 0, 4CH, 0, 49H, 0, 53H, 0
        DC8 54H, 0, 5FH, 0, 49H, 0, 43H, 0
        DC8 4EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\_6`:
        DATA
        DC8 50H, 0, 52H, 0, 4FH, 0, 46H, 0
        DC8 49H, 0, 4CH, 0, 45H, 0, 5FH, 0
        DC8 4FH, 0, 46H, 0, 46H, 0, 49H, 0
        DC8 43H, 0, 45H, 0, 5FH, 0, 4CH, 0
        DC8 49H, 0, 53H, 0, 54H, 0, 5FH, 0
        DC8 49H, 0, 43H, 0, 4EH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "EvtEdit_Profiles_Page">`:
        DATA
        DC8 "EvtEdit_Profiles_Page"
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x25\\x64">`:
        DATA
        DC8 25H, 0, 64H, 0, 0, 0
        DC8 0, 0
//   89 {
//   90   PAGE_ENTER_EVENT_TAG,    Profiles_OnEnter,
//   91   PAGE_EXIT_EVENT_TAG,     Profiles_OnExit,
//   92   NIL_EVENT_TAG,           NULL
//   93 };
//   94 

        RSEG DATA_C:CONST:SORT:NOROOT(2)
//   95 const PAGE_DESC bk_profiles = {"EvtEdit_Profiles_Page",0,bk_msglst_profiles};
bk_profiles:
        DATA
        DC32 `?<Constant "EvtEdit_Profiles_Page">`, 0H, bk_msglst_profiles

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for profiles>`:
        DATA
        DC32 `?<Constant L"\\x49\\x41\\x5f\\x41\\x55\\x54\\x4f\\x4d\\`
        DC32 `?<Constant L"\\x4e\\x4f\\x52\\x4d\\x41\\x4c\\x5f\\x54\\`
        DC32 `?<Constant L"\\x4d\\x45\\x45\\x54\\x49\\x4e\\x47\\x5f\\`
        DC32 `?<Constant L"\\x49\\x4e\\x5f\\x43\\x41\\x52\\x5f\\x54\\`
        DC32 `?<Constant L"\\x4f\\x55\\x54\\x44\\x4f\\x4f\\x52\\x53\\`
        DC32 `?<Constant L"\\x48\\x41\\x4e\\x44\\x53\\x46\\x52\\x45\\`
        DC32 `?<Constant L"\\x48\\x4f\\x4d\\x45\\x5f\\x54\\x58\\x54"`
        DC32 `?<Constant L"\\x4f\\x46\\x46\\x49\\x43\\x45\\x5f\\x54\\`
`?<Initializer for picns>`:
        DC32 `?<Constant L"\\x4a\\x4f\\x59\\x53\\x54\\x49\\x43\\x4b\\`
        DC32 `?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\`
        DC32 `?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\_1`
        DC32 `?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\_2`
        DC32 `?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\_3`
        DC32 `?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\_4`
        DC32 `?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\_5`
        DC32 `?<Constant L"\\x50\\x52\\x4f\\x46\\x49\\x4c\\x45\\x5f\\_6`

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        END
// 
// 668 bytes in segment CODE
// 656 bytes in segment DATA_C
//  64 bytes in segment DATA_I
//  64 bytes in segment DATA_ID
//  24 bytes in segment DYN_PAGE
//  12 bytes in segment INITTAB
// 
// 616 bytes of CODE  memory (+ 64 bytes shared)
// 744 bytes of CONST memory
//  64 bytes of DATA  memory
//
//Errors: none
//Warnings: none
