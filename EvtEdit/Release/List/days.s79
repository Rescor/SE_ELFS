//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:55:35 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\days. /
//                       c                                                   /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\days. /
//                       c -D NDEBUG -D OLDFUNCTIONS -lC                     /
//                       Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\List\ -lA Z:\home\perk11\www\perk11.info\svn\SE\ /
//                       EvtEdit\Release\List\ -o                            /
//                       Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\Obj\ -s9 --cpu_mode arm --endian little --cpu    /
//                       ARM926EJ-S --stack_align 4 --interwork -e           /
//                       --enable_multibytes --fpu None --eec++              /
//                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl /
//                       8n.h -I Z:\home\perk11\IAR2\arm\INC\                /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\List\days.s79                                    /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME days

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable2 EQU 0
??DataTable3 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
        PUBLIC ??Days_CreateGuiList
        FUNCTION ??Days_CreateGuiList,0203H
        LOCFRAME CSTACK, 24, STACK
        MULTWEAK ??Days_CreateGuiList??rT
        PUBLIC ??Days_OnBack
        FUNCTION ??Days_OnBack,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??Days_OnBack??rT
        FUNCTION ??Days_OnEnter,0603H
        LOCFRAME CSTACK, 4, STACK
        PUBLIC ??Days_OnEveryday
        FUNCTION ??Days_OnEveryday,0603H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??Days_OnEveryday??rT
        FUNCTION ??Days_OnExit,0603H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC ??Days_OnSelect
        FUNCTION ??Days_OnSelect,0603H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC ??Days_OnSelect2
        FUNCTION ??Days_OnSelect2,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??Days_OnSelect2??rT
        MULTWEAK ??Days_OnSelect??rT
        PUBLIC ??Days_OnWeekend
        FUNCTION ??Days_OnWeekend,0603H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??Days_OnWeekend??rT
        PUBLIC ??Days_OnWorkdays
        FUNCTION ??Days_OnWorkdays,0603H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??Days_OnWorkdays??rT
        PUBLIC ??Days_onLBMessage
        FUNCTION ??Days_onLBMessage,0603H
        LOCFRAME CSTACK, 16, STACK
        PUBLIC ??Days_onLBMessage2
        FUNCTION ??Days_onLBMessage2,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??Days_onLBMessage2??rT
        MULTWEAK ??Days_onLBMessage??rT
        PUBLIC ??create_days
        FUNCTION ??create_days,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??create_days??rT
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC LastIndex
        PUBLIC bk_days
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        

??Days_CreateGuiList??rT SYMBOL "??rT", ??Days_CreateGuiList

??Days_OnBack??rT   SYMBOL "??rT", ??Days_OnBack

??Days_OnEveryday??rT SYMBOL "??rT", ??Days_OnEveryday


??Days_OnSelect2??rT SYMBOL "??rT", ??Days_OnSelect2
??Days_OnSelect??rT SYMBOL "??rT", ??Days_OnSelect

??Days_OnWeekend??rT SYMBOL "??rT", ??Days_OnWeekend

??Days_OnWorkdays??rT SYMBOL "??rT", ??Days_OnWorkdays


??Days_onLBMessage2??rT SYMBOL "??rT", ??Days_onLBMessage2
??Days_onLBMessage??rT SYMBOL "??rT", ??Days_onLBMessage

??create_days??rT   SYMBOL "??rT", ??create_days

        EXTERN ??isEvtEditBook
        FUNCTION ??isEvtEditBook,0602H
        EXTERN ACTION_BACK
        EXTERN ACTION_SELECT1
        EXTERN PREVIOUS_EVENT
        EXTERN bk_StringInput
        EXTERN bk_main
        EXTERN lng

// Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\days.c
//    1 #include "..\deleaker\mem2.h"
//    2 #include "..\include\Lib_Clara.h" 
//    3 #include "..\include\Dir.h" 
//    4 #include "header\structs.h"
//    5 #include "header\pages.h"
//    6 #include "header\externals.h"
//    7 #include "header\lng.h"
//    8 

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
//    9 int LastIndex=0;
LastIndex:
        DS8 4

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??Days_OnSelect2??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??Days_OnSelect2
//   10 
//   11 int isEvtEditBook(BOOK *);
//   12 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??Days_OnSelect2
        ARM
//   13 void Days_OnSelect2(BOOK *bk, GUI* )
//   14 {
??Days_OnSelect2:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
//   15   MyBOOK *mbk=(MyBOOK *)bk;
//   16   int item=ListMenu_GetSelectedItem(mbk->days);
        LDR      R0,[R4, #+92]
        SWI      +318
//   17   LastIndex=item;
        LDR      R1,??DataTable11  ;; LastIndex
//   18   if (item==0)
        MOV      R3,#+1
        STR      R0,[R1, #+0]
        MOV      R2,#+0
        CMP      R0,#+0
        BNE      ??Days_OnSelect2_1
//   19   {
//   20     if (mbk->selev->isMinusInBefore==true)
        LDR      R0,[R4, #+28]
        LDRB     R0,[R0, #+8]
        CMP      R0,#+0
        LDR      R0,[R4, #+28]
//   21     {
//   22       mbk->selev->isMinusInBefore=false;
        MOVNE    R1,#+0
        STRBNE   R1,[R0, #+8]
//   23     }
//   24     else
//   25     {
//   26       mbk->selev->isMinusInBefore=true;
        STRBEQ   R3,[R0, #+8]
//   27     }
//   28     BookObj_ReturnPage(bk, PREVIOUS_EVENT);
??Days_OnSelect2_2:
        LDR      R0,??Days_OnSelect2_3  ;; PREVIOUS_EVENT
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        SWI      +302
//   29     BookObj_CallPage(bk,&bk_days);
        LDR      R1,??DataTable9  ;; bk_days
        MOV      R0,R4
        SWI      +696
        POP      {R4,PC}
//   30   }
//   31   else if (item==1)
??Days_OnSelect2_1:
        LDR      R1,??Days_OnSelect2_3+0x4  ;; bk_StringInput
        MOV      R12,#+1000
        MOV      LR,#+9
        CMP      R0,#+1
        BNE      ??Days_OnSelect2_4
//   32   {
//   33     mbk->TextInputType=2;
        MOV      R0,#+2
        B        ??Days_OnSelect2_5
//   34     mbk->inputType=IT_UNSIGNED_DIGIT;
//   35     mbk->minint=0;
//   36     mbk->maxint=1000;
//   37     BookObj_CallPage(bk,&bk_StringInput);
//   38   }
//   39   else if (item==2)
??Days_OnSelect2_4:
        CMP      R0,#+2
        BNE      ??Days_OnSelect2_6
//   40   {
//   41     if (mbk->selev->isMinusInAfter==true)
        LDR      R0,[R4, #+28]
        LDRB     R0,[R0, #+17]
        CMP      R0,#+0
        LDR      R0,[R4, #+28]
//   42     {
//   43       mbk->selev->isMinusInAfter=false;
        MOVNE    R1,#+0
        STRBEQ   R3,[R0, #+17]
        STRBNE   R1,[R0, #+17]
        B        ??Days_OnSelect2_2
//   44     }
//   45     else
//   46     {
//   47       mbk->selev->isMinusInAfter=true;
//   48     }
//   49     BookObj_ReturnPage(bk, PREVIOUS_EVENT);
//   50     BookObj_CallPage(bk,&bk_days);
//   51   }
//   52   else if (item==3)
??Days_OnSelect2_6:
        CMP      R0,#+3
        POPNE    {R4,PC}
//   53   {
//   54     mbk->TextInputType=3;
??Days_OnSelect2_5:
        STR      R0,[R4, #+64]
//   55     mbk->inputType=IT_UNSIGNED_DIGIT;
        STR      LR,[R4, #+68]
//   56     mbk->minint=0;
        STR      R2,[R4, #+56]
//   57     mbk->maxint=1000;
        STR      R12,[R4, #+60]
//   58     BookObj_CallPage(bk,&bk_StringInput);
        MOV      R0,R4
        SWI      +696
//   59   }
//   60 };
        POP      {R4,PC}          ;; return
        DATA
??Days_OnSelect2_3:
        DC32     PREVIOUS_EVENT
        DC32     bk_StringInput
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??Days_OnSelect??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??Days_OnSelect
//   61 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??Days_OnSelect
        ARM
//   62 void Days_OnSelect(BOOK *bk, GUI* )
//   63 {
??Days_OnSelect:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
//   64   MyBOOK *mbk=(MyBOOK *)bk;
//   65   bool b=false;
//   66   int item=ListMenu_GetSelectedItem(mbk->days);
        LDR      R0,[R4, #+92]
        SWI      +318
//   67   if (mbk->curdays[item]==false)
        LDR      R1,[R4, #+100]
        LDRB     R1,[R0, +R1]
        CMP      R1,#+0
        LDR      R1,[R4, #+100]
        BNE      ??Days_OnSelect_1
//   68   {
//   69     mbk->curdays[item]=true;
        MOV      R2,#+1
        STRB     R2,[R0, +R1]
//   70     b=true;
//   71   }
//   72   else
//   73   {
//   74     mbk->curdays[item]=false;
//   75     b=false;
//   76   }
//   77 
//   78   int strid;
//   79   if (b==true)
//   80   {
//   81     strid=mbk->check_box_checked;
        LDRH     R2,[R4, #+166]
        B        ??Days_OnSelect_2
//   82   }
??Days_OnSelect_1:
        MOV      R2,#+0
        STRB     R2,[R0, +R1]
//   83   else
//   84   {
//   85     strid=mbk->check_box_unchecked;
        LDRH     R2,[R4, #+164]
//   86   }
//   87   ListMenu_SetSecondLineText((GUI_LIST *)mbk->days,item,strid);
??Days_OnSelect_2:
        MOV      R1,R0
        LDR      R0,[R4, #+92]
        SWI      +678
//   88 };
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??Days_onLBMessage??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??Days_onLBMessage
//   89 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??Days_onLBMessage
        ARM
//   90 int Days_onLBMessage(GUI_MESSAGE * msg)
//   91 {
??Days_onLBMessage:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOV      R4,R0
//   92   switch( GUIonMessage_GetMsg(msg) )
        SWI      +884
        CMP      R0,#+1
        BNE      ??Days_onLBMessage_1
//   93   {
//   94   case 1:
//   95     MyBOOK *mbk=(MyBOOK*)FindBook(isEvtEditBook);
        LDR      R0,??DataTable4  ;; ??isEvtEditBook
        SWI      +304
        MOV      R5,R0
//   96     int item=GUIonMessage_GetCreatedItemIndex(msg);
        MOV      R0,R4
        SWI      +311
        MOV      R6,R0
//   97     int strid;
//   98     GUIonMessage_SetMenuItemText(msg,TextID_Create(lng[LNG_WEEK+item],ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R0,??DataTable10  ;; lng
        MOV      R2,#+255
        ADD      R0,R0,R6, LSL #+2
        LDR      R0,[R0, #+40]
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +312
//   99     if (mbk->curdays[item])
        LDR      R0,[R5, #+100]
        LDRB     R0,[R6, +R0]
        CMP      R0,#+0
//  100     {
//  101        strid=mbk->check_box_checked;
        LDRHNE   R1,[R5, #+166]
//  102     }
//  103     else
//  104     {
//  105        strid=mbk->check_box_unchecked;
//  106     }
//  107     GUIonMessage_SetMenuItemSecondLineText(msg,strid);
        MOV      R0,R4
        LDRHEQ   R1,[R5, #+164]
        SWI      +313
//  108   }
//  109   return(1);
??Days_onLBMessage_1:
        MOV      R0,#+1
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock5
//  110 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??Days_onLBMessage2??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??Days_onLBMessage2
//  111 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??Days_onLBMessage2
        ARM
//  112 int Days_onLBMessage2(GUI_MESSAGE * msg)
//  113 {
??Days_onLBMessage2:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
//  114   switch( GUIonMessage_GetMsg(msg) )
        SWI      +884
        CMP      R0,#+1
        BNE      ??Days_onLBMessage2_1
//  115   {
//  116   case 1:
//  117     MyBOOK *mbk=(MyBOOK*)FindBook(isEvtEditBook);
        LDR      R0,??DataTable4  ;; ??isEvtEditBook
        SWI      +304
        MOV      R5,R0
//  118     int item=GUIonMessage_GetCreatedItemIndex(msg);
        MOV      R0,R4
        SWI      +311
//  119     if (item==0)
        LDR      R3,??DataTable10  ;; lng
        MOVS     R1,R0
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        BNE      ??Days_onLBMessage2_2
//  120     {
//  121       if (mbk->selev->isMinusInBefore==true)
        LDR      R0,[R5, #+28]
        MOV      R1,#+0
        LDRB     R0,[R0, #+8]
        CMP      R0,#+0
        LDREQ    R0,[R3, #+84]
//  122       {
//  123         GUIonMessage_SetMenuItemText(msg,TextID_Create(lng[LNG_REMINDS + REM_BEFORE],ENC_UCS2,TEXTID_ANY_LEN));
        LDRNE    R0,[R3, #+80]
        B        ??Days_onLBMessage2_3
//  124       }
//  125       else
//  126       {
//  127         GUIonMessage_SetMenuItemText(msg,TextID_Create(lng[LNG_REMINDS + REM_AFTER],ENC_UCS2,TEXTID_ANY_LEN));
//  128       }
//  129     }
//  130     else if (item==1)
??Days_onLBMessage2_2:
        LDR      R0,[R3, #+96]
        CMP      R1,#+1
//  131     {
//  132       GUIonMessage_SetMenuItemText(msg,TextID_Create(lng[LNG_REMINDS + REM_MINUTES],ENC_UCS2,TEXTID_ANY_LEN));
        MOVEQ    R1,#+0
        BEQ      ??Days_onLBMessage2_3
//  133     }
//  134     else if (item==2)
        CMP      R1,#+2
        BNE      ??Days_onLBMessage2_4
//  135     {
//  136       if (mbk->selev->isMinusInAfter==true)
        LDR      R0,[R5, #+28]
        MOV      R1,#+0
        LDRB     R0,[R0, #+17]
        CMP      R0,#+0
        LDREQ    R0,[R3, #+92]
//  137       {
//  138         GUIonMessage_SetMenuItemText(msg,TextID_Create(lng[LNG_REMINDS + REM_BEFOREEND],ENC_UCS2,TEXTID_ANY_LEN));
        LDRNE    R0,[R3, #+88]
        B        ??Days_onLBMessage2_3
//  139       }
//  140       else
//  141       {
//  142         GUIonMessage_SetMenuItemText(msg,TextID_Create(lng[LNG_REMINDS + REM_AFTEREND],ENC_UCS2,TEXTID_ANY_LEN));
//  143       }
//  144     }
//  145     else if (item==3)
??Days_onLBMessage2_4:
        CMP      R1,#+3
        BNE      ??Days_onLBMessage2_1
//  146     {
//  147       GUIonMessage_SetMenuItemText(msg,TextID_Create(lng[LNG_REMINDS + REM_MINUTES],ENC_UCS2,TEXTID_ANY_LEN));
        MOV      R1,#+0
??Days_onLBMessage2_3:
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +312
//  148     }
//  149   }
//  150   return(1);
??Days_onLBMessage2_1:
        MOV      R0,#+1
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock7
//  151 };

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable4:
        DC32     ??isEvtEditBook

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??Days_OnBack??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??Days_OnBack
//  152 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??Days_OnBack
        ARM
//  153 void Days_OnBack(BOOK *bk, GUI* )
//  154 {
//  155   LastIndex=0;
??Days_OnBack:
        LDR      R1,??DataTable11  ;; LastIndex
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R2,#+0
        STR      R2,[R1, #+0]
//  156   BookObj_GotoPage(bk, &bk_main);
        LDR      R1,??Days_OnBack_1  ;; bk_main
        SWI      +301
//  157 };
        POP      {PC}             ;; return
        DATA
??Days_OnBack_1:
        DC32     bk_main
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??Days_OnWorkdays??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??Days_OnWorkdays
//  158 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??Days_OnWorkdays
        ARM
//  159 void Days_OnWorkdays(BOOK *bk, GUI* )
//  160 {
??Days_OnWorkdays:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+8
        CFI CFA R13+16
//  161   MyBOOK *mbk=(MyBOOK*)bk;
//  162   bool days[7];
//  163   memcpy(days, mbk->selev->days, 7*sizeof(bool));
        MOV      R2,#+7
        MOV      R4,R0
        LDR      R0,[R4, #+28]
        ADD      R1,R0,#+32
        MOV      R0,SP
        SWI      +275
//  164   if (days[0] && days[1] && days[2] && days[3] && days[4])
        LDRB     R0,[SP, #+0]
//  165   {
//  166     mbk->selev->days[0]=0;
//  167     mbk->selev->days[1]=0;
//  168     mbk->selev->days[2]=0;
//  169     mbk->selev->days[3]=0;
//  170     mbk->selev->days[4]=0;
//  171   }
//  172   else
//  173   {
//  174     mbk->selev->days[0]=1;
        LDR      R1,[R4, #+28]
        CMP      R0,#+0
        LDRBNE   R0,[SP, #+1]
        CMPNE    R0,#+0
        LDRBNE   R0,[SP, #+2]
        CMPNE    R0,#+0
        LDRBNE   R0,[SP, #+3]
        CMPNE    R0,#+0
        LDRBNE   R0,[SP, #+4]
        CMPNE    R0,#+0
        MOVNE    R0,#+0
        MOVEQ    R0,#+1
        STRB     R0,[R1, #+32]
//  175     mbk->selev->days[1]=1;
        LDR      R1,[R4, #+28]
        STRB     R0,[R1, #+33]
//  176     mbk->selev->days[2]=1;
        LDR      R1,[R4, #+28]
        STRB     R0,[R1, #+34]
//  177     mbk->selev->days[3]=1;
        LDR      R1,[R4, #+28]
        STRB     R0,[R1, #+35]
//  178     mbk->selev->days[4]=1;
        LDR      R1,[R4, #+28]
        STRB     R0,[R1, #+36]
//  179   }
//  180   BookObj_GotoPage(bk, &bk_days);
        LDR      R1,??DataTable9  ;; bk_days
        MOV      R0,R4
        SWI      +301
//  181 };
        POP      {R0,R1,R4,PC}    ;; return
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??Days_OnWeekend??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??Days_OnWeekend
//  182 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??Days_OnWeekend
        ARM
//  183 void Days_OnWeekend(BOOK *bk, GUI* )
//  184 {
??Days_OnWeekend:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+8
        CFI CFA R13+16
//  185   MyBOOK *mbk=(MyBOOK*)bk;
//  186   bool days[7];
//  187   memcpy(days, mbk->selev->days, 7*sizeof(bool));
        MOV      R2,#+7
        MOV      R4,R0
        LDR      R0,[R4, #+28]
        ADD      R1,R0,#+32
        MOV      R0,SP
        SWI      +275
//  188   if (days[5] && days[6])
        LDRB     R0,[SP, #+5]
//  189   {
//  190     mbk->selev->days[5]=0;
//  191     mbk->selev->days[6]=0;
//  192   }
//  193   else
//  194   {
//  195     mbk->selev->days[5]=1;
        LDR      R1,[R4, #+28]
        CMP      R0,#+0
        LDRBNE   R0,[SP, #+6]
        CMPNE    R0,#+0
        MOVNE    R0,#+0
        MOVEQ    R0,#+1
        STRB     R0,[R1, #+37]
//  196     mbk->selev->days[6]=1;
        LDR      R1,[R4, #+28]
        STRB     R0,[R1, #+38]
//  197   }
//  198   BookObj_GotoPage(bk, &bk_days);
        LDR      R1,??DataTable9  ;; bk_days
        MOV      R0,R4
        SWI      +301
//  199 };
        POP      {R0,R1,R4,PC}    ;; return
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??Days_OnEveryday??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??Days_OnEveryday
//  200 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??Days_OnEveryday
        ARM
//  201 void Days_OnEveryday(BOOK *bk, GUI* )
//  202 {
??Days_OnEveryday:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+8
        CFI CFA R13+16
//  203   MyBOOK *mbk=(MyBOOK*)bk;
//  204   bool days[7];
//  205   memcpy(days, mbk->selev->days, 7*sizeof(bool));
        MOV      R2,#+7
        MOV      R4,R0
        LDR      R0,[R4, #+28]
        ADD      R1,R0,#+32
        MOV      R0,SP
        SWI      +275
//  206   if (days[0] && days[1] && days[2] && days[3] && days[4] && days[5] && days[6])
        LDRB     R0,[SP, #+0]
//  207   {
//  208     mbk->selev->days[0]=0;
//  209     mbk->selev->days[1]=0;
//  210     mbk->selev->days[2]=0;
//  211     mbk->selev->days[3]=0;
//  212     mbk->selev->days[4]=0;
//  213     mbk->selev->days[5]=0;
//  214     mbk->selev->days[6]=0;
//  215   }
//  216   else
//  217   {
//  218     mbk->selev->days[0]=1;
        LDR      R1,[R4, #+28]
        CMP      R0,#+0
        LDRBNE   R0,[SP, #+1]
        CMPNE    R0,#+0
        LDRBNE   R0,[SP, #+2]
        CMPNE    R0,#+0
        LDRBNE   R0,[SP, #+3]
        CMPNE    R0,#+0
        LDRBNE   R0,[SP, #+4]
        CMPNE    R0,#+0
        LDRBNE   R0,[SP, #+5]
        CMPNE    R0,#+0
        LDRBNE   R0,[SP, #+6]
        CMPNE    R0,#+0
        MOVNE    R0,#+0
        MOVEQ    R0,#+1
        STRB     R0,[R1, #+32]
//  219     mbk->selev->days[1]=1;
        LDR      R1,[R4, #+28]
        STRB     R0,[R1, #+33]
//  220     mbk->selev->days[2]=1;
        LDR      R1,[R4, #+28]
        STRB     R0,[R1, #+34]
//  221     mbk->selev->days[3]=1;
        LDR      R1,[R4, #+28]
        STRB     R0,[R1, #+35]
//  222     mbk->selev->days[4]=1;
        LDR      R1,[R4, #+28]
        STRB     R0,[R1, #+36]
//  223     mbk->selev->days[5]=1;
        LDR      R1,[R4, #+28]
        STRB     R0,[R1, #+37]
//  224     mbk->selev->days[6]=1;
        LDR      R1,[R4, #+28]
        STRB     R0,[R1, #+38]
//  225   }
//  226   BookObj_GotoPage(bk, &bk_days);
        LDR      R1,??DataTable9  ;; bk_days
        MOV      R0,R4
        SWI      +301
//  227 };
        POP      {R0,R1,R4,PC}    ;; return
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable9:
        DC32     bk_days

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??Days_CreateGuiList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE ??Days_CreateGuiList
//  228 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function ??Days_CreateGuiList
        ARM
//  229 GUI_LIST * Days_CreateGuiList(BOOK * book)
//  230 {
??Days_CreateGuiList:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
//  231   GUI_LIST * lo=0;
//  232   if (lo=CreateListMenu(book,0))
        MOV      R1,#+0
        MOV      R7,R0
        SWI      +448
        MOVS     R4,R0
        BEQ      ??Days_CreateGuiList_1
//  233   {
//  234     MyBOOK *mbk=(MyBOOK*)book;
//  235     if (mbk->daystype==0)
        LDR      R0,[R7, #+96]
        LDR      R8,??Days_CreateGuiList_2  ;; ??Days_OnBack
        LDR      R5,??DataTable10  ;; lng
        MOV      R6,#+255
        ORR      R6,R6,#0xFF00
        CMP      R0,#+0
        MOV      R2,R6
        MOV      R1,#+0
        BNE      ??Days_CreateGuiList_3
//  236     {
//  237       GUIObject_SetTitleText(lo,TextID_Create(lng[DAYS],ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R0,[R5, #+256]
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +307
//  238       ListMenu_SetItemCount(lo,7);
        MOV      R1,#+7
        MOV      R0,R4
        SWI      +449
//  239       ListMenu_SetCursorToItem(lo,0);
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +309
//  240       ListMenu_SetOnMessage(lo,Days_onLBMessage);
        LDR      R1,??Days_CreateGuiList_2+0x4  ;; ??Days_onLBMessage
        MOV      R0,R4
        SWI      +372
//  241       ListMenu_SetItemStyle(lo,2);
        MOV      R1,#+2
        MOV      R0,R4
        SWI      +319
//  242       GUIObject_SoftKeys_SetAction(lo,ACTION_BACK, Days_OnBack);
        LDR      R0,??Days_CreateGuiList_2+0x8  ;; ACTION_BACK
        MOV      R2,R8
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  243       GUIObject_SoftKeys_SetAction(lo,ACTION_SELECT1,Days_OnSelect);
        LDR      R0,??Days_CreateGuiList_2+0xC  ;; ACTION_SELECT1
        LDR      R2,??Days_CreateGuiList_2+0x10  ;; ??Days_OnSelect
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  244       GUIObject_SoftKeys_SetAction(lo,0, Days_OnWorkdays);
        LDR      R2,??Days_CreateGuiList_2+0x14  ;; ??Days_OnWorkdays
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +331
//  245       GUIObject_SoftKeys_SetText(lo,0,TextID_Create(lng[LNG_WORKDAYS],ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R0,[R5, #+68]
        MOV      R2,R6
        MOV      R1,#+0
        SWI      +349
        MOV      R2,R0
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +332
//  246       GUIObject_SoftKeys_SetAction(lo,1, Days_OnWeekend);
        LDR      R2,??Days_CreateGuiList_2+0x18  ;; ??Days_OnWeekend
        MOV      R1,#+1
        MOV      R0,R4
        SWI      +331
//  247       GUIObject_SoftKeys_SetText(lo,1,TextID_Create(lng[LNG_WEEKEND],ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R0,[R5, #+72]
        MOV      R2,R6
        MOV      R1,#+0
        SWI      +349
        MOV      R2,R0
        MOV      R1,#+1
        MOV      R0,R4
        SWI      +332
//  248       GUIObject_SoftKeys_SetAction(lo,2, Days_OnEveryday);
        LDR      R2,??Days_CreateGuiList_2+0x1C  ;; ??Days_OnEveryday
        MOV      R1,#+2
        MOV      R0,R4
        SWI      +331
//  249       GUIObject_SoftKeys_SetText(lo,2,TextID_Create(lng[LNG_ALLDAYS],ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R0,[R5, #+76]
        MOV      R2,R6
        MOV      R1,#+0
        SWI      +349
        MOV      R2,R0
        MOV      R1,#+2
        MOV      R0,R4
        SWI      +332
        MOV      R0,R4
        POP      {R4-R8,PC}
//  250     }
//  251     else
//  252     {
//  253       GUIObject_SetTitleText(lo,TextID_Create(lng[LNG_REMINDS],ENC_UCS2,TEXTID_ANY_LEN));
??Days_CreateGuiList_3:
        LDR      R0,[R5, #+80]
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +307
//  254       ListMenu_SetItemCount(lo,4);
        MOV      R1,#+4
        MOV      R0,R4
        SWI      +449
//  255       ListMenu_SetCursorToItem(lo,LastIndex);
        LDR      R0,??DataTable11  ;; LastIndex
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        SWI      +309
//  256       ListMenu_SetOnMessage(lo,Days_onLBMessage2);
        LDR      R1,??Days_CreateGuiList_2+0x20  ;; ??Days_onLBMessage2
        MOV      R0,R4
        SWI      +372
//  257       ListMenu_SetItemStyle(lo,0);
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +319
//  258       GUIObject_SoftKeys_SetAction(lo,ACTION_BACK, Days_OnBack);
        LDR      R0,??Days_CreateGuiList_2+0x8  ;; ACTION_BACK
        MOV      R2,R8
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  259       GUIObject_SoftKeys_SetAction(lo,ACTION_SELECT1,Days_OnSelect2);
        LDR      R0,??Days_CreateGuiList_2+0xC  ;; ACTION_SELECT1
        LDR      R2,??Days_CreateGuiList_2+0x24  ;; ??Days_OnSelect2
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  260     }
//  261   }
//  262   return(lo);
??Days_CreateGuiList_1:
        MOV      R0,R4
        POP      {R4-R8,PC}       ;; return
        DATA
??Days_CreateGuiList_2:
        DC32     ??Days_OnBack
        DC32     ??Days_onLBMessage
        DC32     ACTION_BACK
        DC32     ACTION_SELECT1
        DC32     ??Days_OnSelect
        DC32     ??Days_OnWorkdays
        DC32     ??Days_OnWeekend
        DC32     ??Days_OnEveryday
        DC32     ??Days_onLBMessage2
        DC32     ??Days_OnSelect2
        CFI EndBlock cfiBlock17
//  263 };

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable10:
        DC32     lng

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable11:
        DC32     LastIndex

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??create_days??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE ??create_days
//  264 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function ??create_days
        ARM
//  265 GUI_LIST *create_days(BOOK *book)
//  266 {
??create_days:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
//  267   MyBOOK *mbk=(MyBOOK *)book;
//  268   mbk->days=Days_CreateGuiList(book);
        BL       ??Days_CreateGuiList
        STR      R0,[R4, #+92]
//  269   GUIObject_Show(mbk->days);
        SWI      +308
//  270   return(mbk->days);
        LDR      R0,[R4, #+92]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock19
//  271 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??Days_OnEnter??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE ??Days_OnEnter
//  272 
//  273 
//  274 
//  275 //------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function ??Days_OnEnter
        ARM
//  276 static int Days_OnEnter(void *, BOOK * bk)
//  277 {
??Days_OnEnter:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R0,R1
//  278   create_days(bk);
        BL       ??create_days
//  279   return 1;
        MOV      R0,#+1
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock21
//  280 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon0
        CFI NoFunction
        THUMB
??Days_OnExit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock22
        REQUIRE ??Days_OnExit
//  281 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI Function ??Days_OnExit
        ARM
//  282 static int Days_OnExit(void *, BOOK * bk)
//  283 {
??Days_OnExit:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R1
//  284   MyBOOK *mbk=(MyBOOK *)bk;
//  285   FREE_GUI(mbk->days);
        LDR      R0,[R4, #+92]
        CMP      R0,#+0
        BEQ      ??Days_OnExit_1
        SWI      +462
        STR      R0,[R4, #+92]
//  286   return (1);  
??Days_OnExit_1:
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock23
//  287 };
//  288 
//  289 

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
//  290 const PAGE_MSG bk_msglst_days[] @ "DYN_PAGE"  = 
bk_msglst_days:
        DATA
        DC32 66, ??Days_OnEnter, 67, ??Days_OnExit, 64, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "EvtEdit_Days_Page">`:
        DATA
        DC8 "EvtEdit_Days_Page"
        DC8 0, 0
//  291 {
//  292   PAGE_ENTER_EVENT_TAG,    Days_OnEnter,
//  293   PAGE_EXIT_EVENT_TAG,     Days_OnExit,
//  294   NIL_EVENT_TAG,           NULL
//  295 };
//  296 

        RSEG DATA_C:CONST:SORT:NOROOT(2)
//  297 const PAGE_DESC bk_days = {"EvtEdit_Days_Page",0,bk_msglst_days};
bk_days:
        DATA
        DC32 `?<Constant "EvtEdit_Days_Page">`, 0H, bk_msglst_days

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        END
//  298 //------------------------------------------------------------------------------
// 
// 1 672 bytes in segment CODE
//    32 bytes in segment DATA_C
//     4 bytes in segment DATA_Z
//    24 bytes in segment DYN_PAGE
//    12 bytes in segment INITTAB
// 
// 1 624 bytes of CODE  memory (+ 60 bytes shared)
//    56 bytes of CONST memory
//     4 bytes of DATA  memory
//
//Errors: none
//Warnings: none
