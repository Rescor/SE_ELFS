//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:55:24 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\addev /
//                       t.c                                                 /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\addev /
//                       t.c -D NDEBUG -D OLDFUNCTIONS -lC                   /
//                       Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\List\ -lA Z:\home\perk11\www\perk11.info\svn\SE\ /
//                       EvtEdit\Release\List\ -o                            /
//                       Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\Obj\ -s9 --cpu_mode arm --endian little --cpu    /
//                       ARM926EJ-S --stack_align 4 --interwork -e           /
//                       --enable_multibytes --fpu None --eec++              /
//                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl /
//                       8n.h -I Z:\home\perk11\IAR2\arm\INC\                /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\List\addevt.s79                                  /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME addevt

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBWEAK `?*?DATA_ID`
??DataTable0 EQU 0
??DataTable1 EQU 0
        PUBLIC ??GetNumOfActions
        FUNCTION ??GetNumOfActions,0203H
        MULTWEAK ??GetNumOfActions??rT
        FUNCTION ??SEPage_OnEnter,0603H
        LOCFRAME CSTACK, 4, STACK
        FUNCTION ??SEPage_OnExit,0603H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC ??SelectEvent_CreateGui
        FUNCTION ??SelectEvent_CreateGui,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??SelectEvent_CreateGui??rT
        PUBLIC ??SelectEvent_CreateList
        FUNCTION ??SelectEvent_CreateList,0203H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??SelectEvent_CreateList??rT
        PUBLIC ??SelectEvent_OnBack
        FUNCTION ??SelectEvent_OnBack,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??SelectEvent_OnBack??rT
        PUBLIC ??SelectEvent_OnEnter
        FUNCTION ??SelectEvent_OnEnter,0603H
        LOCFRAME CSTACK, 32, STACK
        MULTWEAK ??SelectEvent_OnEnter??rT
        PUBLIC ??SelectEvent_onLBMessage
        FUNCTION ??SelectEvent_onLBMessage,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??SelectEvent_onLBMessage??rT
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new[]??rA`
        PUBWEAK ?init?tab?DATA_I
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC bk_selectevent
        PUBLIC items
        PUBLIC ittypes
        PUBLIC old
        PUBLIC temp_act
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        



??GetNumOfActions??rT SYMBOL "??rT", ??GetNumOfActions

??SelectEvent_CreateGui??rT SYMBOL "??rT", ??SelectEvent_CreateGui

??SelectEvent_CreateList??rT SYMBOL "??rT", ??SelectEvent_CreateList

??SelectEvent_OnBack??rT SYMBOL "??rT", ??SelectEvent_OnBack

??SelectEvent_OnEnter??rT SYMBOL "??rT", ??SelectEvent_OnEnter

??SelectEvent_onLBMessage??rT SYMBOL "??rT", ??SelectEvent_onLBMessage
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new[]??rA` SYMBOL "??rA", `??operator new[]`

        EXTERN ??isEvtEditBook
        FUNCTION ??isEvtEditBook,0602H
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new[]`
        FUNCTION `??operator new[]`,0202H
        EXTERN ACTION_BACK
        EXTERN ACTION_SELECT1
        EXTERN PREVIOUS_EVENT
        EXTERN SelectFile_page
        EXTERN SelectShortcut_page
        EXTERN SetJava_page
        EXTERN bk_StringInput
        EXTERN bk_Switch
        EXTERN bk_VolInput
        EXTERN bk_main
        EXTERN bk_profiles
        EXTERN lng

// Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\addevt.c
//    1 #include "..\deleaker\mem2.h"
//    2 #include "..\include\Lib_Clara.h" 
//    3 #include "..\include\Dir.h" 
//    4 #include "header\structs.h"
//    5 #include "header\pages.h"
//    6 #include "header\externals.h"
//    7 #include "header\lng.h"
//    8 
//    9 int isEvtEditBook(BOOK *);
//   10 #define ACTION_COUNT 50
//   11 
//   12 enum ACTION_TYPES {
//   13   AT_STRING=0,
//   14   AT_MUSICPATH,
//   15   AT_ELFPATH,
//   16   AT_FILEPATH,
//   17   AT_PROFILE,
//   18   AT_INT,
//   19   AT_EXECUTE,
//   20   AT_SHORTCUT,
//   21   AT_JAVA,
//   22   AT_NULL,
//   23   AT_MUSICPATH_VOLUME,
//   24   AT_PICTUREPATH,
//   25   AT_PROFILE_2,
//   26   AT_VOLUME,
//   27   AT_CHOOSE_MENU_0,
//   28   AT_CHOOSE_MENU_1,
//   29   AT_CHOOSE_MENU_2,
//   30   AT_CHOOSE_MENU_3,
//   31   AT_CHOOSE_MENU_4,
//   32   AT_VCALL,
//   33   AT_THEME,
//   34 };
//   35 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//   36 wchar_t *items[] = {L"Сообщение", L"Запуск эльфа", L"Ярлык", L"Java",L"Выключение телефона", L"Яркость", L"Фонарик: уст. яркость", L"Профиль", L"Рестарт", L"Музыка: воспр.", 
items:
        DS8 168
        REQUIRE `?<Initializer for items>`
//   37 L"Музыка: воспр. с громкостью", L"Обои: установить", L"Вибра", L"ГЭ: уст. заметку", L"ГЭ: уст. оператора", L"Закрыть книгу", L"Вкл. музыку/радио", L"Поменять расписание", L"Обновить", 
//   38 L"Звук: выкл", L"Звук: вкл", L"ИК: вкл", L"ИК: выкл", L"ИК: мигнуть", L"Фонарик: мигнуть", L"(W580): отключить диоды", L"(W580): включить диоды", L"Оранж.диод: мигнуть", L"Оранж.диод: вкл. ", L"Оранж.диод: выкл", L"Важное событие", 
//   39 L"Звонок: уст.громкость", L"Звонок: вибрация", L"Звонок: уст.файл", L"Звонок: способ приёма", L"Звонок: вкл.нарастание", L"Звонок: уст. приём вызовов", L"Голосовой вызов",L"Сменить тему",0,0,0};
//   40 

        RSEG DATA_I:DATA:SORT:NOROOT(2)
//   41 int ittypes[] = {AT_STRING,AT_ELFPATH,AT_SHORTCUT,AT_JAVA,AT_NULL,AT_INT,AT_INT,AT_PROFILE_2,AT_NULL,AT_MUSICPATH,AT_MUSICPATH_VOLUME,AT_PICTUREPATH,AT_INT,AT_STRING,AT_STRING,AT_STRING,AT_NULL,AT_EXECUTE,AT_NULL,AT_PROFILE,AT_PROFILE,AT_NULL,AT_NULL,AT_NULL, AT_NULL,
ittypes:
        DS8 156
        REQUIRE `?<Initializer for ittypes>`
//   42 AT_NULL, AT_NULL, AT_NULL, AT_NULL, AT_NULL, AT_STRING, AT_VOLUME, AT_CHOOSE_MENU_0, AT_MUSICPATH, AT_CHOOSE_MENU_1, AT_CHOOSE_MENU_2, AT_CHOOSE_MENU_3, AT_VCALL, AT_THEME};
//   43 
//   44 #define MUSIC 1
//   45 #define ELF 2
//   46 #define IMAGE 3
//   47 #define EVT 4
//   48 #define THM 5
//   49 

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
//   50 int temp_act=0;
temp_act:
        DS8 4
//   51 wchar_t *old=0;
old:
        DS8 4

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelectEvent_OnEnter??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??SelectEvent_OnEnter

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??SelectEvent_OnEnter
        ARM
//   52 void SelectEvent_OnEnter(BOOK *bk, GUI* )
//   53 {
??SelectEvent_OnEnter:
        PUSH     {R4-R10,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R10 Frame(CFA, -8)
        CFI R9 Frame(CFA, -12)
        CFI R8 Frame(CFA, -16)
        CFI R7 Frame(CFA, -20)
        CFI R6 Frame(CFA, -24)
        CFI R5 Frame(CFA, -28)
        CFI R4 Frame(CFA, -32)
        CFI CFA R13+32
        MOV      R4,R0
//   54   MyBOOK *mbk=(MyBOOK *)bk;
//   55   int item=ListMenu_GetSelectedItem(mbk->addgui);
        LDR      R0,[R4, #+44]
        SWI      +318
        MOV      R5,R0
//   56   
//   57   if (item!=mbk->selev->type)
        LDR      R0,[R4, #+28]
        LDR      R0,[R0, #+0]
        CMP      R5,R0
        BEQ      ??SelectEvent_OnEnter_1
//   58   {
//   59     mbk->selev->type=item;
        LDR      R0,[R4, #+28]
        STR      R5,[R0, #+0]
//   60     mbk->selev->param=new wchar_t[2];
        MOV      R0,#+4
        _BLF     `??operator new[]`,`??operator new[]??rA`
        LDR      R1,[R4, #+28]
        STR      R0,[R1, #+52]
//   61     wstrcpy(mbk->selev->param,L"0");
        LDR      R0,[R4, #+28]
        ADR      R1,??SelectEvent_OnEnter_2  ;; 0x30, 0x00, 0x00, 0x00
        LDR      R0,[R0, #+52]
        SWI      +338
??SelectEvent_OnEnter_1:
        LDR      R0,??SelectEvent_OnEnter_2+0x4  ;; ittypes
        MOV      R3,#+100
        LDR      R2,[R0, +R5, LSL #+2]
        LDR      R0,??SelectEvent_OnEnter_2+0x8  ;; bk_StringInput
        MVN      R12,#+0
        MOV      LR,#+1
        MOV      R5,#+0
        CMP      R2,#+0
        BNE      ??SelectEvent_OnEnter_3
//   62   }
//   63   
//   64   if (ittypes[item]==AT_STRING)
//   65   {
//   66     mbk->inputType=IT_STRING;
        STR      LR,[R4, #+68]
//   67     mbk->minint=-1;
        B        ??SelectEvent_OnEnter_4
//   68     mbk->maxint=100;
//   69     mbk->TextInputType=0;
//   70     BookObj_CallPage(bk,&bk_StringInput);
//   71   }
//   72   else if (ittypes[item]==AT_EXECUTE)
??SelectEvent_OnEnter_3:
        LDR      R1,??SelectEvent_OnEnter_2+0xC  ;; SelectFile_page
        MOV      R8,#+9
        MOV      R6,#+4
        MOV      R7,#+8
        CMP      R2,#+6
        BNE      ??SelectEvent_OnEnter_5
//   73   {
//   74     mbk->selectfiletype=0;
        STR      R5,[R4, #+128]
//   75     mbk->fType=EVT;
        STR      R6,[R4, #+124]
//   76     mbk->dir1=DIR_OTHER+MEM_INTERNAL;
        STR      R8,[R4, #+116]
//   77     mbk->dir2=DIR_OTHER+MEM_EXTERNAL;
        STR      R7,[R4, #+120]
//   78     BookObj_CallPage(bk,&SelectFile_page);
        B        ??SelectEvent_OnEnter_6
//   79   }
//   80   else if (ittypes[item]==AT_INT)
??SelectEvent_OnEnter_5:
        CMP      R2,#+5
        BNE      ??SelectEvent_OnEnter_7
//   81   {
//   82     mbk->TextInputType=0;
        STR      R5,[R4, #+64]
//   83     mbk->inputType=IT_UNSIGNED_DIGIT;
        STR      R8,[R4, #+68]
//   84     mbk->minint=0;
        STR      R5,[R4, #+56]
//   85     mbk->maxint=100;
        STR      R3,[R4, #+60]
//   86     BookObj_CallPage(bk,&bk_StringInput);
        B        ??SelectEvent_OnEnter_8
//   87   }
//   88   else if (ittypes[item]==AT_SHORTCUT)
??SelectEvent_OnEnter_7:
        CMP      R2,#+7
//   89   {
//   90     BookObj_CallPage(bk,&SelectShortcut_page);
        LDREQ    R1,??SelectEvent_OnEnter_2+0x10  ;; SelectShortcut_page
        BEQ      ??SelectEvent_OnEnter_9
//   91   }
//   92   else if (ittypes[item]==AT_MUSICPATH)
        CMP      R2,#+1
        BNE      ??SelectEvent_OnEnter_10
//   93   {
//   94     mbk->selectfiletype=0;
        STR      R5,[R4, #+128]
//   95     mbk->fType=MUSIC;
        STR      LR,[R4, #+124]
//   96     mbk->dir1=DIR_AUDIO+MEM_INTERNAL;
        STR      LR,[R4, #+116]
//   97     mbk->dir2=DIR_AUDIO+MEM_EXTERNAL;
        STR      R5,[R4, #+120]
//   98     BookObj_CallPage(bk,&SelectFile_page);
        B        ??SelectEvent_OnEnter_6
//   99   }
//  100   else if (ittypes[item]==AT_THEME)
??SelectEvent_OnEnter_10:
        MOV      R8,#+6
        CMP      R2,#+20
        BNE      ??SelectEvent_OnEnter_11
//  101   {
//  102     mbk->selectfiletype=0;
        STR      R5,[R4, #+128]
//  103     mbk->fType=THM;
        MOV      R0,#+5
        STR      R0,[R4, #+124]
//  104     mbk->dir1=DIR_THEME+MEM_INTERNAL;
        MOV      R0,#+7
        STR      R0,[R4, #+116]
//  105     mbk->dir2=DIR_THEME+MEM_EXTERNAL;
        STR      R8,[R4, #+120]
//  106     BookObj_CallPage(bk,&SelectFile_page);
        B        ??SelectEvent_OnEnter_6
//  107   }
//  108   else if (ittypes[item]==AT_ELFPATH)
??SelectEvent_OnEnter_11:
        MOV      R10,#+2
        CMP      R2,#+2
        BNE      ??SelectEvent_OnEnter_12
//  109   {
//  110     mbk->selectfiletype=0;
        STR      R5,[R4, #+128]
//  111     mbk->fType=ELF;
        STR      R10,[R4, #+124]
//  112     mbk->dir1=DIR_ELFS+MEM_INTERNAL;
        MOV      R0,#+17
        STR      R0,[R4, #+116]
//  113     mbk->dir2=DIR_ELFS+MEM_EXTERNAL;
        MOV      R0,#+16
        STR      R0,[R4, #+120]
//  114     BookObj_CallPage(bk,&SelectFile_page);
        B        ??SelectEvent_OnEnter_6
//  115   }
//  116   else if (ittypes[item]==AT_PICTUREPATH)
??SelectEvent_OnEnter_12:
        MOV      R9,#+3
        CMP      R2,#+11
        BNE      ??SelectEvent_OnEnter_13
//  117   {
//  118     mbk->selectfiletype=0;
        STR      R5,[R4, #+128]
//  119     mbk->fType=IMAGE;
        STR      R9,[R4, #+124]
//  120     mbk->dir1=DIR_IMAGE+MEM_INTERNAL;
        STR      R9,[R4, #+116]
//  121     mbk->dir2=DIR_IMAGE+MEM_EXTERNAL;
        STR      R10,[R4, #+120]
//  122     BookObj_CallPage(bk,&SelectFile_page);
        B        ??SelectEvent_OnEnter_6
//  123   }
//  124   else if (ittypes[item]==AT_JAVA)
??SelectEvent_OnEnter_13:
        CMP      R2,#+8
//  125   {
//  126     BookObj_CallPage(bk,&SetJava_page);
        LDREQ    R1,??SelectEvent_OnEnter_2+0x14  ;; SetJava_page
        BEQ      ??SelectEvent_OnEnter_9
//  127   }
//  128   else if (ittypes[item]==AT_PROFILE)
        LDR      R1,??SelectEvent_OnEnter_2+0x18  ;; bk_profiles
        CMP      R2,#+4
//  129   {
//  130     mbk->prof_type=0;
        STREQ    R5,[R4, #+156]
//  131     BookObj_CallPage(bk,&bk_profiles);
        BEQ      ??SelectEvent_OnEnter_9
//  132   }
//  133   else if (ittypes[item]==AT_PROFILE_2)
        CMP      R2,#+12
//  134   {
//  135     mbk->prof_type=1;
        STREQ    LR,[R4, #+156]
//  136     BookObj_CallPage(bk,&bk_profiles);
        BEQ      ??SelectEvent_OnEnter_9
//  137   }
//  138   else if (ittypes[item]==AT_MUSICPATH_VOLUME)
        LDR      R1,??SelectEvent_OnEnter_2+0x1C  ;; bk_VolInput
        CMP      R2,#+10
        BNE      ??SelectEvent_OnEnter_14
//  139   {
//  140     mbk->fType=MUSIC;
        STR      LR,[R4, #+124]
//  141     mbk->dir1=DIR_AUDIO+MEM_INTERNAL;
        STR      LR,[R4, #+116]
//  142     mbk->dir2=DIR_AUDIO+MEM_EXTERNAL;
        STR      R5,[R4, #+120]
//  143     mbk->selectfiletype=1;
        STR      LR,[R4, #+128]
//  144     mbk->curvol=6;
        STR      R8,[R4, #+140]
//  145     mbk->maxvol=8;
        STR      R7,[R4, #+144]
//  146     mbk->vol_mod=1;
        STR      LR,[R4, #+148]
//  147     mbk->vol_type=0;
        STR      R5,[R4, #+152]
//  148     BookObj_CallPage(bk,&bk_VolInput);
        B        ??SelectEvent_OnEnter_6
//  149   }
//  150   else if (ittypes[item]==AT_VOLUME)
??SelectEvent_OnEnter_14:
        CMP      R2,#+13
        BNE      ??SelectEvent_OnEnter_15
//  151   {
//  152     mbk->curvol=4;
        STR      R6,[R4, #+140]
//  153     mbk->maxvol=8;
        STR      R7,[R4, #+144]
//  154     mbk->vol_mod=1;
        STR      LR,[R4, #+148]
//  155     mbk->vol_type=1;
        STR      LR,[R4, #+152]
//  156     BookObj_CallPage(bk,&bk_VolInput);
        B        ??SelectEvent_OnEnter_6
//  157   }
//  158   else if (ittypes[item]==AT_VCALL)
??SelectEvent_OnEnter_15:
        CMP      R2,#+19
        BNE      ??SelectEvent_OnEnter_16
//  159   {
//  160     mbk->inputType=IT_PHONE_NUMBER;
        STR      R9,[R4, #+68]
//  161     mbk->minint=-1;
??SelectEvent_OnEnter_4:
        STR      R12,[R4, #+56]
//  162     mbk->maxint=100;
        STR      R3,[R4, #+60]
//  163     mbk->TextInputType=0;
        STR      R5,[R4, #+64]
//  164     BookObj_CallPage(bk,&bk_StringInput);
??SelectEvent_OnEnter_8:
        MOV      R1,R0
??SelectEvent_OnEnter_6:
        MOV      R0,R4
        SWI      +696
        POP      {R4-R10,PC}
//  165   }
//  166   else if (ittypes[item]==AT_CHOOSE_MENU_0)
??SelectEvent_OnEnter_16:
        LDR      R5,??SelectEvent_OnEnter_2+0x20  ;; bk_Switch
        LDR      R6,??SelectEvent_OnEnter_2+0x24  ;; lng
        CMP      R2,#+14
        BNE      ??SelectEvent_OnEnter_17
//  167   {
//  168     extern const PAGE_DESC bk_Switch;
//  169     if (!mbk->switch_lst)
        LDR      R0,[R4, #+180]
        CMP      R0,#+0
        BNE      ??SelectEvent_OnEnter_18
//  170       mbk->switch_lst=List_Create();
        SWI      +361
        STR      R0,[R4, #+180]
//  171     wchar_t *n1=new wchar_t[30];
??SelectEvent_OnEnter_18:
        MOV      R0,#+60
        _BLF     `??operator new[]`,`??operator new[]??rA`
//  172     wstrcpy(n1, lng[OFF]);
        LDR      R1,[R6, #+124]
        MOV      R7,R0
        SWI      +338
//  173     wchar_t *n2=new wchar_t[30];
        MOV      R0,#+60
        _BLF     `??operator new[]`,`??operator new[]??rA`
//  174     wstrcpy(n2, lng[ON]);
        LDR      R1,[R6, #+128]
        MOV      R8,R0
        SWI      +338
//  175     wchar_t *n3=new wchar_t[30];
        MOV      R0,#+60
        _BLF     `??operator new[]`,`??operator new[]??rA`
//  176     wstrcpy(n3, lng[ON_WOUT_SOUND]);
        LDR      R1,[R6, #+132]
        B        ??SelectEvent_OnEnter_19
//  177     List_InsertLast(mbk->switch_lst,n1);
//  178     List_InsertLast(mbk->switch_lst,n2);
//  179     List_InsertLast(mbk->switch_lst,n3);
//  180     BookObj_CallPage(bk,&bk_Switch);
//  181   }
//  182   else if (ittypes[item]==AT_CHOOSE_MENU_1)
??SelectEvent_OnEnter_17:
        CMP      R2,#+15
        BNE      ??SelectEvent_OnEnter_20
//  183   {
//  184     extern const PAGE_DESC bk_Switch;
//  185     if (!mbk->switch_lst)
        LDR      R0,[R4, #+180]
        CMP      R0,#+0
        BNE      ??SelectEvent_OnEnter_21
//  186       mbk->switch_lst=List_Create();
        SWI      +361
        STR      R0,[R4, #+180]
//  187     wchar_t *n1=new wchar_t[30];
??SelectEvent_OnEnter_21:
        MOV      R0,#+60
        _BLF     `??operator new[]`,`??operator new[]??rA`
//  188     wstrcpy(n1, lng[TYPICAL]);
        LDR      R1,[R6, #+136]
        MOV      R7,R0
        SWI      +338
//  189     wchar_t *n2=new wchar_t[30];
        MOV      R0,#+60
        _BLF     `??operator new[]`,`??operator new[]??rA`
//  190     wstrcpy(n2, lng[ANY_KEY]);
        LDR      R1,[R6, #+140]
        MOV      R8,R0
        SWI      +338
//  191     wchar_t *n3=new wchar_t[30];
        MOV      R0,#+60
        _BLF     `??operator new[]`,`??operator new[]??rA`
//  192     wstrcpy(n3, lng[AUTO]);
        LDR      R1,[R6, #+144]
??SelectEvent_OnEnter_19:
        MOV      R9,R0
        SWI      +338
//  193     List_InsertLast(mbk->switch_lst,n1);
        LDR      R0,[R4, #+180]
        MOV      R1,R7
        SWI      +432
//  194     List_InsertLast(mbk->switch_lst,n2);
        LDR      R0,[R4, #+180]
        MOV      R1,R8
        SWI      +432
//  195     List_InsertLast(mbk->switch_lst,n3);
        MOV      R1,R9
??SelectEvent_OnEnter_22:
        LDR      R0,[R4, #+180]
        SWI      +432
//  196     BookObj_CallPage(bk,&bk_Switch);
        MOV      R1,R5
??SelectEvent_OnEnter_9:
        MOV      R0,R4
        SWI      +696
        POP      {R4-R10,PC}
//  197   }
//  198   else if (ittypes[item]==AT_CHOOSE_MENU_2)
??SelectEvent_OnEnter_20:
        CMP      R2,#+16
        BNE      ??SelectEvent_OnEnter_23
//  199   {
//  200     extern const PAGE_DESC bk_Switch;
//  201     if (!mbk->switch_lst)
        LDR      R0,[R4, #+180]
        CMP      R0,#+0
        BNE      ??SelectEvent_OnEnter_24
//  202       mbk->switch_lst=List_Create();
        SWI      +361
        STR      R0,[R4, #+180]
//  203     wchar_t *n1=new wchar_t[30];
??SelectEvent_OnEnter_24:
        MOV      R0,#+60
        _BLF     `??operator new[]`,`??operator new[]??rA`
//  204     wstrcpy(n1, lng[OFF]);
        LDR      R1,[R6, #+124]
        MOV      R7,R0
        SWI      +338
//  205     wchar_t *n2=new wchar_t[30];
        MOV      R0,#+60
        _BLF     `??operator new[]`,`??operator new[]??rA`
//  206     wstrcpy(n2, lng[ON]);
        LDR      R1,[R6, #+128]
        MOV      R8,R0
        SWI      +338
//  207     List_InsertLast(mbk->switch_lst,n1);
        LDR      R0,[R4, #+180]
        MOV      R1,R7
        SWI      +432
//  208     List_InsertLast(mbk->switch_lst,n2);
        MOV      R1,R8
        B        ??SelectEvent_OnEnter_22
//  209     BookObj_CallPage(bk,&bk_Switch);
//  210   }
//  211   else if (ittypes[item]==AT_CHOOSE_MENU_3)
??SelectEvent_OnEnter_23:
        CMP      R2,#+17
        BNE      ??SelectEvent_OnEnter_25
//  212   {
//  213     extern const PAGE_DESC bk_Switch;
//  214     if (!mbk->switch_lst)
        LDR      R0,[R4, #+180]
        CMP      R0,#+0
        BNE      ??SelectEvent_OnEnter_26
//  215       mbk->switch_lst=List_Create();
        SWI      +361
        STR      R0,[R4, #+180]
//  216     wchar_t *n1=new wchar_t[30];
??SelectEvent_OnEnter_26:
        MOV      R0,#+60
        _BLF     `??operator new[]`,`??operator new[]??rA`
//  217     wstrcpy(n1, lng[ALLOW_ALL]);
        LDR      R1,[R6, #+148]
        MOV      R7,R0
        SWI      +338
//  218     wchar_t *n2=new wchar_t[30];
        MOV      R0,#+60
        _BLF     `??operator new[]`,`??operator new[]??rA`
//  219     wstrcpy(n2, lng[FROM_LIST]);
        LDR      R1,[R6, #+152]
        MOV      R8,R0
        SWI      +338
//  220     wchar_t *n3=new wchar_t[30];
        MOV      R0,#+60
        _BLF     `??operator new[]`,`??operator new[]??rA`
//  221     wstrcpy(n3, lng[NO]);
        LDR      R1,[R6, #+156]
        B        ??SelectEvent_OnEnter_19
//  222     List_InsertLast(mbk->switch_lst,n1);
//  223     List_InsertLast(mbk->switch_lst,n2);
//  224     List_InsertLast(mbk->switch_lst,n3);
//  225     BookObj_CallPage(bk,&bk_Switch);
//  226   }
//  227   else
//  228   {
//  229     BookObj_CallPage(bk,&bk_main);
??SelectEvent_OnEnter_25:
        LDR      R1,??SelectEvent_OnEnter_2+0x28  ;; bk_main
        B        ??SelectEvent_OnEnter_6
        DATA
??SelectEvent_OnEnter_2:
        DC8      0x30, 0x00, 0x00, 0x00
        DC32     ittypes
        DC32     bk_StringInput
        DC32     SelectFile_page
        DC32     SelectShortcut_page
        DC32     SetJava_page
        DC32     bk_profiles
        DC32     bk_VolInput
        DC32     bk_Switch
        DC32     lng
        DC32     bk_main
        CFI EndBlock cfiBlock1
//  230   }
//  231 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelectEvent_OnBack??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??SelectEvent_OnBack
//  232 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??SelectEvent_OnBack
        ARM
//  233 void SelectEvent_OnBack(BOOK *bk, GUI* )
//  234 {
??SelectEvent_OnBack:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
//  235   MyBOOK *mbk=(MyBOOK *)bk;
//  236   mbk->selev->type=temp_act;
        LDR      R5,??DataTable3  ;; temp_act
        MOV      R4,R0
        LDR      R0,[R4, #+28]
        LDR      R1,[R5, #+0]
        STR      R1,[R0, #+0]
//  237   if (old)
        LDR      R0,[R5, #+4]
        CMP      R0,#+0
        BEQ      ??SelectEvent_OnBack_1
//  238   {
//  239     if (mbk->selev->param!=old)
        LDR      R1,[R4, #+28]
        LDR      R1,[R1, #+52]
        CMP      R1,R0
        BEQ      ??SelectEvent_OnBack_2
//  240     {
//  241       delete(mbk->selev->param);
        MOV      R0,R1
        _BLF     `??operator delete`,`??operator delete??rA`
//  242     }
//  243     mbk->selev->param=old;
??SelectEvent_OnBack_2:
        LDR      R0,[R4, #+28]
        LDR      R1,[R5, #+4]
        STR      R1,[R0, #+52]
//  244   }
//  245   BookObj_ReturnPage(bk, PREVIOUS_EVENT);
??SelectEvent_OnBack_1:
        LDR      R0,??SelectEvent_OnBack_3  ;; PREVIOUS_EVENT
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        SWI      +302
//  246 };
        POP      {R4,R5,PC}       ;; return
        DATA
??SelectEvent_OnBack_3:
        DC32     PREVIOUS_EVENT
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??GetNumOfActions??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??GetNumOfActions
//  247 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??GetNumOfActions
        ARM
//  248 int GetNumOfActions()
//  249 {
//  250   int num=0;
??GetNumOfActions:
        MOV      R0,#+0
//  251   int x;
//  252   for (x=0;x<ACTION_COUNT;x++)
        MOV      R1,#+0
//  253   {
//  254     if (items[x])
??GetNumOfActions_1:
        LDR      R2,??DataTable2  ;; items
        LDR      R2,[R2, +R1, LSL #+2]
        CMP      R2,#+0
        BXEQ     LR
//  255     {
//  256       num++;
        ADD      R0,R0,#+1
//  257     }
        ADD      R1,R1,#+1
        CMP      R1,#+50
        BLT      ??GetNumOfActions_1
//  258     else
//  259     {
//  260       return num;
        BX       LR               ;; return
        CFI EndBlock cfiBlock5
//  261     }
//  262   }
//  263   return num;
//  264 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelectEvent_onLBMessage??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??SelectEvent_onLBMessage
//  265 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??SelectEvent_onLBMessage
        ARM
//  266 int SelectEvent_onLBMessage(GUI_MESSAGE * msg)
//  267 {
??SelectEvent_onLBMessage:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
//  268   MyBOOK * myBook = (MyBOOK *) FindBook(isEvtEditBook);
        LDR      R0,??SelectEvent_onLBMessage_1  ;; ??isEvtEditBook
        SWI      +304
//  269   switch( GUIonMessage_GetMsg(msg) )
        MOV      R0,R4
        SWI      +884
        CMP      R0,#+1
        BNE      ??SelectEvent_onLBMessage_2
//  270   {
//  271   case 1:
//  272     int item=GUIonMessage_GetCreatedItemIndex(msg);
        MOV      R0,R4
        SWI      +311
//  273     GUIonMessage_SetMenuItemText(msg,TextID_Create(items[item],ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R3,??DataTable2  ;; items
        MOV      R2,#+255
        LDR      R0,[R3, +R0, LSL #+2]
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +312
//  274     break;
//  275   }
//  276   return(1);
??SelectEvent_onLBMessage_2:
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        DATA
??SelectEvent_onLBMessage_1:
        DC32     ??isEvtEditBook
        CFI EndBlock cfiBlock7
//  277 };

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable2:
        DC32     items

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelectEvent_CreateGui??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??SelectEvent_CreateGui
//  278 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??SelectEvent_CreateGui
        ARM
//  279 GUI_LIST * SelectEvent_CreateGui(MyBOOK * mbk)
//  280 {
??SelectEvent_CreateGui:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
//  281   GUI_LIST * lo=0;
//  282   if (lo=CreateListMenu(&mbk->book,0))
        MOV      R1,#+0
        SWI      +448
        MOVS     R4,R0
        BEQ      ??SelectEvent_CreateGui_1
//  283   {
//  284     GUIObject_SetTitleText(lo,TextID_Create(lng[ACTIONS],ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R0,??SelectEvent_CreateGui_2  ;; lng + 260
        MOV      R2,#+255
        LDR      R0,[R0, #+0]
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +307
//  285     int num=GetNumOfActions();
        BL       ??GetNumOfActions
//  286     ListMenu_SetItemCount(lo,num);
        MOV      R1,R0
        MOV      R0,R4
        SWI      +449
//  287     ListMenu_SetOnMessage(lo,SelectEvent_onLBMessage);
        LDR      R1,??SelectEvent_CreateGui_2+0x4  ;; ??SelectEvent_onLBMessage
        MOV      R0,R4
        SWI      +372
//  288     ListMenu_SetItemStyle(lo,0);
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +319
//  289     GUIObject_SoftKeys_SetAction(lo,ACTION_BACK, SelectEvent_OnBack);
        LDR      R0,??SelectEvent_CreateGui_2+0x8  ;; ACTION_BACK
        LDR      R2,??SelectEvent_CreateGui_2+0xC  ;; ??SelectEvent_OnBack
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  290     GUIObject_SoftKeys_SetAction(lo,ACTION_SELECT1,SelectEvent_OnEnter);
        LDR      R0,??SelectEvent_CreateGui_2+0x10  ;; ACTION_SELECT1
        LDR      R2,??SelectEvent_CreateGui_2+0x14  ;; ??SelectEvent_OnEnter
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  291     ListMenu_SetCursorToItem(lo,0);
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +309
//  292   }
//  293   return(lo);
??SelectEvent_CreateGui_1:
        MOV      R0,R4
        POP      {R4,PC}          ;; return
        DATA
??SelectEvent_CreateGui_2:
        DC32     lng + 260
        DC32     ??SelectEvent_onLBMessage
        DC32     ACTION_BACK
        DC32     ??SelectEvent_OnBack
        DC32     ACTION_SELECT1
        DC32     ??SelectEvent_OnEnter
        CFI EndBlock cfiBlock9
//  294 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??SelectEvent_CreateList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??SelectEvent_CreateList
//  295 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??SelectEvent_CreateList
        ARM
//  296 GUI_LIST *SelectEvent_CreateList(BOOK *book)
//  297 {
??SelectEvent_CreateList:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
//  298   MyBOOK *mbk=(MyBOOK *)book;
//  299   temp_act=mbk->selev->type;
        LDR      R1,[R4, #+28]
        LDR      R0,??DataTable3  ;; temp_act
        LDR      R1,[R1, #+0]
        STR      R1,[R0, #+0]
//  300   old=mbk->selev->param;
        LDR      R1,[R4, #+28]
        LDR      R1,[R1, #+52]
        STR      R1,[R0, #+4]
//  301   mbk->addgui=SelectEvent_CreateGui(mbk);
        MOV      R0,R4
        BL       ??SelectEvent_CreateGui
        STR      R0,[R4, #+44]
//  302   GUIObject_Show(mbk->addgui);
        SWI      +308
//  303   return(mbk->addgui);
        LDR      R0,[R4, #+44]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock11
//  304 };

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable3:
        DC32     temp_act

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??SEPage_OnEnter??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??SEPage_OnEnter
//  305 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??SEPage_OnEnter
        ARM
//  306 static int SEPage_OnEnter(void *,BOOK * bk)
//  307 {
??SEPage_OnEnter:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R0,R1
//  308   SelectEvent_CreateList(bk);
        BL       ??SelectEvent_CreateList
//  309   return (1);
        MOV      R0,#+1
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock13
//  310 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??SEPage_OnExit??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??SEPage_OnExit
//  311 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??SEPage_OnExit
        ARM
//  312 static int SEPage_OnExit(void *, BOOK * bk)
//  313 {
??SEPage_OnExit:
        LDR      R0,??SEPage_OnExit_1  ;; temp_act + 4
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        LDR      R0,[R0, #+0]
        MOV      R4,R1
        CMP      R0,#+0
        CMPNE    R4,#+0
        LDRNE    R1,[R4, #+28]
        CMPNE    R1,#+0
        LDRNE    R1,[R1, #+52]
        CMPNE    R1,#+0
        BEQ      ??SEPage_OnExit_2
//  314   MyBOOK *mbk=(MyBOOK *)bk;
//  315   if (old && mbk && mbk->selev && mbk->selev->param)
//  316   {
//  317     if (old!=mbk->selev->param)
        LDR      R1,[R4, #+28]
        LDR      R1,[R1, #+52]
        CMP      R0,R1
        BEQ      ??SEPage_OnExit_2
//  318     {
//  319       delete(old);
        _BLF     `??operator delete`,`??operator delete??rA`
//  320     }
//  321   }
//  322   FREE_GUI(mbk->addgui);
??SEPage_OnExit_2:
        LDR      R0,[R4, #+44]
        CMP      R0,#+0
        BEQ      ??SEPage_OnExit_3
        SWI      +462
        STR      R0,[R4, #+44]
//  323   return (1);  
??SEPage_OnExit_3:
        MOV      R0,#+1
        POP      {R4,PC}          ;; return
        DATA
??SEPage_OnExit_1:
        DC32     temp_act + 4
        CFI EndBlock cfiBlock15
//  324 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new[]??rA`:
        LDR      R12,??Subroutine8_0  ;; `??operator new[]`
        BX       R12
        DATA
??Subroutine8_0:
        DC32     `??operator new[]`
        CFI EndBlock cfiBlock16

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine9_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine9_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock17
//  325 

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
//  326 const PAGE_MSG bk_msglst_selectevent[] @ "DYN_PAGE"  = 
bk_msglst_selectevent:
        DATA
        DC32 66, ??SEPage_OnEnter, 67, ??SEPage_OnExit, 64, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x44b\\x43a\\x43b\\x44e\\x447\\x4`:
        DATA
        DC8 12H, 4, 4BH, 4, 3AH, 4, 3BH, 4
        DC8 4EH, 4, 47H, 4, 35H, 4, 3DH, 4
        DC8 38H, 4, 35H, 4, 20H, 0, 42H, 4
        DC8 35H, 4, 3BH, 4, 35H, 4, 44H, 4
        DC8 3EH, 4, 3DH, 4, 30H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3`:
        DATA
        DC8 17H, 4, 32H, 4, 3EH, 4, 3DH, 4
        DC8 3EH, 4, 3AH, 4, 3AH, 0, 20H, 0
        DC8 43H, 4, 41H, 4, 42H, 4, 2EH, 0
        DC8 20H, 0, 3FH, 4, 40H, 4, 38H, 4
        DC8 51H, 4, 3CH, 4, 20H, 0, 32H, 4
        DC8 4BH, 4, 37H, 4, 3EH, 4, 32H, 4
        DC8 3EH, 4, 32H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x413\\x43e\\x43b\\x43e\\x441\\x43e\\x4`:
        DATA
        DC8 13H, 4, 3EH, 4, 3BH, 4, 3EH, 4
        DC8 41H, 4, 3EH, 4, 32H, 4, 3EH, 4
        DC8 39H, 4, 20H, 0, 32H, 4, 4BH, 4
        DC8 37H, 4, 3EH, 4, 32H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x421\\x43c\\x435\\x43d\\x438\\x442\\x4`:
        DATA
        DC8 21H, 4, 3CH, 4, 35H, 4, 3DH, 4
        DC8 38H, 4, 42H, 4, 4CH, 4, 20H, 0
        DC8 42H, 4, 35H, 4, 3CH, 4, 43H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "EvtEdit_SelectEvent_Page">`:
        DATA
        DC8 "EvtEdit_SelectEvent_Page"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x43e\\x43c\\x435\\x43d\\x44f\\x4`:
        DATA
        DC8 1FH, 4, 3EH, 4, 3CH, 4, 35H, 4
        DC8 3DH, 4, 4FH, 4, 42H, 4, 4CH, 4
        DC8 20H, 0, 40H, 4, 30H, 4, 41H, 4
        DC8 3FH, 4, 38H, 4, 41H, 4, 30H, 4
        DC8 3DH, 4, 38H, 4, 35H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x421\\x43e\\x43e\\x431\\x449\\x435\\x4`:
        DATA
        DC8 21H, 4, 3EH, 4, 3EH, 4, 31H, 4
        DC8 49H, 4, 35H, 4, 3DH, 4, 38H, 4
        DC8 35H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x430\\x43f\\x443\\x441\\x43a\\x2`:
        DATA
        DC8 17H, 4, 30H, 4, 3FH, 4, 43H, 4
        DC8 41H, 4, 3AH, 4, 20H, 0, 4DH, 4
        DC8 3BH, 4, 4CH, 4, 44H, 4, 30H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x42f\\x440\\x43b\\x44b\\x43a">`:
        DATA
        DC8 2FH, 4, 40H, 4, 3BH, 4, 4BH, 4
        DC8 3AH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4a\\x61\\x76\\x61">`:
        DATA
        DC8 4AH, 0, 61H, 0, 76H, 0, 61H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 30H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x42f\\x440\\x43a\\x43e\\x441\\x442\\x4`:
        DATA
        DC8 2FH, 4, 40H, 4, 3AH, 4, 3EH, 4
        DC8 41H, 4, 42H, 4, 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x424\\x43e\\x43d\\x430\\x440\\x438\\x4`:
        DATA
        DC8 24H, 4, 3EH, 4, 3DH, 4, 30H, 4
        DC8 40H, 4, 38H, 4, 3AH, 4, 3AH, 0
        DC8 20H, 0, 43H, 4, 41H, 4, 42H, 4
        DC8 2EH, 0, 20H, 0, 4FH, 4, 40H, 4
        DC8 3AH, 4, 3EH, 4, 41H, 4, 42H, 4
        DC8 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41f\\x440\\x43e\\x444\\x438\\x43b\\x4`:
        DATA
        DC8 1FH, 4, 40H, 4, 3EH, 4, 44H, 4
        DC8 38H, 4, 3BH, 4, 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x420\\x435\\x441\\x442\\x430\\x440\\x4`:
        DATA
        DC8 20H, 4, 35H, 4, 41H, 4, 42H, 4
        DC8 30H, 4, 40H, 4, 42H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41c\\x443\\x437\\x44b\\x43a\\x430\\x3`:
        DATA
        DC8 1CH, 4, 43H, 4, 37H, 4, 4BH, 4
        DC8 3AH, 4, 30H, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 3EH, 4, 41H, 4, 3FH, 4
        DC8 40H, 4, 2EH, 0, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41c\\x443\\x437\\x44b\\x43a\\x430\\x3_1`:
        DATA
        DC8 1CH, 4, 43H, 4, 37H, 4, 4BH, 4
        DC8 3AH, 4, 30H, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 3EH, 4, 41H, 4, 3FH, 4
        DC8 40H, 4, 2EH, 0, 20H, 0, 41H, 4
        DC8 20H, 0, 33H, 4, 40H, 4, 3EH, 4
        DC8 3CH, 4, 3AH, 4, 3EH, 4, 41H, 4
        DC8 42H, 4, 4CH, 4, 4EH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x431\\x43e\\x438\\x3a\\x20\\x443`:
        DATA
        DC8 1EH, 4, 31H, 4, 3EH, 4, 38H, 4
        DC8 3AH, 0, 20H, 0, 43H, 4, 41H, 4
        DC8 42H, 4, 30H, 4, 3DH, 4, 3EH, 4
        DC8 32H, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x438\\x431\\x440\\x430">`:
        DATA
        DC8 12H, 4, 38H, 4, 31H, 4, 40H, 4
        DC8 30H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x413\\x42d\\x3a\\x20\\x443\\x441\\x442`:
        DATA
        DC8 13H, 4, 2DH, 4, 3AH, 0, 20H, 0
        DC8 43H, 4, 41H, 4, 42H, 4, 2EH, 0
        DC8 20H, 0, 37H, 4, 30H, 4, 3CH, 4
        DC8 35H, 4, 42H, 4, 3AH, 4, 43H, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x413\\x42d\\x3a\\x20\\x443\\x441\\x442_1`:
        DATA
        DC8 13H, 4, 2DH, 4, 3AH, 0, 20H, 0
        DC8 43H, 4, 41H, 4, 42H, 4, 2EH, 0
        DC8 20H, 0, 3EH, 4, 3FH, 4, 35H, 4
        DC8 40H, 4, 30H, 4, 42H, 4, 3EH, 4
        DC8 40H, 4, 30H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x430\\x43a\\x440\\x44b\\x442\\x4`:
        DATA
        DC8 17H, 4, 30H, 4, 3AH, 4, 40H, 4
        DC8 4BH, 4, 42H, 4, 4CH, 4, 20H, 0
        DC8 3AH, 4, 3DH, 4, 38H, 4, 33H, 4
        DC8 43H, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x43a\\x43b\\x2e\\x20\\x43c\\x443`:
        DATA
        DC8 12H, 4, 3AH, 4, 3BH, 4, 2EH, 0
        DC8 20H, 0, 3CH, 4, 43H, 4, 37H, 4
        DC8 4BH, 4, 3AH, 4, 43H, 4, 2FH, 0
        DC8 40H, 4, 30H, 4, 34H, 4, 38H, 4
        DC8 3EH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_1`:
        DATA
        DC8 17H, 4, 32H, 4, 3EH, 4, 3DH, 4
        DC8 3EH, 4, 3AH, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 3AH, 4, 3BH, 4, 2EH, 0
        DC8 3DH, 4, 30H, 4, 40H, 4, 30H, 4
        DC8 41H, 4, 42H, 4, 30H, 4, 3DH, 4
        DC8 38H, 4, 35H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x431\\x43d\\x43e\\x432\\x438\\x4`:
        DATA
        DC8 1EH, 4, 31H, 4, 3DH, 4, 3EH, 4
        DC8 32H, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x443\\x43a\\x3a\\x20\\x432`:
        DATA
        DC8 17H, 4, 32H, 4, 43H, 4, 3AH, 4
        DC8 3AH, 0, 20H, 0, 32H, 4, 4BH, 4
        DC8 3AH, 4, 3BH, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x443\\x43a\\x3a\\x20\\x432_1`:
        DATA
        DC8 17H, 4, 32H, 4, 43H, 4, 3AH, 4
        DC8 3AH, 0, 20H, 0, 32H, 4, 3AH, 4
        DC8 3BH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x418\\x41a\\x3a\\x20\\x432\\x43a\\x43b`:
        DATA
        DC8 18H, 4, 1AH, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 3AH, 4, 3BH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x418\\x41a\\x3a\\x20\\x432\\x44b\\x43a`:
        DATA
        DC8 18H, 4, 1AH, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 4BH, 4, 3AH, 4, 3BH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x418\\x41a\\x3a\\x20\\x43c\\x438\\x433`:
        DATA
        DC8 18H, 4, 1AH, 4, 3AH, 0, 20H, 0
        DC8 3CH, 4, 38H, 4, 33H, 4, 3DH, 4
        DC8 43H, 4, 42H, 4, 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x424\\x43e\\x43d\\x430\\x440\\x438\\x4_1`:
        DATA
        DC8 24H, 4, 3EH, 4, 3DH, 4, 30H, 4
        DC8 40H, 4, 38H, 4, 3AH, 4, 3AH, 0
        DC8 20H, 0, 3CH, 4, 38H, 4, 33H, 4
        DC8 3DH, 4, 43H, 4, 42H, 4, 4CH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x28\\x57\\x35\\x38\\x30\\x29\\x3a\\x20\\`:
        DATA
        DC8 28H, 0, 57H, 0, 35H, 0, 38H, 0
        DC8 30H, 0, 29H, 0, 3AH, 0, 20H, 0
        DC8 3EH, 4, 42H, 4, 3AH, 4, 3BH, 4
        DC8 4EH, 4, 47H, 4, 38H, 4, 42H, 4
        DC8 4CH, 4, 20H, 0, 34H, 4, 38H, 4
        DC8 3EH, 4, 34H, 4, 4BH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x28\\x57\\x35\\x38\\x30\\x29\\x3a\\x20\\_1`:
        DATA
        DC8 28H, 0, 57H, 0, 35H, 0, 38H, 0
        DC8 30H, 0, 29H, 0, 3AH, 0, 20H, 0
        DC8 32H, 4, 3AH, 4, 3BH, 4, 4EH, 4
        DC8 47H, 4, 38H, 4, 42H, 4, 4CH, 4
        DC8 20H, 0, 34H, 4, 38H, 4, 3EH, 4
        DC8 34H, 4, 4BH, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x440\\x430\\x43d\\x436\\x2e\\x43`:
        DATA
        DC8 1EH, 4, 40H, 4, 30H, 4, 3DH, 4
        DC8 36H, 4, 2EH, 0, 34H, 4, 38H, 4
        DC8 3EH, 4, 34H, 4, 3AH, 0, 20H, 0
        DC8 3CH, 4, 38H, 4, 33H, 4, 3DH, 4
        DC8 43H, 4, 42H, 4, 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x440\\x430\\x43d\\x436\\x2e\\x43_1`:
        DATA
        DC8 1EH, 4, 40H, 4, 30H, 4, 3DH, 4
        DC8 36H, 4, 2EH, 0, 34H, 4, 38H, 4
        DC8 3EH, 4, 34H, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 3AH, 4, 3BH, 4, 2EH, 0
        DC8 20H, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x41e\\x440\\x430\\x43d\\x436\\x2e\\x43_2`:
        DATA
        DC8 1EH, 4, 40H, 4, 30H, 4, 3DH, 4
        DC8 36H, 4, 2EH, 0, 34H, 4, 38H, 4
        DC8 3EH, 4, 34H, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 4BH, 4, 3AH, 4, 3BH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x412\\x430\\x436\\x43d\\x43e\\x435\\x2`:
        DATA
        DC8 12H, 4, 30H, 4, 36H, 4, 3DH, 4
        DC8 3EH, 4, 35H, 4, 20H, 0, 41H, 4
        DC8 3EH, 4, 31H, 4, 4BH, 4, 42H, 4
        DC8 38H, 4, 35H, 4, 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_2`:
        DATA
        DC8 17H, 4, 32H, 4, 3EH, 4, 3DH, 4
        DC8 3EH, 4, 3AH, 4, 3AH, 0, 20H, 0
        DC8 43H, 4, 41H, 4, 42H, 4, 2EH, 0
        DC8 33H, 4, 40H, 4, 3EH, 4, 3CH, 4
        DC8 3AH, 4, 3EH, 4, 41H, 4, 42H, 4
        DC8 4CH, 4, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_3`:
        DATA
        DC8 17H, 4, 32H, 4, 3EH, 4, 3DH, 4
        DC8 3EH, 4, 3AH, 4, 3AH, 0, 20H, 0
        DC8 32H, 4, 38H, 4, 31H, 4, 40H, 4
        DC8 30H, 4, 46H, 4, 38H, 4, 4FH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_4`:
        DATA
        DC8 17H, 4, 32H, 4, 3EH, 4, 3DH, 4
        DC8 3EH, 4, 3AH, 4, 3AH, 0, 20H, 0
        DC8 43H, 4, 41H, 4, 42H, 4, 2EH, 0
        DC8 44H, 4, 30H, 4, 39H, 4, 3BH, 4
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_5`:
        DATA
        DC8 17H, 4, 32H, 4, 3EH, 4, 3DH, 4
        DC8 3EH, 4, 3AH, 4, 3AH, 0, 20H, 0
        DC8 41H, 4, 3FH, 4, 3EH, 4, 41H, 4
        DC8 3EH, 4, 31H, 4, 20H, 0, 3FH, 4
        DC8 40H, 4, 38H, 4, 51H, 4, 3CH, 4
        DC8 30H, 4, 0, 0
//  327 {
//  328   PAGE_ENTER_EVENT_TAG,    SEPage_OnEnter,
//  329   PAGE_EXIT_EVENT_TAG,     SEPage_OnExit,
//  330   NIL_EVENT_TAG,           NULL
//  331 };
//  332 

        RSEG DATA_C:CONST:SORT:NOROOT(2)
//  333 const PAGE_DESC bk_selectevent = {"EvtEdit_SelectEvent_Page",0,bk_msglst_selectevent};
bk_selectevent:
        DATA
        DC32 `?<Constant "EvtEdit_SelectEvent_Page">`, 0H
        DC32 bk_msglst_selectevent

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for items>`:
        DATA
        DC32 `?<Constant L"\\x421\\x43e\\x43e\\x431\\x449\\x435\\x4`
        DC32 `?<Constant L"\\x417\\x430\\x43f\\x443\\x441\\x43a\\x2`
        DC32 `?<Constant L"\\x42f\\x440\\x43b\\x44b\\x43a">`
        DC32 `?<Constant L"\\x4a\\x61\\x76\\x61">`
        DC32 `?<Constant L"\\x412\\x44b\\x43a\\x43b\\x44e\\x447\\x4`
        DC32 `?<Constant L"\\x42f\\x440\\x43a\\x43e\\x441\\x442\\x4`
        DC32 `?<Constant L"\\x424\\x43e\\x43d\\x430\\x440\\x438\\x4`
        DC32 `?<Constant L"\\x41f\\x440\\x43e\\x444\\x438\\x43b\\x4`
        DC32 `?<Constant L"\\x420\\x435\\x441\\x442\\x430\\x440\\x4`
        DC32 `?<Constant L"\\x41c\\x443\\x437\\x44b\\x43a\\x430\\x3`
        DC32 `?<Constant L"\\x41c\\x443\\x437\\x44b\\x43a\\x430\\x3_1`
        DC32 `?<Constant L"\\x41e\\x431\\x43e\\x438\\x3a\\x20\\x443`
        DC32 `?<Constant L"\\x412\\x438\\x431\\x440\\x430">`
        DC32 `?<Constant L"\\x413\\x42d\\x3a\\x20\\x443\\x441\\x442`
        DC32 `?<Constant L"\\x413\\x42d\\x3a\\x20\\x443\\x441\\x442_1`
        DC32 `?<Constant L"\\x417\\x430\\x43a\\x440\\x44b\\x442\\x4`
        DC32 `?<Constant L"\\x412\\x43a\\x43b\\x2e\\x20\\x43c\\x443`
        DC32 `?<Constant L"\\x41f\\x43e\\x43c\\x435\\x43d\\x44f\\x4`
        DC32 `?<Constant L"\\x41e\\x431\\x43d\\x43e\\x432\\x438\\x4`
        DC32 `?<Constant L"\\x417\\x432\\x443\\x43a\\x3a\\x20\\x432`
        DC32 `?<Constant L"\\x417\\x432\\x443\\x43a\\x3a\\x20\\x432_1`
        DC32 `?<Constant L"\\x418\\x41a\\x3a\\x20\\x432\\x43a\\x43b`
        DC32 `?<Constant L"\\x418\\x41a\\x3a\\x20\\x432\\x44b\\x43a`
        DC32 `?<Constant L"\\x418\\x41a\\x3a\\x20\\x43c\\x438\\x433`
        DC32 `?<Constant L"\\x424\\x43e\\x43d\\x430\\x440\\x438\\x4_1`
        DC32 `?<Constant L"\\x28\\x57\\x35\\x38\\x30\\x29\\x3a\\x20\\`
        DC32 `?<Constant L"\\x28\\x57\\x35\\x38\\x30\\x29\\x3a\\x20\\_1`
        DC32 `?<Constant L"\\x41e\\x440\\x430\\x43d\\x436\\x2e\\x43`
        DC32 `?<Constant L"\\x41e\\x440\\x430\\x43d\\x436\\x2e\\x43_1`
        DC32 `?<Constant L"\\x41e\\x440\\x430\\x43d\\x436\\x2e\\x43_2`
        DC32 `?<Constant L"\\x412\\x430\\x436\\x43d\\x43e\\x435\\x2`
        DC32 `?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_2`
        DC32 `?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_3`
        DC32 `?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_4`
        DC32 `?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_5`
        DC32 `?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3_1`
        DC32 `?<Constant L"\\x417\\x432\\x43e\\x43d\\x43e\\x43a\\x3`
        DC32 `?<Constant L"\\x413\\x43e\\x43b\\x43e\\x441\\x43e\\x4`
        DC32 `?<Constant L"\\x421\\x43c\\x435\\x43d\\x438\\x442\\x4`, 0H, 0H
        DC32 0H

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for ittypes>`:
        DATA
        DC32 0, 2, 7, 8, 9, 5, 5, 12, 9, 1, 10, 11, 5, 0, 0, 0, 9, 6, 9, 4, 4
        DC32 9, 9, 9, 9, 9, 9, 9, 9, 9, 0, 13, 14, 1, 15, 16, 17, 19, 20

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        END
//  334 
// 
// 1 620 bytes in segment CODE
// 1 288 bytes in segment DATA_C
//   324 bytes in segment DATA_I
//   324 bytes in segment DATA_ID
//     8 bytes in segment DATA_Z
//    24 bytes in segment DYN_PAGE
//    24 bytes in segment INITTAB
// 
// 1 564 bytes of CODE  memory (+ 80 bytes shared)
// 1 636 bytes of CONST memory
//   332 bytes of DATA  memory
//
//Errors: none
//Warnings: none
