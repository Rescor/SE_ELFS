//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:55:00 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\JavaL /
//                       ist.c                                               /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\JavaL /
//                       ist.c -D NDEBUG -D OLDFUNCTIONS -lC                 /
//                       Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\List\ -lA Z:\home\perk11\www\perk11.info\svn\SE\ /
//                       EvtEdit\Release\List\ -o                            /
//                       Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\Obj\ -s9 --cpu_mode arm --endian little --cpu    /
//                       ARM926EJ-S --stack_align 4 --interwork -e           /
//                       --enable_multibytes --fpu None --eec++              /
//                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl /
//                       8n.h -I Z:\home\perk11\IAR2\arm\INC\                /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\List\JavaList.s79                                /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME JavaList

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??CreateElem
        FUNCTION ??CreateElem,0203H
        LOCFRAME CSTACK, 16, STACK
        MULTWEAK ??CreateElem??rT
        PUBLIC ??CreateJavaList
        FUNCTION ??CreateJavaList,0603H
        LOCFRAME CSTACK, 20, STACK
        MULTWEAK ??CreateJavaList??rT
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable3 EQU 0
??DataTable4 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
        PUBLIC ??DestroyJavaList
        FUNCTION ??DestroyJavaList,0603H
        LOCFRAME CSTACK, 4, STACK
        MULTWEAK ??DestroyJavaList??rT
        PUBLIC ??ExitJavaList
        FUNCTION ??ExitJavaList,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??ExitJavaList??rT
        MULTWEAK ??GetStrID??rA
        PUBLIC ??elem_filter
        FUNCTION ??elem_filter,0603H
        MULTWEAK ??elem_filter??rT
        PUBLIC ??elem_free
        FUNCTION ??elem_free,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??elem_free??rT
        PUBLIC ??java_list_callback
        FUNCTION ??java_list_callback,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??java_list_callback??rT
        PUBLIC ??onEnter_JavaList
        FUNCTION ??onEnter_JavaList,0603H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??onEnter_JavaList??rT
        PUBLIC ??onExit_JavaList
        FUNCTION ??onExit_JavaList,0603H
        LOCFRAME CSTACK, 8, STACK
        MULTWEAK ??onExit_JavaList??rT
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new??rA`
        MULTWEAK `??operator new[]??rA`
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC SetJava_page
        PUBLIC java_list
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        





??CreateElem??rT    SYMBOL "??rT", ??CreateElem

??CreateJavaList??rT SYMBOL "??rT", ??CreateJavaList

??DestroyJavaList??rT SYMBOL "??rT", ??DestroyJavaList

??ExitJavaList??rT  SYMBOL "??rT", ??ExitJavaList
??GetStrID??rA      SYMBOL "??rA", ??GetStrID

??elem_filter??rT   SYMBOL "??rT", ??elem_filter

??elem_free??rT     SYMBOL "??rT", ??elem_free

??java_list_callback??rT SYMBOL "??rT", ??java_list_callback

??onEnter_JavaList??rT SYMBOL "??rT", ??onEnter_JavaList

??onExit_JavaList??rT SYMBOL "??rT", ??onExit_JavaList
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new??rA` SYMBOL "??rA", `??operator new`
`??operator new[]??rA` SYMBOL "??rA", `??operator new[]`

        EXTERN ??GetStrID
        FUNCTION ??GetStrID,0202H
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new`
        FUNCTION `??operator new`,0202H
        EXTERN `??operator new[]`
        FUNCTION `??operator new[]`,0202H
        EXTERN ACCEPT_EVENT
        EXTERN ACTION_BACK
        EXTERN ACTION_LONG_BACK
        EXTERN ACTION_SELECT1
        EXTERN NIL_EVENT
        EXTERN bk_main

// Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\JavaList.c
//    1 #include "..\deleaker\mem2.h"
//    2 #include "..\include\Lib_Clara.h" 
//    3 #include "..\include\Dir.h" 
//    4 #include "header\structs.h"
//    5 #include "header\pages.h"
//    6 #include "header\externals.h"
//    7 
//    8 typedef struct
//    9 {
//   10   wchar_t * name;
//   11   wchar_t * fullpath;
//   12   int appID;
//   13   IMAGEID imageID;
//   14 }java_list_elem;
//   15 

        RSEG DATA_Z:DATA:SORT:NOROOT(2)
//   16 LIST * java_list;
java_list:
        DS8 4

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??onEnter_JavaList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??onEnter_JavaList
//   17 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??onEnter_JavaList
        ARM
//   18 void onEnter_JavaList(BOOK * book, GUI* )
//   19 {
??onEnter_JavaList:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
//   20   MyBOOK *mbk=(MyBOOK*)book;
//   21   
//   22   java_list_elem * elem=(java_list_elem *)List_Get(java_list,ListMenu_GetSelectedItem(mbk->javalst));
        LDR      R0,[R4, #+104]
        SWI      +318
        MOV      R1,R0
        LDR      R0,??DataTable7  ;; java_list
        LDR      R0,[R0, #+0]
        SWI      +429
        MOV      R5,R0
//   23 
//   24   DELETE(mbk->selev->param);
        LDR      R0,[R4, #+28]
        LDR      R0,[R0, #+52]
        CMP      R0,#+0
        BEQ      ??onEnter_JavaList_1
        LDR      R0,[R4, #+28]
        LDR      R0,[R0, #+52]
        _BLF     `??operator delete`,`??operator delete??rA`
        LDR      R0,[R4, #+28]
        MOV      R1,#+0
        STR      R1,[R0, #+52]
//   25   mbk->selev->param=new wchar_t[wstrlen(elem->name)+1];
??onEnter_JavaList_1:
        LDR      R0,[R5, #+0]
        SWI      +343
        ADD      R0,R0,#+1
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        LDR      R1,[R4, #+28]
        STR      R0,[R1, #+52]
//   26   wstrcpy(mbk->selev->param,elem->name);
        LDR      R0,[R4, #+28]
        LDR      R1,[R5, #+0]
        LDR      R0,[R0, #+52]
        SWI      +338
//   27   BookObj_ReturnPage(book,ACCEPT_EVENT);
        LDR      R0,??onEnter_JavaList_2  ;; ACCEPT_EVENT
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        SWI      +302
//   28   BookObj_CallPage(book,&bk_main);
        LDR      R1,??onEnter_JavaList_2+0x4  ;; bk_main
        MOV      R0,R4
        SWI      +696
//   29 };
        POP      {R4,R5,PC}       ;; return
        DATA
??onEnter_JavaList_2:
        DC32     ACCEPT_EVENT
        DC32     bk_main
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??ExitJavaList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??ExitJavaList
//   30 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??ExitJavaList
        ARM
//   31 void ExitJavaList(BOOK * book, GUI* )
//   32 {
??ExitJavaList:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
//   33   BookObj_ReturnPage(book,NIL_EVENT);
        LDR      R0,??DataTable2  ;; NIL_EVENT
        LDR      R5,[R0, #+0]
        MOV      R0,R4
        MOV      R1,R5
        SWI      +302
//   34   BookObj_ReturnPage(book,NIL_EVENT);
        MOV      R1,R5
        MOV      R0,R4
        SWI      +302
//   35   BookObj_ReturnPage(book,NIL_EVENT);
        MOV      R1,R5
        MOV      R0,R4
        SWI      +302
//   36 };
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??DestroyJavaList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??DestroyJavaList
//   37 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??DestroyJavaList
        ARM
//   38 void DestroyJavaList(BOOK * book, GUI* )
//   39 {
//   40   BookObj_ReturnPage(book,NIL_EVENT);
??DestroyJavaList:
        LDR      R1,??DataTable2  ;; NIL_EVENT
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        LDR      R1,[R1, #+0]
        SWI      +302
//   41 };
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable2:
        DC32     NIL_EVENT

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??elem_free??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??elem_free
//   42 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??elem_free
        ARM
//   43 void elem_free(void * elem)
//   44 {
??elem_free:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
//   45   java_list_elem * lm=(java_list_elem *)elem;
//   46   DELETE(lm->name);
        LDR      R0,[R4, #+0]
        MOV      R5,#+0
        CMP      R0,#+0
        BEQ      ??elem_free_1
        _BLF     `??operator delete`,`??operator delete??rA`
        STR      R5,[R4, #+0]
//   47   DELETE(lm->fullpath);
??elem_free_1:
        LDR      R0,[R4, #+4]
        CMP      R0,#+0
        BEQ      ??elem_free_2
        _BLF     `??operator delete`,`??operator delete??rA`
        STR      R5,[R4, #+4]
//   48   if (lm->imageID) ImageID_Free(lm->imageID);
??elem_free_2:
        LDRH     R0,[R4, #+12]
        CMP      R0,#+0
        BEQ      ??elem_free_3
        SWI      +717
//   49   delete(lm);
??elem_free_3:
        MOV      R0,R4
        POP      {R4,R5,LR}       ;; Pop
        CFI R4 SameValue
        CFI R5 SameValue
        CFI ?RET R14
        CFI CFA R13+0
        _BF      `??operator delete`,`??operator delete??rA`  ;; tailcall
        CFI EndBlock cfiBlock7
//   50 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??elem_filter??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE ??elem_filter
//   51 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function ??elem_filter
        ARM
//   52 int elem_filter(void * elem)
//   53 {
//   54   if (elem) return(1);
??elem_filter:
        CMP      R0,#+0
        MOVNE    R0,#+1
//   55   return(0);
        BX       LR               ;; return
        CFI EndBlock cfiBlock9
//   56 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??onExit_JavaList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE ??onExit_JavaList
//   57 
//   58 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function ??onExit_JavaList
        ARM
//   59 int onExit_JavaList(void *data, BOOK * book)
//   60 {
??onExit_JavaList:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R1
//   61   MyBOOK *mbk=(MyBOOK*)book;
//   62   FREE_GUI(mbk->javalst);
        LDR      R0,[R4, #+104]
        CMP      R0,#+0
        BEQ      ??onExit_JavaList_1
        SWI      +462
        STR      R0,[R4, #+104]
//   63   if (java_list)
??onExit_JavaList_1:
        LDR      R4,??DataTable7  ;; java_list
        LDR      R0,[R4, #+0]
        CMP      R0,#+0
        POPEQ    {R4,PC}
//   64   {
//   65     List_DestroyElements(java_list,elem_filter,elem_free);
        LDR      R2,??DataTable8  ;; ??elem_free
        LDR      R1,??DataTable9  ;; ??elem_filter
        SWI      +663
//   66     List_Destroy(java_list);
        LDR      R0,[R4, #+0]
        SWI      +362
//   67     java_list=0;
        MOV      R0,#+0
        STR      R0,[R4, #+0]
//   68   }
//   69   return(0);
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock11
//   70 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??java_list_callback??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE ??java_list_callback
//   71 
//   72 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function ??java_list_callback
        ARM
//   73 int java_list_callback(GUI_MESSAGE * msg)
//   74 {
??java_list_callback:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOV      R4,R0
//   75   switch( GUIonMessage_GetMsg(msg) )
        SWI      +884
        CMP      R0,#+1
        BNE      ??java_list_callback_1
//   76   {
//   77   case 1:
//   78     java_list_elem * elem=(java_list_elem*)List_Get(java_list,GUIonMessage_GetCreatedItemIndex(msg));
        MOV      R0,R4
        SWI      +311
        MOV      R1,R0
        LDR      R0,??DataTable7  ;; java_list
        LDR      R0,[R0, #+0]
        SWI      +429
        MOV      R5,R0
//   79     GUIonMessage_SetMenuItemText(msg,TextID_Create(elem->name,ENC_UCS2,TEXTID_ANY_LEN));
        LDR      R0,[R5, #+0]
        MOV      R2,#+255
        ORR      R2,R2,#0xFF00
        MOV      R1,#+0
        SWI      +349
        MOV      R1,R0
        MOV      R0,R4
        SWI      +312
//   80     JavaApp_LogoImageID_Get(elem->fullpath,&elem->imageID);
        LDR      R0,[R5, #+4]
        ADD      R1,R5,#+12
        SWI      +780
//   81     GUIonMessage_SetMenuItemIcon(msg,0,elem->imageID);
        LDRH     R2,[R5, #+12]
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +316
//   82   }
//   83   return(1);
??java_list_callback_1:
        MOV      R0,#+1
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock13
//   84 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateElem??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE ??CreateElem
//   85 
//   86 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function ??CreateElem
        ARM
//   87 java_list_elem * CreateElem(void * JavaDesc)
//   88 {
??CreateElem:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+4
        CFI CFA R13+16
        MOV      R4,R0
//   89   java_list_elem * elem=new java_list_elem;
        MOV      R0,#+16
        _BLF     `??operator new`,`??operator new??rA`
        MOV      R5,R0
//   90   wchar_t * sp;
//   91   JavaAppDesc_GetJavaAppInfo(JavaDesc,0,&sp);
        MOV      R2,SP
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +731
//   92   elem->name=sp;
        LDR      R0,[SP, #+0]
//   93   JavaAppDesc_GetJavaAppInfo(JavaDesc,5,&sp);
        MOV      R2,SP
        STR      R0,[R5, #+0]
        MOV      R1,#+5
        MOV      R0,R4
        SWI      +731
//   94   elem->fullpath=sp;
        LDR      R0,[SP, #+0]
        STR      R0,[R5, #+4]
//   95   elem->appID=JavaAppDesc_GetJavaAppID(JavaDesc);
        MOV      R0,R4
        SWI      +778
        STR      R0,[R5, #+8]
//   96   return(elem);
        MOV      R0,R5
        POP      {R1,R4,R5,PC}    ;; return
        CFI EndBlock cfiBlock15
//   97 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateJavaList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE ??CreateJavaList
//   98 
//   99 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function ??CreateJavaList
        ARM
//  100 int CreateJavaList(void *data, BOOK * book)
//  101 {
??CreateJavaList:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
//  102   MyBOOK *mbk=(MyBOOK*)book;
//  103   if (java_list)
        LDR      R5,??DataTable7  ;; java_list
        SUB      SP,SP,#+8
        CFI CFA R13+20
        LDR      R0,[R5, #+0]
        MOV      R4,R1
        CMP      R0,#+0
        BEQ      ??CreateJavaList_1
//  104   {
//  105     List_DestroyElements(java_list,elem_filter,elem_free);
        LDR      R2,??DataTable8  ;; ??elem_free
        LDR      R1,??DataTable9  ;; ??elem_filter
        SWI      +663
//  106     List_Destroy(java_list);
        LDR      R0,[R5, #+0]
        SWI      +362
//  107   }
//  108   java_list=List_Create();
??CreateJavaList_1:
        SWI      +361
        STR      R0,[R5, #+0]
//  109   char sp1;
//  110   void * JavaDesc;
//  111   JavaDialog_Open(0,&sp1,&JavaDesc);
        MOV      R2,SP
        ADD      R1,SP,#+4
        MOV      R0,#+0
        SWI      +726
//  112   if (!JavaAppDesc_GetFirstApp(JavaDesc))
        LDR      R0,[SP, #+0]
        SWI      +729
        CMP      R0,#+0
        BNE      ??CreateJavaList_2
//  113   {
//  114     int result=0;
//  115     while (!result)
//  116     {
//  117       List_InsertLast(java_list,CreateElem(JavaDesc));
??CreateJavaList_3:
        LDR      R0,[SP, #+0]
        BL       ??CreateElem
        MOV      R1,R0
        LDR      R0,[R5, #+0]
        SWI      +432
//  118       result=JavaAppDesc_GetNextApp(JavaDesc);
//  119     }
        LDR      R0,[SP, #+0]
        SWI      +730
        CMP      R0,#+0
        BEQ      ??CreateJavaList_3
//  120   }
//  121   JavaDialog_Close(sp1);
??CreateJavaList_2:
        LDRB     R0,[SP, #+4]
        SWI      +727
//  122   FREE_GUI(mbk->javalst);
        LDR      R0,[R4, #+104]
        CMP      R0,#+0
        BEQ      ??CreateJavaList_4
        SWI      +462
        STR      R0,[R4, #+104]
//  123   mbk->javalst=CreateListMenu(book,0);
??CreateJavaList_4:
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +448
        STR      R0,[R4, #+104]
//  124   GUIObject_SetTitleText(mbk->javalst,GetStrID(L"OAF_APPLICATIONS_TXT"));
        LDR      R0,??CreateJavaList_5  ;; `?<Constant L"\\x4f\\x41\\x46\\x5f\\x41\\x50\\x50\\x4c\\`
        _BLF     ??GetStrID,??GetStrID??rA
        MOV      R1,R0
        LDR      R0,[R4, #+104]
        SWI      +307
//  125   ListMenu_SetItemCount(mbk->javalst,java_list->FirstFree);
        LDR      R0,[R5, #+0]
        LDRH     R1,[R0, #+2]
        LDR      R0,[R4, #+104]
        SWI      +449
//  126   OneOfMany_SetOnMessage((GUI_ONEOFMANY*)mbk->javalst,java_list_callback);
        LDR      R1,??CreateJavaList_5+0x4  ;; ??java_list_callback
        LDR      R0,[R4, #+104]
        SWI      +481
//  127   ListMenu_SetCursorToItem(mbk->javalst,0);
        LDR      R0,[R4, #+104]
        MOV      R1,#+0
        SWI      +309
//  128   GUIObject_SoftKeys_SetAction(mbk->javalst,ACTION_BACK,DestroyJavaList);
        LDR      R0,??CreateJavaList_5+0x8  ;; ACTION_BACK
        LDR      R2,??CreateJavaList_5+0xC  ;; ??DestroyJavaList
        LDR      R1,[R0, #+0]
        LDR      R0,[R4, #+104]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  129   GUIObject_SoftKeys_SetAction(mbk->javalst,ACTION_LONG_BACK,ExitJavaList);
        LDR      R0,??CreateJavaList_5+0x10  ;; ACTION_LONG_BACK
        LDR      R2,??CreateJavaList_5+0x14  ;; ??ExitJavaList
        LDR      R1,[R0, #+0]
        LDR      R0,[R4, #+104]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  130   GUIObject_SoftKeys_SetAction(mbk->javalst,ACTION_SELECT1,onEnter_JavaList);
        LDR      R0,??CreateJavaList_5+0x18  ;; ACTION_SELECT1
        LDR      R2,??CreateJavaList_5+0x1C  ;; ??onEnter_JavaList
        LDR      R1,[R0, #+0]
        LDR      R0,[R4, #+104]
        MOV      R1,R1, LSL #+16
        MOV      R1,R1, LSR #+16
        SWI      +331
//  131   GUIObject_Show(mbk->javalst);
        LDR      R0,[R4, #+104]
        SWI      +308
//  132   return(0);
        MOV      R0,#+0
        POP      {R1,R2,R4,R5,PC}  ;; return
        DATA
??CreateJavaList_5:
        DC32     `?<Constant L"\\x4f\\x41\\x46\\x5f\\x41\\x50\\x50\\x4c\\`
        DC32     ??java_list_callback
        DC32     ACTION_BACK
        DC32     ??DestroyJavaList
        DC32     ACTION_LONG_BACK
        DC32     ??ExitJavaList
        DC32     ACTION_SELECT1
        DC32     ??onEnter_JavaList
        CFI EndBlock cfiBlock17
//  133 };

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable7:
        DC32     java_list

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable8:
        DC32     ??elem_free

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable9:
        DC32     ??elem_filter

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine9_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine9_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock18

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new[]??rA`:
        LDR      R12,??Subroutine10_0  ;; `??operator new[]`
        BX       R12
        DATA
??Subroutine10_0:
        DC32     `??operator new[]`
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new??rA`:
        LDR      R12,??Subroutine11_0  ;; `??operator new`
        BX       R12
        DATA
??Subroutine11_0:
        DC32     `??operator new`
        CFI EndBlock cfiBlock20

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI NoFunction
        ARM
??GetStrID??rA:
        LDR      R12,??Subroutine12_0  ;; ??GetStrID
        BX       R12
        DATA
??Subroutine12_0:
        DC32     ??GetStrID
        CFI EndBlock cfiBlock21
//  134 

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
//  135 const PAGE_MSG SetJava_PageEvents[]@ "DYN_PAGE" ={
SetJava_PageEvents:
        DATA
        DC32 66, ??CreateJavaList, 67, ??onExit_JavaList, 64, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "SetJava_Page">`:
        DATA
        DC8 "SetJava_Page"
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x4f\\x41\\x46\\x5f\\x41\\x50\\x50\\x4c\\`:
        DATA
        DC8 4FH, 0, 41H, 0, 46H, 0, 5FH, 0
        DC8 41H, 0, 50H, 0, 50H, 0, 4CH, 0
        DC8 49H, 0, 43H, 0, 41H, 0, 54H, 0
        DC8 49H, 0, 4FH, 0, 4EH, 0, 53H, 0
        DC8 5FH, 0, 54H, 0, 58H, 0, 54H, 0
        DC8 0, 0
        DC8 0, 0
//  136   PAGE_ENTER_EVENT_TAG,CreateJavaList,
//  137   PAGE_EXIT_EVENT_TAG,onExit_JavaList,
//  138   NIL_EVENT_TAG,0
//  139 };
//  140 

        RSEG DATA_C:CONST:SORT:NOROOT(2)
//  141 const PAGE_DESC SetJava_page ={"SetJava_Page",0,SetJava_PageEvents};
SetJava_page:
        DATA
        DC32 `?<Constant "SetJava_Page">`, 0H, SetJava_PageEvents

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        END
//  142 
// 
// 1 072 bytes in segment CODE
//    72 bytes in segment DATA_C
//     4 bytes in segment DATA_Z
//    24 bytes in segment DYN_PAGE
//    12 bytes in segment INITTAB
// 
// 988 bytes of CODE  memory (+ 96 bytes shared)
//  96 bytes of CONST memory
//   4 bytes of DATA  memory
//
//Errors: none
//Warnings: none
