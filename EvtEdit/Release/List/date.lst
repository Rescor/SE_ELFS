##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  22:55:28 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\date.c #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\date.c #
#                        -D NDEBUG -D OLDFUNCTIONS -lC                       #
#                       Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Releas #
#                       e\List\ -lA Z:\home\perk11\www\perk11.info\svn\SE\Ev #
#                       tEdit\Release\List\ -o Z:\home\perk11\www\perk11.inf #
#                       o\svn\SE\EvtEdit\Release\Obj\ -s9 --cpu_mode arm     #
#                       --endian little --cpu ARM926EJ-S --stack_align 4     #
#                       --interwork -e --enable_multibytes --fpu None        #
#                       --eec++ --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl #
#                       5tpainl8n.h -I Z:\home\perk11\IAR2\arm\INC\          #
#                       --inline_threshold=2                                 #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Releas #
#                       e\List\date.lst                                      #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Releas #
#                       e\Obj\date.r79                                       #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\date.c
      1          #include "..\deleaker\mem2.h"
      2          #include "..\include\Lib_Clara.h" 
      3          #include "..\include\Dir.h" 
      4          #include "header\structs.h"
      5          #include "..\include\var_arg.h"
      6          #include "header\pages.h"
      7          #include "header\lng.h"
      8          #include "header\externals.h"
      9          
     10          #define IDN_TIME_INPUT_ICON L"FR_INPUT_GUI_SET_TIME_ICN"
     11          #define IDN_DATE_INPUT_ICON L"FR_INPUT_GUI_SET_DATE_ICN"
     12          
     13          #define DI_GET_YEAR(x) ((unsigned int)x&0xFFFF)
     14          #define DI_GET_MONTH(x) (((unsigned int)x>>16)&0xFF)
     15          #define DI_GET_DAY(x) ((unsigned int)x>>24)
     16          

   \                                 In segment CODE, align 4, keep-with-next
     17          void AcceptDIinput(BOOK *bk, GUI* data)
     18          {
   \                     ??AcceptDIinput:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0100A0E1           MOV      R0,R1
     19            MyBOOK *mbk=(MyBOOK *)bk;
     20            unsigned int i=DateInput_GetDateInt(data);
   \   0000000C   B90200EF           SWI      +697
     21            DATE *date=mbk->curdate;
   \   00000010   581094E5           LDR      R1,[R4, #+88]
     22            date->year=DI_GET_YEAR(i);
     23            date->mon=DI_GET_MONTH(i);
   \   00000014   2028A0E1           LSR      R2,R0,#+16
   \   00000018   B000C1E1           STRH     R0,[R1, #+0]
   \   0000001C   0220C1E5           STRB     R2,[R1, #+2]
     24            date->day=DI_GET_DAY(i);
   \   00000020   200CA0E1           LSR      R0,R0,#+24
   \   00000024   0300C1E5           STRB     R0,[R1, #+3]
     25            BookObj_ReturnPage(bk, PREVIOUS_EVENT);
   \   00000028   ........           LDR      R0,??DataTable1  ;; PREVIOUS_EVENT
   \   0000002C   001090E5           LDR      R1,[R0, #+0]
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   2E0100EF           SWI      +302
     26          };
   \   00000038   1080BDE8           POP      {R4,PC}          ;; return
     27          

   \                                 In segment CODE, align 4, keep-with-next
     28          void CloseDIinput(BOOK * bk, GUI* )
     29          {
     30            BookObj_ReturnPage(bk, PREVIOUS_EVENT);
   \                     ??CloseDIinput:
   \   00000000   ........           LDR      R1,??DataTable1  ;; PREVIOUS_EVENT
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   001091E5           LDR      R1,[R1, #+0]
   \   0000000C   2E0100EF           SWI      +302
     31          };
   \   00000010   0080BDE8           POP      {PC}             ;; return
     32          

   \                                 In segment CODE, align 4, keep-with-next
     33          static int DI_OnEnter(void *, BOOK * bk)
     34          {
   \                     ??DI_OnEnter:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
     35            MyBOOK *mbk=(MyBOOK *)bk;
     36            DATE d;
     37            DATE *date=mbk->curdate;
     38            int date_format=4;
     39            char date_f;
     40            int icon_id;
     41            if (date->year==0)
     42            {
     43              d.year=2000;
     44            }
     45            else
     46            {
     47              d.year=date->year;
     48            }
     49            if (date->mon==0)
     50            {
     51              d.mon=1;
     52            }
     53            else
     54            {
     55              d.mon=date->mon;
     56            }
     57            if (date->day==0)
     58            {
     59              d.day=1;
     60            }
     61            else
     62            {
     63              d.day=date->day;
     64            }
     65            if (!REQUEST_DATEFORMAT_GET(SYNC,&date_f)) date_format=date_f;
     66            mbk->dinput=CreateDateInputVA(0,
     67                                          VAR_HEADER_TEXT(TextID_Create(lng[LNG_DATE],ENC_UCS2,TEXTID_ANY_LEN)),
     68                                          VAR_DATEINP_DATEFORMAT(date_format),
     69                                          VAR_DATEINP_DATE(&d),
     70                                          VAR_BOOK(&mbk->book),
     71                                          0);
     72            GUIObject_SoftKeys_SetAction(mbk->dinput,ACTION_ACCEPT, AcceptDIinput);
     73            GUIObject_SoftKeys_SetText(mbk->dinput,ACTION_ACCEPT,STR("OK"));
   \   00000008   60719FE5           LDR      R7,??DI_OnEnter_1  ;; `?<Constant L"\\x4f\\x4b">`
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   580094E5           LDR      R0,[R4, #+88]
   \   00000014   0450A0E3           MOV      R5,#+4
   \   00000018   B010D0E1           LDRH     R1,[R0, #+0]
   \   0000001C   FF60A0E3           MOV      R6,#+255
   \   00000020   FF6C86E3           ORR      R6,R6,#0xFF00
   \   00000024   000051E3           CMP      R1,#+0
   \   00000028   7D2EA003           MOVEQ    R2,#+2000
   \   0000002C   B020CD01           STRHEQ   R2,[SP, #+0]
   \   00000030   B010CD11           STRHNE   R1,[SP, #+0]
   \   00000034   0210D0E5           LDRB     R1,[R0, #+2]
   \   00000038   0120A0E3           MOV      R2,#+1
   \   0000003C   000051E3           CMP      R1,#+0
   \   00000040   0220CD05           STRBEQ   R2,[SP, #+2]
   \   00000044   0210CD15           STRBNE   R1,[SP, #+2]
   \   00000048   0300D0E5           LDRB     R0,[R0, #+3]
   \   0000004C   04108DE2           ADD      R1,SP,#+4
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0300CD15           STRBNE   R0,[SP, #+3]
   \   00000058   14019FE5           LDR      R0,??DI_OnEnter_1+0x4  ;; SYNC
   \   0000005C   0320CD05           STRBEQ   R2,[SP, #+3]
   \   00000060   000090E5           LDR      R0,[R0, #+0]
   \   00000064   BC0100EF           SWI      +444
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   04019FE5           LDR      R0,??DI_OnEnter_1+0x8  ;; lng + 276
   \   00000070   0450DD05           LDRBEQ   R5,[SP, #+4]
   \   00000074   000090E5           LDR      R0,[R0, #+0]
   \   00000078   0620A0E1           MOV      R2,R6
   \   0000007C   0010A0E3           MOV      R1,#+0
   \   00000080   5D0100EF           SWI      +349
   \   00000084   F0309FE5           LDR      R3,??DI_OnEnter_1+0xC  ;; VAR_ARG_DATEINP_DATE_FORMAT
   \   00000088   0010A0E3           MOV      R1,#+0
   \   0000008C   02002DE9           PUSH     {R1}
   \   00000090   0020A0E1           MOV      R2,R0
   \   00000094   0000A0E3           MOV      R0,#+0
   \   00000098   0410A0E1           MOV      R1,R4
   \   0000009C   02002DE9           PUSH     {R1}
   \   000000A0   D8109FE5           LDR      R1,??DI_OnEnter_1+0x10  ;; VAR_ARG_BOOK
   \   000000A4   02002DE9           PUSH     {R1}
   \   000000A8   0C108DE2           ADD      R1,SP,#+12
   \   000000AC   02002DE9           PUSH     {R1}
   \   000000B0   CC109FE5           LDR      R1,??DI_OnEnter_1+0x14  ;; VAR_ARG_DATEINP_DATE
   \   000000B4   02002DE9           PUSH     {R1}
   \   000000B8   C8109FE5           LDR      R1,??DI_OnEnter_1+0x18  ;; VAR_ARG_HTEXT
   \   000000BC   20002DE9           PUSH     {R5}
   \   000000C0   B50200EF           SWI      +693
   \   000000C4   C0209FE5           LDR      R2,??DI_OnEnter_1+0x1C  ;; ??AcceptDIinput
   \   000000C8   540084E5           STR      R0,[R4, #+84]
   \   000000CC   BC009FE5           LDR      R0,??DI_OnEnter_1+0x20  ;; ACTION_ACCEPT
   \   000000D0   005090E5           LDR      R5,[R0, #+0]
   \   000000D4   540094E5           LDR      R0,[R4, #+84]
   \   000000D8   0518A0E1           MOV      R1,R5, LSL #+16
   \   000000DC   2118A0E1           MOV      R1,R1, LSR #+16
   \   000000E0   4B0100EF           SWI      +331
   \   000000E4   0620A0E1           MOV      R2,R6
   \   000000E8   0010A0E3           MOV      R1,#+0
   \   000000EC   0700A0E1           MOV      R0,R7
   \   000000F0   5D0100EF           SWI      +349
   \   000000F4   0020A0E1           MOV      R2,R0
   \   000000F8   540094E5           LDR      R0,[R4, #+84]
   \   000000FC   0518A0E1           MOV      R1,R5, LSL #+16
   \   00000100   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000104   4C0100EF           SWI      +332
     74            GUIObject_SoftKeys_SetVisible(mbk->dinput,ACTION_ACCEPT,1);
   \   00000108   540094E5           LDR      R0,[R4, #+84]
   \   0000010C   0120A0E3           MOV      R2,#+1
   \   00000110   0518A0E1           MOV      R1,R5, LSL #+16
   \   00000114   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000118   500100EF           SWI      +336
     75            GUIObject_SoftKeys_SetAction(mbk->dinput,ACTION_BACK, CloseDIinput);
   \   0000011C   70009FE5           LDR      R0,??DI_OnEnter_1+0x24  ;; ACTION_BACK
   \   00000120   70209FE5           LDR      R2,??DI_OnEnter_1+0x28  ;; ??CloseDIinput
   \   00000124   001090E5           LDR      R1,[R0, #+0]
   \   00000128   540094E5           LDR      R0,[R4, #+84]
   \   0000012C   0118A0E1           MOV      R1,R1, LSL #+16
   \   00000130   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000134   4B0100EF           SWI      +331
     76            if (iconidname2id(IDN_DATE_INPUT_ICON,-1,&icon_id))
   \   00000138   20208DE2           ADD      R2,SP,#+32
   \   0000013C   0010E0E3           MVN      R1,#+0
   \   00000140   080087E2           ADD      R0,R7,#+8
   \   00000144   860200EF           SWI      +646
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   18D08DE2           ADD      SP,SP,#+24
   \   00000150   0400000A           BEQ      ??DI_OnEnter_2
     77              GUIInput_SetIcon(mbk->dinput,icon_id);
   \   00000154   08109DE5           LDR      R1,[SP, #+8]
   \   00000158   540094E5           LDR      R0,[R4, #+84]
   \   0000015C   0118A0E1           MOV      R1,R1, LSL #+16
   \   00000160   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000164   CF0100EF           SWI      +463
     78            return (1);
   \                     ??DI_OnEnter_2:
   \   00000168   0100A0E3           MOV      R0,#+1
   \   0000016C   FE80BDE8           POP      {R1-R7,PC}       ;; return
   \                     ??DI_OnEnter_1:
   \   00000170   ........           DC32     `?<Constant L"\\x4f\\x4b">`
   \   00000174   ........           DC32     SYNC
   \   00000178   ........           DC32     lng + 276
   \   0000017C   ........           DC32     VAR_ARG_DATEINP_DATE_FORMAT
   \   00000180   ........           DC32     VAR_ARG_BOOK
   \   00000184   ........           DC32     VAR_ARG_DATEINP_DATE
   \   00000188   ........           DC32     VAR_ARG_HTEXT
   \   0000018C   ........           DC32     ??AcceptDIinput
   \   00000190   ........           DC32     ACTION_ACCEPT
   \   00000194   ........           DC32     ACTION_BACK
   \   00000198   ........           DC32     ??CloseDIinput
     79          };
     80          

   \                                 In segment CODE, align 4, keep-with-next
     81          static int DI_OnExit(void *, BOOK * bk)
     82          {
   \                     ??DI_OnExit:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
     83            MyBOOK *mbk=(MyBOOK *)bk;
     84            FREE_GUI(mbk->dinput);
   \   00000008   540094E5           LDR      R0,[R4, #+84]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      ??DI_OnExit_1
   \   00000014   CE0100EF           SWI      +462
   \   00000018   540084E5           STR      R0,[R4, #+84]
     85            return (1);  
   \                     ??DI_OnExit_1:
   \   0000001C   0100A0E3           MOV      R0,#+1
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
     86          };
     87          

   \                                 In segment DYN_PAGE, align 4, align-sorted
     88          const PAGE_MSG bk_msglst_dateinput[] @ "DYN_PAGE"  = 
   \                     bk_msglst_dateinput:
   \   00000000   42000000....       DC32 66, ??DI_OnEnter, 67, ??DI_OnExit, 64, 0H
   \              ....43000000
   \              ........4000
   \              000000000000
     89          {
     90            PAGE_ENTER_EVENT_TAG,    DI_OnEnter,
     91            PAGE_EXIT_EVENT_TAG,     DI_OnExit,
     92            NIL_EVENT_TAG,           NULL
     93          };
     94          

   \                                 In segment DATA_C, align 4, align-sorted
     95          const PAGE_DESC bk_date_input = {"EvtEdit_DateInput_Page",0,bk_msglst_dateinput};
   \                     bk_date_input:
   \   00000000   ........0000       DC32 `?<Constant "EvtEdit_DateInput_Page">`, 0H, bk_msglst_dateinput
   \              0000........

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     PREVIOUS_EVENT

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EvtEdit_DateInput_Page">`:
   \   00000000   457674456469       DC8 "EvtEdit_DateInput_Page"
   \              745F44617465
   \              496E7075745F
   \              5061676500  
   \   00000017   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x4f\\x4b">`:
   \   00000000   4F004B000000       DC8 4FH, 0, 4BH, 0, 0, 0
   \   00000006   0000               DC8 0, 0
   \   00000008   460052005F00       DC8 46H, 0, 52H, 0, 5FH, 0, 49H, 0
   \              4900        
   \   00000010   4E0050005500       DC8 4EH, 0, 50H, 0, 55H, 0, 54H, 0
   \              5400        
   \   00000018   5F0047005500       DC8 5FH, 0, 47H, 0, 55H, 0, 49H, 0
   \              4900        
   \   00000020   5F0053004500       DC8 5FH, 0, 53H, 0, 45H, 0, 54H, 0
   \              5400        
   \   00000028   5F0044004100       DC8 5FH, 0, 44H, 0, 41H, 0, 54H, 0
   \              5400        
   \   00000030   45005F004900       DC8 45H, 0, 5FH, 0, 49H, 0, 43H, 0
   \              4300        
   \   00000038   4E000000           DC8 4EH, 0, 0, 0

   Maximum stack usage in bytes:

     Function                     CSTACK
     --------                     ------
     AcceptDIinput(BOOK *, GUI *)     8
     CloseDIinput(BOOK *, GUI *)      4
     DI_OnEnter(void *, BOOK *)      56
     DI_OnExit(void *, BOOK *)        8


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     AcceptDIinput(BOOK *, GUI *)     60
     CloseDIinput(BOOK *, GUI *)      20
     DI_OnEnter(void *, BOOK *)      412
     DI_OnExit(void *, BOOK *)        36
     bk_msglst_dateinput              24
     bk_date_input                    12
     ??DataTable1                      4
     ?<Constant "EvtEdit_DateInput_Page">
                                      24
     ?<Constant L"\x4f\x4b">          60
      Others                          16

 
 548 bytes in segment CODE
  96 bytes in segment DATA_C
  24 bytes in segment DYN_PAGE
 
 532 bytes of CODE  memory (+ 16 bytes shared)
 120 bytes of CONST memory

Errors: none
Warnings: none
