//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:55:08 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Selec /
//                       tFile.c                                             /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Selec /
//                       tFile.c -D NDEBUG -D OLDFUNCTIONS -lC               /
//                       Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\List\ -lA Z:\home\perk11\www\perk11.info\svn\SE\ /
//                       EvtEdit\Release\List\ -o                            /
//                       Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\Obj\ -s9 --cpu_mode arm --endian little --cpu    /
//                       ARM926EJ-S --stack_align 4 --interwork -e           /
//                       --enable_multibytes --fpu None --eec++              /
//                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl /
//                       8n.h -I Z:\home\perk11\IAR2\arm\INC\                /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Relea /
//                       se\List\SelectFile.s79                              /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME SelectFile

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??CreateDB
        FUNCTION ??CreateDB,0603H
        LOCFRAME CSTACK, 24, STACK
        MULTWEAK ??CreateDB??rT
        PUBLIC ??DB_Filter
        FUNCTION ??DB_Filter,0603H
        LOCFRAME CSTACK, 40, STACK
        MULTWEAK ??DB_Filter??rT
??DataTable0 EQU 0
        MULTWEAK ??GetStrID??rA
        PUBLIC ??isSupportable
        FUNCTION ??isSupportable,0203H
        LOCFRAME CSTACK, 12, STACK
        MULTWEAK ??isSupportable??rT
        MULTWEAK ??kickbadsymbols??rA
        PUBLIC ??onAccept_DB
        FUNCTION ??onAccept_DB,0603H
        LOCFRAME CSTACK, 24, STACK
        MULTWEAK ??onAccept_DB??rT
        MULTWEAK `??operator delete??rA`
        MULTWEAK `??operator new[]??rA`
        PUBLIC SelectFile_page
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        





??CreateDB??rT      SYMBOL "??rT", ??CreateDB

??DB_Filter??rT     SYMBOL "??rT", ??DB_Filter
??GetStrID??rA      SYMBOL "??rA", ??GetStrID

??isSupportable??rT SYMBOL "??rT", ??isSupportable
??kickbadsymbols??rA SYMBOL "??rA", ??kickbadsymbols

??onAccept_DB??rT   SYMBOL "??rT", ??onAccept_DB
`??operator delete??rA` SYMBOL "??rA", `??operator delete`
`??operator new[]??rA` SYMBOL "??rA", `??operator new[]`

        EXTERN ??GetStrID
        FUNCTION ??GetStrID,0202H
        EXTERN ??isEvtEditBook
        FUNCTION ??isEvtEditBook,0602H
        EXTERN ??kickbadsymbols
        FUNCTION ??kickbadsymbols,0202H
        EXTERN ??onCancel_MainMenu_DB
        FUNCTION ??onCancel_MainMenu_DB,0602H
        EXTERN ??onPrevious_MainMenu_DB
        FUNCTION ??onPrevious_MainMenu_DB,0602H
        EXTERN `??operator delete`
        FUNCTION `??operator delete`,0202H
        EXTERN `??operator new[]`
        FUNCTION `??operator new[]`,0202H
        EXTERN ACCEPT_EVENT
        EXTERN bk_main


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??isSupportable??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??isSupportable
// Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\SelectFile.c
//    1 #include "..\deleaker\mem2.h"
//    2 #include "..\include\Lib_Clara.h" 
//    3 #include "..\include\Dir.h" 
//    4 #include "header\structs.h"
//    5 #include "header\pages.h"
//    6 #include "header\externals.h"
//    7 
//    8 #define MUSIC 1
//    9 #define ELF 2
//   10 #define IMAGE 3
//   11 #define EVT 4
//   12 #define THM 5
//   13 int onPrevious_MainMenu_DB(void *data, BOOK * book);
//   14 int onCancel_MainMenu_DB(void *data, BOOK * book);
//   15 int isEvtEditBook(BOOK * struc);
//   16 void kickbadsymbols(wchar_t *string, int len);
//   17 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??isSupportable
        ARM
//   18 int isSupportable(wchar_t const *fpath, wchar_t const *fname, int type)
//   19 {
??isSupportable:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
//   20   if (type==MUSIC)
        LDR      R5,??isSupportable_1  ;; `?<Constant L"\\x6d\\x70\\x33">`
        MOV      R4,R1
        CMP      R2,#+1
        BNE      ??isSupportable_2
//   21   {
//   22     if (wstrcmpni(L"m4a",&fname[wstrlen(fname)-3],3)==0)
        MOV      R0,R4
        SWI      +343
        MOV      R2,#+3
        ADD      R0,R4,R0, LSL #+1
        SUB      R1,R0,#+6
        ADD      R0,R5,#+16
        SWI      +666
        CMP      R0,#+0
        BNE      ??isSupportable_3
//   23     {
//   24       return 1;
??isSupportable_4:
        MOV      R0,#+1
        POP      {R4,R5,PC}
//   25     }
//   26     else if (wstrcmpni(L"wma",&fname[wstrlen(fname)-3],3)==0)
??isSupportable_3:
        MOV      R0,R4
        SWI      +343
        MOV      R2,#+3
        ADD      R0,R4,R0, LSL #+1
        SUB      R1,R0,#+6
        ADD      R0,R5,#+8
        SWI      +666
        CMP      R0,#+0
        BEQ      ??isSupportable_4
//   27     {
//   28       return 1;
//   29     }
//   30     else if (wstrcmpni(L"mp3",&fname[wstrlen(fname)-3],3)==0)
        MOV      R0,R4
        SWI      +343
        MOV      R2,#+3
        ADD      R0,R4,R0, LSL #+1
        SUB      R1,R0,#+6
        MOV      R0,R5
??isSupportable_5:
        B        ??isSupportable_6
//   31     {
//   32       return 1;
//   33     }
//   34   }
//   35   else if (type==ELF)
??isSupportable_2:
        CMP      R2,#+2
        BNE      ??isSupportable_7
//   36   {
//   37     if (wstrcmpni(L"elf",&fname[wstrlen(fname)-3],3)==0)
        MOV      R0,R4
        SWI      +343
        MOV      R2,#+3
        ADD      R0,R4,R0, LSL #+1
        SUB      R1,R0,#+6
        ADD      R0,R5,#+24
        B        ??isSupportable_6
//   38     {
//   39       return 1;
//   40     }
//   41   }
//   42   else if (type==IMAGE)
??isSupportable_7:
        CMP      R2,#+3
        BNE      ??isSupportable_8
//   43   {
//   44     if (wstrcmpni(L"png",&fname[wstrlen(fname)-3],3)==0)
        MOV      R0,R4
        SWI      +343
        MOV      R2,#+3
        ADD      R0,R4,R0, LSL #+1
        SUB      R1,R0,#+6
        ADD      R0,R5,#+68
        SWI      +666
        CMP      R0,#+0
        BEQ      ??isSupportable_4
//   45     {
//   46       return 1;
//   47     }
//   48     else if (wstrcmpni(L"gif",&fname[wstrlen(fname)-3],3)==0)
        MOV      R0,R4
        SWI      +343
        MOV      R2,#+3
        ADD      R0,R4,R0, LSL #+1
        SUB      R1,R0,#+6
        ADD      R0,R5,#+60
        SWI      +666
        CMP      R0,#+0
        BEQ      ??isSupportable_4
//   49     {
//   50       return 1;
//   51     }
//   52     else if (wstrcmpni(L"bmp",&fname[wstrlen(fname)-3],3)==0)
        MOV      R0,R4
        SWI      +343
        MOV      R2,#+3
        ADD      R0,R4,R0, LSL #+1
        SUB      R1,R0,#+6
        ADD      R0,R5,#+52
        SWI      +666
        CMP      R0,#+0
        BEQ      ??isSupportable_4
//   53     {
//   54       return 1;
//   55     }
//   56     else if (wstrcmpni(L"jpg",&fname[wstrlen(fname)-3],3)==0)
        MOV      R0,R4
        SWI      +343
        MOV      R2,#+3
        ADD      R0,R4,R0, LSL #+1
        SUB      R1,R0,#+6
        ADD      R0,R5,#+44
        SWI      +666
        CMP      R0,#+0
        BEQ      ??isSupportable_4
//   57     {
//   58       return 1;
//   59     }
//   60     else if (wstrcmpni(L"jpeg",&fname[wstrlen(fname)-4],4)==0)
        MOV      R0,R4
        SWI      +343
        MOV      R2,#+4
        ADD      R0,R4,R0, LSL #+1
        SUB      R1,R0,#+8
        ADD      R0,R5,#+32
        B        ??isSupportable_6
//   61     {
//   62       return 1;
//   63     }
//   64   }
//   65   else if (type==EVT)
??isSupportable_8:
        CMP      R2,#+4
        BNE      ??isSupportable_9
//   66   {
//   67     if (wstrcmpni(L"evt",&fname[wstrlen(fname)-3],3)==0)
        MOV      R0,R4
        SWI      +343
        MOV      R2,#+3
        ADD      R0,R4,R0, LSL #+1
        SUB      R1,R0,#+6
        ADD      R0,R5,#+76
??isSupportable_6:
        SWI      +666
        CMP      R0,#+0
        BNE      ??isSupportable_10
        MOV      R0,#+1
        POP      {R4,R5,PC}
//   68     {
//   69       return 1;
//   70     }
//   71   }
//   72   else if (type==THM)
??isSupportable_9:
        CMP      R2,#+5
        BNE      ??isSupportable_10
//   73   {
//   74     if (wstrcmpni(L"thm",&fname[wstrlen(fname)-3],3)==0)
        MOV      R0,R4
        SWI      +343
        MOV      R2,#+3
        ADD      R0,R4,R0, LSL #+1
        SUB      R1,R0,#+6
        ADD      R0,R5,#+84
        SWI      +666
        CMP      R0,#+0
        BEQ      ??isSupportable_4
//   75     {
//   76       return 1;
//   77     }
//   78   }
//   79   return 0;
??isSupportable_10:
        MOV      R0,#+0
        POP      {R4,R5,PC}       ;; return
        DATA
??isSupportable_1:
        DC32     `?<Constant L"\\x6d\\x70\\x33">`
        CFI EndBlock cfiBlock1
//   80 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??DB_Filter??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??DB_Filter
//   81 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??DB_Filter
        ARM
//   82 int DB_Filter(const wchar_t * ext_table,const wchar_t * path ,const wchar_t * name)
//   83 {
//   84   MyBOOK *mbk=(MyBOOK*)FindBook(isEvtEditBook);
??DB_Filter:
        LDR      R0,??DataTable1  ;; ??isEvtEditBook
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+28
        CFI CFA R13+40
        MOV      R4,R1
        MOV      R5,R2
        SWI      +304
//   85   if (isSupportable(path,name,mbk->fType)) return 1;
        LDR      R2,[R0, #+124]
        MOV      R1,R5
        MOV      R0,R4
        BL       ??isSupportable
        CMP      R0,#+0
        BEQ      ??DB_Filter_1
??DB_Filter_2:
        MOV      R0,#+1
        ADD      SP,SP,#+28
        CFI CFA R13+12
        POP      {R4,R5,PC}
        CFI CFA R13+40
//   86   FSTAT _fstat;
//   87   fstat(path,name,&_fstat);
??DB_Filter_1:
        MOV      R2,SP
        MOV      R1,R5
        MOV      R0,R4
        SWI      +284
//   88   if ((_fstat.st_mode&FSX_S_IFDIR)) return(1);
        LDR      R0,[SP, #+4]
        TST      R0,#0x10000
        BNE      ??DB_Filter_2
//   89   return(0);
        MOV      R0,#+0
        ADD      SP,SP,#+28
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock3
//   90 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??onAccept_DB??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??onAccept_DB
//   91 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??onAccept_DB
        ARM
//   92 int onAccept_DB(void * data, BOOK * book)
//   93 {
??onAccept_DB:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOV      R4,R1
        MOV      R6,R0
//   94   wchar_t *full=new wchar_t[wstrlen( FILEITEM_GetPath((FILEITEM*)data) )+1+wstrlen( FILEITEM_GetFname((FILEITEM*)data) )+1];
//   95   wstrcpy(full, FILEITEM_GetPath((FILEITEM*)data) );
//   96   wstrcat(full,L"/");
//   97   wstrcat(full, FILEITEM_GetFname((FILEITEM*)data) );
//   98   MyBOOK *mbk=(MyBOOK*)book;
//   99   kickbadsymbols(full,wstrlen(full));
//  100   if (mbk->selectfiletype==2)
        MOV      R7,#+0
        SWI      +723
        SWI      +343
        MOV      R5,R0
        MOV      R0,R6
        SWI      +722
        SWI      +343
        ADD      R0,R0,R5
        ADD      R0,R0,#+2
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        MOV      R5,R0
        MOV      R0,R6
        SWI      +723
        MOV      R1,R0
        MOV      R0,R5
        SWI      +338
        ADR      R1,??onAccept_DB_1  ;; 0x2F, 0x00, 0x00, 0x00
        MOV      R0,R5
        SWI      +340
        MOV      R0,R6
        SWI      +722
        MOV      R1,R0
        MOV      R0,R5
        SWI      +340
        MOV      R0,R5
        SWI      +343
        MOV      R1,R0
        MOV      R0,R5
        _BLF     ??kickbadsymbols,??kickbadsymbols??rA
        LDR      R0,[R4, #+128]
        CMP      R0,#+2
        BNE      ??onAccept_DB_2
//  101   {
//  102     DELETE(mbk->indpath);
        LDR      R0,[R4, #+192]
        CMP      R0,#+0
        BEQ      ??onAccept_DB_3
        _BLF     `??operator delete`,`??operator delete??rA`
        STR      R7,[R4, #+192]
//  103     DELETE(mbk->indname);
??onAccept_DB_3:
        LDR      R0,[R4, #+196]
        CMP      R0,#+0
        BEQ      ??onAccept_DB_4
        _BLF     `??operator delete`,`??operator delete??rA`
        STR      R7,[R4, #+196]
//  104     mbk->indpath=new wchar_t[wstrlen( FILEITEM_GetPath((FILEITEM*)data) )+1];
??onAccept_DB_4:
        MOV      R0,R6
        SWI      +723
        SWI      +343
        ADD      R0,R0,#+1
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        STR      R0,[R4, #+192]
//  105     wstrcpy(mbk->indpath, FILEITEM_GetPath((FILEITEM*)data) );
        MOV      R0,R6
        SWI      +723
        MOV      R1,R0
        LDR      R0,[R4, #+192]
        SWI      +338
//  106     mbk->indname=new wchar_t[wstrlen( FILEITEM_GetFname((FILEITEM*)data) )+1];
        MOV      R0,R6
        SWI      +722
        SWI      +343
        ADD      R0,R0,#+1
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        STR      R0,[R4, #+196]
//  107     wstrcpy(mbk->indname, FILEITEM_GetFname((FILEITEM*)data) );
        MOV      R0,R6
        SWI      +722
        MOV      R1,R0
        LDR      R0,[R4, #+196]
        SWI      +338
//  108     BookObj_ReturnPage(book,ACCEPT_EVENT);
        LDR      R0,??onAccept_DB_1+0x4  ;; ACCEPT_EVENT
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        SWI      +302
        B        ??onAccept_DB_5
//  109   }
//  110   else if (mbk->selectfiletype==1)
??onAccept_DB_2:
        LDR      R6,??onAccept_DB_1+0x8  ;; bk_main
        CMP      R0,#+1
        LDR      R0,[R4, #+28]
        LDR      R0,[R0, #+52]
        BNE      ??onAccept_DB_6
//  111   {
//  112     DELETE(mbk->selev->param);
        CMP      R0,#+0
        BEQ      ??onAccept_DB_7
        LDR      R0,[R4, #+28]
        LDR      R0,[R0, #+52]
        _BLF     `??operator delete`,`??operator delete??rA`
        LDR      R0,[R4, #+28]
        STR      R7,[R0, #+52]
//  113     mbk->selev->param=new wchar_t[wstrlen(full)+4+1];
??onAccept_DB_7:
        MOV      R0,R5
        SWI      +343
        ADD      R0,R0,#+5
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        LDR      R1,[R4, #+28]
        STR      R0,[R1, #+52]
//  114     snwprintf(mbk->selev->param,wstrlen(full)+4+1,L"%03d.%ls", mbk->tempvol, full);
        MOV      R0,R5
        SWI      +343
        LDR      R2,??onAccept_DB_1+0xC  ;; `?<Constant L"\\x25\\x30\\x33\\x64\\x2e\\x25\\x6c\\x73"`
        MOV      R1,R5
        PUSH     {R1}
        CFI CFA R13+24
        LDR      R3,[R4, #+132]
        ADD      R1,R0,#+5
        LDR      R0,[R4, #+28]
        LDR      R0,[R0, #+52]
        SWI      +277
//  115     BookObj_ReturnPage(book,ACCEPT_EVENT);
        LDR      R0,??onAccept_DB_1+0x4  ;; ACCEPT_EVENT
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        SWI      +302
//  116     BookObj_CallPage(book,&bk_main);
        MOV      R1,R6
        MOV      R0,R4
        SWI      +696
        ADD      SP,SP,#+4
        CFI CFA R13+20
        B        ??onAccept_DB_5
//  117   }
//  118   else
//  119   {
//  120     DELETE(mbk->selev->param);
??onAccept_DB_6:
        CMP      R0,#+0
        BEQ      ??onAccept_DB_8
        LDR      R0,[R4, #+28]
        LDR      R0,[R0, #+52]
        _BLF     `??operator delete`,`??operator delete??rA`
        LDR      R0,[R4, #+28]
        STR      R7,[R0, #+52]
//  121     mbk->selev->param=new wchar_t[wstrlen(full)+1];
??onAccept_DB_8:
        MOV      R0,R5
        SWI      +343
        ADD      R0,R0,#+1
        LSL      R0,R0,#+1
        _BLF     `??operator new[]`,`??operator new[]??rA`
        LDR      R1,[R4, #+28]
        STR      R0,[R1, #+52]
//  122     wstrcpy(mbk->selev->param,full);
        LDR      R0,[R4, #+28]
        MOV      R1,R5
        LDR      R0,[R0, #+52]
        SWI      +338
//  123     BookObj_ReturnPage(book,ACCEPT_EVENT);
        LDR      R0,??onAccept_DB_1+0x4  ;; ACCEPT_EVENT
        LDR      R1,[R0, #+0]
        MOV      R0,R4
        SWI      +302
//  124     BookObj_CallPage(book,&bk_main);
        MOV      R1,R6
        MOV      R0,R4
        SWI      +696
//  125   }
//  126   delete(full);
??onAccept_DB_5:
        MOV      R0,R5
        _BLF     `??operator delete`,`??operator delete??rA`
//  127   return(0);
        MOV      R0,#+0
        POP      {R4-R7,PC}       ;; return
        DATA
??onAccept_DB_1:
        DC8      0x2F, 0x00, 0x00, 0x00
        DC32     ACCEPT_EVENT
        DC32     bk_main
        DC32     `?<Constant L"\\x25\\x30\\x33\\x64\\x2e\\x25\\x6c\\x73"`
        CFI EndBlock cfiBlock5
//  128 };

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??CreateDB??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE ??CreateDB
//  129 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function ??CreateDB
        ARM
//  130 int CreateDB(void *data, BOOK * book)
//  131 {
??CreateDB:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        SUB      SP,SP,#+12
        CFI CFA R13+24
        MOV      R4,R1
//  132   MyBOOK *mbk=(MyBOOK*)book;
//  133   void * DB_Desc=DataBrowserDesc_Create();
        SWI      +287
        MOV      R5,R0
//  134   const wchar_t * folder_list[3];
//  135   folder_list[0]=GetDir(mbk->dir1);
        LDR      R0,[R4, #+116]
        SWI      +261
        STR      R0,[SP, #+0]
//  136   folder_list[1]=GetDir(mbk->dir2);
        LDR      R0,[R4, #+120]
        SWI      +261
        STR      R0,[SP, #+4]
//  137   folder_list[2]=0;
//  138   DataBrowserDesc_SetHeaderText(DB_Desc,GetStrID(L"DB_BYNAME_TXT"));
        LDR      R0,??CreateDB_1  ;; `?<Constant L"\\x44\\x42\\x5f\\x42\\x59\\x4e\\x41\\x4d\\`
        MOV      R1,#+0
        STR      R1,[SP, #+8]
        _BLF     ??GetStrID,??GetStrID??rA
        MOV      R1,R0
        MOV      R0,R5
        SWI      +289
//  139   DataBrowserDesc_SetBookID(DB_Desc,BookObj_GetBookID(FindBook(isEvtEditBook)));
        LDR      R0,??DataTable1  ;; ??isEvtEditBook
        SWI      +304
        SWI      +506
        MOV      R1,R0
        MOV      R0,R5
        SWI      +685
//  140   DataBrowserDesc_SetFolders(DB_Desc,folder_list);
        MOV      R1,SP
        MOV      R0,R5
        SWI      +290
//  141   DataBrowserDesc_SetItemFilter(DB_Desc,DB_Filter);
        LDR      R1,??CreateDB_1+0x4  ;; ??DB_Filter
        MOV      R0,R5
        SWI      +686
//  142   DataBrowserDesc_SetFoldersNumber(DB_Desc,2);
        MOV      R1,#+2
        MOV      R0,R5
        SWI      +681
//  143   DataBrowserDesc_SetSelectAction(DB_Desc,1);
        MOV      R1,#+1
        MOV      R0,R5
        SWI      +683
//  144   DataBrowser_Create(DB_Desc);
        MOV      R0,R5
        SWI      +292
//  145   DataBrowserDesc_Destroy(DB_Desc);
        MOV      R0,R5
        SWI      +293
//  146 
//  147   return(0);
        MOV      R0,#+0
        POP      {R1-R5,PC}       ;; return
        DATA
??CreateDB_1:
        DC32     `?<Constant L"\\x44\\x42\\x5f\\x42\\x59\\x4e\\x41\\x4d\\`
        DC32     ??DB_Filter
        CFI EndBlock cfiBlock7
//  148 };

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable1:
        DC32     ??isEvtEditBook

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator new[]??rA`:
        LDR      R12,??Subroutine4_0  ;; `??operator new[]`
        BX       R12
        DATA
??Subroutine4_0:
        DC32     `??operator new[]`
        CFI EndBlock cfiBlock8

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI NoFunction
        ARM
??kickbadsymbols??rA:
        LDR      R12,??Subroutine5_0  ;; ??kickbadsymbols
        BX       R12
        DATA
??Subroutine5_0:
        DC32     ??kickbadsymbols
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon1
        CFI NoFunction
        ARM
`??operator delete??rA`:
        LDR      R12,??Subroutine6_0  ;; `??operator delete`
        BX       R12
        DATA
??Subroutine6_0:
        DC32     `??operator delete`
        CFI EndBlock cfiBlock10

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI NoFunction
        ARM
??GetStrID??rA:
        LDR      R12,??Subroutine7_0  ;; ??GetStrID
        BX       R12
        DATA
??Subroutine7_0:
        DC32     ??GetStrID
        CFI EndBlock cfiBlock11
//  149 

        RSEG DYN_PAGE:CONST:SORT:NOROOT(2)
//  150 const PAGE_MSG SelectFile_PageEvents[]@ "DYN_PAGE" ={
SelectFile_PageEvents:
        DATA
        DC32 66, ??CreateDB, 76, ??onAccept_DB, 77, ??onPrevious_MainMenu_DB
        DC32 78, ??onCancel_MainMenu_DB, 64, 0H

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "EvtEdit_SelectFile_Page">`:
        DATA
        DC8 "EvtEdit_SelectFile_Page"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x6d\\x70\\x33">`:
        DATA
        DC8 6DH, 0, 70H, 0, 33H, 0, 0, 0
        DC8 77H, 0, 6DH, 0, 61H, 0, 0, 0
        DC8 6DH, 0, 34H, 0, 61H, 0, 0, 0
        DC8 65H, 0, 6CH, 0, 66H, 0, 0, 0
        DC8 6AH, 0, 70H, 0, 65H, 0, 67H, 0
        DC8 0, 0
        DC8 0, 0
        DC8 6AH, 0, 70H, 0, 67H, 0, 0, 0
        DC8 62H, 0, 6DH, 0, 70H, 0, 0, 0
        DC8 67H, 0, 69H, 0, 66H, 0, 0, 0
        DC8 70H, 0, 6EH, 0, 67H, 0, 0, 0
        DC8 65H, 0, 76H, 0, 74H, 0, 0, 0
        DC8 74H, 0, 68H, 0, 6DH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 2FH, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x25\\x30\\x33\\x64\\x2e\\x25\\x6c\\x73"`:
        DATA
        DC8 25H, 0, 30H, 0, 33H, 0, 64H, 0
        DC8 2EH, 0, 25H, 0, 6CH, 0, 73H, 0
        DC8 0, 0
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant L"\\x44\\x42\\x5f\\x42\\x59\\x4e\\x41\\x4d\\`:
        DATA
        DC8 44H, 0, 42H, 0, 5FH, 0, 42H, 0
        DC8 59H, 0, 4EH, 0, 41H, 0, 4DH, 0
        DC8 45H, 0, 5FH, 0, 54H, 0, 58H, 0
        DC8 54H, 0, 0, 0
//  151   PAGE_ENTER_EVENT_TAG,CreateDB,
//  152   ACCEPT_EVENT_TAG,onAccept_DB,
//  153   PREVIOUS_EVENT_TAG,onPrevious_MainMenu_DB,
//  154   CANCEL_EVENT_TAG,onCancel_MainMenu_DB,
//  155   NIL_EVENT_TAG,0
//  156 };
//  157 

        RSEG DATA_C:CONST:SORT:NOROOT(2)
//  158 const PAGE_DESC SelectFile_page ={"EvtEdit_SelectFile_Page",0,SelectFile_PageEvents};
SelectFile_page:
        DATA
        DC32 `?<Constant "EvtEdit_SelectFile_Page">`, 0H, SelectFile_PageEvents

        END
// 
// 1 380 bytes in segment CODE
//   180 bytes in segment DATA_C
//    40 bytes in segment DYN_PAGE
// 
// 1 316 bytes of CODE  memory (+ 64 bytes shared)
//   220 bytes of CONST memory
//
//Errors: none
//Warnings: none
