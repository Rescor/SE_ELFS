##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  22:56:28 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\vol_in #
#                       p.cpp                                                #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\vol_in #
#                       p.cpp -D NDEBUG -D OLDFUNCTIONS -lC                  #
#                       Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Releas #
#                       e\List\ -lA Z:\home\perk11\www\perk11.info\svn\SE\Ev #
#                       tEdit\Release\List\ -o Z:\home\perk11\www\perk11.inf #
#                       o\svn\SE\EvtEdit\Release\Obj\ -s9 --cpu_mode arm     #
#                       --endian little --cpu ARM926EJ-S --stack_align 4     #
#                       --interwork -e --enable_multibytes --fpu None        #
#                       --eec++ --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl #
#                       5tpainl8n.h -I Z:\home\perk11\IAR2\arm\INC\          #
#                       --inline_threshold=2                                 #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Releas #
#                       e\List\vol_inp.lst                                   #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\Releas #
#                       e\Obj\vol_inp.r79                                    #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\EvtEdit\vol_inp.cpp
      1          #include "..\deleaker\mem2.h"
      2          #include "..\include\Lib_Clara.h" 
      3          #include "..\include\Dir.h" 
      4          #include "header\structs.h"
      5          #include "..\include\var_arg.h"
      6          #include "header\pages.h"
      7          #include "header\externals.h"
      8          #include "header\lng.h"
      9          
     10          

   \                                 In segment CODE, align 4, keep-with-next
     11          GUI *CreateVolInput(BOOK *bk, int vol, int maxvol)
     12          {
   \                     ??CreateVolInput:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     13            GUI *g=CreatePercentInputVA(0, 
     14                                       VAR_BOOK(bk), 
     15                                       VAR_PERINP_ROWNUM(maxvol),
     16                                       VAR_PERINP_CURPERC(vol), 
     17                                       VAR_HEADER_TEXT(TextID_Create(lng[VOLUME],ENC_UCS2,TEXTID_ANY_LEN)));
   \   00000008   64009FE5           LDR      R0,??CreateVolInput_1  ;; lng + 252
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   FF20A0E3           MOV      R2,#+255
   \   0000001C   FF2C82E3           ORR      R2,R2,#0xFF00
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   5D0100EF           SWI      +349
   \   00000028   48309FE5           LDR      R3,??CreateVolInput_1+0x4  ;; VAR_ARG_PERINP_ROW_NUMBERS
   \   0000002C   48109FE5           LDR      R1,??CreateVolInput_1+0x8  ;; VAR_ARG_BOOK
   \   00000030   01002DE9           PUSH     {R0}
   \   00000034   44009FE5           LDR      R0,??CreateVolInput_1+0xC  ;; VAR_ARG_HTEXT
   \   00000038   0420A0E1           MOV      R2,R4
   \   0000003C   01002DE9           PUSH     {R0}
   \   00000040   3C009FE5           LDR      R0,??CreateVolInput_1+0x10  ;; VAR_ARG_PERINP_CUR_PERCENT
   \   00000044   20002DE9           PUSH     {R5}
   \   00000048   01002DE9           PUSH     {R0}
   \   0000004C   40002DE9           PUSH     {R6}
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   460300EF           SWI      +838
   \   00000058   0040A0E1           MOV      R4,R0
     18            GUIInput_SetIcon(g, 0xEB42);
   \   0000005C   4210A0E3           MOV      R1,#+66
   \   00000060   EB1C81E3           ORR      R1,R1,#0xEB00
   \   00000064   CF0100EF           SWI      +463
     19            return g;
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   14D08DE2           ADD      SP,SP,#+20
   \   00000070   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??CreateVolInput_1:
   \   00000074   ........           DC32     lng + 252
   \   00000078   ........           DC32     VAR_ARG_PERINP_ROW_NUMBERS
   \   0000007C   ........           DC32     VAR_ARG_BOOK
   \   00000080   ........           DC32     VAR_ARG_HTEXT
   \   00000084   ........           DC32     VAR_ARG_PERINP_CUR_PERCENT
     20          };
     21          

   \                                 In segment CODE, align 4, keep-with-next
     22          void Vol_OnSave(BOOK *bk, GUI* )
     23          {
   \                     ??Vol_OnSave:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     24            MyBOOK *mbk=(MyBOOK*)bk;
     25            int v=PercentInput_GetPercent(mbk->vol);
   \   00000008   880094E5           LDR      R0,[R4, #+136]
   \   0000000C   470300EF           SWI      +839
   \   00000010   0050A0E1           MOV      R5,R0
     26            if (mbk->vol_type==0)
   \   00000014   980094E5           LDR      R0,[R4, #+152]
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0600001A           BNE      ??Vol_OnSave_1
     27            {
     28              mbk->tempvol= v * mbk->vol_mod;
   \   00000020   940094E5           LDR      R0,[R4, #+148]
   \   00000024   900501E0           MUL      R1,R0,R5
     29              BookObj_CallPage(bk,&SelectFile_page);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   841084E5           STR      R1,[R4, #+132]
   \   00000030   64109FE5           LDR      R1,??Vol_OnSave_2  ;; SelectFile_page
   \   00000034   B80200EF           SWI      +696
   \   00000038   3080BDE8           POP      {R4,R5,PC}
     30            }
     31            else
     32            {
     33              DELETE(mbk->selev->param);
   \                     ??Vol_OnSave_1:
   \   0000003C   1C0094E5           LDR      R0,[R4, #+28]
   \   00000040   340090E5           LDR      R0,[R0, #+52]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   0500000A           BEQ      ??Vol_OnSave_3
   \   0000004C   1C0094E5           LDR      R0,[R4, #+28]
   \   00000050   340090E5           LDR      R0,[R0, #+52]
   \   00000054   ........           _BLF     `??operator delete`,`??operator delete??rA`
   \   00000058   1C0094E5           LDR      R0,[R4, #+28]
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   341080E5           STR      R1,[R0, #+52]
     34              mbk->selev->param=new wchar_t[2];
   \                     ??Vol_OnSave_3:
   \   00000064   0400A0E3           MOV      R0,#+4
   \   00000068   ........           _BLF     `??operator new[]`,`??operator new[]??rA`
   \   0000006C   1C1094E5           LDR      R1,[R4, #+28]
     35              snwprintf(mbk->selev->param,1,L"%d", v);
   \   00000070   28209FE5           LDR      R2,??Vol_OnSave_2+0x4  ;; `?<Constant L"\\x25\\x64">`
   \   00000074   340081E5           STR      R0,[R1, #+52]
   \   00000078   1C0094E5           LDR      R0,[R4, #+28]
   \   0000007C   0530A0E1           MOV      R3,R5
   \   00000080   340090E5           LDR      R0,[R0, #+52]
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   150100EF           SWI      +277
     36              BookObj_CallPage(bk,&bk_main);
   \   0000008C   10109FE5           LDR      R1,??Vol_OnSave_2+0x8  ;; bk_main
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   B80200EF           SWI      +696
     37            }
     38          };
   \   00000098   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??Vol_OnSave_2:
   \   0000009C   ........           DC32     SelectFile_page
   \   000000A0   ........           DC32     `?<Constant L"\\x25\\x64">`
   \   000000A4   ........           DC32     bk_main
     39          

   \                                 In segment CODE, align 4, keep-with-next
     40          void Vol_OnBack(BOOK *bk, GUI* )
     41          {
     42            BookObj_ReturnPage(bk, PREVIOUS_EVENT);
   \                     ??Vol_OnBack:
   \   00000000   0C109FE5           LDR      R1,??Vol_OnBack_1  ;; PREVIOUS_EVENT
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   001091E5           LDR      R1,[R1, #+0]
   \   0000000C   2E0100EF           SWI      +302
     43          };
   \   00000010   0080BDE8           POP      {PC}             ;; return
   \                     ??Vol_OnBack_1:
   \   00000014   ........           DC32     PREVIOUS_EVENT
     44          

   \                                 In segment CODE, align 4, keep-with-next
     45          static int VolInputPage_OnEnter(void *,BOOK * bk)
     46          {
   \                     ??VolInputPage_OnEnter:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
     47            MyBOOK *mbk=(MyBOOK*)bk;
     48            mbk->vol=CreateVolInput(bk, mbk->curvol, mbk->maxvol);
   \   00000008   902094E5           LDR      R2,[R4, #+144]
   \   0000000C   8C1094E5           LDR      R1,[R4, #+140]
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           BL       ??CreateVolInput
     49            GUIObject_SoftKeys_SetAction(mbk->vol,ACTION_SAVE,Vol_OnSave);
   \   00000018   44209FE5           LDR      R2,??VolInputPage_OnEnter_1  ;; ??Vol_OnSave
   \   0000001C   880084E5           STR      R0,[R4, #+136]
   \   00000020   40009FE5           LDR      R0,??VolInputPage_OnEnter_1+0x4  ;; ACTION_SAVE
   \   00000024   001090E5           LDR      R1,[R0, #+0]
   \   00000028   880094E5           LDR      R0,[R4, #+136]
   \   0000002C   0118A0E1           MOV      R1,R1, LSL #+16
   \   00000030   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000034   4B0100EF           SWI      +331
     50            GUIObject_SoftKeys_SetAction(mbk->vol,ACTION_BACK,Vol_OnBack);
   \   00000038   2C009FE5           LDR      R0,??VolInputPage_OnEnter_1+0x8  ;; ACTION_BACK
   \   0000003C   2C209FE5           LDR      R2,??VolInputPage_OnEnter_1+0xC  ;; ??Vol_OnBack
   \   00000040   001090E5           LDR      R1,[R0, #+0]
   \   00000044   880094E5           LDR      R0,[R4, #+136]
   \   00000048   0118A0E1           MOV      R1,R1, LSL #+16
   \   0000004C   2118A0E1           MOV      R1,R1, LSR #+16
   \   00000050   4B0100EF           SWI      +331
     51            GUIObject_Show(mbk->vol);
   \   00000054   880094E5           LDR      R0,[R4, #+136]
   \   00000058   340100EF           SWI      +308
     52            return (1);
   \   0000005C   0100A0E3           MOV      R0,#+1
   \   00000060   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??VolInputPage_OnEnter_1:
   \   00000064   ........           DC32     ??Vol_OnSave
   \   00000068   ........           DC32     ACTION_SAVE
   \   0000006C   ........           DC32     ACTION_BACK
   \   00000070   ........           DC32     ??Vol_OnBack
     53          };
     54          

   \                                 In segment CODE, align 4, keep-with-next
     55          static int VolInputPage_OnExit(void *, BOOK * bk)
     56          {
   \                     ??VolInputPage_OnExit:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
     57            MyBOOK *mbk=(MyBOOK *)bk;
     58            FREE_GUI(mbk->vol);
   \   00000008   880094E5           LDR      R0,[R4, #+136]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0100000A           BEQ      ??VolInputPage_OnExit_1
   \   00000014   CE0100EF           SWI      +462
   \   00000018   880084E5           STR      R0,[R4, #+136]
     59            return (1);  
   \                     ??VolInputPage_OnExit_1:
   \   0000001C   0100A0E3           MOV      R0,#+1
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
     60          };
     61          

   \                                 In segment DYN_PAGE, align 4, align-sorted
     62          const PAGE_MSG bk_msglst_VolInput[] @ "DYN_PAGE"  = 
   \                     bk_msglst_VolInput:
   \   00000000   42000000....       DC32 66, ??VolInputPage_OnEnter, 67, ??VolInputPage_OnExit, 64, 0H
   \              ....43000000
   \              ........4000
   \              000000000000
     63          {
     64            PAGE_ENTER_EVENT_TAG,    VolInputPage_OnEnter,
     65            PAGE_EXIT_EVENT_TAG,     VolInputPage_OnExit,
     66            NIL_EVENT_TAG,           NULL
     67          };
     68          

   \                                 In segment DATA_C, align 4, align-sorted
     69          const PAGE_DESC bk_VolInput = {"EvtEdit_VolumeControl_Page",0,bk_msglst_VolInput};
   \                     bk_VolInput:
   \   00000000   ........0000       DC32 `?<Constant "EvtEdit_VolumeControl...">`, 0H, bk_msglst_VolInput
   \              0000........

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "EvtEdit_VolumeControl...">`:
   \   00000000   457674456469       DC8 "EvtEdit_VolumeControl_Page"
   \              745F566F6C75
   \              6D65436F6E74
   \              726F6C5F5061
   \              676500      
   \   0000001B   00                 DC8 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x25\\x64">`:
   \   00000000   250064000000       DC8 25H, 0, 64H, 0, 0, 0
   \   00000006   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     CreateVolInput(BOOK *, int, int)
                                       36
     VolInputPage_OnEnter(void *, BOOK *)
                                        8
     VolInputPage_OnExit(void *, BOOK *)
                                        8
     Vol_OnBack(BOOK *, GUI *)          4
     Vol_OnSave(BOOK *, GUI *)         12


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     CreateVolInput(BOOK *, int, int)
                                     136
     Vol_OnSave(BOOK *, GUI *)       168
     Vol_OnBack(BOOK *, GUI *)        24
     VolInputPage_OnEnter(void *, BOOK *)
                                     116
     VolInputPage_OnExit(void *, BOOK *)
                                      36
     bk_msglst_VolInput               24
     bk_VolInput                      12
     ?<Constant "EvtEdit_VolumeControl...">
                                      28
     ?<Constant L"\x25\x64">           8
      Others                          44

 
 524 bytes in segment CODE
  48 bytes in segment DATA_C
  24 bytes in segment DYN_PAGE
 
 480 bytes of CODE  memory (+ 44 bytes shared)
  72 bytes of CONST memory

Errors: none
Warnings: none
