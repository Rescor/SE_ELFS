//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  22:45:05 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\7zlib\7zItem. /
//                       c                                                   /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\7zlib\7zItem. /
//                       c -D NDEBUG -D OLDFUNCTIONS -lcN                    /
//                       Z:\home\perk11\www\perk11.info\svn\SE\7zlib\Release /
//                       \List\ -la Z:\home\perk11\www\perk11.info\svn\SE\7z /
//                       lib\Release\List\ -o Z:\home\perk11\www\perk11.info /
//                       \svn\SE\7zlib\Release\Obj\ -s9 --no_unroll          /
//                       --no_code_motion --cpu_mode thumb --endian little   /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --fpu None --library_module -I                      /
//                       Z:\home\perk11\IAR2\arm\INC\ --inline_threshold=2   /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\7zlib\Release /
//                       \List\7zItem.s79                                    /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        MODULE `7zItem`

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        MULTWEAK ??SzArchiveDatabaseFree??rA
        MULTWEAK ??SzArchiveDatabaseInit??rA
        MULTWEAK ??SzByteBufferFree??rT
        MULTWEAK ??SzByteBufferInit??rT
        MULTWEAK ??SzCoderInfoFree??rA
        MULTWEAK ??SzCoderInfoInit??rA
        MULTWEAK ??SzFileFree??rA
        MULTWEAK ??SzFileInit??rA
        MULTWEAK ??SzFolderFindBindPairForInStream??rA
        MULTWEAK ??SzFolderFindBindPairForOutStream??rA
        MULTWEAK ??SzFolderFree??rA
        MULTWEAK ??SzFolderGetNumOutStreams??rA
        MULTWEAK ??SzFolderGetUnPackSize??rA
        MULTWEAK ??SzFolderInit??rA
        PUBLIC SzArchiveDatabaseFree
        FUNCTION SzArchiveDatabaseFree,0203H
        LOCFRAME CSTACK, 20, STACK
        PUBLIC SzArchiveDatabaseInit
        FUNCTION SzArchiveDatabaseInit,0203H
        PUBLIC SzCoderInfoFree
        FUNCTION SzCoderInfoFree,0203H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC SzCoderInfoInit
        FUNCTION SzCoderInfoInit,0203H
        LOCFRAME CSTACK, 4, STACK
        PUBLIC SzFileFree
        FUNCTION SzFileFree,0203H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC SzFileInit
        FUNCTION SzFileInit,0203H
        PUBLIC SzFolderFindBindPairForInStream
        FUNCTION SzFolderFindBindPairForInStream,0203H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC SzFolderFindBindPairForOutStream
        FUNCTION SzFolderFindBindPairForOutStream,0203H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC SzFolderFree
        FUNCTION SzFolderFree,0203H
        LOCFRAME CSTACK, 16, STACK
        PUBLIC SzFolderGetNumOutStreams
        FUNCTION SzFolderGetNumOutStreams,0203H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC SzFolderGetUnPackSize
        FUNCTION SzFolderGetUnPackSize,0203H
        LOCFRAME CSTACK, 12, STACK
        PUBLIC SzFolderInit
        FUNCTION SzFolderInit,0203H
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
SzByteBufferFree    SYMBOL "SzByteBufferFree"
SzByteBufferInit    SYMBOL "SzByteBufferInit"
SzArchiveDatabaseFree SYMBOL "SzArchiveDatabaseFree"
??SzArchiveDatabaseFree??rA SYMBOL "??rA", SzArchiveDatabaseFree
SzArchiveDatabaseInit SYMBOL "SzArchiveDatabaseInit"
??SzArchiveDatabaseInit??rA SYMBOL "??rA", SzArchiveDatabaseInit
??SzByteBufferFree??rT SYMBOL "??rT", SzByteBufferFree
??SzByteBufferInit??rT SYMBOL "??rT", SzByteBufferInit
SzCoderInfoFree     SYMBOL "SzCoderInfoFree"
??SzCoderInfoFree??rA SYMBOL "??rA", SzCoderInfoFree
SzCoderInfoInit     SYMBOL "SzCoderInfoInit"
??SzCoderInfoInit??rA SYMBOL "??rA", SzCoderInfoInit
SzFileFree          SYMBOL "SzFileFree"
??SzFileFree??rA    SYMBOL "??rA", SzFileFree
SzFileInit          SYMBOL "SzFileInit"
??SzFileInit??rA    SYMBOL "??rA", SzFileInit
SzFolderFindBindPairForInStream SYMBOL "SzFolderFindBindPairForInStream"
??SzFolderFindBindPairForInStream??rA SYMBOL "??rA", SzFolderFindBindPairForInStream
SzFolderFindBindPairForOutStream SYMBOL "SzFolderFindBindPairForOutStream"
??SzFolderFindBindPairForOutStream??rA SYMBOL "??rA", SzFolderFindBindPairForOutStream
SzFolderFree        SYMBOL "SzFolderFree"
??SzFolderFree??rA  SYMBOL "??rA", SzFolderFree
SzFolderGetNumOutStreams SYMBOL "SzFolderGetNumOutStreams"
??SzFolderGetNumOutStreams??rA SYMBOL "??rA", SzFolderGetNumOutStreams
SzFolderGetUnPackSize SYMBOL "SzFolderGetUnPackSize"
??SzFolderGetUnPackSize??rA SYMBOL "??rA", SzFolderGetUnPackSize
SzFolderInit        SYMBOL "SzFolderInit"
??SzFolderInit??rA  SYMBOL "??rA", SzFolderInit

        EXTERN SzByteBufferFree
        FUNCTION SzByteBufferFree,0202H
        EXTERN SzByteBufferInit
        FUNCTION SzByteBufferInit,0202H


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        ARM
??SzCoderInfoInit??rA:
        ADD      R12,PC,#+1
        BX       R12
        CFI EndBlock cfiBlock0
        REQUIRE SzCoderInfoInit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function SzCoderInfoInit
        THUMB
SzCoderInfoInit:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        ADDS     R0,R0,#+24
        _BLF     SzByteBufferInit,??SzByteBufferInit??rT
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        ARM
??SzCoderInfoFree??rA:
        ADD      R12,PC,#+1
        BX       R12
        CFI EndBlock cfiBlock2
        REQUIRE SzCoderInfoFree

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function SzCoderInfoFree
        THUMB
SzCoderInfoFree:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOVS     R4,R0
        ADDS     R0,R0,#+24
        ADDS     R4,R4,#+24
        _BLF     SzByteBufferFree,??SzByteBufferFree??rT
        MOVS     R0,R4
        _BLF     SzByteBufferInit,??SzByteBufferInit??rT
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        ARM
??SzFolderInit??rA:
        ADD      R12,PC,#+1
        BX       R12
        CFI EndBlock cfiBlock4
        REQUIRE SzFolderInit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function SzFolderInit
        THUMB
SzFolderInit:
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        STR      R1,[R0, #+4]
        STR      R1,[R0, #+8]
        STR      R1,[R0, #+12]
        STR      R1,[R0, #+16]
        STR      R1,[R0, #+20]
        STR      R1,[R0, #+24]
        STR      R1,[R0, #+28]
        STR      R1,[R0, #+32]
        STR      R1,[R0, #+36]
        BX       LR               ;; return
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        ARM
??SzFolderFree??rA:
        ADD      R12,PC,#+1
        BX       R12
        CFI EndBlock cfiBlock6
        REQUIRE SzFolderFree

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function SzFolderFree
        THUMB
SzFolderFree:
        PUSH     {R4-R6,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R6 Frame(CFA, -8)
        CFI R5 Frame(CFA, -12)
        CFI R4 Frame(CFA, -16)
        CFI CFA R13+16
        MOVS     R4,R0
        LDR      R0,[R4, #+0]
        MOVS     R5,R1
        MOVS     R6,#+0
        CMP      R0,#+0
        BNE      ??SzFolderFree_0
        B        ??SzFolderFree_1
??SzFolderFree_2:
        LDR      R2,[R4, #+4]
        MOVS     R1,R5
        LSLS     R0,R6,#+5
        ADDS     R0,R2,R0
        BL       SzCoderInfoFree
        ADDS     R6,R6,#+1
??SzFolderFree_0:
        LDR      R0,[R4, #+0]
        CMP      R6,R0
        BCC      ??SzFolderFree_2
??SzFolderFree_1:
        LDR      R0,[R4, #+4]
        BLX      R5
        LDR      R0,[R4, #+12]
        BLX      R5
        LDR      R0,[R4, #+20]
        BLX      R5
        LDR      R0,[R4, #+24]
        BLX      R5
        MOVS     R0,R4
        BL       SzFolderInit
        POP      {R4-R6,PC}       ;; return
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        ARM
??SzFolderGetNumOutStreams??rA:
        ADD      R12,PC,#+1
        BX       R12
        CFI EndBlock cfiBlock8
        REQUIRE SzFolderGetNumOutStreams

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function SzFolderGetNumOutStreams
        THUMB
SzFolderGetNumOutStreams:
        PUSH     {R4}
        CFI R4 Frame(CFA, -4)
        CFI CFA R13+4
        MOVS     R1,R0
        LDR      R3,[R1, #+0]
        MOVS     R0,#+0
        MOVS     R2,#+0
        CMP      R3,#+0
        BNE      ??SzFolderGetNumOutStreams_0
        POP      {R4}
        CFI R4 SameValue
        CFI CFA R13+0
        BX       LR
        CFI R4 Frame(CFA, -4)
        CFI CFA R13+4
??SzFolderGetNumOutStreams_1:
        LDR      R4,[R1, #+4]
        LSLS     R3,R2,#+5
        ADDS     R3,R4,R3
        LDR      R3,[R3, #+4]
        ADDS     R2,R2,#+1
        ADDS     R0,R0,R3
??SzFolderGetNumOutStreams_0:
        LDR      R3,[R1, #+0]
        CMP      R2,R3
        BCC      ??SzFolderGetNumOutStreams_1
        POP      {R4}
        CFI R4 SameValue
        CFI CFA R13+0
        BX       LR
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        ARM
??SzFolderFindBindPairForInStream??rA:
        ADD      R12,PC,#+1
        BX       R12
        CFI EndBlock cfiBlock10
        REQUIRE SzFolderFindBindPairForInStream

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function SzFolderFindBindPairForInStream
        THUMB
SzFolderFindBindPairForInStream:
        PUSH     {R4}
        CFI R4 Frame(CFA, -4)
        CFI CFA R13+4
        MOVS     R2,R0
        MOVS     R0,#+0
        B        ??SzFolderFindBindPairForInStream_0
??SzFolderFindBindPairForInStream_1:
        ADDS     R0,R0,#+1
??SzFolderFindBindPairForInStream_0:
        LDR      R3,[R2, #+8]
        CMP      R0,R3
        BCS      ??SzFolderFindBindPairForInStream_2
        LDR      R4,[R2, #+12]
        LSLS     R3,R0,#+3
        LDR      R3,[R4, R3]
        CMP      R3,R1
        BNE      ??SzFolderFindBindPairForInStream_1
        POP      {R4}
        CFI R4 SameValue
        CFI CFA R13+0
        BX       LR
        CFI R4 Frame(CFA, -4)
        CFI CFA R13+4
??SzFolderFindBindPairForInStream_2:
        MOVS     R0,#+0
        MVNS     R0,R0
        POP      {R4}
        CFI R4 SameValue
        CFI CFA R13+0
        BX       LR
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        ARM
??SzFolderFindBindPairForOutStream??rA:
        ADD      R12,PC,#+1
        BX       R12
        CFI EndBlock cfiBlock12
        REQUIRE SzFolderFindBindPairForOutStream

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function SzFolderFindBindPairForOutStream
        THUMB
SzFolderFindBindPairForOutStream:
        PUSH     {R4}
        CFI R4 Frame(CFA, -4)
        CFI CFA R13+4
        MOVS     R2,R0
        MOVS     R0,#+0
        B        ??SzFolderFindBindPairForOutStream_0
??SzFolderFindBindPairForOutStream_1:
        ADDS     R0,R0,#+1
??SzFolderFindBindPairForOutStream_0:
        LDR      R3,[R2, #+8]
        CMP      R0,R3
        BCS      ??SzFolderFindBindPairForOutStream_2
        LDR      R4,[R2, #+12]
        LSLS     R3,R0,#+3
        ADDS     R3,R4,R3
        LDR      R3,[R3, #+4]
        CMP      R3,R1
        BNE      ??SzFolderFindBindPairForOutStream_1
        POP      {R4}
        CFI R4 SameValue
        CFI CFA R13+0
        BX       LR
        CFI R4 Frame(CFA, -4)
        CFI CFA R13+4
??SzFolderFindBindPairForOutStream_2:
        MOVS     R0,#+0
        MVNS     R0,R0
        POP      {R4}
        CFI R4 SameValue
        CFI CFA R13+0
        BX       LR
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        ARM
??SzFolderGetUnPackSize??rA:
        ADD      R12,PC,#+1
        BX       R12
        CFI EndBlock cfiBlock14
        REQUIRE SzFolderGetUnPackSize

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function SzFolderGetUnPackSize
        THUMB
SzFolderGetUnPackSize:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        MOVS     R4,R0
        BL       SzFolderGetNumOutStreams
        MOVS     R5,R0
        BNE      ??SzFolderGetUnPackSize_0
??SzFolderGetUnPackSize_1:
        MOVS     R0,#+0
        POP      {R4,R5,PC}
??SzFolderGetUnPackSize_0:
        SUBS     R5,R5,#+1
        BMI      ??SzFolderGetUnPackSize_1
        MOVS     R1,R5
        MOVS     R0,R4
        BL       SzFolderFindBindPairForOutStream
        CMP      R0,#+0
        BPL      ??SzFolderGetUnPackSize_0
        LDR      R1,[R4, #+24]
        LSLS     R0,R5,#+2
        LDR      R0,[R1, R0]
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        ARM
??SzFileInit??rA:
        ADD      R12,PC,#+1
        BX       R12
        CFI EndBlock cfiBlock16
        REQUIRE SzFileInit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function SzFileInit
        THUMB
SzFileInit:
        MOVS     R1,#+0
        STRB     R1,[R0, #+12]
        MOVS     R2,#+1
        STRB     R2,[R0, #+13]
        STRB     R1,[R0, #+14]
        STRB     R1,[R0, #+15]
        STR      R1,[R0, #+8]
        BX       LR               ;; return
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        ARM
??SzFileFree??rA:
        ADD      R12,PC,#+1
        BX       R12
        CFI EndBlock cfiBlock18
        REQUIRE SzFileFree

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function SzFileFree
        THUMB
SzFileFree:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOVS     R4,R0
        LDR      R0,[R4, #+8]
        BLX      R1
        MOVS     R0,R4
        BL       SzFileInit
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        ARM
??SzArchiveDatabaseInit??rA:
        ADD      R12,PC,#+1
        BX       R12
        CFI EndBlock cfiBlock20
        REQUIRE SzArchiveDatabaseInit

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function SzArchiveDatabaseInit
        THUMB
SzArchiveDatabaseInit:
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        STR      R1,[R0, #+4]
        STR      R1,[R0, #+8]
        STR      R1,[R0, #+12]
        STR      R1,[R0, #+16]
        STR      R1,[R0, #+20]
        STR      R1,[R0, #+24]
        STR      R1,[R0, #+28]
        BX       LR               ;; return
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon0
        CFI NoFunction
        ARM
??SzArchiveDatabaseFree??rA:
        ADD      R12,PC,#+1
        BX       R12
        CFI EndBlock cfiBlock22
        REQUIRE SzArchiveDatabaseFree

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI Function SzArchiveDatabaseFree
        THUMB
SzArchiveDatabaseFree:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOVS     R4,R0
        LDR      R0,[R4, #+16]
        MOVS     R5,R1
        MOVS     R6,#+0
        CMP      R0,#+0
        BNE      ??SzArchiveDatabaseFree_0
        B        ??SzArchiveDatabaseFree_1
??SzArchiveDatabaseFree_2:
        LDR      R2,[R4, #+20]
        MOVS     R1,R5
        MOVS     R0,#+40
        MULS     R0,R6,R0
        ADDS     R0,R2,R0
        BL       SzFolderFree
        ADDS     R6,R6,#+1
??SzArchiveDatabaseFree_0:
        LDR      R0,[R4, #+16]
        CMP      R6,R0
        BCC      ??SzArchiveDatabaseFree_2
??SzArchiveDatabaseFree_1:
        LDR      R0,[R4, #+24]
        MOVS     R6,#+0
        CMP      R0,#+0
        BNE      ??SzArchiveDatabaseFree_3
        B        ??SzArchiveDatabaseFree_4
??SzArchiveDatabaseFree_5:
        LDR      R1,[R4, #+28]
        LSLS     R0,R6,#+4
        ADDS     R7,R1,R0
        LDR      R0,[R7, #+8]
        ADDS     R6,R6,#+1
        BLX      R5
        MOVS     R0,R7
        BL       SzFileInit
??SzArchiveDatabaseFree_3:
        LDR      R0,[R4, #+24]
        CMP      R6,R0
        BCC      ??SzArchiveDatabaseFree_5
??SzArchiveDatabaseFree_4:
        LDR      R0,[R4, #+4]
        BLX      R5
        LDR      R0,[R4, #+8]
        BLX      R5
        LDR      R0,[R4, #+12]
        BLX      R5
        LDR      R0,[R4, #+20]
        BLX      R5
        LDR      R0,[R4, #+28]
        BLX      R5
        MOVS     R0,R4
        BL       SzArchiveDatabaseInit
        POP      {R4-R7,PC}       ;; return
        CFI EndBlock cfiBlock23

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon1
        CFI NoFunction
        THUMB
??SzByteBufferInit??rT:
        LDR      R3,??Subroutine12_0  ;; SzByteBufferInit
        BX       R3
        DATA
??Subroutine12_0:
        DC32     SzByteBufferInit
        CFI EndBlock cfiBlock24

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI NoFunction
        THUMB
??SzByteBufferFree??rT:
        LDR      R3,??Subroutine13_0  ;; SzByteBufferFree
        BX       R3
        DATA
??Subroutine13_0:
        DC32     SzByteBufferFree
        CFI EndBlock cfiBlock25

        END
// 
// 536 bytes in segment CODE
// 
// 424 bytes of CODE memory (+ 112 bytes shared)
//
//Errors: none
//Warnings: none
