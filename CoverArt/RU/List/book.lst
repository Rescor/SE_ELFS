##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION    10/Jun/2013  23:02:05 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\book. #
#                       c                                                    #
#    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\book. #
#                       c -D NDEBUG -D OLDFUNCTIONS -lC                      #
#                       Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\RU\Li #
#                       st\ -lA Z:\home\perk11\www\perk11.info\svn\SE\CoverA #
#                       rt\RU\List\ -o Z:\home\perk11\www\perk11.info\svn\SE #
#                       \CoverArt\RU\Obj\ -s9 --cpu_mode arm --endian        #
#                       little --cpu ARM926EJ-S --stack_align 4 --interwork  #
#                       -e --enable_multibytes --fpu None --eec++            #
#                       --dlib_config Z:\home\perk11\IAR2\arm\LIB\dl5tpainl8 #
#                       n.h --preinclude Z:\home\perk11\www\perk11.info\svn\ #
#                       SE\CoverArt\LNG-RU.h -I Z:\home\perk11\IAR2\arm\INC\ #
#                        --inline_threshold=2                                #
#    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\RU\Li #
#                       st\book.lst                                          #
#    Object file     =  Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\RU\Ob #
#                       j\book.r79                                           #
#                                                                            #
#                                                                            #
##############################################################################

Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\book.c
      1          #include "..\\include\Lib_Clara.h" 
      2          #include "..\\include\Dir.h" 
      3          #include "..\\include\cfg_items.h"
      4          #include "conf_loader.h"
      5          #include "config_data.h"
      6          
      7          #include "Standby.h"
      8          #include "revision.h"
      9          #include "structs.h"
     10          #include "Externals.h"
     11          
     12          extern MUSIC nowmusic;
     13          extern bool isInStandby;
     14          extern LABEL labels[10];
     15          extern UI_IMG img;

   \                                 In segment DATA_Z, align 4, align-sorted
     16          bool PlayerRunned=false;
     17          
     18          int CurrentTime;
   \                     CurrentTime:
   \   00000000                      DS8 4
     19          
     20          BOOK * CABook;
     21          void decoder_Init(wchar_t *path, wchar_t *name);
     22          TRACK_DESC *currenttrack=0;
   \                     currenttrack:
   \   00000004                      DS8 4
   \                     PlayerRunned:
   \   00000008                      DS8 1
     23          int event1;
     24          int event2;
     25          

   \                                 In segment CODE, align 4, keep-with-next
     26          void CA_Kill()
     27          {
   \                     ??CA_Kill:
   \   00000000   00402DE9           PUSH     {LR}
     28            kill_data(&ELF_BEGIN, (void(*)(void*))mfree_adr());
   \   00000004   048100EF           SWI      +33028
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04009FE5           LDR      R0,??CA_Kill_1   ;; ELF_BEGIN
   \   00000010   0040BDE8           POP      {LR}             ;; Pop
   \   00000014   ........           _BF      kill_data,??kill_data??rA  ;; tailcall
   \                     ??CA_Kill_1:
   \   00000018   ........           DC32     ELF_BEGIN
     29          };
     30          

   \                                 In segment CODE, align 4, keep-with-next
     31          int CABook_Terminate(void * ,BOOK* book)
     32          {
   \                     ??CABook_Terminate:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0100A0E1           MOV      R0,R1
     33            FreeBook(book);
   \   00000008   2F0100EF           SWI      +303
     34            return(1);
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   0080BDE8           POP      {PC}             ;; return
     35          };
     36          

   \                                 In segment CODE, align 4, keep-with-next
     37          int CABook_ShowAuthorInfo(void *mess ,BOOK* book)
     38          {
     39            MSG * msg = (MSG*)mess;
     40            wchar_t text[512];
     41            snwprintf( text, 512, L"CoverArt in Standby v3.56\r\n\r\n© UltraShot\n® IronMaster,\nJoker XT,\n2007KrasH\n\r\nbuild %d\n", BUILD);
   \                     ??CABook_ShowAuthorInfo:
   \   00000000   6C209FE5           LDR      R2,??CABook_ShowAuthorInfo_1  ;; `?<Constant L"\\x43\\x6f\\x76\\x65\\x72\\x41\\x72\\x74\\`
   \   00000004   30402DE9           PUSH     {R4,R5,LR}
   \   00000008   40DE4DE2           SUB      SP,SP,#+1024
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   3430A0E3           MOV      R3,#+52
   \   00000014   E03E83E3           ORR      R3,R3,#0xE00
   \   00000018   801FA0E3           MOV      R1,#+512
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   150100EF           SWI      +277
     42            MessageBox( SID_NULL, TextID_Create(text,ENC_UCS2,TEXTID_ANY_LEN), NOIMAGE, 1, 5000, msg->book ); 
   \   00000024   FF50A0E3           MOV      R5,#+255
   \   00000028   FF5C85E3           ORR      R5,R5,#0xFF00
   \   0000002C   0520A0E1           MOV      R2,R5
   \   00000030   0010A0E3           MOV      R1,#+0
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   5D0100EF           SWI      +349
   \   0000003C   001094E5           LDR      R1,[R4, #+0]
   \   00000040   0130A0E3           MOV      R3,#+1
   \   00000044   02002DE9           PUSH     {R1}
   \   00000048   0520A0E1           MOV      R2,R5
   \   0000004C   8810A0E3           MOV      R1,#+136
   \   00000050   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000054   02002DE9           PUSH     {R1}
   \   00000058   0010A0E1           MOV      R1,R0
   \   0000005C   9004E0E3           MVN      R0,#-1879048192
   \   00000060   570200EF           SWI      +599
     43            return(1);
   \   00000064   0100A0E3           MOV      R0,#+1
   \   00000068   08D08DE2           ADD      SP,SP,#+8
   \   0000006C   40DE8DE2           ADD      SP,SP,#+1024
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??CABook_ShowAuthorInfo_1:
   \   00000074   ........           DC32     `?<Constant L"\\x43\\x6f\\x76\\x65\\x72\\x41\\x72\\x74\\`
     44          };
     45          //int CABook_StandbyUnfocused(UI_MESSAGE *);
     46          //int CABook_StandbyFocused(UI_MESSAGE *);
     47          

   \                                 In segment CODE, align 4, keep-with-next
     48          void CABook_OnClose(BOOK * book)
     49          {
   \                     ??CABook_OnClose:
   \   00000000   00402DE9           PUSH     {LR}
     50            if (book)
   \   00000004   000050E3           CMP      R0,#+0
   \   00000008   0080BD08           POPEQ    {PC}
     51            {
     52              void Cover_Free();
     53              //ModifyUIHook(event1,CABook_StandbyFocused,0);
     54              //ModifyUIHook(event2,CABook_StandbyUnfocused,0);
     55              //Удаляем обложку, если она есть
     56              Cover_Free();
   \   0000000C   ........           _BLF     ??Cover_Free,??Cover_Free??rA
     57              // Закрываем всё открытое
     58              Lang_Remove();
   \   00000010   ........           _BLF     ??Lang_Remove,??Lang_Remove??rA
     59              Images_Unload();
   \   00000014   ........           _BLF     ??Images_Unload,??Images_Unload??rA
     60              Send_REDRAW_RELEASE();
   \   00000018   ........           BL       ??Send_REDRAW_RELEASE
     61              Anim_Free();
   \   0000001C   ........           _BLF     ??Anim_Free,??Anim_Free??rA
     62              Standby_ReturnRedraw();
   \   00000020   ........           _BLF     ??Standby_ReturnRedraw,??Standby_ReturnRedraw??rA
     63              SUBPROC(CA_Kill);
   \   00000024   04009FE5           LDR      R0,??CABook_OnClose_1  ;; ??CA_Kill
   \   00000028   080100EF           SWI      +264
     64            }
     65          };
   \   0000002C   0080BDE8           POP      {PC}             ;; return
   \                     ??CABook_OnClose_1:
   \   00000030   ........           DC32     ??CA_Kill
     66          

   \                                 In segment CODE, align 4, keep-with-next
     67          static int CABook_Reconfig(void *mess ,BOOK *book)
     68          {
   \                     ??CABook_Reconfig:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     69            // Переконфигурируемся
     70            RECONFIG_EVENT_DATA *reconf=(RECONFIG_EVENT_DATA *)mess;
     71            int result=0;
     72            // Если конфиг наш, перегрузим его
     73            if (wstrcmpi(reconf->path,successed_config_path)==0 && wstrcmpi(reconf->name,successed_config_name)==0)
   \   00000008   7C009FE5           LDR      R0,??CABook_Reconfig_1  ;; successed_config_path
   \   0000000C   0050A0E3           MOV      R5,#+0
   \   00000010   001090E5           LDR      R1,[R0, #+0]
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   9F0200EF           SWI      +671
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   1700001A           BNE      ??CABook_Reconfig_2
   \   00000024   64009FE5           LDR      R0,??CABook_Reconfig_1+0x4  ;; successed_config_name
   \   00000028   001090E5           LDR      R1,[R0, #+0]
   \   0000002C   800084E2           ADD      R0,R4,#+128
   \   00000030   9F0200EF           SWI      +671
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   1100001A           BNE      ??CABook_Reconfig_2
     74            {
     75              if (AllowAnim==true)
   \   0000003C   50009FE5           LDR      R0,??CABook_Reconfig_1+0x8  ;; AllowAnim
   \   00000040   004090E5           LDR      R4,[R0, #+0]
   \   00000044   010054E3           CMP      R4,#+1
   \   00000048   0000001A           BNE      ??CABook_Reconfig_3
     76              {
     77                Anim_Free();
   \   0000004C   ........           _BLF     ??Anim_Free,??Anim_Free??rA
     78              }
     79              InitConfig();
   \                     ??CABook_Reconfig_3:
   \   00000050   ........           _BLF     ??InitConfig,??InitConfig??rA
     80              Anim_Init();
   \   00000054   ........           _BLF     ??Anim_Init,??Anim_Init??rA
     81              CustomLbls();
   \   00000058   ........           _BLF     ??CustomLbls,??CustomLbls??rA
     82              InitLbls();
   \   0000005C   ........           _BLF     ??InitLbls,??InitLbls??rA
     83              Images_Unload();
   \   00000060   ........           _BLF     ??Images_Unload,??Images_Unload??rA
     84              Images_Load();
   \   00000064   ........           _BLF     ??Images_Load,??Images_Load??rA
     85              if (AllowAnim==true)
     86              {
     87                locTime=AnimUpdateTime;
     88              }
     89              else
     90              {
     91                locTime=DefUpdateTime;
   \   00000068   28109FE5           LDR      R1,??CABook_Reconfig_1+0xC  ;; locTime
   \   0000006C   010054E3           CMP      R4,#+1
   \   00000070   24009F05           LDREQ    R0,??CABook_Reconfig_1+0x10  ;; AnimUpdateTime
     92              }
     93              result=1;
   \   00000074   0150A0E3           MOV      R5,#+1
   \   00000078   20009F15           LDRNE    R0,??CABook_Reconfig_1+0x14  ;; DefUpdateTime
   \   0000007C   000090E5           LDR      R0,[R0, #+0]
   \   00000080   000081E5           STR      R0,[R1, #+0]
     94            }
     95            return(result);
   \                     ??CABook_Reconfig_2:
   \   00000084   0500A0E1           MOV      R0,R5
   \   00000088   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??CABook_Reconfig_1:
   \   0000008C   ........           DC32     successed_config_path
   \   00000090   ........           DC32     successed_config_name
   \   00000094   ........           DC32     AllowAnim
   \   00000098   ........           DC32     locTime
   \   0000009C   ........           DC32     AnimUpdateTime
   \   000000A0   ........           DC32     DefUpdateTime
     96          };
     97          extern bool SoftUsed;
     98          extern bool StatusUsed;

   \                                 In segment CODE, align 4, keep-with-next
     99          int isCoverArtBook(BOOK *bk)
    100          {
    101            if (!strcmp(bk->xbook->name,"CoverArt in Standby")) { return 1; }
   \                     ??isCoverArtBook:
   \   00000000   ........           LDR      R1,??DataTable16  ;; `?<Constant "CoverArt in Standby">`
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   040090E5           LDR      R0,[R0, #+4]
   \   00000010   590100EF           SWI      +345
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   0080BD08           POPEQ    {PC}
    102            else { return 0; }
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   0080BDE8           POP      {PC}             ;; return
    103          };
    104          

   \                                 In segment CODE, align 4, keep-with-next
    105          void Send_REDRAW_RELEASE()
    106          {
   \                     ??Send_REDRAW_RELEASE:
   \   00000000   10402DE9           PUSH     {R4,LR}
    107            // посылаем всем  мессагу со старым и своим методами Redraw
    108            REDRAW_RELEASE_MESSAGE * sbm= new REDRAW_RELEASE_MESSAGE;
   \   00000004   1800A0E3           MOV      R0,#+24
   \   00000008   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000000C   0040A0E1           MOV      R4,R0
    109            memset(sbm,0,sizeof(REDRAW_RELEASE_MESSAGE));
   \   00000010   1820A0E3           MOV      R2,#+24
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   120100EF           SWI      +274
    110            sbm->SB_OldOnRedraw=Standby_DefaultRedraw;
   \   0000001C   ........           LDR      R0,??DataTable7  ;; Standby_DefaultRedraw
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   000084E5           STR      R0,[R4, #+0]
    111            sbm->SB_NewOnRedraw=Standby_CARedraw;
   \   00000028   ........           LDR      R0,??DataTable8  ;; ??Standby_CARedraw
   \   0000002C   040084E5           STR      R0,[R4, #+4]
    112            if (StatusUsed)
   \   00000030   5C009FE5           LDR      R0,??Send_REDRAW_RELEASE_1  ;; StatusUsed
   \   00000034   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   0400000A           BEQ      ??Send_REDRAW_RELEASE_2
    113            {
    114              sbm->SI_OldOnRedraw=StatusIndication_DefaultRedraw;
   \   00000040   ........           LDR      R0,??DataTable9  ;; StatusIndication_DefaultRedraw
   \   00000044   000090E5           LDR      R0,[R0, #+0]
   \   00000048   080084E5           STR      R0,[R4, #+8]
    115              sbm->SI_NewOnRedraw=StatusIndication_CARedraw;
   \   0000004C   ........           LDR      R0,??DataTable10  ;; ??StatusIndication_CARedraw
   \   00000050   0C0084E5           STR      R0,[R4, #+12]
    116            }
    117            if (SoftUsed)
   \                     ??Send_REDRAW_RELEASE_2:
   \   00000054   3C009FE5           LDR      R0,??Send_REDRAW_RELEASE_1+0x4  ;; SoftUsed
   \   00000058   0000D0E5           LDRB     R0,[R0, #+0]
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   0400000A           BEQ      ??Send_REDRAW_RELEASE_3
    118            {
    119              sbm->SK_OldOnRedraw=Softkey_DefaultRedraw;
   \   00000064   ........           LDR      R0,??DataTable11  ;; Softkey_DefaultRedraw
   \   00000068   000090E5           LDR      R0,[R0, #+0]
   \   0000006C   100084E5           STR      R0,[R4, #+16]
    120              sbm->SK_NewOnRedraw=Softkey_CARedraw;
   \   00000070   ........           LDR      R0,??DataTable12  ;; ??Softkey_CARedraw
   \   00000074   140084E5           STR      R0,[R4, #+20]
    121            }
    122            UI_Event_wData(SBY_REDRAW_RELEASE_EVENT ,sbm,(void (*)(void*))mfree_adr());
   \                     ??Send_REDRAW_RELEASE_3:
   \   00000078   048100EF           SWI      +33028
   \   0000007C   0020A0E1           MOV      R2,R0
   \   00000080   0410A0E1           MOV      R1,R4
   \   00000084   E300A0E3           MOV      R0,#+227
   \   00000088   C00F80E3           ORR      R0,R0,#0x300
   \   0000008C   A90100EF           SWI      +425
    123          };
   \   00000090   1080BDE8           POP      {R4,PC}          ;; return
   \                     ??Send_REDRAW_RELEASE_1:
   \   00000094   ........           DC32     StatusUsed
   \   00000098   ........           DC32     SoftUsed
    124          

   \                                 In segment CODE, align 4, keep-with-next
    125          int SB_ELF_Killed(void *mess ,BOOK* book)
    126          {
   \                     ??SB_ELF_Killed:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    127            // если был убит эльф рисующий на ГЭ или просто нужно перетосовать методы
    128            REDRAW_RELEASE_MESSAGE * sbm=(REDRAW_RELEASE_MESSAGE*)mess;
    129            REDRAW_RELEASE_MESSAGE *res=0;
    130            // его ли метод мы используем в качестве OldRedraw?
    131            if (sbm->SB_NewOnRedraw==Standby_DefaultRedraw)
   \   00000004   ........           LDR      R7,??DataTable7  ;; Standby_DefaultRedraw
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   040096E5           LDR      R0,[R6, #+4]
   \   00000010   001097E5           LDR      R1,[R7, #+0]
   \   00000014   0050A0E3           MOV      R5,#+0
   \   00000018   0540E0E1           MVN      R4,R5
   \   0000001C   010050E1           CMP      R0,R1
   \   00000020   1000001A           BNE      ??SB_ELF_Killed_1
    132            {
    133              res=new REDRAW_RELEASE_MESSAGE;
   \   00000024   1800A0E3           MOV      R0,#+24
   \   00000028   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000002C   0050A0E1           MOV      R5,R0
    134              
    135              // копируем существующие методы в нашу мессагу
    136              memcpy(res,sbm,sizeof(REDRAW_RELEASE_MESSAGE));
   \   00000030   1820A0E3           MOV      R2,#+24
   \   00000034   0610A0E1           MOV      R1,R6
   \   00000038   130100EF           SWI      +275
    137              
    138              // если он был убит, то заменяем свой oldRedraw на его..
    139              if (sbm->SB_OldOnRedraw!=EMPTY_REDRAW_METHOD) Standby_DefaultRedraw=sbm->SB_OldOnRedraw;
   \   0000003C   000096E5           LDR      R0,[R6, #+0]
   \   00000040   040050E1           CMP      R0,R4
   \   00000044   00008715           STRNE    R0,[R7, #+0]
    140          
    141              // ставим свой метод наверх
    142              DISP_DESC_SetOnRedraw(DispObject_GetDESC(Standby_DO),Standby_CARedraw);
   \   00000048   0C019FE5           LDR      R0,??SB_ELF_Killed_2  ;; Standby_DO
   \   0000004C   ........           LDR      R7,??DataTable8  ;; ??Standby_CARedraw
   \   00000050   000090E5           LDR      R0,[R0, #+0]
   \   00000054   1F0200EF           SWI      +543
   \   00000058   0710A0E1           MOV      R1,R7
   \   0000005C   280200EF           SWI      +552
    143          
    144              // и шлём мессагу снова, чтоб следующие эльфы сделали тоже самое
    145              res->SB_OldOnRedraw=EMPTY_REDRAW_METHOD;
   \   00000060   004085E5           STR      R4,[R5, #+0]
    146              res->SB_NewOnRedraw=Standby_CARedraw;
   \   00000064   047085E5           STR      R7,[R5, #+4]
    147            }
    148            if (sbm->SI_NewOnRedraw==StatusIndication_DefaultRedraw)
   \                     ??SB_ELF_Killed_1:
   \   00000068   ........           LDR      R7,??DataTable9  ;; StatusIndication_DefaultRedraw
   \   0000006C   0C0096E5           LDR      R0,[R6, #+12]
   \   00000070   001097E5           LDR      R1,[R7, #+0]
   \   00000074   010050E1           CMP      R0,R1
   \   00000078   1200001A           BNE      ??SB_ELF_Killed_3
    149            {
    150              if (!res)
   \   0000007C   000055E3           CMP      R5,#+0
   \   00000080   0500001A           BNE      ??SB_ELF_Killed_4
    151              {
    152                res=new REDRAW_RELEASE_MESSAGE;
   \   00000084   1800A0E3           MOV      R0,#+24
   \   00000088   ........           _BLF     `??operator new`,`??operator new??rA`
   \   0000008C   0050A0E1           MOV      R5,R0
    153                memcpy(res,sbm,sizeof(REDRAW_RELEASE_MESSAGE));
   \   00000090   1820A0E3           MOV      R2,#+24
   \   00000094   0610A0E1           MOV      R1,R6
   \   00000098   130100EF           SWI      +275
    154              }
    155              if (sbm->SI_OldOnRedraw!=EMPTY_REDRAW_METHOD) StatusIndication_DefaultRedraw=sbm->SI_OldOnRedraw;
   \                     ??SB_ELF_Killed_4:
   \   0000009C   080096E5           LDR      R0,[R6, #+8]
   \   000000A0   040050E1           CMP      R0,R4
   \   000000A4   00008715           STRNE    R0,[R7, #+0]
    156              DISP_DESC_SetOnRedraw(DispObject_GetDESC(StatusIndication_DO),StatusIndication_CARedraw);
   \   000000A8   B0009FE5           LDR      R0,??SB_ELF_Killed_2+0x4  ;; StatusIndication_DO
   \   000000AC   ........           LDR      R7,??DataTable10  ;; ??StatusIndication_CARedraw
   \   000000B0   000090E5           LDR      R0,[R0, #+0]
   \   000000B4   1F0200EF           SWI      +543
   \   000000B8   0710A0E1           MOV      R1,R7
   \   000000BC   280200EF           SWI      +552
    157              res->SI_OldOnRedraw=EMPTY_REDRAW_METHOD;
   \   000000C0   084085E5           STR      R4,[R5, #+8]
    158              res->SI_NewOnRedraw=StatusIndication_CARedraw;
   \   000000C4   0C7085E5           STR      R7,[R5, #+12]
    159            }
    160            if (sbm->SK_NewOnRedraw==Softkey_DefaultRedraw)
   \                     ??SB_ELF_Killed_3:
   \   000000C8   ........           LDR      R7,??DataTable11  ;; Softkey_DefaultRedraw
   \   000000CC   140096E5           LDR      R0,[R6, #+20]
   \   000000D0   001097E5           LDR      R1,[R7, #+0]
   \   000000D4   010050E1           CMP      R0,R1
   \   000000D8   1200001A           BNE      ??SB_ELF_Killed_5
    161            {
    162              if (!res)
   \   000000DC   000055E3           CMP      R5,#+0
   \   000000E0   0500001A           BNE      ??SB_ELF_Killed_6
    163              {
    164                res=new REDRAW_RELEASE_MESSAGE;
   \   000000E4   1800A0E3           MOV      R0,#+24
   \   000000E8   ........           _BLF     `??operator new`,`??operator new??rA`
   \   000000EC   0050A0E1           MOV      R5,R0
    165                memcpy(res,sbm,sizeof(REDRAW_RELEASE_MESSAGE));
   \   000000F0   1820A0E3           MOV      R2,#+24
   \   000000F4   0610A0E1           MOV      R1,R6
   \   000000F8   130100EF           SWI      +275
    166              }
    167              if (sbm->SK_OldOnRedraw!=EMPTY_REDRAW_METHOD) Softkey_DefaultRedraw=sbm->SK_OldOnRedraw;
   \                     ??SB_ELF_Killed_6:
   \   000000FC   100096E5           LDR      R0,[R6, #+16]
    168              DISP_DESC_SetOnRedraw(DispObject_GetDESC(Softkey_DO),Softkey_CARedraw);
   \   00000100   ........           LDR      R6,??DataTable12  ;; ??Softkey_CARedraw
   \   00000104   040050E1           CMP      R0,R4
   \   00000108   00008715           STRNE    R0,[R7, #+0]
   \   0000010C   50009FE5           LDR      R0,??SB_ELF_Killed_2+0x8  ;; Softkey_DO
   \   00000110   000090E5           LDR      R0,[R0, #+0]
   \   00000114   1F0200EF           SWI      +543
   \   00000118   0610A0E1           MOV      R1,R6
   \   0000011C   280200EF           SWI      +552
    169              res->SK_OldOnRedraw=EMPTY_REDRAW_METHOD;
   \   00000120   104085E5           STR      R4,[R5, #+16]
    170              res->SK_NewOnRedraw=Softkey_CARedraw;
   \   00000124   146085E5           STR      R6,[R5, #+20]
    171            }
    172            if (res)
   \                     ??SB_ELF_Killed_5:
   \   00000128   000055E3           CMP      R5,#+0
   \   0000012C   0800000A           BEQ      ??SB_ELF_Killed_7
    173            {
    174              UI_Event_wData(SBY_REDRAW_RELEASE_EVENT ,res,(void (*)(void*))mfree_adr());
   \   00000130   048100EF           SWI      +33028
   \   00000134   0020A0E1           MOV      R2,R0
   \   00000138   0510A0E1           MOV      R1,R5
   \   0000013C   E300A0E3           MOV      R0,#+227
   \   00000140   C00F80E3           ORR      R0,R0,#0x300
   \   00000144   A90100EF           SWI      +425
    175              return BLOCK_EVENT_GLOBALLY;
   \   00000148   9A00A0E3           MOV      R0,#+154
   \   0000014C   800F80E3           ORR      R0,R0,#0x200
   \   00000150   F080BDE8           POP      {R4-R7,PC}
    176            }
    177            return 0;
   \                     ??SB_ELF_Killed_7:
   \   00000154   0000A0E3           MOV      R0,#+0
   \   00000158   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??SB_ELF_Killed_2:
   \   0000015C   ........           DC32     Standby_DO
   \   00000160   ........           DC32     StatusIndication_DO
   \   00000164   ........           DC32     Softkey_DO
    178          };
    179          

   \                                 In segment CODE, align 4, keep-with-next
    180          void ReInit()
    181          {
   \                     ??ReInit:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    182            if (FindBook(get_IsAudioPlayerBook()))
   \   00000004   8B8200EF           SWI      +33419
   \   00000008   300100EF           SWI      +304
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   3080BD08           POPEQ    {R4,R5,PC}
    183            {
    184              TRACK_DESC *ntrack=TrackDesc_Get(FindBook(get_IsAudioPlayerBook()));
    185              if (TrackDesc_Compare(currenttrack,ntrack)==false)
   \   00000014   5C509FE5           LDR      R5,??ReInit_1    ;; CurrentTime
   \   00000018   8B8200EF           SWI      +33419
   \   0000001C   300100EF           SWI      +304
   \   00000020   ........           _BLF     ??TrackDesc_Get,??TrackDesc_Get??rA
   \   00000024   0040A0E1           MOV      R4,R0
   \   00000028   040095E5           LDR      R0,[R5, #+4]
   \   0000002C   0410A0E1           MOV      R1,R4
   \   00000030   ........           _BLF     ??TrackDesc_Compare,??TrackDesc_Compare??rA
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0B00001A           BNE      ??ReInit_2
    186              {
    187                TrackDesc_Free(currenttrack);
   \   0000003C   040095E5           LDR      R0,[R5, #+4]
   \   00000040   ........           _BLF     ??TrackDesc_Free,??TrackDesc_Free??rA
    188                currenttrack=ntrack;
   \   00000044   044085E5           STR      R4,[R5, #+4]
    189                decoder_Init(currenttrack->path,currenttrack->name);
   \   00000048   041094E5           LDR      R1,[R4, #+4]
   \   0000004C   000094E5           LDR      R0,[R4, #+0]
   \   00000050   ........           _BLF     ??decoder_Init,??decoder_Init??rA
    190                InitLbls();
   \   00000054   ........           _BLF     ??InitLbls,??InitLbls??rA
    191                nowmusic.hdr.LengthInSeconds=currenttrack->fulltime;
   \   00000058   041095E5           LDR      R1,[R5, #+4]
   \   0000005C   18009FE5           LDR      R0,??ReInit_1+0x4  ;; nowmusic + 16
   \   00000060   081091E5           LDR      R1,[R1, #+8]
   \   00000064   001080E5           STR      R1,[R0, #+0]
   \   00000068   3080BDE8           POP      {R4,R5,PC}
    192              }
    193              else
    194              {
    195                TrackDesc_Free(ntrack);
   \                     ??ReInit_2:
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           _BLF     ??TrackDesc_Free,??TrackDesc_Free??rA
    196              }
    197            }
    198          };
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??ReInit_1:
   \   00000078   ........           DC32     CurrentTime
   \   0000007C   ........           DC32     nowmusic + 16
    199          

   \                                 In segment CODE, align 4, keep-with-next
    200          int CABook_onPlay(void * ,BOOK* bk)
    201          { 
   \                     ??CABook_onPlay:
   \   00000000   00402DE9           PUSH     {LR}
    202            ReInit();
   \   00000004   ........           BL       ??ReInit
    203            PlayerRunned=true;
   \   00000008   ........           LDR      R0,??DataTable15  ;; CurrentTime + 8
   \   0000000C   0110A0E3           MOV      R1,#+1
   \   00000010   0010C0E5           STRB     R1,[R0, #+0]
    204          #ifdef DEBUG
    205            MessageBox(SID_NULL,TextID_Create(L"PlayEvent",ENC_UCS2,TEXTID_ANY_LEN),NOIMAGE,1,0,0);
    206          #endif
    207            return 0;
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   0080BDE8           POP      {PC}             ;; return
    208          };
    209          

   \                                 In segment CODE, align 4, keep-with-next
    210          int CABook_onCreate(void *, BOOK *bk)
    211          {
   \                     ??CABook_onCreate:
   \   00000000   00402DE9           PUSH     {LR}
    212            if (FindBook(get_IsAudioPlayerBook()))
   \   00000004   8B8200EF           SWI      +33419
   \   00000008   300100EF           SWI      +304
    213            {
    214              //PlayerRunned=true;
    215          #ifdef DEBUG
    216              MessageBox(SID_NULL,TextID_Create(L"CreatedEvent",ENC_UCS2,TEXTID_ANY_LEN),NOIMAGE,1,0,0);
    217          #endif
    218            }
    219            return 0;
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   0080BDE8           POP      {PC}             ;; return
    220          };
    221          

   \                                 In segment CODE, align 4, keep-with-next
    222          int CABook_onDestroy(void *, BOOK *bk)
    223          {
    224            PlayerRunned=false;
   \                     ??CABook_onDestroy:
   \   00000000   ........           LDR      R0,??DataTable15  ;; CurrentTime + 8
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   0010C0E5           STRB     R1,[R0, #+0]
    225          #ifdef DEBUG
    226            MessageBox(SID_NULL,TextID_Create(L"DestroyedEvent",ENC_UCS2,TEXTID_ANY_LEN),NOIMAGE,1,0,0);
    227          #endif
    228            return 0;
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   1EFF2FE1           BX       LR               ;; return
    229          };
    230          

   \                                 In segment CODE, align 4, keep-with-next
    231          int CABook_onPlayTimer(void *message,BOOK* bk)
    232          {
   \                     ??CABook_onPlayTimer:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0050A0E1           MOV      R5,R0
    233            if (FindBook(get_IsAudioPlayerBook()))
   \   00000008   8B8200EF           SWI      +33419
   \   0000000C   300100EF           SWI      +304
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   3080BD08           POPEQ    {R4,R5,PC}
    234            {
    235              if (!currenttrack)
   \   00000018   3C409FE5           LDR      R4,??CABook_onPlayTimer_1  ;; CurrentTime
   \   0000001C   040094E5           LDR      R0,[R4, #+4]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0000001A           BNE      ??CABook_onPlayTimer_2
    236              {
    237                ReInit();
   \   00000028   ........           BL       ??ReInit
    238              }
    239              PlayerRunned=true;
   \                     ??CABook_onPlayTimer_2:
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   0800C4E5           STRB     R0,[R4, #+8]
    240              PLAY_TIME *pl=(PLAY_TIME*)message;
    241              CurrentTime=(pl->hour * 60)+ ((pl->min * 60) + pl->sec);
   \   00000034   240095E5           LDR      R0,[R5, #+36]
   \   00000038   281095E5           LDR      R1,[R5, #+40]
   \   0000003C   2C2095E5           LDR      R2,[R5, #+44]
   \   00000040   000081E0           ADD      R0,R1,R0
   \   00000044   3C10A0E3           MOV      R1,#+60
   \   00000048   912020E0           MLA      R0,R1,R0,R2
   \   0000004C   000084E5           STR      R0,[R4, #+0]
    242              optimized_InitLbls();
   \   00000050   ........           _BLF     ??optimized_InitLbls,??optimized_InitLbls??rA
    243            }
    244            return 0;
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??CABook_onPlayTimer_1:
   \   0000005C   ........           DC32     CurrentTime
    245          };
    246          
    247          
    248          

   \                                 In segment CODE, align 4, keep-with-next
    249          int CABook_onPause(void *, BOOK* book)
    250          {
   \                     ??CABook_onPause:
   \   00000000   00402DE9           PUSH     {LR}
    251            if (FindBook(get_IsAudioPlayerBook()))
   \   00000004   8B8200EF           SWI      +33419
   \   00000008   300100EF           SWI      +304
    252            {
    253              PlayerRunned=true;
    254            }
    255            else
    256            {
    257              PlayerRunned=false;
   \   0000000C   ........           LDR      R1,??DataTable15  ;; CurrentTime + 8
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100A013           MOVNE    R0,#+1
   \   00000018   0000C1E5           STRB     R0,[R1, #+0]
    258            }
    259            return 0;
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   0080BDE8           POP      {PC}             ;; return
    260          };
    261          

   \                                 In segment DYN_PAGE, align 4, align-sorted
    262          const PAGE_MSG CA_PageEvents[] @ "DYN_PAGE" ={
   \                     CA_PageEvents:
   \   00000000   E3030000....       DC32 995, ??SB_ELF_Killed, 997, ??CABook_Terminate, 998
   \              ....E5030000
   \              ........E603
   \              0000        
   \   00000014   ........E403       DC32 ??CABook_ShowAuthorInfo, 996, ??CABook_Reconfig, 470
   \              0000........
   \              D6010000    
   \   00000024   ........DA01       DC32 ??CABook_onPlay, 474, ??CABook_onPlayTimer, 472, ??CABook_onCreate
   \              0000........
   \              D8010000....
   \              ....        
   \   00000038   D9010000....       DC32 473, ??CABook_onDestroy, 471, ??CABook_onPause, 64, 0H
   \              ....D7010000
   \              ........4000
   \              000000000000

   \                                 In segment DATA_I, align 4, align-sorted
   \                     CABook:
   \   00000000                      DS8 4
   \   00000004                      REQUIRE `?<Initializer for CABook>`
   \                     event1:
   \   00000004                      DS8 4
   \   00000008                      REQUIRE `?<Initializer for event1>`
   \                     event2:
   \   00000008                      DS8 4
   \   0000000C                      REQUIRE `?<Initializer for event2>`
    263            SBY_REDRAW_RELEASE_EVENT  ,                   SB_ELF_Killed,
    264            ELF_TERMINATE_EVENT ,                         CABook_Terminate,
    265            ELF_SHOW_INFO_EVENT  ,                        CABook_ShowAuthorInfo,
    266            ELF_RECONFIG_EVENT,                           CABook_Reconfig,
    267            UI_MEDIAPLAYER_PLAY_PRESSED_EVENT_TAG,        CABook_onPlay,
    268            UI_MEDIAPLAYER_AUDIO_PLAYING_TIME_EVENT_TAG,  CABook_onPlayTimer,
    269            UI_MEDIAPLAYER_CREATED_EVENT_TAG,             CABook_onCreate,
    270            UI_MEDIAPLAYER_DESTROYED_EVENT_TAG,           CABook_onDestroy,
    271            UI_MEDIAPLAYER_PAUSE_PRESSED_EVENT_TAG,       CABook_onPause,
    272            NIL_EVENT_TAG,                                NULL
    273          };
    274          
    275          PAGE_DESC base_page ={"CoverArtpage",
   \                     base_page:
   \   0000000C                      DS8 12
   \   00000018                      REQUIRE `?<Initializer for base_page>`
    276                                0,
    277                                CA_PageEvents};
    278          

   \                                 In segment CODE, align 4, keep-with-next
    279          int CheckStandby()
    280          {
   \                     ??CheckStandby:
   \   00000000   10402DE9           PUSH     {R4,LR}
    281            if (Display_GetTopBook(0)==Find_StandbyBook())
   \   00000004   0000A0E3           MOV      R0,#+0
   \   00000008   1B0300EF           SWI      +795
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   310100EF           SWI      +305
   \   00000014   000054E1           CMP      R4,R0
    282            {
    283              return 1;
   \   00000018   0100A003           MOVEQ    R0,#+1
   \   0000001C   1080BD08           POPEQ    {R4,PC}
    284            }
    285            return 0;
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   1080BDE8           POP      {R4,PC}          ;; return
    286          }
    287          /*
    288          int CABook_StandbyUnfocused(UI_MESSAGE *)
    289          {
    290            isInStandby=CheckStandby();
    291            return 0;
    292          };
    293          
    294          int CABook_StandbyFocused(UI_MESSAGE *)
    295          {
    296            //Тел на ГЭ
    297            isInStandby=CheckStandby();
    298            return 0;
    299          };
    300          */

   \                                 In segment CODE, align 4, keep-with-next
    301          BOOK * CreateCABook()
    302          {
   \                     ??CreateCABook:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    303            CABook= new BOOK;
   \   00000004   94409FE5           LDR      R4,??CreateCABook_1  ;; CABook
   \   00000008   1800A0E3           MOV      R0,#+24
   \   0000000C   ........           _BLF     `??operator new`,`??operator new??rA`
   \   00000010   000084E5           STR      R0,[R4, #+0]
    304            memset(CABook,0,sizeof(BOOK));
   \   00000014   1820A0E3           MOV      R2,#+24
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   120100EF           SWI      +274
    305            event1=STANDBY_IDLE_EVENT;
   \   00000020   7C009FE5           LDR      R0,??CreateCABook_1+0x4  ;; STANDBY_IDLE_EVENT
   \   00000024   005090E5           LDR      R5,[R0, #+0]
    306            event2=STANDBY_NOT_IDLE_EVENT;
   \   00000028   78009FE5           LDR      R0,??CreateCABook_1+0x8  ;; STANDBY_NOT_IDLE_EVENT
   \   0000002C   045084E5           STR      R5,[R4, #+4]
   \   00000030   006090E5           LDR      R6,[R0, #+0]
   \   00000034   086084E5           STR      R6,[R4, #+8]
    307            switch (GetChipID()&CHIPID_MASK)
   \   00000038   4E0200EF           SWI      +590
   \   0000003C   FE0C00E2           AND      R0,R0,#0xFE00
   \   00000040   700C50E2           SUBS     R0,R0,#+28672
   \   00000044   400D5012           SUBSNE   R0,R0,#+4096
   \   00000048   0300000A           BEQ      ??CreateCABook_2
   \   0000004C   600D50E2           SUBS     R0,R0,#+6144
   \   00000050   04508405           STREQ    R5,[R4, #+4]
   \   00000054   08608405           STREQ    R6,[R4, #+8]
   \   00000058   050000EA           B        ??CreateCABook_3
    308            {
    309              case CHIPID_DB2000:
    310              case CHIPID_DB2010:
    311                event1=PHONE_IN_STBY_EVENT;
   \                     ??CreateCABook_2:
   \   0000005C   48009FE5           LDR      R0,??CreateCABook_1+0xC  ;; PHONE_IN_STBY_EVENT
   \   00000060   000090E5           LDR      R0,[R0, #+0]
   \   00000064   040084E5           STR      R0,[R4, #+4]
    312                event2=PREVIOUS_IN_STBY_IDLE_EVENT;
   \   00000068   40009FE5           LDR      R0,??CreateCABook_1+0x10  ;; PREVIOUS_IN_STBY_IDLE_EVENT
   \   0000006C   000090E5           LDR      R0,[R0, #+0]
   \   00000070   080084E5           STR      R0,[R4, #+8]
    313                break;
    314              case CHIPID_DB2020:
    315                event1=STANDBY_IDLE_EVENT;
    316                event2=STANDBY_NOT_IDLE_EVENT;
    317                break;
    318            }
    319            //ModifyUIHook(event1,CABook_StandbyFocused,1);
    320            //ModifyUIHook(event2,CABook_StandbyUnfocused,1);
    321            CreateBook(CABook,CABook_OnClose,&base_page,"CoverArt in Standby",-1,0);
   \                     ??CreateCABook_3:
   \   00000074   ........           LDR      R3,??DataTable16  ;; `?<Constant "CoverArt in Standby">`
   \   00000078   34109FE5           LDR      R1,??CreateCABook_1+0x14  ;; ??CABook_OnClose
   \   0000007C   0000A0E3           MOV      R0,#+0
   \   00000080   01002DE9           PUSH     {R0}
   \   00000084   0C2084E2           ADD      R2,R4,#+12
   \   00000088   0000E0E1           MVN      R0,R0
   \   0000008C   01002DE9           PUSH     {R0}
   \   00000090   000094E5           LDR      R0,[R4, #+0]
   \   00000094   2B0100EF           SWI      +299
    322            return(CABook);
   \   00000098   000094E5           LDR      R0,[R4, #+0]
   \   0000009C   7680BDE8           POP      {R1,R2,R4-R6,PC}  ;; return
   \                     ??CreateCABook_1:
   \   000000A0   ........           DC32     CABook
   \   000000A4   ........           DC32     STANDBY_IDLE_EVENT
   \   000000A8   ........           DC32     STANDBY_NOT_IDLE_EVENT
   \   000000AC   ........           DC32     PHONE_IN_STBY_EVENT
   \   000000B0   ........           DC32     PREVIOUS_IN_STBY_IDLE_EVENT
   \   000000B4   ........           DC32     ??CABook_OnClose
    323          };

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     Standby_DefaultRedraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   ........           DC32     ??Standby_CARedraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     StatusIndication_DefaultRedraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     ??StatusIndication_CARedraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   ........           DC32     Softkey_DefaultRedraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     ??Softkey_CARedraw

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   ........           DC32     CurrentTime + 8

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     `?<Constant "CoverArt in Standby">`

   \                                 In segment DATA_ID, align 4, align-sorted
   \                     `?<Initializer for CABook>`:
   \   00000000   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for event1>`:
   \   00000004   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for event2>`:
   \   00000008   00000000           DC8 0, 0, 0, 0
   \                     `?<Initializer for base_page>`:
   \   0000000C   ........0000       DC32 `?<Constant "CoverArtpage">`, 0H, CA_PageEvents
   \              0000........

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "CoverArtpage">`:
   \   00000000   436F76657241       DC8 "CoverArtpage"
   \              727470616765
   \              00          
   \   0000000D   000000             DC8 0, 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant L"\\x43\\x6f\\x76\\x65\\x72\\x41\\x72\\x74\\`:
   \   00000000   43006F007600       DC8 43H, 0, 6FH, 0, 76H, 0, 65H, 0
   \              6500        
   \   00000008   720041007200       DC8 72H, 0, 41H, 0, 72H, 0, 74H, 0
   \              7400        
   \   00000010   200069006E00       DC8 20H, 0, 69H, 0, 6EH, 0, 20H, 0
   \              2000        
   \   00000018   530074006100       DC8 53H, 0, 74H, 0, 61H, 0, 6EH, 0
   \              6E00        
   \   00000020   640062007900       DC8 64H, 0, 62H, 0, 79H, 0, 20H, 0
   \              2000        
   \   00000028   760033002E00       DC8 76H, 0, 33H, 0, 2EH, 0, 35H, 0
   \              3500        
   \   00000030   36000D000A00       DC8 36H, 0, 0DH, 0, 0AH, 0, 0DH, 0
   \              0D00        
   \   00000038   0A00A9002000       DC8 0AH, 0, 0A9H, 0, 20H, 0, 55H, 0
   \              5500        
   \   00000040   6C0074007200       DC8 6CH, 0, 74H, 0, 72H, 0, 61H, 0
   \              6100        
   \   00000048   530068006F00       DC8 53H, 0, 68H, 0, 6FH, 0, 74H, 0
   \              7400        
   \   00000050   0A00AE002000       DC8 0AH, 0, 0AEH, 0, 20H, 0, 49H, 0
   \              4900        
   \   00000058   72006F006E00       DC8 72H, 0, 6FH, 0, 6EH, 0, 4DH, 0
   \              4D00        
   \   00000060   610073007400       DC8 61H, 0, 73H, 0, 74H, 0, 65H, 0
   \              6500        
   \   00000068   72002C000A00       DC8 72H, 0, 2CH, 0, 0AH, 0, 4AH, 0
   \              4A00        
   \   00000070   6F006B006500       DC8 6FH, 0, 6BH, 0, 65H, 0, 72H, 0
   \              7200        
   \   00000078   200058005400       DC8 20H, 0, 58H, 0, 54H, 0, 2CH, 0
   \              2C00        
   \   00000080   0A0032003000       DC8 0AH, 0, 32H, 0, 30H, 0, 30H, 0
   \              3000        
   \   00000088   37004B007200       DC8 37H, 0, 4BH, 0, 72H, 0, 61H, 0
   \              6100        
   \   00000090   730048000A00       DC8 73H, 0, 48H, 0, 0AH, 0, 0DH, 0
   \              0D00        
   \   00000098   0A0062007500       DC8 0AH, 0, 62H, 0, 75H, 0, 69H, 0
   \              6900        
   \   000000A0   6C0064002000       DC8 6CH, 0, 64H, 0, 20H, 0, 25H, 0
   \              2500        
   \   000000A8   64000A000000       DC8 64H, 0, 0AH, 0, 0, 0
   \   000000AE   0000               DC8 0, 0

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "CoverArt in Standby">`:
   \   00000000   436F76657241       DC8 "CoverArt in Standby"
   \              727420696E20
   \              5374616E6462
   \              7900        

   Maximum stack usage in bytes:

     Function                       CSTACK
     --------                       ------
     CABook_OnClose(BOOK *)             4
     CABook_Reconfig(void *, BOOK *)
                                       12
     CABook_ShowAuthorInfo(void *, BOOK *)
                                     1044
     CABook_Terminate(void *, BOOK *)
                                        4
     CABook_onCreate(void *, BOOK *)
                                        4
     CABook_onDestroy(void *, BOOK *)
                                        0
     CABook_onPause(void *, BOOK *)     4
     CABook_onPlay(void *, BOOK *)      4
     CABook_onPlayTimer(void *, BOOK *)
                                       12
     CA_Kill()                          4
     CheckStandby()                     8
     CreateCABook()                    24
     ReInit()                          12
     SB_ELF_Killed(void *, BOOK *)     20
     Send_REDRAW_RELEASE()              8
     isCoverArtBook(BOOK *)             4


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     CurrentTime                       9
     CA_Kill()                        28
     CABook_Terminate(void *, BOOK *)
                                      20
     CABook_ShowAuthorInfo(void *, BOOK *)
                                     120
     CABook_OnClose(BOOK *)           52
     CABook_Reconfig(void *, BOOK *)
                                     164
     isCoverArtBook(BOOK *)           40
     Send_REDRAW_RELEASE()           156
     SB_ELF_Killed(void *, BOOK *)   360
     ReInit()                        128
     CABook_onPlay(void *, BOOK *)    28
     CABook_onCreate(void *, BOOK *)
                                      20
     CABook_onDestroy(void *, BOOK *)
                                      20
     CABook_onPlayTimer(void *, BOOK *)
                                      96
     CABook_onPause(void *, BOOK *)   36
     CA_PageEvents                    80
     CABook                           24
     CheckStandby()                   40
     CreateCABook()                  184
     ??DataTable7                      4
     ??DataTable8                      4
     ??DataTable9                      4
     ??DataTable10                     4
     ??DataTable11                     4
     ??DataTable12                     4
     ??DataTable15                     4
     ??DataTable16                     4
     ?<Initializer for CABook>        24
     ?<Constant "CoverArtpage">       16
     ?<Constant L"\x43\x6f\x76\x65\x72\x41\x72\x74\
                                     176
     ?<Constant "CoverArt in Standby">
                                      20
      Others                         292

 
 1 792 bytes in segment CODE
   212 bytes in segment DATA_C
    24 bytes in segment DATA_I
    24 bytes in segment DATA_ID
     9 bytes in segment DATA_Z
    80 bytes in segment DYN_PAGE
    24 bytes in segment INITTAB
 
 1 524 bytes of CODE  memory (+ 292 bytes shared)
   316 bytes of CONST memory
    33 bytes of DATA  memory

Errors: none
Warnings: none
