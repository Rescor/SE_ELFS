//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  23:02:43 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\tag_ /
//                       reset.c                                             /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\tag_ /
//                       reset.c -D NDEBUG -D OLDFUNCTIONS -lC               /
//                       Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\RU\L /
//                       ist\ -lA Z:\home\perk11\www\perk11.info\svn\SE\Cove /
//                       rArt\RU\List\ -o Z:\home\perk11\www\perk11.info\svn /
//                       \SE\CoverArt\RU\Obj\ -s9 --cpu_mode arm --endian    /
//                       little --cpu ARM926EJ-S --stack_align 4             /
//                       --interwork -e --enable_multibytes --fpu None       /
//                       --eec++ --dlib_config Z:\home\perk11\IAR2\arm\LIB\d /
//                       l5tpainl8n.h --preinclude                           /
//                       Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\LNG- /
//                       RU.h -I Z:\home\perk11\IAR2\arm\INC\                /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\RU\L /
//                       ist\tag_reset.s79                                   /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME tag_reset

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??metadata_reset
        FUNCTION ??metadata_reset,0203H
        LOCFRAME CSTACK, 28, STACK
        MULTWEAK ??metadata_reset??rT
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        

??metadata_reset??rT SYMBOL "??rT", ??metadata_reset


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??metadata_reset??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??metadata_reset
// Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\tag_reset.c
//    1 #include "..\include\Lib_Clara.h"
//    2 #include "..\include\dir.h"
//    3 #include "structs.h"
//    4 
//    5 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??metadata_reset
        ARM
//    6 void metadata_reset(METADATA *meta)
//    7 {
??metadata_reset:
        PUSH     {R4-R9,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R9 Frame(CFA, -8)
        CFI R8 Frame(CFA, -12)
        CFI R7 Frame(CFA, -16)
        CFI R6 Frame(CFA, -20)
        CFI R5 Frame(CFA, -24)
        CFI R4 Frame(CFA, -28)
        CFI CFA R13+28
        MOV      R4,R0
//    8   // Функция предотвращает внутреннюю ошибку IARа. Поэтому она в отдельном модуле
//    9   wstrcpy(meta->Title,L" ");
        ADR      R5,??metadata_reset_1  ;; 0x20, 0x00, 0x00, 0x00
        MOV      R1,R5
        SWI      +338
//   10   wstrcpy(meta->Album,L" ");
        MOV      R6,#+2048
        MOV      R1,R5
        ADD      R0,R6,R4
        SWI      +338
        ADD      R7,R4,#+4096
        MOV      R1,R5
        MOV      R0,R7
//   11   wstrcpy(meta->Artist,L" ");
        SWI      +338
        ADD      R8,R4,#+6144
        MOV      R1,R5
        MOV      R0,R8
//   12   wstrcpy(meta->Year,L" ");
        SWI      +338
        ADD      R9,R4,#+8192
        MOV      R1,R5
        MOV      R0,R9
//   13   wstrcpy(meta->Genre,L" ");
        SWI      +338
//   14   
//   15   memset(meta->Title,0,256);
        MOV      R2,#+256
        MOV      R1,#+0
        MOV      R0,R4
        SWI      +274
//   16   memset(meta->Album,0,256);
        MOV      R2,#+256
        MOV      R1,#+0
        ADD      R0,R6,R4
        SWI      +274
//   17   memset(meta->Artist,0,256);
        MOV      R2,#+256
        MOV      R1,#+0
        MOV      R0,R7
        SWI      +274
//   18   memset(meta->Year,0,256);
        MOV      R2,#+256
        MOV      R1,#+0
        MOV      R0,R8
        SWI      +274
//   19   memset(meta->Genre,0,256);
        MOV      R2,#+256
        MOV      R1,#+0
        MOV      R0,R9
        SWI      +274
//   20 };
        POP      {R4-R9,PC}       ;; return
        DATA
??metadata_reset_1:
        DC8      0x20, 0x00, 0x00, 0x00
        CFI EndBlock cfiBlock1

        RSEG DATA_C:CONST:SORT:NOROOT(2)
        DATA
        DC8 20H, 0, 0, 0

        END
// 
// 176 bytes in segment CODE
//   4 bytes in segment DATA_C
// 
// 172 bytes of CODE  memory (+ 4 bytes shared)
//   4 bytes of CONST memory
//
//Errors: none
//Warnings: none
