//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   10/Jun/2013  23:03:23 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\draw /
//                       .c                                                  /
//    Command line    =  Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\draw /
//                       .c -D NDEBUG -D OLDFUNCTIONS -lC                    /
//                       Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\EN\L /
//                       ist\ -lA Z:\home\perk11\www\perk11.info\svn\SE\Cove /
//                       rArt\EN\List\ -o Z:\home\perk11\www\perk11.info\svn /
//                       \SE\CoverArt\EN\Obj\ -s9 --cpu_mode arm --endian    /
//                       little --cpu ARM926EJ-S --stack_align 4             /
//                       --interwork -e --enable_multibytes --fpu None       /
//                       --eec++ --dlib_config Z:\home\perk11\IAR2\arm\LIB\d /
//                       l5tpainl8n.h --preinclude                           /
//                       Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\LNG- /
//                       EN.h -I Z:\home\perk11\IAR2\arm\INC\                /
//                       --inline_threshold=2                                /
//    List file       =  Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\EN\L /
//                       ist\draw.s79                                        /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME draw

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??DrawHighlightID
        FUNCTION ??DrawHighlightID,0203H
        LOCFRAME CSTACK, 88, STACK
        MULTWEAK ??DrawHighlightID??rT
        PUBLIC ??DrawLine
        FUNCTION ??DrawLine,0203H
        LOCFRAME CSTACK, 96, STACK
        MULTWEAK ??DrawLine??rT
        PUBLIC ??DrawProgress
        FUNCTION ??DrawProgress,0203H
        LOCFRAME CSTACK, 88, STACK
        MULTWEAK ??DrawProgress??rT
        MULTWEAK ??__fAdd??rA
        MULTWEAK ??__fDiv??rA
        MULTWEAK ??__fMul??rA
        MULTWEAK ??__fSub??rA
        MULTWEAK ??__floatToLong??rA
        MULTWEAK ??__longToFloat??rA
        MULTWEAK ??__ulongToFloat??rA
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
__fAdd              SYMBOL "__fAdd"
__fDiv              SYMBOL "__fDiv"
__fMul              SYMBOL "__fMul"
__fSub              SYMBOL "__fSub"
__floatToLong       SYMBOL "__floatToLong"
__longToFloat       SYMBOL "__longToFloat"
__ulongToFloat      SYMBOL "__ulongToFloat"

??DrawHighlightID??rT SYMBOL "??rT", ??DrawHighlightID

??DrawLine??rT      SYMBOL "??rT", ??DrawLine

??DrawProgress??rT  SYMBOL "??rT", ??DrawProgress
??__fAdd??rA        SYMBOL "??rA", __fAdd
??__fDiv??rA        SYMBOL "??rA", __fDiv
??__fMul??rA        SYMBOL "??rA", __fMul
??__fSub??rA        SYMBOL "??rA", __fSub
??__floatToLong??rA SYMBOL "??rA", __floatToLong
??__longToFloat??rA SYMBOL "??rA", __longToFloat
??__ulongToFloat??rA SYMBOL "??rA", __ulongToFloat

        EXTERN ProgressBar_ColorFromTheme
        EXTERN THEMEITEM_PROGRESS_BAR_FILL
        EXTERN THEMEITEM_PROGRESS_BAR_OUTLINE
        EXTERN THEMEITEM_PROGRESS_BAR_SLIDER
        EXTERN __fAdd
        FUNCTION __fAdd,010202H
        EXTERN __fDiv
        FUNCTION __fDiv,010202H
        EXTERN __fMul
        FUNCTION __fMul,010202H
        EXTERN __fSub
        FUNCTION __fSub,010202H
        EXTERN __floatToLong
        FUNCTION __floatToLong,0202H
        EXTERN __longToFloat
        FUNCTION __longToFloat,0202H
        EXTERN __ulongToFloat
        FUNCTION __ulongToFloat,0202H


        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrawLine??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE ??DrawLine
// Z:\home\perk11\www\perk11.info\svn\SE\CoverArt\draw.c
//    1 #include "..\include\Lib_Clara.h"
//    2 #include "..\include\dir.h"
//    3 #include "structs.h"
//    4 #include "config_data.h"
//    5 
//    6 extern bool isInStandby;
//    7 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function ??DrawLine
        ARM
//    8 void DrawLine(bool MustDraw,int Font,int SIDtime/*wchar_t *NAME*/,int CEN, int XPos, int YPos, int MaxXPos, int MaxYPos, int borderColor, int NormalColor, int len, bool isAnimated, LABEL *lbl)
//    9 {
??DrawLine:
        PUSH     {R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+36
        SUB      SP,SP,#+12
        CFI CFA R13+48
        LDR      R6,[SP, #+48]
        LDR      R7,[SP, #+56]
        LDR      R8,[SP, #+60]
        LDR      R9,[SP, #+64]
        LDR      R10,[SP, #+80]
        MOV      R12,R0
        MOV      R0,R1
        LDRB     R1,[SP, #+76]
        MOV      R4,R2
        MOV      R5,R3
//   10   if (MustDraw==true){
        CMP      R12,#+0
        POPEQ    {R0-R2,R4-R11,PC}
//   11     if (isAnimated==true)
        LDR      R3,[SP, #+52]
        CMP      R1,#+0
        ADD      R3,R3,#+1
        STR      R3,[SP, #+4]
        LDR      R3,[SP, #+52]
        SUB      R3,R3,#+1
        STR      R3,[SP, #+8]
        BEQ      ??DrawLine_1
//   12     {
//   13       // Анимированному тексту обязательно надо указывать все координаты.
//   14       //int SIDtime;
//   15       SetFont(Font);
        SWI      +497
//   16       //SIDtime=TextID_Create(NAME,ENC_UCS2,len);
//   17       DrawString(SIDtime,CEN,XPos-1,YPos-1,MaxXPos-1,MaxYPos,60,0x05,borderColor,borderColor);
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+52
        PUSH     {R0}
        CFI CFA R13+56
        SUB      R11,R7,#+1
        SUB      R10,R6,#+1
        MOV      R2,R10
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+60
        MOV      R1,R5
        MOV      R0,#+60
        PUSH     {R0}
        CFI CFA R13+64
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+68
        MOV      R0,R11
        PUSH     {R0}
        CFI CFA R13+72
        LDR      R3,[SP, #+32]
        MOV      R0,R4
        SWI      +493
//   18       DrawString(SIDtime,CEN,XPos-1,YPos+1,MaxXPos-1,MaxYPos,60,0x05,borderColor,borderColor);
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+76
        PUSH     {R0}
        CFI CFA R13+80
        MOV      R2,R10
        MOV      R1,R5
//   19       DrawString(SIDtime,CEN,XPos+1,YPos-1,MaxXPos+1,MaxYPos,60,0x05,borderColor,borderColor);
        ADD      R10,R6,#+1
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+84
        MOV      R0,#+60
        PUSH     {R0}
        CFI CFA R13+88
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+92
        PUSH     {R11}
        CFI CFA R13+96
        LDR      R3,[SP, #+52]
        MOV      R0,R4
        SWI      +493
        ADD      SP,SP,#+48
        CFI CFA R13+48
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+52
        PUSH     {R0}
        CFI CFA R13+56
        ADD      R11,R7,#+1
        MOV      R2,R10
        MOV      R1,R5
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+60
        MOV      R0,#+60
        PUSH     {R0}
        CFI CFA R13+64
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+68
        MOV      R0,R11
        PUSH     {R0}
        CFI CFA R13+72
        LDR      R3,[SP, #+32]
        MOV      R0,R4
        SWI      +493
//   20       DrawString(SIDtime,CEN,XPos+1,YPos+1,MaxXPos+1,MaxYPos,60,0x05,borderColor,borderColor);
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+76
        PUSH     {R9}
        CFI CFA R13+80
        MOV      R2,R10
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+84
        MOV      R1,R5
        MOV      R0,#+60
        PUSH     {R0}
        CFI CFA R13+88
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+92
        PUSH     {R11}
        CFI CFA R13+96
        LDR      R3,[SP, #+52]
        MOV      R0,R4
        SWI      +493
        ADD      SP,SP,#+48
        CFI CFA R13+48
//   21       DrawString(SIDtime,CEN,XPos,YPos,MaxXPos,MaxYPos,60,0x05,NormalColor,NormalColor);
        LDR      R0,[SP, #+68]
        MOV      R2,R6
        PUSH     {R0}
        CFI CFA R13+52
        PUSH     {R0}
        CFI CFA R13+56
        MOV      R1,R5
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+60
        MOV      R0,#+60
        PUSH     {R0}
        CFI CFA R13+64
        B        ??DrawLine_2
        CFI CFA R13+48
//   22       //TextID_Destroy(SIDtime);
//   23     }
//   24     else
//   25     {
//   26       // Текст неанимированный, значит надо подобрать ему второстепенные координаты правильно :-)
//   27       //int SIDtime;
//   28       SetFont(Font);
??DrawLine_1:
        SWI      +497
//   29       //SIDtime=TextID_Create(NAME,ENC_UCS2,len);
//   30       int dist=lbl->FONT_SIZE;
//   31       if (lbl->LINE_ON)
        LDR      R1,[SP, #+52]
        LDR      R11,[R10, #+612]
        ADD      R1,R1,#+500
        STR      R1,[SP, #+0]
        LDR      R1,[R10, #+596]
        MOV      R0,#+592
        CMP      R1,#+0
        BEQ      ??DrawLine_3
//   32       {
//   33         dist=(lbl->LINE_DIST+lbl->FONT_SIZE)-lbl->LINE_MINUS;
        LDR      R1,[R10, #+600]
        LDR      R2,[R10, #+608]
        ADD      R1,R11,R1
        SUB      R11,R1,R2
//   34         if (CEN==2)
        LDR      R1,[R10, #+604]
        CMP      R5,#+2
        BNE      ??DrawLine_4
//   35         {
//   36           if (lbl->scr.SCROLL_NEED_SCROLL)
        LDR      R0,[R0, +R10]
        CMP      R0,#+0
        BEQ      ??DrawLine_5
//   37           {
//   38             MaxXPos=XPos+lbl->LINE_SIZE;
??DrawLine_6:
        ADD      R7,R1,R6
//   39             MaxYPos=YPos+500;
        B        ??DrawLine_7
//   40           }
//   41           else
//   42           {
//   43             XPos=-(lbl->LINE_SIZE/2);
??DrawLine_5:
        ADD      R0,R1,R1, LSR #+31
        ASR      R0,R0,#+1
        RSB      R6,R0,#+0
//   44             MaxXPos=Display_GetWidth(0) + (lbl->LINE_SIZE/2);
        MOV      R0,#+0
        SWI      +601
        LDR      R1,[R10, #+604]
        ADD      R1,R1,R1, LSR #+31
        ADD      R7,R0,R1, ASR #+1
//   45             MaxYPos=YPos+500;
        B        ??DrawLine_7
//   46           }
//   47         }
//   48         else if (CEN==0)
??DrawLine_4:
        CMP      R5,#+0
        BEQ      ??DrawLine_6
//   49         {
//   50           MaxXPos=XPos+lbl->LINE_SIZE;
//   51           MaxYPos=YPos+500;
//   52         }
//   53         else if (CEN==1)
        CMP      R5,#+1
        BNE      ??DrawLine_8
//   54         {
//   55           MaxXPos=XPos;
        MOV      R7,R6
//   56           XPos=XPos-lbl->LINE_SIZE;
        SUB      R6,R6,R1
//   57           MaxYPos=YPos+500;
        B        ??DrawLine_7
//   58         }
//   59       }
//   60       else
//   61       {
//   62         if (CEN==2)
??DrawLine_3:
        CMP      R5,#+2
        BNE      ??DrawLine_9
//   63         {
//   64           if (lbl->scr.SCROLL_NEED_SCROLL)
        LDR      R0,[R0, +R10]
        CMP      R0,#+0
        BEQ      ??DrawLine_10
//   65           {
//   66             MaxXPos=XPos+500;
??DrawLine_11:
        ADD      R7,R6,#+500
//   67             MaxYPos=YPos+500;
        B        ??DrawLine_7
//   68           }
//   69           else
//   70           {
//   71             XPos=-500;
??DrawLine_10:
        MVN      R6,#+243
        BIC      R6,R6,#0x100
//   72             MaxXPos=Display_GetWidth(0) + 500;
        SWI      +601
        ADD      R7,R0,#+500
//   73             MaxYPos=YPos+500;
        B        ??DrawLine_7
//   74           }
//   75         }
//   76         else if (CEN==0)
??DrawLine_9:
        CMP      R5,#+0
        BEQ      ??DrawLine_11
//   77         {
//   78           MaxXPos=XPos+500;
//   79           MaxYPos=YPos+500;
//   80         }
//   81         else if (CEN==1)
        CMP      R5,#+1
        BNE      ??DrawLine_8
//   82         {
//   83           MaxXPos=XPos;
        MOV      R7,R6
//   84           XPos=-500;
        MVN      R6,#+243
        BIC      R6,R6,#0x100
//   85           MaxYPos=YPos+500;
??DrawLine_7:
        LDR      R8,[SP, #+0]
??DrawLine_8:
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+52
        PUSH     {R0}
        CFI CFA R13+56
        SUB      R10,R7,#+1
        SUB      R2,R6,#+1
        MOV      R1,R5
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+60
        MOV      R0,R11
        PUSH     {R0}
        CFI CFA R13+64
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+68
        MOV      R0,R10
        PUSH     {R0}
        CFI CFA R13+72
        LDR      R3,[SP, #+32]
        MOV      R0,R4
//   86         }
//   87       }
//   88       DrawString(SIDtime,CEN,XPos-1,YPos-1,MaxXPos-1,MaxYPos,dist,0x05,borderColor,borderColor);
        SWI      +493
//   89       DrawString(SIDtime,CEN,XPos-1,YPos+1,MaxXPos-1,MaxYPos,dist,0x05,borderColor,borderColor);
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+76
        PUSH     {R0}
        CFI CFA R13+80
        SUB      R2,R6,#+1
        MOV      R1,R5
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+84
        MOV      R0,R11
        PUSH     {R0}
        CFI CFA R13+88
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+92
        PUSH     {R10}
        CFI CFA R13+96
        LDR      R3,[SP, #+52]
        MOV      R0,R4
        SWI      +493
        ADD      SP,SP,#+48
        CFI CFA R13+48
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+52
        PUSH     {R0}
        CFI CFA R13+56
        ADD      R10,R7,#+1
        ADD      R2,R6,#+1
        MOV      R1,R5
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+60
        MOV      R0,R11
        PUSH     {R0}
        CFI CFA R13+64
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+68
        MOV      R0,R10
        PUSH     {R0}
        CFI CFA R13+72
        LDR      R3,[SP, #+32]
        MOV      R0,R4
//   90       DrawString(SIDtime,CEN,XPos+1,YPos-1,MaxXPos+1,MaxYPos,dist,0x05,borderColor,borderColor);
        SWI      +493
//   91       DrawString(SIDtime,CEN,XPos+1,YPos+1,MaxXPos+1,MaxYPos,dist,0x05,borderColor,borderColor);
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+76
        PUSH     {R9}
        CFI CFA R13+80
        ADD      R2,R6,#+1
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+84
        MOV      R1,R5
        MOV      R0,R11
        PUSH     {R0}
        CFI CFA R13+88
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+92
        PUSH     {R10}
        CFI CFA R13+96
        LDR      R3,[SP, #+52]
        MOV      R0,R4
        SWI      +493
        ADD      SP,SP,#+48
        CFI CFA R13+48
//   92       DrawString(SIDtime,CEN,XPos,YPos,MaxXPos,MaxYPos,dist,0x05,NormalColor,NormalColor);
        LDR      R0,[SP, #+68]
        MOV      R2,R6
        PUSH     {R0}
        CFI CFA R13+52
        PUSH     {R0}
        CFI CFA R13+56
        MOV      R1,R5
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+60
        PUSH     {R11}
        CFI CFA R13+64
??DrawLine_2:
        PUSH     {R8}
        CFI CFA R13+68
        PUSH     {R7}
        CFI CFA R13+72
        LDR      R3,[SP, #+76]
        MOV      R0,R4
        SWI      +493
        ADD      SP,SP,#+24
        CFI CFA R13+48
//   93       //TextID_Destroy(SIDtime);
//   94     }
//   95   }
//   96 };
        POP      {R0-R2,R4-R11,PC}  ;; return
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrawHighlightID??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE ??DrawHighlightID
//   97 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function ??DrawHighlightID
        ARM
//   98 void DrawHighlightID(int Font,int SIDtime,int CEN, int XPos, int YPos, int MaxXPos, int MaxYPos, int borderColor, int NormalColor)
//   99 {
??DrawHighlightID:
        PUSH     {R3-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+40
        LDR      R6,[SP, #+40]
        LDR      R7,[SP, #+44]
        LDR      R8,[SP, #+48]
        LDR      R9,[SP, #+52]
        MOV      R4,R1
        MOV      R5,R2
//  100   SetFont(Font); // Устанавливаем шрифт из первого параметра функции.
        SWI      +497
//  101   // Рисуем текст n-ное количество раз с разными координатами:
//  102   DrawString(SIDtime,CEN,XPos-1,YPos-1,MaxXPos-1,MaxYPos,60,0x05,borderColor,borderColor);
        LDR      R0,[SP, #+0]
        SUB      R11,R7,#+1
        SUB      R10,R0,#+1
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+44
        PUSH     {R0}
        CFI CFA R13+48
        SUB      R3,R6,#+1
        MOV      R2,R10
        MOV      R1,R5
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+52
        MOV      R0,#+60
        PUSH     {R0}
        CFI CFA R13+56
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+60
        MOV      R0,R11
        PUSH     {R0}
        CFI CFA R13+64
        MOV      R0,R4
        SWI      +493
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+68
        PUSH     {R0}
        CFI CFA R13+72
        ADD      R3,R6,#+1
        MOV      R2,R10
        MOV      R1,R5
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+76
        MOV      R0,#+60
        PUSH     {R0}
        CFI CFA R13+80
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+84
        PUSH     {R11}
        CFI CFA R13+88
        MOV      R0,R4
//  103   DrawString(SIDtime,CEN,XPos-1,YPos+1,MaxXPos-1,MaxYPos,60,0x05,borderColor,borderColor);
        SWI      +493
        ADD      SP,SP,#+48
        CFI CFA R13+40
//  104   DrawString(SIDtime,CEN,XPos+1,YPos-1,MaxXPos+1,MaxYPos,60,0x05,borderColor,borderColor);
        LDR      R0,[SP, #+0]
        ADD      R11,R7,#+1
        ADD      R10,R0,#+1
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+44
        PUSH     {R0}
        CFI CFA R13+48
        SUB      R3,R6,#+1
        MOV      R2,R10
        MOV      R1,R5
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+52
        MOV      R0,#+60
        PUSH     {R0}
        CFI CFA R13+56
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+60
        MOV      R0,R11
        PUSH     {R0}
        CFI CFA R13+64
        MOV      R0,R4
        SWI      +493
//  105   DrawString(SIDtime,CEN,XPos+1,YPos+1,MaxXPos+1,MaxYPos,60,0x05,borderColor,borderColor);
        MOV      R0,R9
        PUSH     {R0}
        CFI CFA R13+68
        PUSH     {R9}
        CFI CFA R13+72
        ADD      R3,R6,#+1
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+76
        MOV      R2,R10
        MOV      R1,R5
        MOV      R0,#+60
        PUSH     {R0}
        CFI CFA R13+80
        MOV      R0,R8
        PUSH     {R0}
        CFI CFA R13+84
        PUSH     {R11}
        CFI CFA R13+88
        MOV      R0,R4
        SWI      +493
        ADD      SP,SP,#+48
        CFI CFA R13+40
//  106   // Рисуем с основными координатами:
//  107   DrawString(SIDtime,CEN,XPos,YPos,MaxXPos,MaxYPos,60,0x05,NormalColor,NormalColor);
        LDR      R0,[SP, #+56]
        MOV      R3,R6
        PUSH     {R0}
        CFI CFA R13+44
        PUSH     {R0}
        CFI CFA R13+48
        MOV      R1,R5
        MOV      R0,#+5
        PUSH     {R0}
        CFI CFA R13+52
        MOV      R0,#+60
        PUSH     {R0}
        CFI CFA R13+56
        PUSH     {R8}
        CFI CFA R13+60
        PUSH     {R7}
        CFI CFA R13+64
        LDR      R2,[SP, #+24]
        MOV      R0,R4
        SWI      +493
//  108 };
        ADD      SP,SP,#+28
        CFI CFA R13+36
        POP      {R4-R11,PC}      ;; return
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrawProgress??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE ??DrawProgress
//  109 

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function ??DrawProgress
        ARM
//  110 void DrawProgress(int bColor, int cColor, int oColor, RECT rect, int progress, int time, signed int PlusY, int type)
//  111 {
??DrawProgress:
        PUSH     {R3}
        CFI CFA R13+4
        PUSH     {R4-R11,LR}
        CFI ?RET Frame(CFA, -8)
        CFI R11 Frame(CFA, -12)
        CFI R10 Frame(CFA, -16)
        CFI R9 Frame(CFA, -20)
        CFI R8 Frame(CFA, -24)
        CFI R7 Frame(CFA, -28)
        CFI R6 Frame(CFA, -32)
        CFI R5 Frame(CFA, -36)
        CFI R4 Frame(CFA, -40)
        CFI CFA R13+40
        MOV      R4,R0
//  112   if (ProgressBar_ColorFromTheme)
        LDR      R0,??DrawProgress_1  ;; ProgressBar_ColorFromTheme
        SUB      SP,SP,#+12
        CFI CFA R13+52
        LDR      R0,[R0, #+0]
        LDR      R9,[SP, #+64]
        MOV      R6,R1
        MOV      R5,R2
        CMP      R0,#+0
        BEQ      ??DrawProgress_2
//  113   {
//  114     bColor=GetThemeColor(0 , THEMEITEM_PROGRESS_BAR_OUTLINE);
        LDR      R0,??DrawProgress_1+0x4  ;; THEMEITEM_PROGRESS_BAR_OUTLINE
        LDR      R1,[R0, #+0]
        MOV      R0,#+0
        SWI      +511
        MOV      R4,R0
//  115     oColor=GetThemeColor(0 , THEMEITEM_PROGRESS_BAR_FILL);
        LDR      R0,??DrawProgress_1+0x8  ;; THEMEITEM_PROGRESS_BAR_FILL
        LDR      R1,[R0, #+0]
        MOV      R0,#+0
        SWI      +511
        MOV      R5,R0
//  116     cColor=GetThemeColor(0 , THEMEITEM_PROGRESS_BAR_SLIDER);
        LDR      R0,??DrawProgress_1+0xC  ;; THEMEITEM_PROGRESS_BAR_SLIDER
        LDR      R1,[R0, #+0]
        MOV      R0,#+0
        SWI      +511
        MOV      R6,R0
//  117   }
//  118   if (type)
??DrawProgress_2:
        LDRH     R0,[SP, #+48]
        LDRH     R7,[SP, #+50]
        _BLF     __ulongToFloat,??__ulongToFloat??rA
        STR      R0,[SP, #+8]
        LDRH     R1,[SP, #+54]
        SUB      R11,R7,#+1
        MOV      R2,R11
        ADD      R1,R9,R1
        STR      R1,[SP, #+0]
        SUB      R8,R1,#+1
        LDRH     R1,[SP, #+52]
        ADD      R1,R9,R1
        STR      R1,[SP, #+4]
        LDRH     R0,[SP, #+48]
        ADD      R9,R1,#+1
        MOV      R3,R9
        ADD      R10,R0,#+1
        LDR      R0,[SP, #+68]
        CMP      R0,#+0
        MOV      R0,R4
        PUSH     {R0}
        CFI CFA R13+56
        PUSH     {R0}
        CFI CFA R13+60
        MOV      R0,R10
        BEQ      ??DrawProgress_3
//  119   {
//  120     // Закруглённый прогрессбар
//  121     DrawRect(rect.x1+1,rect.y1+PlusY,rect.x2-1,rect.y1+PlusY+1, bColor, bColor);//Сверху
        SWI      +492
//  122     DrawRect(rect.x2-1,rect.y1+PlusY+1,rect.x2,rect.y2+PlusY-1, bColor, bColor);//Справа
        MOV      R0,R4
        PUSH     {R0}
        CFI CFA R13+64
        PUSH     {R0}
        CFI CFA R13+68
        MOV      R3,R8
        MOV      R2,R7
        MOV      R1,R9
        MOV      R0,R11
        SWI      +492
//  123     
//  124     DrawRect(rect.x1,rect.y1+PlusY+1,rect.x1+1,rect.y2+PlusY-1, bColor, bColor); //Слева
        MOV      R0,R4
        PUSH     {R0}
        CFI CFA R13+72
        PUSH     {R0}
        CFI CFA R13+76
        MOV      R3,R8
        MOV      R2,R10
        MOV      R1,R9
        B        ??DrawProgress_4
        CFI CFA R13+60
//  125     DrawRect(rect.x1+1,rect.y2+PlusY-1,rect.x2-1,rect.y2+PlusY, bColor, bColor); //Снизу
//  126 
//  127     DrawRect(rect.x1+1,rect.y1+1+PlusY,rect.x2-1,rect.y2-1+PlusY, oColor, oColor);
//  128     float Length;
//  129     float CurLength=(float)progress;
//  130     float inLength=(float)time;
//  131     float Procent=(float)CurLength/inLength;
//  132     float size=(float)((float)rect.x2-(float)rect.x1);
//  133     float start = (float)rect.x1;
//  134     Length = start+((Procent)*size);
//  135     DrawRect(rect.x1+1, rect.y1+1+PlusY,(int)Length - 1,rect.y2-1+PlusY,cColor,cColor);
//  136   }
//  137   else
//  138   {
//  139     // Обычный прогрессбар
//  140     DrawRect(rect.x1+1,rect.y1+PlusY,rect.x2-1,rect.y1+PlusY+1, bColor, bColor);//Сверху
??DrawProgress_3:
        SWI      +492
//  141     DrawRect(rect.x2-1,rect.y1+PlusY,rect.x2,rect.y2+PlusY, bColor, bColor);//Справа
        MOV      R0,R4
        PUSH     {R0}
        CFI CFA R13+64
        PUSH     {R0}
        CFI CFA R13+68
        LDR      R3,[SP, #+16]
        LDR      R1,[SP, #+20]
        MOV      R2,R7
        MOV      R0,R11
        SWI      +492
//  142     
//  143     DrawRect(rect.x1,rect.y1+PlusY,rect.x1+1,rect.y2+PlusY, bColor, bColor); //Слева
        MOV      R0,R4
        PUSH     {R0}
        CFI CFA R13+72
        PUSH     {R0}
        CFI CFA R13+76
        LDR      R3,[SP, #+24]
        LDR      R1,[SP, #+28]
        MOV      R2,R10
??DrawProgress_4:
        LDRH     R0,[SP, #+72]
        SWI      +492
//  144     DrawRect(rect.x1+1,rect.y2+PlusY-1,rect.x2-1,rect.y2+PlusY, bColor, bColor); //Снизу
        MOV      R0,R4
        PUSH     {R0}
        CFI CFA R13+80
        PUSH     {R4}
        CFI CFA R13+84
        LDR      R3,[SP, #+32]
        MOV      R2,R11
        MOV      R1,R8
        MOV      R0,R10
        SWI      +492
//  145     
//  146     DrawRect(rect.x1+1,rect.y1+1+PlusY,rect.x2-1,rect.y2-1+PlusY, oColor, oColor);
        MOV      R0,R5
        PUSH     {R0}
        CFI CFA R13+88
        PUSH     {R5}
        CFI CFA R13+92
        MOV      R3,R8
        MOV      R2,R11
        MOV      R1,R9
        MOV      R0,R10
        SWI      +492
        ADD      SP,SP,#+40
        CFI CFA R13+52
//  147     float Length;
//  148     float CurLength=(float)progress;
//  149     float inLength=(float)time;
//  150     float Procent=(float)CurLength/inLength;
//  151     float size=(float)((float)rect.x2-(float)rect.x1);
//  152     float start = (float)rect.x1;
//  153     Length = start+((Procent)*size);
//  154     DrawRect(rect.x1+1, rect.y1+1+PlusY,(int)Length - 1,rect.y2-1+PlusY,cColor,cColor);
        MOV      R0,R6
        PUSH     {R0}
        CFI CFA R13+56
        PUSH     {R6}
        CFI CFA R13+60
        MOV      R0,R7
        _BLF     __ulongToFloat,??__ulongToFloat??rA
        LDR      R1,[SP, #+16]
        _BLF     __fSub,??__fSub??rA
        MOV      R5,R0
        LDR      R0,[SP, #+64]
        _BLF     __longToFloat,??__longToFloat??rA
        MOV      R6,R0
        LDR      R0,[SP, #+68]
        _BLF     __longToFloat,??__longToFloat??rA
        MOV      R1,R0
        MOV      R0,R6
        _BLF     __fDiv,??__fDiv??rA
        MOV      R1,R5
        _BLF     __fMul,??__fMul??rA
        LDR      R1,[SP, #+16]
        _BLF     __fAdd,??__fAdd??rA
        _BLF     __floatToLong,??__floatToLong??rA
        SUB      R2,R0,#+1
        MOV      R3,R8
        MOV      R1,R9
        MOV      R0,R10
        SWI      +492
        ADD      SP,SP,#+8
        CFI CFA R13+52
//  155   }
//  156 };
        POP      {R0-R2,R4-R11,LR}
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI ?RET R14
        CFI CFA R13+4
        ADD      SP,SP,#+4
        CFI CFA R13+0
        BX       LR               ;; return
        DATA
??DrawProgress_1:
        DC32     ProgressBar_ColorFromTheme
        DC32     THEMEITEM_PROGRESS_BAR_OUTLINE
        DC32     THEMEITEM_PROGRESS_BAR_FILL
        DC32     THEMEITEM_PROGRESS_BAR_SLIDER
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon1
        CFI NoFunction
        ARM
??__ulongToFloat??rA:
        LDR      R3,??Subroutine3_0  ;; __ulongToFloat
        BX       R3
        DATA
??Subroutine3_0:
        DC32     __ulongToFloat
        CFI EndBlock cfiBlock6

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI NoFunction
        ARM
??__fSub??rA:
        LDR      R3,??Subroutine4_0  ;; __fSub
        BX       R3
        DATA
??Subroutine4_0:
        DC32     __fSub
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon1
        CFI NoFunction
        ARM
??__longToFloat??rA:
        LDR      R3,??Subroutine5_0  ;; __longToFloat
        BX       R3
        DATA
??Subroutine5_0:
        DC32     __longToFloat
        CFI EndBlock cfiBlock8

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI NoFunction
        ARM
??__fDiv??rA:
        LDR      R3,??Subroutine6_0  ;; __fDiv
        BX       R3
        DATA
??Subroutine6_0:
        DC32     __fDiv
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon1
        CFI NoFunction
        ARM
??__fMul??rA:
        LDR      R3,??Subroutine7_0  ;; __fMul
        BX       R3
        DATA
??Subroutine7_0:
        DC32     __fMul
        CFI EndBlock cfiBlock10

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI NoFunction
        ARM
??__fAdd??rA:
        LDR      R3,??Subroutine8_0  ;; __fAdd
        BX       R3
        DATA
??Subroutine8_0:
        DC32     __fAdd
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon1
        CFI NoFunction
        ARM
??__floatToLong??rA:
        LDR      R3,??Subroutine9_0  ;; __floatToLong
        BX       R3
        DATA
??Subroutine9_0:
        DC32     __floatToLong
        CFI EndBlock cfiBlock12

        END
//  157 
// 
// 1 964 bytes in segment CODE
// 
// 1 868 bytes of CODE memory (+ 96 bytes shared)
//
//Errors: none
//Warnings: none
